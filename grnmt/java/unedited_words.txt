{'}\n': 414, ';': 49, 'result': 107, 'return': 411, '}': 236, ')': 42, 'STR': 47, '_': 46, '+': 273, '(': 6, 'String': 171, 'to': 400, '.': 241, 'train': 118, 'println': 315, 'Message': 277, 'get': 86, 'ex': 263, 'print': 44, '{': 43, 'Debug': 356, 'm_': 355, 'if': 212, 'BOOL': 328, '=': 85, ']': 3, 'NUM': 96, '[': 2, 'Exception': 262, '': 116, 'catch': 259, 'Copy': 288, ',': 10, 'Datasets': 307, 'compare': 306, 'build': 299, 'Instances': 88, 'new': 109, 'try': 128, 'Error': 269, 'throw': 266, 'Copies': 243, 'make': 132, 'Missing': 37, 'class': 32, 'predictor': 36, 'Level': 99, 'missing': 98, 'add': 221, '>': 216, 'Instance': 29, 'multi': 28, 'Type': 33, 'Classes': 93, 'num': 83, ':': 150, 'Relational': 195, 'Num': 87, '?': 144, 'Predictor': 9, 'relational': 24, 'Date': 183, 'date': 20, 'string': 16, 'Numeric': 159, 'numeric': 12, 'Nominal': 147, 'nominal': 8, 'Train': 84, 'Dataset': 134, 'Test': 133, 'null': 120, 'boolean': 1, 'int': 31, 'Summary': 52, 'Attribute': 51, 'Integrity': 5, 'dataset': 4, 'protected': 0}
{'}\n': 142, ';': 30, 'res': 51, 'return': 139, '}': 138, ')': 15, ']': 8, 'i': 82, '[': 7, 'y': 14, 'x': 9, '(': 5, 'Count': 104, 'bit': 103, '.': 22, 'Long': 101, '': 100, '+=': 99, '{': 16, '++': 95, '<': 37, 'for': 56, 'NUM': 54, '_': 53, '=': 20, 'int': 2, 'ly': 25, ':': 42, 'lx': 19, '?': 40, 'min': 33, 'final': 17, 'length': 23, ',': 10, 'long': 6, 'Size': 4, 'static': 1, 'public': 0}
{'}\n': 481, ';': 22, ')': 6, 'BOOL': 163, '_': 80, ',': 30, '(': 5, 'Local': 152, 'check': 214, 'ver1': 110, 'v1k2': 382, 'v1k1': 365, 'NUM': 115, 'add': 151, '.': 17, 'entry2': 90, '=': 14, 'Candidate': 146, 'Mvcc': 145, 'Cache': 25, 'Grid': 24, '': 8, 'entry1': 68, 'ver3': 134, 'v3k2': 174, 'v3k1': 147, 'ready': 208, 'ctx': 54, 'Candidates': 197, 'link': 196, 'version': 112, 'Version': 109, 'ver2': 122, 'STR': 81, 'Ex': 67, 'Entry': 66, 'Test': 65, 'new': 70, 'context': 58, 'cache': 34, '>': 33, 'String': 29, '<': 27, 'Context': 46, 'internal': 38, 'grid': 36, 'Adapter': 26, 'UUID': 12, 'random': 18, 'id': 13, '{': 10, 'Exception': 9, 'throws': 7, 'Reverse': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 136, ';': 40, ')': 8, 'set': 110, '.': 17, 'BOOL': 123, '_': 46, '}': 98, '(': 7, 'Model': 83, 'm_list': 82, 'Spec': 20, 'Attribute': 19, '': 10, 'Fields': 16, 'User': 15, 'Add': 14, '=': 23, '{': 9, 'NUM': 47, 'List': 11, 'new': 24, 'specs': 22, '>': 21, '<': 12, 'void': 4}
{'}\n': 241, ';': 44, ')': 6, '(': 5, 'String': 2, 'to': 236, '.': 75, 'text': 11, 'return': 233, '}': 232, 'STR': 114, '_': 59, 'append': 111, ']': 149, 'j': 148, '[': 147, '{': 7, 'i': 66, '+': 115, '++': 82, '<': 72, 'NUM': 69, '=': 12, 'int': 65, 'for': 63, 'Buffer': 10, '': 1, 'new': 13, 'public': 0}
{'}\n': 34, ';': 33, ')': 14, 'value': 11, '.': 20, '': 18, 'return': 16, '{': 15, 'double': 10, '(': 6}
{'}\n': 103, ';': 22, '_': 89, ')': 13, '(': 24, '.': 61, 'if': 79, '{': 14, 'dataset': 37, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 102, '}': 98, ';': 51, ')': 23, '(': 48, '.': 34, '': 59, ',': 69, 'Scheduler': 60, '=': 27, '{': 24, 'scheduler': 17, 'public': 0}
{'}\n': 28, ';': 27, ')': 10, 'Type': 19, 'Ref': 18, '': 7, '(': 6, 'equals': 15, '.': 14, 't': 9, 'return': 12, '{': 11, 'boolean': 2, 'public': 0}
{'}\n': 549, ';': 67, 'return': 68, ')': 41, '(': 7, '.': 52, 'Id': 296, 'get': 414, 'user': 10, 'User': 9, 'set': 396, 'Type': 460, 'Time': 27, 'id': 14, '}': 71, 'Another': 415, 'Generator': 293, '=': 347, '{': 42, 'null': 47, '==': 46, 'if': 43, 'db': 399, 'Db': 397, 'Entry': 2, '': 1, 'new': 388, 'create': 31, 'mod': 26, 'Value': 332, 'long': 331, '>': 335, 'Invalid': 317, 'Is': 62, 'error': 57, 'Messages': 58, ',': 11, 'errors': 40, 'add': 53, 'Errors': 39, 'Formed': 298, 'Well': 297, 'is': 295, '!': 291, '&&': 290, '!=': 288, 'Null': 63, 'Long': 25, 'String': 13, 'public': 0}
{'}\n': 44, ';': 43, ')': 14, 'STR': 34, '_': 33, '+': 35, 'jdbc': 11, ',': 32, '(': 21, 'is': 19, '.': 18, '': 6, 'True': 20, 'Assert': 17, 'Statement': 4, 'validate': 2, 'void': 1, 'private': 0}
{'}\n': 69, ';': 29, 'dest': 19, 'return': 66, '}': 65, ')': 13, ']': 5, 'i': 33, '[': 4, 'array': 12, '(': 8, 'Of': 7, 'value': 56, '.': 26, '': 2, '=': 20, '{': 14, '++': 45, 'length': 27, '<': 39, 'NUM': 36, '_': 35, 'int': 32, 'for': 30, 'new': 21, 'values': 6, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, '': 1, '.': 13, 'Level': 18, '(': 8, 'Loggable': 15, 'is': 5, 'logger': 12, 'return': 11, '{': 10, 'Enabled': 7, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 84, '}': 83, ';': 82, ')': 30, '(': 5, '{': 50, '.': 36, '': 6, 'player': 8, 'Player': 7}
{'}\n': 17, ';': 16, ')': 10, 'config': 9, '(': 4, '{': 11, 'Config': 8, 'Network': 7, '': 1, 'final': 5, 'Matcher': 3, 'public': 0}
{'}\n': 88, ';': 35, 'Level': 4, 'return': 84, '}': 83, ')': 13, '_': 79, '+': 78, '(': 6, '.': 28, 'level': 8, '': 10, '=': 26, '{': 14, 'private': 0}
{'}\n': 179, ';': 57, '}': 152, ')': 28, 'Id': 23, 'local': 40, 'STR': 65, '_': 64, '(': 24, 'Exception': 110, 'State': 109, 'Illegal': 108, '': 7, 'new': 106, 'throw': 105, '{': 29, 'Local': 22, 'String': 8, 'synchronized': 1}
{'}\n': 93, ';': 22, ')': 13, 'msg': 7, ',': 8, 'tag': 39, '(': 4, '.': 63, 'Log': 84, '': 5, '}': 59, 'args': 12, 'format': 75, 'String': 6, '=': 28, '{': 14, 'NUM': 67, '_': 66, '>': 51, 'length': 64, 'if': 15, 'return': 21, 'LEVEL_': 53, 'Level': 50, 's': 49, 'caller': 27, 'Tag': 42, 'generate': 41, 'Element': 26, 'Trace': 25, 'Stack': 24, 'Caller': 30, 'get': 29, 'allow': 18, '!': 17, '...': 11, 'Object': 10, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 67, '}': 65, ';': 17, ')': 8, 'i': 13, '(': 4, '.': 21, '_leaves': 20, '{': 9, 'get': 38, 'leaf': 34, 'if': 43, '=': 14, 'Leaf': 33, 'Tree': 32, 'Catalog': 31, '': 5, '++': 27, 'size': 22, '<': 19, 'NUM': 16, '_': 15, 'int': 12, 'for': 10, 'name': 7, 'String': 6, 'void': 1, 'public': 0}
{'}\n': 63, ';': 28, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 45, 's': 12, 'return': 55, 'append': 46, '++': 42, 'i': 32, '<': 38, 'NUM': 35, '_': 34, '=': 13, 'int': 31, 'for': 29, '': 1, 'new': 14, '{': 7, 'public': 0}
{'}\n': 82, ';': 49, 'BOOL': 74, '_': 73, 'return': 72, '}': 76, '{': 23, ')': 22, ']': 68, 'i': 46, '[': 66, '(': 3, 'get': 63, '.': 36, 'if': 58, '++': 55, '=': 34, 'int': 45, 'for': 43, 'component': 8, 'final': 4, ',': 9, 'boolean': 1, 'protected': 0}
{'}\n': 101, '}': 48, ';': 24, ')': 9, 'hook': 8, '(': 5, '.': 18, 'List': 88, 'hooks': 87, '{': 10, 'synchronized': 85, 'Exception': 60, 'State': 79, 'Illegal': 78, '': 6, 'new': 56, 'throw': 55, 'NUM': 72, '_': 62, '>': 70, 'VMState': 69, 'if': 25, 'STR': 63, 'Pointer': 59, 'Null': 58, 'null': 29, '==': 52, 'PERMISSION': 45, 'HOOKS_': 44, 'SHUTDOWN_': 43, 'Collection': 40, 'Permission': 35, 'Runtime': 38, 'check': 34, 'sm': 14, '!=': 28, 'Manager': 13, 'Security': 12, 'get': 19, 'System': 17, '=': 15, 'Thread': 7, 'Hook': 4, 'Shutdown': 3, 'public': 0}
{'}\n': 94, '}': 74, '{': 5, ')': 4, 'Exception': 79, 'Interrupted': 78, '': 65, '(': 3, 'catch': 75, ';': 59, 'NUM': 71, '_': 47, 'sleep': 68, '.': 67, 'Thread': 66, 'try': 63, 'while': 6, 'run': 2, 'void': 1, 'public': 0}
{'}\n': 65, ';': 16, 'BOOL': 58, '_': 44, 'return': 56, '}': 60, ')': 5, 'Scroll': 3, 'new': 18, '(': 4, 'Stack': 12, 'set': 48, '{': 6, 'NUM': 45, '!=': 43, 'cur': 8, ',': 39, 'compare': 35, '.': 34, 'Float': 33, '': 32, 'if': 30, 'Bounded': 22, 'get': 11, '=': 10, 'float': 7, 'bound': 2, 'boolean': 1, 'public': 0}
{'}\n': 598, ';': 597, '_': 561, '{': 540, ')': 539, '(': 534, 'evaluation': 519, '': 512, 'public': 3}
{'}\n': 32, ';': 31, ')': 13, '(': 8, '.': 18, ',': 23, 'get': 19, 'request': 12, '{': 14, 'public': 0}
{'}\n': 27, '{': 26, 'Exception': 25, '': 7, 'throws': 23, ')': 22, 'options': 21, '>': 20, 'Object': 19, ',': 10, 'String': 16, '<': 14, 'Map': 13, 'final': 6, '(': 5, 'void': 1, 'protected': 0}
{'}\n': 228, ';': 84, '}': 214, ')': 20, '(': 8, '.': 47, 'f': 15, '=': 42, '{': 21, 'if': 85, 'public': 0}
{'}\n': 53, '}': 51, ';': 27, ')': 10, '(': 6, 'All': 47, 'notify': 46, 'BOOL': 39, '_': 19, '=': 37, 'Called': 32, 'paint': 5, '{': 11, '!': 30, 'if': 28, 'this': 25, ',': 18, 'NUM': 20, 'image': 17, 'Image': 15, 'draw': 14, '.': 13, 'g': 9, 'Graphics': 8, '': 7, 'void': 4, 'public': 3}
{'}\n': 35, ';': 29, 'BOOL': 28, '_': 27, 'return': 26, '}': 30, '{': 13, ')': 12, 'Name': 11, 'event': 10, '(': 7, 'Key': 19, 'contains': 18, '.': 17, 'm_listenees': 16, 'if': 14, 'String': 9, '': 1, 'Allowed': 6, 'connection': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 20, ';': 19, 'NUM': 18, '_': 13, '>=': 16, ')': 5, 'STR': 14, '(': 4, 'Of': 11, 'index': 10, '.': 9, 'return': 7, '{': 6, 'Prefixed': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 40, '}': 22, ';': 21, ')': 9, '': 6, 'new': 31, 'throw': 30, '{': 13, '(': 5, 'catch': 23, 'close': 18, '.': 17, 'connection': 8, 'try': 14, 'SQLException': 12, 'throws': 10, 'Connection': 4, 'void': 1}
{'}\n': 34, ';': 30, 'this': 32, 'return': 31, ')': 15, '(': 7, '.': 24, 'Actions': 6, 'm': 22, '{': 16, 'View': 4, 'Action': 3, 'Quick': 2, '': 1, 'public': 0}
{'}\n': 119, ';': 56, ')': 44, 'values': 43, '(': 18, '.': 91, 'Stream': 103, '': 2, ',': 11, 'Filter': 29, 'value': 28, 'All': 97, 'put': 96, 'Map': 79, 'Options': 17, 'base': 34, '>': 13, '<': 1, 'Hash': 84, 'Identity': 83, 'new': 81, '=': 80, 'STR': 54, '_': 53, 'Null': 48, 'Non': 47, 'require': 46, '{': 45, 'T': 3, 'Abstract': 6, 'Function': 20, '?': 10, 'Value': 8, 'Option': 7, 'extends': 4, 'protected': 0}
{'}\n': 25, ';': 24, ')': 10, 'str': 22, '(': 5, 'Seq': 3, 'Char': 2, '': 1, 'new': 13, 'return': 12, '{': 11, 'public': 0}
{'}\n': 91, '}': 90, ';': 37, ')': 19, 'STR': 35, '_': 34, '(': 33, 'get': 47, '.': 29, '{': 27, '=': 44, '': 1, 'Type': 32, 'Content': 31, 'set': 30, 'resp': 18, 'Servlet': 16, 'Response': 17, 'Http': 15, 'req': 12, 'Request': 11}
{'}\n': 59, ';': 57, ')': 13, 'State': 3, '(': 22, 'new': 11, 'old': 7, '{': 14, ',': 9, 'protected': 0}
{'}\n': 115, ';': 64, ')': 31, 'formatted': 84, ',': 15, 't': 22, 'Time': 69, 'date': 70, '(': 6, 'Throwable': 5, 'log': 102, '.': 53, 'Service': 100, 'Logging': 8, '': 7, 'msg': 18, 'level': 10, 'Line': 88, 'Log': 4, 'format': 2, '=': 72, 'String': 17, 'now': 78, 'Date': 68, 'Local': 67, '}': 65, 'return': 63, '{': 32, 'id': 56, '<': 57, 'Logger': 52, 'Photon': 51, 'if': 48, 'Level': 9, 'And': 3, 'void': 1, 'private': 0}
{'}\n': 61, ';': 60, ')': 28, 'Name': 12, 'queue': 11, ',': 13, 'shard': 16, 'PREFIX': 43, 'KEY_': 42, 'PINLATER_': 40, '': 2, 'STR': 37, '_': 36, '(': 8, 'format': 34, '.': 33, 'String': 3, 'return': 30, '{': 29, 'Key': 7, 'Redis': 6, 'construct': 4, 'static': 1, 'public': 0}
{'}\n': 77, '}': 26, ';': 25, 'return': 23, '{': 15, ')': 14, 'uee': 70, 'Exception': 69, 'Encoding': 68, 'Unsupported': 67, '': 7, 'CHARSET': 41, 'ASCII_': 40, '(': 6, 'Bytes': 37, 'get': 36, '.': 35, 's': 9, 'try': 27, 'null': 20, '==': 19, 'if': 16, 'String': 8, 'static': 1, 'public': 0}
{'}\n': 59, ';': 27, ')': 10, 'Name': 9, 'domain': 8, '(': 5, 'add': 2, '.': 17, 'Domains': 32, '}': 28, '>': 45, '<': 44, 'List': 43, 'Array': 42, '': 6, 'new': 40, '=': 39, '{': 11, 'null': 34, '==': 33, 'if': 12, 'return': 26, 'Empty': 19, 'is': 18, 'Utils': 16, 'String': 7, 'Domain': 4, 'void': 1, 'public': 0}
{'}\n': 33, ';': 26, 'stopper': 13, '=': 19, '.': 17, 'this': 16, ')': 14, '(': 3, 'Lock': 2, 'lock': 8, '{': 15, 'Criterion': 12, 'Cancel': 11, '': 4, ',': 9, 'Write': 6, 'Read': 5, 'Stoppable': 0}
{'}\n': 311, ';': 13, 'hash': 9, 'return': 308, '}': 269, ')': 6, 'e': 275, '(': 5, 'Error': 282, 'Assertion': 281, '': 14, 'new': 21, 'throw': 278, '{': 7, 'Exception': 294, 'Algorithm': 293, 'Such': 292, 'No': 291, 'catch': 271, 'IOException': 274, 'NUM': 12, '_': 11, '*': 264, 'i': 219, '<<': 261, '&': 256, ']': 208, '[': 207, 'Array': 16, 'long': 1, '+=': 245, '++': 241, 'length': 237, '.': 42, ',': 69, 'min': 229, 'Math': 227, '<': 225, '=': 10, 'int': 218, 'for': 216, 'digest': 212, 'md': 37, 'byte': 204, 'flush': 200, 'out': 54, 'UTF': 183, 'write': 182, 'Descriptor': 131, 'name': 117, 'method': 99, 'sink': 19, 'Stream': 18, 'Output': 17, 'Digest': 36, 'Data': 51, 'STR': 47, 'Instance': 44, 'get': 43, 'Message': 35, 'try': 32, 'Byte': 15, 'Hash': 4, 'compute': 2, 'private': 0}
{')': 23, ']': 9, '[': 8, 'int': 7, 'Ptr': 16, '(': 6, 'private': 0}
{'}\n': 91, ';': 50, 'proxys': 23, '(': 35, ')': 36, '.': 33, ']': 22, 'size': 34, '[': 21, 'Registrar': 20, 'Service': 19, '': 18, 'new': 25, '=': 24, 'private': 0}
{'}\n': 139, ';': 43, 'STR': 133, '_': 132, ')': 22, '(': 18, 'to': 63, '.': 62, 'val': 61, 'return': 51, 'if': 44, '=': 37, '': 6, 'String': 7}
{'}\n': 608, ';': 606, ')': 292, '(': 281, 'Enabled': 260, 'is': 258, '.': 533, 'Impl': 498, 'logger': 432, 'return': 348, '{': 293, 'boolean': 32}
{'}\n': 84, '}': 83, ';': 48, ')': 16, 'support': 15, ',': 11, 'node': 50, '(': 7, 'Order': 6, 'Doc': 5, 'In': 4, 'Node': 66, 'add': 2, '{': 17, 'next': 65, '.': 31, 'iterator': 10, '=': 62, '!=': 59, 'while': 52, 'null': 45, 'MUTABLE': 43, 'NOT_': 42, 'ER_': 40, '': 8, 'Resources': 37, 'XPATHError': 36, 'XPATHMessage': 33, 'create': 32, 'XSLMessages': 30, 'Exception': 27, 'Runtime': 26, 'new': 24, 'throw': 23, 'm_mutable': 21, '!': 20, 'if': 18, 'Context': 14, 'XPath': 13, 'Nodes': 3, 'void': 1, 'public': 0}
{'}\n': 58, ';': 28, 'last': 42, 'now': 10, ')': 7, '(': 6, 'Millis': 17, 'Time': 16, 'current': 15, '.': 14, 'System': 13, '': 12, '=': 11, 'long': 9, '{': 8}
{'}\n': 53, ';': 52, ')': 51, 'Name': 14, 'qualified': 13, 'String': 12, '': 11, '(': 10, 'public': 3}
{'}\n': 617, '}': 114, ';': 21, ')': 9, 'PROCESSED': 533, 'BE_': 532, 'CANNOT_': 531, 'REQUEST_': 530, '': 5, '.': 15, 'Codes': 527, 'Exit': 526, ',': 149, 'e': 461, '(': 4, 'CLIException': 12, 'new': 186, 'throw': 518, 'args': 368, 'STR': 112, '_': 111, 'INFO': 171, 'Level': 168, 'ERROR': 504, 'LOG_': 164, 'Writer': 41, 'Log': 157, 'write': 156, 'Error': 487, 'debug': 486, 'Message': 391, 'get': 32, 'filter': 86, 'Type': 69, 'pattern': 68, 'realm': 51, '{': 13, '=': 31, ']': 144, '[': 143, 'String': 50, 'SSOException': 540, 'catch': 455, 'Exception': 460, 'Repo': 459, 'Id': 198, 'params': 145, 'ACCESS': 165, 'Resource': 400, 'println': 390, 'output': 40, 'else': 413, 'format': 397, 'Format': 395, 'Universal': 381, 'amid': 278, 'Name': 374, 'Object': 365, 'next': 286, 'i': 259, 'AMIdentity': 182, 'Next': 270, 'has': 269, 'iterator': 263, 'results': 228, 'Iterator': 258, 'for': 255, 'Empty': 250, 'is': 249, '!': 246, '&&': 245, 'null': 105, '!=': 242, 'if': 100, 'remove': 305, 'match': 293, 'Results': 200, 'Search': 199, 'isr': 201, 'Set': 227, 'Control': 221, 'Identities': 206, 'search': 205, 'amir': 184, 'SSOToken': 28, 'admin': 29, 'Repository': 183, 'try': 179, 'NUM': 131, '==': 104, 'length': 126, '||': 122, 'FILTER': 97, 'IArgument': 59, 'Value': 56, 'Option': 55, 'TYPE': 81, 'AGENT_': 80, 'NAME': 63, 'REALM_': 62, 'Output': 44, 'IOutput': 39, 'Admin': 33, 'Login': 23, 'ldap': 22, 'rc': 8, 'Request': 3, 'handle': 2, 'super': 14, 'throws': 10, 'Context': 7, 'void': 1, 'public': 0}
{'}\n': 64, ';': 26, ')': 7, '(': 6, 'Array': 13, 'Byte': 12, 'to': 4, '.': 38, 'out': 16, 'return': 36, ',': 32, 'Stream': 15, 'Output': 14, '': 11, 'new': 18, '=': 17, '{': 10, ']': 3, '[': 2, 'byte': 1, 'public': 0}
{'}\n': 176, '}': 171, ';': 169, ')': 101, '(': 33, '.': 150, '': 35, 'Enum': 15, '{': 102, 'enum': 93, '>': 90, 'extends': 82, '?': 81, '<': 80, 'Class': 65, ',': 39, 'final': 34, 'String': 36, 'static': 9, 'public': 8}
{'}\n': 153, '}': 137, ';': 97, ')': 47, '(': 37, '.': 123, '{': 62, 'if': 98, '=': 88, 'stream': 75, '': 4, 'public': 24, '@': 3}
{'}\n': 130, ';': 48, 'return': 125, '}': 124, ')': 24, ',': 72, '(': 46, 'get': 115, '.': 62, 'Mask': 9, '=': 39, 'export': 36, 'Export': 8, '': 1, '<': 3, '>': 35, 'new': 40, '{': 25}
{'}\n': 202, ';': 160, 'obj': 15, '=': 62, ']': 181, '[': 179, 'array': 67, ')': 16, 'NUM': 122, '_': 121, '+': 120, 'len': 39, ',': 104, '(': 9, '': 13, 'length': 69, '.': 68, 'int': 26, '{': 17, 'K': 14, 'public': 0}
{'}\n': 102, '}': 26, ';': 25, ')': 13, 'null': 19, ',': 9, '(': 5, 'Height': 93, 'get': 37, '.': 36, 'c': 8, 'Width': 38, 'y': 47, 'x': 28, 'Image': 7, 'draw': 73, 'page': 17, '{': 14, 'First': 68, 'pr': 67, '>=': 66, 'pagenum': 65, '&&': 64, '!=': 62, 'if': 15, 'lineascent': 57, '+': 31, 'lineheight': 54, '*': 53, 'linenum': 52, 'y0': 49, '=': 29, 'int': 27, 'charwidth': 43, '-': 33, 'width': 32, 'x0': 30, 'newpage': 22, '==': 18, 'i': 12, 'Component': 11, '': 6, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 81, ';': 28, ')': 17, 'BOOL': 78, '_': 77, ',': 9, 'os': 25, 'is': 70, '(': 4, 'copy': 3, '}': 47, 'ioe': 52, 'throw': 64, 'EL': 59, 'close': 58, '{': 21, 'IOException': 20, '': 5, 'catch': 48, 'Stream': 24, 'Output': 23, 'Buffered': 34, '=': 26, 'try': 29, 'null': 27, 'throws': 18, 'out': 12, 'void': 2, 'public': 0}
{'}\n': 298, ';': 297, '_': 250, '=': 237, 'Out': 226, 'fade': 225, '.': 222, '{': 80, ')': 79, '(': 76, 'stop': 20, 'public': 0}
{'}\n': 368, '}': 366, ';': 64, ')': 10, '(': 6, '{': 11, 'if': 173, 'NUM': 140, '_': 139, 'Position': 129, 'top': 153, '-': 108, 'Bottom': 257, '.': 89, 'First': 128, 'm': 86, '=': 33, 'int': 30, 'bottom': 90, 'Padding': 88, 'List': 87, 'Top': 46, 'final': 29, 'Scroll': 35, 'get': 34}
{'}\n': 57, '}': 53, ';': 52, ')': 20, '{': 21, '(': 7, 'properties': 16, 'Properties': 6, '': 14, 'static': 1, 'public': 0}
{'}\n': 315, ';': 177, ')': 11, ',': 220, '(': 6, '.': 102, 'bin': 100, '=': 69, '{': 53, '': 7, 'throws': 12, 'void': 2}
{'}\n': 52, ';': 36, ')': 18, 'event': 16, '(': 6, '.': 30, 'Events': 27, 'null': 41, 'get': 31, '=': 28, '>': 25, '': 7, '<': 22, '{': 19, ',': 13, 'Event': 4, 'protected': 0}
{'}\n': 57, ';': 19, 'b0': 10, 'return': 54, '}': 53, ')': 4, '(': 3, 'String': 46, 'to': 45, '.': 15, 'Integer': 43, '': 6, ',': 41, 'STR': 40, '_': 24, 'new': 29, 'throw': 28, '{': 8, 'NUM': 25, 'if': 20, 'read': 2, 'Stream': 14, 'Input': 13, 'f': 12, '=': 11, 'int': 1, 'IOException': 7, 'throws': 5, 'public': 0}
{'}\n': 183, ';': 36, ')': 20, 'LEFT': 180, '': 8, '.': 51, 'Align': 135, 'Paint': 138, '(': 3, 'Text': 134, 'set': 89, 'paint': 67, ',': 15, 'NUM': 157, '_': 156, '-': 60, 'ver_height': 23, 'horstart': 55, 'draw': 52, 'canvas': 50, 'RIGHT': 144, 'BLACK': 96, 'Color': 90, 'border': 35, 'Line': 53, 'else': 70, 'width': 59, 'size': 43, 'i': 5, '+': 34, '*': 31, '/': 28, 'graphheight': 27, '=': 24, 'float': 22, 'int': 4, 'create_y_axis': 2, 'void': 1, 'protected': 0}
{'}\n': 14, ';': 13, ')': 4, '(': 3, 'get': 10, '.': 9, 'return': 6, '{': 5, 'long': 1, 'public': 0}
{'}\n': 73, ';': 30, ')': 7, '(': 3, 'check': 59, '.': 24, 'sm': 20, '{': 37, 'null': 35, '!=': 34, 'if': 31, 'Manager': 19, 'Security': 18, 'get': 25, 'System': 23, '': 4, '=': 21, 'throws': 8, 'void': 1}
{'}\n': 39, ';': 38, ')': 8, '(': 3, 'get': 33, '.': 13, 'other': 7, '{': 9, 'if': 10, '': 4, 'public': 0}
{'}\n': 55, ';': 50, 'return': 52, ')': 28, '_': 36, '(': 7, '.': 40, 'pattern': 10, 'String': 5, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 98, '}': 91, ')': 38, '(': 24, ';': 69, '.': 62, 'rs': 30, '{': 56, 'Set': 29, 'Result': 28, '': 27, 'void': 1, 'public': 0}
{'}\n': 81, '.': 70, '{': 30, 'else': 41, '}': 40, ';': 39, '_': 36, ')': 22, 'null': 28, '==': 27, 'parameters': 26, '(': 4, 'if': 24, '': 6, 'final': 5, 'public': 0}
{'}\n': 114, ';': 113, ')': 55, '(': 11, 'annotation': 42, '.': 62, '': 32, 'Annotation': 9}
{'}\n': 36, ';': 21, ')': 9, '(': 5, 'Value': 31, 'int': 30, '.': 29, 'id': 8, 'resource': 2, 'return': 18, '}': 22, 'BOOL': 20, '_': 19, '{': 10, 'null': 15, '==': 14, 'if': 11, 'Integer': 7, '': 6, 'boolean': 1, 'public': 0}
{'}\n': 44, ';': 43, ')': 24, '(': 5, '{': 25, '': 1, ',': 9, 'name': 12, 'String': 7, 'namespace': 8, 'public': 0}
{'}\n': 26, ';': 25, ')': 6, '(': 5, 'Millis': 18, 'Time': 17, 'current': 16, '.': 15, 'System': 14, '': 13, 'return': 8, '{': 7, 'Timestamp': 4, 'static': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 5, '(': 4, 'length': 23, '.': 22, 'key': 9, '{': 6}
{'}\n': 39, ';': 29, ')': 13, 'Name': 21, 'path': 12, '(': 8, 'Impl': 4, 'Read': 6, 'open': 5, 'return': 30, 'Path': 10, 'get': 25, '.': 24, '=': 22, 'String': 19, '': 1, '{': 17, 'IOException': 16, 'throws': 14, 'Stream': 3, 'public': 0}
{'}\n': 26, ';': 25, ')': 14, '(': 9, 'Dialog': 18, '{': 15, 'on': 5, 'void': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 636, ';': 61, '}': 71, ')': 7, '(': 6, '{': 8, 'Exception': 400, '': 2, 'catch': 372, 'Trace': 390, 'Stack': 389, 'print': 388, '.': 24, 'spatial': 301, '=': 148, 'Lat': 172, 'lr': 160, ',': 238, 'ul': 147, 'max': 288, 'Math': 230, 'ymax': 283, 'double': 170, 'min': 273, 'ymin': 268, 'Lon': 183, 'xmax': 466, 'xmin': 451, 'else': 448, 'fe': 401, 'Format': 399, 'ex': 386, 'list': 328, 'get': 53, 'STR': 59, '_': 58, 'fine': 51, 'logger': 49, 'FINE': 255, 'if': 80, 'Scale': 245, 'projection': 149, 'Dateline': 234, 'Crossing': 233, 'is': 25, 'Proj': 229, 'List': 4, 'OMGraphic': 3, 'new': 64, 'X': 188, 'Y': 177, 'Right': 166, 'Lower': 165, 'D': 146, 'Point2': 145, 'Left': 153, 'Upper': 152, 'return': 63, '+': 57, 'Name': 54, 'prepare': 5, 'synchronized': 1, 'public': 0}
{'}\n': 55, ';': 54, ')': 10, 'PROTECTED': 43, '': 33, '.': 30, 'PUBLIC': 34, '(': 6, 'modifiers': 18, '{': 11, 'boolean': 1, 'private': 0}
{'}\n': 159, ';': 17, ')': 9, '(': 8, 'scale': 154, '.': 108, 'result': 104, ',': 73, 'Scale': 20, 'res': 48, 'STR': 16, '_': 15, 'Equals': 128, 'assert': 127, 'String': 12, 'to': 137, 'c': 42, 'UP': 124, 'ROUND_': 122, '': 11, 'Decimal': 57, 'Big': 56, 'Number': 59, 'b': 28, 'divide': 109, 'a': 13, '=': 14, 'Integer': 69, 'new': 61, 'NUM': 24, '-': 22, 'int': 18, '{': 10, 'Pos': 7, 'Up': 6, 'Round': 4, 'Divide': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 714, ';': 627, 'return': 709, '}': 654, ')': 131, '(': 10, '{': 132, 'else': 655, 'if': 629, 'errors': 82, ',': 15, 'Admin': 25, 'is': 24, 'Id': 14, 'user': 13, 'List': 6, '=': 214, 'boolean': 1, 'Errors': 73, '': 11, 'Reader': 19, 'stream': 20, 'Stream': 18, 'Input': 17, 'String': 12, 'User': 9, 'For': 8, 'Format': 7, 'Word': 5, 'Ms': 4, 'public': 0}
{'}\n': 243, ';': 242, '_': 205, '==': 69, ')': 58, '(': 6, '.': 79, 'cs': 57, '{': 59, 'Char': 35, '': 7, 'static': 1, 'public': 0}
{'}\n': 251, ';': 29, ')': 9, '(': 4, 'close': 132, '.': 80, 'reader': 130, '}': 119, '{': 76, 'STR': 106, '_': 105, 'With': 103, 'starts': 102, 'line': 18, 'if': 97, '=': 59, 'String': 17, '': 5, 'void': 1}
{'}\n': 124, ';': 12, 'result': 11, 'return': 121, '}': 61, ')': 8, 'Size': 30, 'spec': 14, ',': 114, '(': 4, 'min': 111, '.': 20, 'Math': 109, '': 17, '=': 16, '{': 9, 'MOST': 103, 'AT_': 102, 'Spec': 7, 'Measure': 18, '==': 47, 'Mode': 15, 'if': 43, 'Right': 88, 'Padding': 81, 'get': 21, '+': 79, 'Left': 82, 'Text': 70, 'm': 69, 'measure': 2, 'Paint': 71, 'int': 1, 'else': 62, 'EXACTLY': 53, 'Width': 3, 'private': 0}
{'}\n': 256, ';': 15, ')': 7, 'NUM': 14, '_': 13, '-': 66, 'capacity': 11, '+': 248, 'pos': 74, '(': 6, 'Byte': 4, 'get': 43, '.': 42, 'buf': 21, ',': 40, 'byte': 36, 'Equals': 33, 'assert': 32, '}': 213, 'actual': 178, 'expected': 100, 'Util': 142, 'Bytes': 120, '': 17, ']': 99, 'length': 185, '[': 98, 'new': 23, '=': 12, 'final': 9, 'array': 168, 'Offset': 149, 'And': 148, 'Len': 147, 'With': 146, 'compare': 144, 'put': 127, 'next': 107, 'r': 105, 'Int': 108, '{': 8, '++': 93, 'i': 82, 'LIMIT': 90, '<': 88, 'int': 10, 'for': 79, 'Buffer': 20, 'Array': 5, 'Put': 3, 'test_get': 2, 'void': 1, 'public': 0}
{'}\n': 47, ';': 44, ')': 12, '(': 7, '.': 26, 'object': 11, '_': 29, '{': 13, '': 1}
{'}\n': 171, ';': 22, ')': 5, '(': 4, 'String': 2, 'to': 152, '.': 44, 'return': 149, '}': 148, 'la': 53, 'append': 117, 'NUM': 61, '_': 29, 'consume': 109, 'lexer': 43, 'STR': 30, '==': 72, '||': 75, 'if': 64, 'Ahead': 58, 'look': 57, '=': 15, 'char': 52, '{': 10, 'Chars': 47, 'More': 46, 'has': 45, 'while': 41, 'Builder': 13, '': 1, 'new': 16, 'Exception': 9, 'Parse': 8, 'throws': 6}
{'}\n': 103, ';': 46, ')': 34, 'STR': 61, '_': 43, ',': 20, 'TAG': 97, '': 10, '(': 8, 'v': 94, '.': 48, 'Log': 92, 'DEBUG': 89, 'Adapter': 86, 'Flexible': 85, 'if': 82, 'NUM': 44, '>': 18, 'Height': 69, 'Measured': 68, 'get': 67, 'View': 26, 'recycler': 32, 'view': 27, 'Float': 56, 'of': 55, 'Animator': 7, 'Object': 52, 'add': 49, 'animators': 19, 'alpha': 36, '{': 35, 'Recycler': 30, 'Null': 12, 'Non': 11, '@': 9, '<': 15, 'List': 14, 'From': 5, 'In': 4, 'slide': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 44, ';': 43, ')': 9, 'val': 14, '(': 27, '{': 10, 'Integer': 2, 'Big': 1}
{'}\n': 74, ';': 63, ')': 9, 'response': 38, ',': 19, 'locale': 18, '(': 4, 'Error': 14, 'Tenant': 66, 'Default': 65, 'tenant': 32, '+': 50, 'STR': 8, '_': 7, 'String': 31, 'to': 53, '.': 45, 'info': 46, 'logger': 44, '{': 43, 'IOException': 42, '': 1, 'throws': 40, 'Response': 37, 'Servlet': 36, 'Http': 35, '=': 6, 'value': 5, 'Variable': 23, 'Path': 22, '@': 0, 'Locale': 17, 'void': 11, 'public': 10, 'Mapping': 3, 'Request': 2}
{'}\n': 158, ';': 96, 'Stream': 15, 'input': 16, '=': 140, '.': 104, ')': 18, '(': 4, 'Null': 52, 'Not': 51, 'check': 50, '{': 22, '': 1, 'public': 0}
{'}\n': 37, ';': 36, ')': 23, 'Only': 22, 'read': 21, ',': 10, 'metadata': 18, 'checkpoint': 13, 'store': 9, '(': 5, 'super': 25, '{': 24, 'boolean': 20, 'Metadata': 17, 'Index': 4, '': 1, 'Checkpoint': 12, 'Store': 8, 'IRaw': 7, 'public': 0}
{'}\n': 61, ';': 60, 'Closed': 19, 'is': 18, '{': 38, 'SQLException': 35, '': 34, ')': 22, '(': 20, 'boolean': 7}
{'}\n': 81, '}': 80, ';': 60, ')': 34, 'list': 50, ',': 12, 'Name': 33, 'parameter': 32, '(': 5, 'put': 72, '.': 62, 'Map': 8, 'params': 20, 'Val': 27, 'param': 26, 'add': 63, '>': 18, '<': 9, 'List': 14, 'Array': 54, '': 7, 'new': 52, '=': 51, 'String': 11, '{': 35, 'if': 36, 'final': 6, 'Value': 4, 'insert': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 146, ';': 15, 'size': 14, 'return': 143, ')': 10, 'VALUE': 99, 'MAX_': 98, '': 1, '.': 40, 'Integer': 95, ',': 42, 'bottom': 133, 'insets': 52, 'long': 74, '(': 6, '+': 79, 'top': 126, 'height': 104, 'min': 71, 'Math': 69, 'int': 66, '=': 33, 'right': 92, 'left': 85, 'width': 63, 'Insets': 51, 'get': 56, 'target': 9, '}': 49, 'Total': 39, 'y': 43, 'x': 38, 'Dimension': 2, 'new': 34, 'Requests': 28, 'check': 21, 'Container': 8, '{': 11, 'this': 18, 'synchronized': 16, 'Size': 5, 'Layout': 4, 'public': 0}
{'}\n': 1237, ';': 1236, '=': 1145, '.': 1060, '{': 1044, ')': 1040, 'param': 197, 'double': 183, '(': 74, 'Parameter': 15, '': 5}
{'}\n': 56, ';': 46, 'BOOL': 49, '_': 48, 'return': 47, '}': 51, ')': 6, 'position': 5, '(': 3, '{': 7, 'm': 23, 'int': 4, 'select': 2, 'boolean': 1}
{'}\n': 222, '}': 106, ';': 34, ')': 15, ',': 11, '(': 7, '.': 52, 'Node': 68, 'else': 107, '': 8, '{': 44, 'NODE': 78, 'TEXT_': 77, '==': 72, 'Type': 69, 'get': 53, 'child': 65, 'if': 59, '=': 48, 'void': 4}
{'}\n': 101, ';': 100, ')': 34, '_': 97, '(': 33, '{': 42, 'Editor': 16, '': 11}
{'}\n': 72, ';': 71, ')': 38, 'solution': 35, '(': 32, '.': 43, '{': 39, 'Solution': 34, '': 33}
{'}\n': 93, ')': 10, 'return': 82, ';': 59, 'NUM': 56, '_': 55, '(': 7, '*': 41, '.': 23, '=': 14, 'v': 13, '{': 11, 'int': 2}
{'}\n': 223, ';': 221, 'notification': 25, '(': 5, 'add': 81, '.': 80, '{': 28, ')': 27, '': 13, 'void': 1, 'public': 0}
{'}\n': 113, ';': 13, 'return': 110, '}': 108, ')': 6, ']': 58, 'j': 43, '[': 53, 'i': 17, '(': 15, '{': 7, '++': 37, 'length': 34, '.': 33, '<': 23, 'NUM': 12, '_': 11, '=': 10, 'int': 16, 'for': 14, 'double': 1}
{'}\n': 409, '}': 242, ';': 49, ')': 39, 'Cnt': 315, 'i': 11, ',': 9, '(': 3, 'Document': 107, 'Word': 28, 'Distribution': 106, '': 4, 'new': 97, 'put': 339, '.': 153, 'Docs': 95, 'Distro': 94, '{': 40, '++': 332, 'NGram': 44, 'Max': 17, '<=': 324, 'Min': 12, '=': 45, 'int': 10, 'for': 311, 'Char': 13, 'String': 134, 'to': 306, 'sb': 136, 'Data': 301, 'Text': 300, 'Full': 299, 'NUM': 294, '_': 293, 'char': 291, 'append': 230, 'err': 262, 'System': 260, 'Trace': 257, 'Stack': 256, 'print': 255, 'ex': 250, 'IOException': 269, 'catch': 243, 'Exception': 249, 'Found': 248, 'Not': 247, 'File': 7, 'close': 238, 'bf': 190, 'Tmp': 210, 's': 171, 'null': 226, '!=': 225, 'Line': 221, 'read': 220, 'while': 158, 'Reader': 189, 'Buffered': 188, 'try': 185, 'next': 181, 'Texts': 148, 'Next': 164, 'has': 163, 'iterator': 154, 'Names': 8, 'Iterator': 146, 'Buffer': 135, '>': 108, 'Integer': 103, '<': 101, 'Map': 100, 'Tree': 99, 'Window': 38, 'Set': 5, 'Estimator': 2, 'grammaticality': 1, 'public': 0}
{'}\n': 304, ';': 39, 'NUM': 302, '_': 157, '-': 300, 'pos': 21, ')': 18, '(': 48, '.': 57, 'return': 279, '}': 245, '{': 19, 'At': 105, 'STR': 158, '==': 156, 'char': 104, 'length': 58, 'in': 14, 'start': 17, '=': 22, 'int': 16, ',': 15, 'String': 13, '': 12}
{'}\n': 1033, '}': 991, ';': 422, ')': 86, '(': 287, '.': 486, '': 1018, ']': 601, 'i': 447, '[': 599, '{': 87, '++': 525, 'length': 853, '<': 453, 'NUM': 299, '_': 298, '=': 400, 'int': 73, 'for': 444, 'mean': 8, '+=': 640, 'double': 7, 'if': 100, 'public': 0}
{'}\n': 47, '}': 46, ';': 44, ')': 10, '+': 41, '_': 39, '(': 21, '': 22, '{': 11, 'v': 29, 'N': 27, 'Na': 26, 'is': 25, '.': 24, 'if': 20, 'void': 2}
{'}\n': 133, ';': 130, ')': 60, 'l': 43, '(': 35, '.': 93, 'Connection': 18, '{': 61, 'Listener': 19, '': 40, 'void': 1}
{'}\n': 137, ';': 22, 'Percent': 106, 'prev': 45, '-': 133, ')': 8, '(': 3, 'last': 129, '.': 61, 'contained': 30, 'get': 117, 'pcts': 115, ':': 54, 'NUM': 113, '_': 112, '?': 111, 'null': 47, '==': 109, '=': 18, 'double': 104, 'return': 100, 'if': 58, '}': 88, 'pct': 53, 'Empty': 80, 'is': 79, 'else': 74, 'add': 69, 'contains': 62, 'range': 7, '{': 9, 'sorted': 17, 'Constant': 5, '': 4, 'for': 49, '>': 16, '<': 13, 'Set': 12, 'Tree': 34, 'new': 32, 'Sorted': 11, 'values': 19, 'Range': 6, 'public': 0}
{'}\n': 39, '}': 29, '{': 13, ')': 12, 'ignored': 34, 'IOException': 33, '': 9, '(': 5, 'catch': 30, ';': 28, 'close': 3, '.': 24, 'closeable': 11, 'try': 21, 'null': 18, '!=': 17, 'if': 14, 'Closeable': 10, 'void': 2, 'static': 1}
{'}\n': 98, 'NUM': 29, '_': 28, ')': 17, '(': 9, '.': 61, 'pc': 21, '<': 27, 'if': 19, '{': 18, 'void': 4, 'public': 3}
{'}\n': 95, ';': 62, 'result': 51, 'return': 92, 'src': 29, ',': 70, 'NUM': 72, '_': 71, '(': 16, 'arraycopy': 66, '.': 65, 'System': 64, '': 63, ']': 4, '[': 3, 'byte': 2, 'new': 53, '=': 52, ')': 37, 'static': 1}
{'}\n': 29, ';': 28, ')': 17, 'classpath': 15, '(': 22, '{': 18, 'Loader': 9, 'class': 10, 'Class': 8, '': 7}
{'}\n': 38, ';': 37, ')': 10, '(': 6, '.': 26, 'return': 20, '{': 11, '': 1, 'instanceof': 15, 'o': 9, 'if': 12, 'Object': 8, 'equals': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 125, ';': 45, ')': 22, 'cursor': 94, ',': 16, 'buffer': 68, '(': 11, 'parse': 115, '.': 60, 'parser': 21, 'return': 112, 'length': 78, 'value': 15, 'NUM': 103, '_': 42, 'Cursor': 93, 'Parser': 20, 'Save': 56, '': 3, 'new': 36, '=': 54, 'append': 85, 'Buffer': 67, 'Array': 66, 'Char': 65, 'DEFAULT': 62, 'Value': 5, 'Header': 18, 'null': 32, '==': 31, 'if': 28, '}': 46, 'STR': 43, 'Exception': 26, 'Argument': 39, 'Illegal': 38, 'throw': 35, '{': 27, 'Parse': 25, 'throws': 23, 'String': 14, 'final': 1, 'Pair': 6, 'Name': 4, 'static': 2, 'public': 0}
{'}\n': 43, ';': 42, ')': 32, '(': 31, 'Column': 38, 'get': 29, '.': 28, 'loc': 12, 'Line': 30, '': 2, 'Location': 11, 'PCal': 10, 'static': 1, 'private': 0}
{'}\n': 120, '}': 94, ';': 92, ')': 12, 'e': 99, '(': 4, 'error': 104, '.': 80, 'log': 102, '{': 15, '': 9, 'catch': 95, 'close': 81, 'writer': 79, 'null': 30, '!=': 29, 'if': 26}
{'}\n': 115, ';': 114, '(': 3, '.': 60, 'Name': 85, 'domain': 6, ')': 51, 'if': 53, '': 4, 'String': 5, 'public': 0}
{'}\n': 58, ';': 57, ')': 37, '(': 36, 'Document': 13, '': 7, 'public': 0}
{'}\n': 446, ';': 96, '.': 121, 'Label': 50, 'new': 49, '=': 51, ')': 44, '(': 5, '': 6, ',': 10, 'void': 1, 'private': 0}
{'}\n': 35, ';': 34, ')': 26, ',': 27, '(': 3, 'get': 23, '.': 19, 'Utils': 18, 'message': 14, 'exception': 6, '': 4}
{'}\n': 54, ';': 38, ')': 10, '(': 4, 'Object': 3, 'Read': 24, 'default': 23, '.': 22, 'in': 9, '{': 20, 'Exception': 19, 'Found': 18, 'Not': 17, 'Class': 16, '': 5, ',': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'read': 2, 'void': 1, 'private': 0}
{'}\n': 47, ';': 30, ')': 16, 's': 20, '(': 5, 'fill': 42, '.': 32, 'g': 9, 'Color': 37, 'Paint': 34, 'set': 33, 'height': 15, ',': 10, 'width': 12, 'Path': 24, 'Arrow': 23, 'decode': 22, '=': 21, 'Shape': 19, '': 6, '{': 17, 'int': 11, 'D': 8, 'Graphics2': 7, 'Foreground': 3, 'paint': 2, 'void': 1, 'private': 0}
{'}\n': 13, ';': 12, 'allows': 2, '{': 7, ')': 6, 'boolean': 1, 'public': 0}
{'}\n': 64, ';': 61, '{': 40, ')': 39, '(': 35, 'Popup': 29, 'Menu': 24, 'is': 15}
{'}\n': 135, ';': 23, 'BOOL': 127, '_': 126, 'return': 125, '}': 129, ')': 11, '(': 4, '.': 19, '{': 12, 'if': 50, 'i': 47, 'tasks': 18, 'size': 20, '=': 17, 'int': 15, 'Task': 3, 'boolean': 1, 'private': 0}
{'}\n': 102, ';': 24, ')': 9, 'STR': 36, '_': 35, '(': 5, 'append': 95, '.': 65, 'String': 12, '': 11, '{': 10}
{'}\n': 160, ';': 58, ')': 43, ',': 155, '.': 52, 'name': 72, '(': 8, '{': 44, '!=': 62, 'if': 59, 'null': 63, 'sm': 48, 'Manager': 47, 'Security': 46, 'get': 53, 'System': 51, '': 17, '=': 49, 'Class': 18}
{'}\n': 31, ';': 17, ')': 5, '(': 1, 'Hook': 21, 'Team': 26, 'get': 13, '.': 8, 'workspace': 4, '=': 10, 'team': 20, 'this': 7, 'Root': 14, 'root': 9, '{': 6, 'Workspace': 3, '': 2, 'Rules': 0}
{'}\n': 64, '}': 36, ';': 35, ')': 11, '(': 3, 'notify': 47, '{': 12, 'Change': 49, 'On': 48, 'if': 18, '.': 38, 'items': 20, 'null': 22, '==': 21, 'lock': 15, 'synchronized': 13, 'void': 1, 'public': 0}
{'}\n': 77, ';': 58, ')': 7, 'msg': 33, '(': 16, '.': 43, 'if': 9, '{': 8, 'void': 1}
{'}\n': 375, ';': 84, 'NUM': 82, '_': 81, 'return': 94, '}': 105, ')': 37, 'Id': 68, 'screen': 35, '(': 6, 'add': 359, '.': 53, 'Ids': 36, '{': 47, 'DESKTOP': 353, 'CONTAINER_': 352, '': 7, 'Favorites': 161, '==': 276, 'container': 134, '&&': 345, 'contains': 340, '!': 336, 'if': 48, '>=': 329, 'Element': 311, 'new': 310, 'parser': 11, 'Add': 4, 'And': 3, 'parse': 2, 'Parser': 10, 'tag': 24, '=': 69, 'long': 133, 'Name': 59, 'get': 58, '+': 295, 'STR': 294, ',': 12, 'TAG': 291, 'd': 288, 'Log': 286, 'LOGD': 283, 'null': 277, 'Map': 15, 'Tag': 21, 'Y': 243, 'ATTR_': 78, 'Value': 73, 'Attribute': 71, 'put': 158, 'Values': 115, 'm': 114, 'X': 209, 'SCREEN': 178, 'CONTAINER': 164, ']': 141, '[': 138, 'Temp': 129, 'final': 65, 'Screen': 124, 'Container': 122, 'clear': 117, 'else': 106, 'res': 67, 'Layout': 96, '!=': 89, 'WORKSPACE': 79, 'Resource': 9, 'int': 1, 'equals': 54, 'INCLUDE': 52, 'TAG_': 51, 'IOException': 46, 'Exception': 43, 'Pull': 41, 'Xml': 8, 'throws': 38, '>': 23, 'Long': 33, '<': 16, 'List': 30, 'Array': 29, 'String': 18, 'Hash': 14, 'Node': 5, 'protected': 0}
{'}\n': 171, ';': 76, 'return': 66, '}': 167, ':': 25, '.': 96, '': 78, 'case': 18, 'NUM': 71, '_': 70, ')': 10, '(': 7, '*': 73, '{': 11}
{'}\n': 159, ';': 22, ')': 6, ']': 48, '[': 47, 'Object': 12, '': 8, 'Value': 104, '.': 24, 'm': 14, '_': 66, '(': 5, 'String': 106, 'As': 105, 'write': 103, '}': 91, 'NUM': 89, 'Of': 86, 'value': 85, ',': 68, 'STR': 67, 'Typing': 27, 'Default': 26, 'enable': 25, 'Mapper': 13, 'new': 16, '=': 15, '{': 10, 'Exception': 9, 'throws': 7, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 42, ';': 19, ')': 7, '(': 16, 'Cache': 10, 'get': 13, '{': 8}
{'}\n': 79, ';': 55, ')': 10, '(': 4, '.': 15, 'profiles': 12, 'remove': 16, '{': 11, 'Profile': 7, '': 6, 'final': 5, 'void': 1}
{'}\n': 230, ';': 74, ')': 12, '(': 5, '.': 43, 'if': 178, '': 14, 'get': 140, 'file': 110, '+': 137, 'STR': 136, '_': 37, 'THLException': 133, 'new': 103, 'throw': 130, '}': 121, 'bfdi': 59, '{': 21, 'Exception': 16, 'Interrupted': 19, ',': 17, 'Replicator': 15, 'throws': 13}
{'}\n': 17, ';': 16, ')': 5, 'Left': 14, 'm': 13, '(': 4, 'abs': 11, '.': 10, 'Math': 9, '': 8, 'return': 7, '{': 6, 'Absolute': 3, 'float': 1, 'public': 0}
{'}\n': 578, ')': 20, 'STR': 558, '_': 557, '(': 6, '': 15, '}': 325, ';': 37, 'return': 316, '{': 21, '<': 348, 'if': 296, '-': 308, '.': 74, 'n': 8, '=': 43, ']': 12, '[': 11, 'length': 75, 'alpha_extreme': 123, ',': 9, 'arraycopy': 101, 'System': 99, 'double': 10, 'new': 70, 'interval': 19, 'Box': 18, 'Bounding': 17, 'Hyper': 16, 'int': 7, 'private': 0}
{'}\n': 35, ';': 34, ')': 11, 'US': 31, '': 2, '.': 17, 'Locale': 28, '(': 6, 'Case': 25, 'Upper': 24, 'to': 23, 'Name': 10, 'alg': 9, 'get': 18, 'Map': 16, 'Oid': 15, 'alg2': 14, '{': 12, 'String': 3, 'OID': 5, 'map2': 4, 'static': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 17, ']': 15, 'NUM': 34, '_': 33, '[': 14, 'args': 16, '(': 11, 'Of': 29, 'value': 28, '.': 27, 'Double': 26, '': 1, 'Generator': 5, 'Uniform': 22, 'new': 20, 'return': 19, '{': 18, 'String': 13, 'construct': 10, '>': 9, '<': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 70, ';': 59, ')': 10, 'e': 9, '(': 5, 'Event': 4, 'Mouse': 3, 'process': 2, '.': 30, 'super': 61, '}': 60, 'MOUSE_': 41, '': 6, 'ID': 32, 'get': 31, '{': 11, 'void': 1, 'protected': 0}
{'}\n': 114, ';': 85, '_': 62, '(': 5, '': 76, '{': 18, 'else': 87, '}': 86, '.': 78, 'counter': 31, ')': 44, 'NUM': 63, 'if': 58, 'protected': 0}
{'}\n': 211, ';': 83, ')': 20, '(': 80, 'get': 186, 'return': 145, '.': 77, 'instance': 57, 'Instance': 61, '': 4, '=': 58, '{': 26, 'Exception': 25, 'throws': 21}
{'}\n': 40, ';': 39, ')': 19, '.': 33, 'holder': 15, '{': 20, 'position': 18, 'int': 17, ',': 16, '': 12, '(': 7, 'Holder': 6, 'View': 5, 'Bind': 3, 'on': 2, 'void': 1, 'public': 0}
{'}\n': 44, ';': 26, ')': 6, '(': 5, '}': 37, 'Line': 22, '{': 7, 'Selected': 15, '.': 13, 'if': 8, 'void': 1, 'private': 0}
{'}\n': 157, ';': 37, ')': 17, '(': 3, 'draw': 153, 'hs': 89, ',': 6, 'ws': 76, 'NUM': 25, '_': 24, '/': 136, '-': 134, 'ys': 67, 'xs': 58, 'Double': 131, '': 29, '.': 122, 'D': 128, 'Rectangle2': 127, 'new': 28, 'offscreen': 121, 'else': 120, 'y': 8, 'x': 5, 'pixel': 113, '<=': 104, '&&': 107, 'if': 19, 'Height': 16, 'half': 11, '*': 83, 'Y': 70, 'factor': 78, '=': 59, 'double': 4, 'Width': 12, 'X': 61, 'scale': 60, 'STR': 35, 'Exception': 32, 'Argument': 31, 'Illegal': 30, 'throw': 27, '<': 23, '{': 18, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 15, 'Split': 3, 'a': 12, ',': 23, '(': 5, '.': 18, 'splits': 17, '{': 16, 'Fragment': 11, '': 10, 'Element': 4, 'void': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 15, 'STR': 22, '_': 21, '+': 23, 'Id': 14, 'root': 13, '(': 5, 'append': 19, '.': 18, 'result': 9, '{': 16, 'String': 7, '': 6, ',': 10, 'Builder': 8, 'List': 4, 'Item': 3, 'start': 2, 'void': 1, 'private': 0}
{'}\n': 52, ';': 51, ')': 10, 'Records': 42, 'num': 3, '.': 35, 'return': 29, '{': 11, '(': 6, 'int': 2}
{'}\n': 33, '}': 32, ';': 31, ')': 9, '(': 4, '.': 14, '{': 10, 'NUM': 22, '_': 21, 'Count': 17, 'Click': 16, 'get': 15, 'e': 8, 'if': 11, 'Event': 7, 'Mouse': 6, '': 5, 'Clicked': 3, 'mouse': 2, 'void': 1, 'public': 0}
{'}\n': 164, ';': 49, ')': 48, '(': 9, 'Files': 160, 'Included': 159, 'get': 158, '.': 51, 'ds': 41, '': 2, 'new': 43, 'scan': 131, 'Excludes': 97, 'set': 52, 'Includes': 72, 'Scanner': 40, 'Directory': 39, '=': 42, 'final': 37, '{': 36, 'File': 12}
{'}\n': 20, ';': 19, ')': 6, '(': 5, 'size': 13, '.': 12, 'Widgets': 11, 'Selected': 10, 'm': 9, 'return': 8, '{': 7, 'public': 0}
{'}\n': 35, ';': 34, 'uri': 7, '{': 9, ')': 8, '': 1, '(': 4, 'public': 0}
{'}\n': 40, ';': 39, ')': 13, ',': 8, 'Name': 12, 'attribute': 11, '(': 4, 'Attribute': 26, 'get': 25, '.': 18, 'el': 7, 'Value': 21, 'to': 2, 'Caster': 17, '': 5, 'return': 15, '{': 14, 'String': 10, 'Element': 6, 'public': 0}
{'}\n': 128, ';': 104, ')': 62, 'Property': 7, '(': 17, '.': 97, '': 27, '=': 70, '{': 63, 'getter': 31, 'Name': 13}
{'}\n': 23, ';': 22, ')': 8, '(': 4, '.': 11, 'entry': 7, '{': 9, 'Entry': 6, '': 5, 'void': 1}
{'}\n': 14, ';': 13, 'SUCCESS': 12, '': 1, 'return': 10, ')': 8, '(': 7, 'execute': 6}
{'}\n': 77, ';': 76, ')': 16, 'STR': 56, '_': 55, '(': 5, '.': 52, 'endpoint': 38, '{': 17}
{'}\n': 174, ';': 49, ')': 22, ',': 9, 'URI': 8, 'algorithm': 7, '(': 4, 'put': 165, '.': 43, 'Hash': 115, '}': 100, 'Args': 134, 'ex': 133, 'STR': 88, '_': 87, 'Exception': 28, 'Registered': 27, 'Already': 26, 'Algorithm': 25, '': 5, 'new': 147, 'throw': 146, 'Class': 21, 'registered': 111, '{': 39, '=': 113, ']': 136, '[': 135, 'Object': 132, 'null': 128, '!=': 127, 'if': 50, 'get': 117, '>': 110, 'Spi': 109, 'Signature': 107, 'extends': 105, '?': 104, '<': 103, 'implementing': 20, '+': 89, 'FINE': 67, 'Level': 64, 'logging': 61, 'util': 59, 'java': 57, 'log': 52, 'Loggable': 55, 'is': 54, 'Permission': 46, 'Register': 45, 'check': 44, 'Utils': 42, 'Java': 41, 'XMLSignature': 37, 'Found': 33, 'Not': 32, 'throws': 23, 'String': 6, 'register': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 79, ';': 25, ')': 7, '(': 4, 'Settings': 73, '}': 40, 'e': 45, ',': 65, '.': 59, 'settings': 17, '+': 56, 'STR': 55, '_': 54, '': 1, '{': 27, 'catch': 41, 'Stream': 23, 'Input': 22, 'File': 32, 'new': 30, '=': 29, 'in': 24, 'try': 26}
{'}\n': 85, ';': 39, 'BOOL': 76, '_': 37, 'return': 74, '}': 78, '{': 17, ')': 16, 'c': 53, '(': 6, 'Char': 5, 'is': 25, 'if': 18, 'i': 35, 'At': 58, 'char': 52, '.': 24, 'input': 15, '=': 36, '++': 49, 'length': 44, '<': 41, 'NUM': 38, 'int': 34, 'for': 32, 'Empty': 26, 'Utils': 23, 'Text': 22, '': 9, '!': 20, 'Sequence': 14, 'Null': 11, 'Non': 10, '@': 8, 'final': 7, 'contains': 2, 'boolean': 1, 'public': 0}
{'}\n': 95, '}': 94, ';': 20, ')': 6, '(': 5, 'check': 2, 'next': 80, '.': 16, 'i': 12, 'String': 32, 'Segment': 31, '': 10, '=': 13, '{': 7, 'Next': 24, 'has': 23, 'iterator': 17, 'Strings': 15, 'seg': 14, 'Iterator': 11, 'for': 8, 'void': 1, 'private': 0}
{'}\n': 36, ';': 35, ')': 31, '': 2, '>': 4, 'T': 3, '<': 1, 'Operator': 7, 'Unary': 6, '(': 13, 'private': 0}
{'}\n': 262, ';': 179, ')': 26, 'Spec': 13, 'new': 62, '(': 159, 'add': 2, '.': 182, 'Specs': 181, 'spec': 164, '': 18, '=': 127, '{': 27, 'void': 1}
{'}\n': 136, ';': 27, ')': 13, '(': 9, 'String': 3, 'to': 131, '.': 20, 'out': 68, 'return': 128, '}': 50, 'section': 87, 'capitalize': 120, 'Util': 118, '': 2, 'append': 114, '{': 14, 'split': 55, ':': 88, 'for': 83, 'Builder': 67, 'new': 70, '=': 18, 'STR': 25, '_': 24, 'name': 12, ']': 54, '[': 53, 'Index': 17, 'dot': 16, ',': 45, 'NUM': 34, 'substring': 41, '>=': 32, 'if': 28, 'Of': 22, 'index': 21, 'int': 15, 'Name': 8, 'Java': 6, 'To': 5, 'convert': 4, 'static': 1, 'public': 0}
{'}\n': 94, '}': 65, ';': 92, ')': 14, '{': 41, 'e': 70, 'SQLException': 69, '': 4, '(': 3, 'catch': 66, 'sql': 59, 'SQL': 50, 'exec': 49, '.': 48, 'STR': 22, '_': 21, '=': 20, 'String': 5, 'Database': 12, 'SQLite': 11}
{'}\n': 39, ';': 38, ')': 8, '(': 5, 'get': 31, '.': 30, '{': 9, 'Done': 3}
{'}\n': 68, ';': 31, ')': 7, 'Editor': 12, 'migration': 13, '(': 6, 'add': 35, '.': 41, 'Listeners': 59, 'task': 58, 'STR': 55, '_': 54, ',': 25, 'index': 33, 'Text': 50, 'Page': 5, 'set': 48, 'Control': 43, 'get': 26, '=': 16, 'int': 32, 'Container': 27, 'Task': 24, 'Migration': 3, '': 9, 'new': 17, '{': 8, 'create': 2, 'void': 1, 'private': 0}
{'}\n': 50, ';': 22, ')': 8, '(': 4, '.': 29, 'length': 39, ',': 38, 'pos': 37, 'substring': 35, 'Value': 33, 'gser': 32, 'pattern': 7, '=': 27, '': 5, '}': 23, '_': 20, 'return': 19, '{': 9, 'if': 10, 'Pattern': 6, 'private': 0}
{'}\n': 209, ';': 59, ')': 56, '(': 3, '.': 35, ',': 150, '': 23, 'Insn': 37, 'visit': 36, 'mv': 34, 'NUM': 107, '_': 76, 'Int': 2, 'void': 0}
{'}\n': 101, ';': 100, 'STR': 46, '_': 45, '+': 49, 'return': 44, '{': 43, ')': 42, '(': 38, 'attributes': 35, 'String': 24, '': 23, 'public': 0}
{'}\n': 65, ';': 48, ')': 26, 'position': 5, '(': 3, 'Inserted': 59, 'Item': 58, 'notify': 57, 'item': 13, ',': 6, 'add': 2, '.': 41, 'items': 40, '{': 27, 'T': 12, '': 11, 'int': 4, 'void': 1, 'public': 0}
{'}\n': 162, ';': 80, 'String': 5, 'split': 7, 'return': 158, '}': 156, ')': 18, '(': 13, 'add': 141, '.': 105, '{': 19, '': 1, 'if': 81, '>': 6, '<': 3, 'List': 2, 'Array': 74, 'new': 72, '=': 71, 'input': 16, 'Delimiter': 11, 'Default': 10, 'With': 9, 'public': 0}
{'}\n': 130, ';': 19, 'read': 3, 'return': 127, ')': 7, '(': 6, 'Token': 123, 'submit': 122, '}': 121, 'n': 102, ',': 99, 'token': 23, 'buffer': 15, 'Line': 96, 'process': 95, 'BOOL': 42, '_': 34, '=': 16, 'my': 17, '.': 30, 'Reader': 53, 'while': 47, 'boolean': 2, 'NUM': 35, 'Length': 32, 'set': 31, 'Buffer': 18, 'Text': 26, 'Builder': 22, 'String': 21, '': 9, ']': 14, '[': 13, 'char': 12, '{': 11, 'IOException': 10, 'throws': 8, 'Blocking': 5, 'Available': 4, 'final': 1, 'protected': 0}
{'}\n': 156, ';': 121, ')': 76, '(': 90, 'obligation': 119, '.': 107, 'Obligation': 7, '': 6, ',': 31, '{': 77, 'public': 0}
{'}\n': 72, ';': 71, ')': 40, 'Len': 39, 'Block': 38, 'data': 37, ',': 19, '(': 8, 'position': 63, '.': 62, 'Name': 18, 'type': 27, 'class': 22, 'pretty': 17, 'blob': 13, 'Content': 2, 'return': 42, '{': 41, 'int': 36, 'String': 16, '': 1, 'Impl': 3, 'Blob': 11, 'Ole': 10}
{'}\n': 253, '}': 248, ';': 51, 'STR': 245, '_': 49, '{': 83, ')': 42, 'NUM': 50, 'i': 47, '(': 4, 'length': 78, '.': 77, '=': 48, ']': 15, '[': 14, 'n': 71, '++': 81, '<': 53, 'for': 45, 'String': 23, '': 22, 'int': 13}
{'}\n': 77, ';': 76, 'return': 74, '}': 72, '{': 48, ')': 32, '.': 41, 'str': 38, '(': 9, 'if': 49, ':': 39, 'String': 37, '': 10, 'for': 34, 'results': 21, '>': 20}
{'}\n': 72, ';': 32, 'l': 24, ')': 16, '(': 6, '.': 27, '{': 17, 'if': 33, '=': 25, '': 1, 'value': 15, 'String': 14}
{'}\n': 43, ';': 21, 'this': 41, 'return': 40, ')': 12, '(': 4, 'append': 16, 'STR': 19, '_': 18, '.': 15, 'statement': 14, '{': 13, 'Object': 6, '': 1, 'Statement': 2, 'public': 0}
{'}\n': 156, ';': 102, ')': 58, '(': 24, '.': 96, 'Buffer': 23, '': 20, '=': 80, 'byte': 67, 'int': 33, 'final': 32, ',': 41, 'public': 0}
{'}\n': 168, ';': 59, 'return': 165, '}': 102, '.': 57, 'gts': 18, ')': 19, '{': 20, 'else': 103, 'NUM': 52, '_': 51, '(': 13, '': 14, '=': 67, 'Serie': 17, 'Time': 16, 'Geo': 15, 'static': 1, 'public': 0}
{'}\n': 42, ';': 38, 'return': 39, ')': 11, 'field': 10, '(': 7, '.': 33, '': 1, '{': 12, 'null': 17, 'fields': 15, 'if': 13, 'String': 9}
{'}\n': 66, ';': 65, ')': 53, '(': 20, 'then': 58, '.': 57, 'return': 55, '{': 54, '>': 11, '': 9, '<': 2, 'Stage': 14, 'Completion': 13, 'static': 1, 'public': 0}
{'}\n': 17, 'Exception': 12, 'Replicator': 11, '': 10, 'throws': 9, ')': 8, '(': 7}
{'}\n': 346, ';': 63, ')': 8, '(': 7, 'signum': 341, '.': 261, 'result': 257, ',': 20, 'NUM': 19, '_': 18, 'STR': 334, 'Equals': 331, 'assert': 313, '}': 62, ']': 14, 'i': 297, '[': 13, 'Bytes': 12, 'r': 149, '==': 321, 'res': 269, 'True': 314, '{': 9, '++': 310, 'length': 280, '<': 303, '=': 15, 'int': 133, 'for': 294, 'Array': 290, 'Byte': 289, 'to': 288, 'byte': 10, 'new': 224, 'Number': 222, 'b': 65, 'and': 262, 'a': 11, 'Integer': 220, 'Big': 219, '': 218, 'Sign': 135, '-': 17, 'Shorter': 6, 'First': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 66, ';': 23, 'api': 26, '=': 21, '.': 19, 'this': 18, '{': 17, ')': 16, '': 1, ',': 10, '(': 5, 'Stream': 2, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, '(': 14, '.': 11, '': 1, 'return': 8, '{': 7, 'Sentence': 2, 'public': 0}
{'}\n': 18, ';': 17, ')': 5, 'SUFFIX_': 14, '': 13, '(': 4, 'contains': 11, '.': 10, 'String': 9, 'type': 8, 'return': 7, '{': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 20, 'STR': 27, '_': 26, '(': 5, 'append': 2, '.': 23, 'sb': 9, '{': 21, 'Width': 19, 'field': 14, 'int': 17, ',': 10, 'Type': 4, 'Field': 12, '': 6, 'Builder': 8, 'String': 7, 'void': 1, 'protected': 0}
{'}\n': 194, ';': 54, 'tokenized': 47, 'return': 191, '}': 152, ')': 26, '(': 6, 'String': 5, 'to': 137, '.': 59, 'buf': 67, 'Element': 133, 'add': 132, '{': 27, 'NUM': 82, '_': 81, '>': 125, 'length': 60, 'if': 103, 'current': 93, 'append': 158, 'else': 154, 'Builder': 66, '': 2, 'new': 49, '=': 48, 'separator': 18, 'iter': 79, 'At': 98, 'char': 92, 'source': 9, '++': 89, 'len': 56, '<': 85, 'int': 55, 'for': 76, 'Vector': 3, ',': 10, 'tokenize': 4, 'static': 1, 'public': 0}
{'}\n': 224, '}': 190, ';': 28, ')': 10, '(': 4, 'close': 219, '.': 22, 'cursor': 31, '{': 14, 'finally': 215, 'id': 86, '+': 208, 'STR': 207, '_': 69, ',': 43, 'TAG': 204, '': 5, 'd': 201, 'Log': 199, 'DEBUG': 196, 'if': 151, 'else': 191, 'data': 9, 'Favorite': 182, 'pack': 181, 'key': 115, 'Backup': 6, 'To': 65, 'Row': 175, 'write': 174, 'Time': 101, 'Restore': 170, 'Last': 168, 'm': 20, '>=': 166, 'update': 100, '||': 163, 'Key': 114, 'backup': 2, 'contains': 158, 'Keys': 130, 'Existing': 155, '!': 153, '=': 19, 'String': 139, 'final': 84, 'add': 132, 'FAVORITE': 124, 'get': 23, 'MODIFIED': 110, 'ID_': 94, 'Long': 91, 'long': 85, 'INDEX': 95, 'Next': 79, 'move': 64, 'while': 73, 'NUM': 70, '-': 68, 'Position': 66, 'try': 60, 'null': 55, 'Arg': 51, 'Selection': 50, 'User': 49, 'PROJECTION': 46, 'FAVORITE_': 45, 'URI': 42, 'CONTENT_': 41, 'Favorites': 3, 'query': 35, 'cr': 18, 'Cursor': 30, 'Resolver': 17, 'Content': 16, 'Context': 21, 'IOException': 13, 'throws': 11, 'Output': 8, 'Data': 7, 'void': 1, 'private': 0}
{'}\n': 51, ';': 50, ')': 14, 'Time': 23, '-': 26, '(': 7, 'nano': 22, '.': 21, 'System': 20, '': 19, '{': 15, 'void': 1, 'public': 0}
{'}\n': 109, ';': 39, ')': 19, 'field': 92, '(': 10, 'add': 81, '.': 80, 'Fields': 55, '}': 40, 'STR': 37, '_': 36, 'Exception': 34, 'Pointer': 33, 'Null': 32, '': 31, 'new': 30, 'throw': 29, '{': 28, 'null': 26, '==': 25, 'if': 21, 'public': 0}
{'}\n': 6, '{': 5, ')': 4, '(': 3, 'Store': 1, 'Key': 0}
{'}\n': 58, ';': 41, ')': 23, '(': 55, '.': 50, '=': 31, 'master': 15, '{': 24, '>': 14, '': 9, '<': 11, 'List': 10}
{'}\n': 58, ';': 41, ')': 15, 'value': 46, 'NUM': 40, '_': 39, '(': 4, '.': 32, '{': 10, 'if': 11, 'public': 0}
{'}\n': 195, ';': 49, 'return': 180, '}': 179, '(': 9, 'add': 162, '.': 153, ')': 105, '{': 124, 'null': 112, '!=': 111, 'if': 107, 'String': 11, '': 2, 'st': 87, 'new': 59, '=': 31, 'Tokenizer': 35, 'delim': 20, ',': 13, 'static': 1, 'public': 0}
{'}\n': 151, ';': 150, ')': 107, 'STR': 116, '_': 115, '(': 104, 'JLabel': 113, '': 112, 'new': 111, 'add': 92, 'void': 1}
{'}\n': 24, ';': 23, ')': 8, '(': 7, 'Visible': 19, '.': 17, 'frame': 12, 'null': 14, '!=': 13, '{': 9, 'public': 3}
{'}\n': 43, ';': 42, ')': 13, '(': 8, 'Properties': 38, 'Mosaic': 3, 'create': 5, ',': 21, 'STR': 30, '_': 29, 'Id': 27, '.': 24, 'Utils': 23, '': 2, 'creator': 12, 'Definition': 4, 'return': 15, '{': 14, 'Account': 11, 'final': 9, 'static': 1, 'public': 0}
{'}\n': 141, ';': 84, ')': 22, ',': 9, '(': 4, '.': 79, 'final': 58, 'STR': 56, '_': 55, '': 5, 'Sql': 30, '{': 23}
{'}\n': 118, ';': 41, 'context': 45, '}': 74, ')': 20, '(': 15, 'Message': 94, 'get': 50, '.': 49, 'gse': 81, 'Exception': 80, 'State': 88, 'Illegal': 87, '': 10, 'new': 66, 'throw': 84, '{': 31, 'Security': 79, 'General': 78, 'catch': 75, 'Random': 69, 'Secure': 68, ',': 62, 'Managers': 64, '_trust': 63, 'null': 61, 'init': 59, 'STR': 54, '_': 53, 'Instance': 51, 'SSLContext': 11, '=': 46, 'try': 43, 'static': 1, 'private': 0}
{'}\n': 36, ';': 35, ')': 12, 'component': 11, '(': 8, '{': 13, '': 9}
{'}\n': 20, ';': 19, ')': 6, 'Listener': 13, 'cb': 8, '(': 5, 'add': 2, '.': 10}
{'}\n': 175, ';': 150, ')': 26, 'thread': 24, '(': 6, 'call': 96, '>': 15, '?': 13, '<': 12, 'Callable': 11, '': 10, '=': 60, '{': 30, 'Exception': 29, 'throws': 27, ',': 17, 'Threaded': 5, 'Multi': 4, 'run': 3, 'long': 2, 'static': 1, 'public': 0}
{'}\n': 84, ';': 45, 'Buff': 38, 'm': 10, 'buff': 30, '=': 33, ')': 6, 'length': 40, '.': 39, ',': 53, 'NUM': 55, '_': 54, '(': 3, 'arraycopy': 49, 'System': 47, '': 46, ']': 32, '[': 31, 'char': 29, 'new': 34, '{': 7, 'void': 1, 'private': 0}
{'}\n': 185, ';': 182, ')': 39, '(': 27, '': 13, '.': 60, 'sm': 103, 'null': 87, '!=': 86, 'if': 83, 'get': 61, '=': 47, '{': 40}
{'}\n': 22, ';': 21, ')': 7, '(': 3, '{': 8, 'pt': 6, 'Coordinate': 5, '': 1, 'Node': 2, 'public': 0}
{'}\n': 109, ';': 107, ')': 74, '(': 73, 'Millis': 103, 'Time': 102, 'current': 101, '.': 100, 'System': 99, '': 98, '{': 87, 'time': 33, 'long': 15, 'public': 0}
{'}\n': 105, ';': 73, ')': 72, '(': 60, 'run': 100, '.': 69, 'Parameters': 93, 'add': 92, '_': 79, '': 5, 'Command': 68, 'Git': 50, ',': 9, 'root': 64, 'Handler': 52, 'Simple': 51, 'new': 55, '=': 54, '{': 48, 'Vcs': 36, 'String': 31, 'File': 15, 'void': 1, 'public': 0}
{'}\n': 227, '}': 226, ';': 32, 'b': 139, '=': 29, 'a': 27, ')': 23, '(': 61, 'if': 89, '++': 191, 'STR': 101, '_': 74, '==': 99, 'At': 172, 'char': 171, '.': 34, '||': 102, 'Digit': 166, 'Or': 165, 'Letter': 164, 'is': 163, 'Character': 161, '': 1, 'length': 84, '<': 80, 'while': 77, 'NUM': 75, '+': 142, '{': 24, 'int': 71, 'public': 0}
{'}\n': 81, ';': 24, ')': 5, '': 20, '(': 4, '.': 17, 'Path': 16, '=': 32, 'Tree': 3, '}': 27, 'return': 25, 'parent': 11, '{': 14, 'null': 9, 'void': 1}
{'}\n': 12, ';': 11, 'return': 7, '{': 6, ')': 5, '(': 4, 'Read': 3, 'can': 2, 'boolean': 1, 'public': 0}
{'}\n': 61, ';': 22, 'removed': 13, ')': 8, 'position': 7, '(': 4, 'Removed': 26, '.': 17, '=': 14, 'T': 12, '': 11, '{': 9, 'int': 6}
{'}\n': 91, ';': 90, ')': 27, '(': 25, 'sqrt': 41, '.': 40, 'Math': 39, '': 38, 'return': 29, 'Deviation': 19, 'standard': 18, 'double': 17, 'public': 0}
{'}\n': 180, '}': 122, ';': 21, ')': 12, 'r': 86, '(': 4, 'Register': 79, '.': 26, '=': 19, '': 5, '{': 13, 'Elements': 57, 'More': 56, 'has': 55, '>': 43, '<': 40, 'Enumeration': 39, 'for': 14, 'Operand': 42, 'if': 74, 'Element': 70, 'next': 27, 'get': 48, ',': 8, 'Instruction': 6, 'void': 1, 'private': 0}
{'}\n': 53, ';': 29, ')': 10, 'list': 19, ',': 49, 'CHANGED': 48, '': 6, '.': 31, 'Event': 43, 'Annotation': 3, '(': 5, 'Changed': 39, 'Annotations': 38, 'fire': 2, 'anno': 9, 'add': 32, '>': 18, '<': 14, 'List': 13, 'Linked': 23, 'new': 21, '=': 20, 'Workflow': 7, '{': 11, 'void': 1, 'public': 0}
{'}\n': 104, ';': 22, 'BOOL': 45, '_': 44, 'return': 43, '}': 88, 'DELAY': 78, 'MIN_': 96, '': 14, '=': 13, 'Ms': 25, 'Delay': 40, 'm': 29, '{': 10, 'else': 89, ')': 9, 'NUM': 60, '*': 61, ',': 79, 'MAX_': 77, '(': 8, 'min': 74, '.': 17, 'Math': 72, '<': 38, 'delta': 24, 'if': 34, 'now': 12, 'Request': 31, 'Last': 30, '-': 28, 'long': 11, 'Realtime': 19, 'elapsed': 18, 'Clock': 16, 'System': 15, 'Allowed': 7, 'Return': 5, 'And': 4, 'Stats': 3, 'update': 2, 'boolean': 1, 'public': 0}
{'}\n': 119, ';': 60, 'return': 115, ')': 12, 'S': 42, '': 14, ',': 76, 'A': 24, 'N': 78, 'digest': 75, '(': 6, 'calculate': 72, '.': 22, 'Util': 70, 'SRP6': 69, '=': 67, '}': 61, 'STR': 55, '_': 54, '+': 56, 'Exception': 16, 'Crypto': 15, 'new': 49, 'throw': 48, '{': 17, 'null': 26, '==': 25, 'this': 21, '||': 28, 'if': 18, 'throws': 13, 'Message': 5, 'Evidence': 4, 'public': 0}
{'}\n': 89, ';': 39, ')': 8, 'STR': 86, '_': 15, '(': 4, '}': 42, 'return': 40, 'handle': 2, '.': 25, 'Destination': 66, 'rtf': 65, '{': 9, 'null': 68, '!=': 67, 'if': 10, '=': 57, 'else': 43, 'text': 24, 'NUM': 16, '>': 14, 'Characters': 13, 'skipping': 12, 'String': 6, '': 5, 'public': 0}
{'}\n': 92, ';': 40, 'modified': 90, '}': 86, ')': 10, '(': 4, '.': 49, 'if': 56, '{': 11, 'null': 60, '!=': 59}
{'}\n': 296, ';': 289, 'return': 293, ')': 53, 'attrib': 45, '(': 10, '.': 114, '': 11, '=': 62, '{': 54, 'String': 12, 'Attribute': 9, 'static': 4, 'private': 3}
{'}\n': 144, ';': 118, ')': 68, '(': 47, '.': 129, '}': 119, '': 4, 'new': 89, 'throw': 88, '{': 87, 'record': 57, 'Builder': 16, 'public': 0}
{'}\n': 40, ';': 39, ')': 15, 'args': 14, '(': 18, 'proxy': 19, 'return': 17, '{': 16, ']': 13, '[': 12, 'Object': 11, '': 6, ',': 9, 'method': 8, 'Method': 7}
{'}\n': 238, ';': 71, ')': 5, '(': 4, 'signum': 233, '.': 153, 'result': 149, ',': 29, 'NUM': 16, '_': 15, 'STR': 226, 'Equals': 223, 'assert': 205, '}': 70, ']': 11, 'i': 189, '[': 10, 'Bytes': 9, 'r': 87, '==': 213, 'res': 161, 'True': 206, '{': 6, '++': 202, 'length': 172, '<': 195, '=': 12, 'int': 72, 'for': 186, 'Array': 182, 'Byte': 181, 'to': 180, 'byte': 7, 'new': 116, 'Number': 114, 'b': 80, 'a': 8, 'Integer': 112, 'Big': 111, '': 110, 'Sign': 74, '-': 30, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 134, ';': 30, 'this': 132, ')': 11, 'Builder': 8, '': 1, '.': 6, 'Metadata': 2, '(': 10, 'return': 121, 'Properties': 103, '_unset': 102, '_defaults': 17, 'All': 113, 'add': 112, 'clear': 9, '=': 18, 'Type': 38, 'type': 31, 'new': 19, 'Metadata_': 14, '{': 12, 'public': 0}
{'}\n': 96, ';': 30, 'result': 70, 'return': 93, ')': 10, 'z': 51, '*': 81, '+': 83, 'y': 32, 'x': 13, '(': 4, 'sqrt': 78, '.': 16, 'Math': 76, '': 75, 'float': 2, '=': 14, ']': 21, 'NUM': 20, '_': 19, '[': 18, 'm': 17, 'b': 9, '-': 22, '{': 11, 'vec3': 8, 'public': 0}
{'}\n': 92, '}': 91, ';': 48, ')': 18, 'STR': 86, '_': 85, '(': 5, '.': 50, 'log': 81, '{': 19, 'backup': 67, '': 7, '=': 42, 'File': 8, 'Backup': 3, 'void': 1, 'public': 0}
{'}\n': 218, ';': 20, ')': 10, '(': 6, 'String': 2, 'to': 213, '.': 16, 'sb': 24, 'return': 204, '}': 188, '{': 11, 'else': 189, 'c': 45, 'char': 49, 'append': 122, 'STR': 66, '_': 33, '==': 71, '||': 68, 'if': 55, 'i': 31, 'At': 50, 's': 47, '=': 14, 'len': 38, '<': 37, 'NUM': 34, 'int': 30, 'for': 28, 'Builder': 23, '': 1, 'static': 0}
{'}\n': 72, ';': 54, ')': 53, 'expected': 51, ',': 67, 'received': 41, '(': 5, '': 6, 'String': 17, 'assert': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'size': 2, '.': 8, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 36, ')': 18, '(': 14, '.': 28, 'return': 20, '{': 19, 'Case': 6, 'Upper': 5, 'to': 4, 'String': 3, '': 2, 'public': 0}
{'}\n': 155, ';': 32, ')': 13, '(': 30, '.': 112, '}': 144, ',': 134, '': 2, 'new': 24, '{': 107, '=': 90, '>': 88, 'Node': 87, '<': 84, 'o': 47, 'public': 0}
{'}\n': 123, '}': 60, ';': 59, ')': 16, 'STR': 57, '_': 56, '(': 19, 'Exception': 54, 'Illegal': 52, '': 7, 'new': 50, 'throw': 49, '{': 48, '!=': 67, 'if': 18, 'lock': 20, 'Lock': 8}
{'}\n': 74, ';': 73, 'NUM': 61, '_': 60, ')': 46, '(': 10, 'length': 56, '.': 55, 'text': 38, '{': 47, 'String': 12, '': 11, 'private': 0}
{'}\n': 44, ';': 43, ')': 22, '(': 33, 'Item': 4, 'Drop': 3, '': 30, 'Items': 25, 'drops': 24, '{': 23, 'void': 1, 'public': 0}
{'}\n': 174, '}': 151, ';': 53, 'return': 142, '{': 42, ')': 41, 'ex': 158, 'Exception': 157, 'Result': 156, 'No': 155, '': 3, '(': 19, 'catch': 152, 'get': 145, '.': 63, 'query': 91, 'BOOL': 139, '_': 50, ',': 24, 'STR': 51, 'Parameter': 122, 'set': 107, 'try': 117, 'Hint': 108, 'type': 40, 'Query': 86, 'Named': 96, 'create': 95, 'em': 23, '=': 92, '>': 8, 'E': 4, '<': 2, 'Typed': 85, 'null': 48, '!=': 47, 'Argument': 44, 'require': 43, '&&': 60, 'Class': 35, 'Integer': 30, 'Big': 29, 'Manager': 22, 'Entity': 21, 'Primary': 17, 'By': 16, 'find': 15, 'Identifiable': 7, 'extends': 5, 'static': 1, 'public': 0}
{'}\n': 67, ';': 66, '(': 13, ')': 19, 'Code': 29, 'hash': 10, '.': 27, '=': 24, 'h': 23, '{': 20, 'int': 7}
{'}\n': 181, ';': 48, 'NUM': 32, '_': 31, '==': 30, ')': 19, '(': 4, '.': 23, 'pub': 18, 'put': 128, 'Buff': 53, 'byte': 5, 'signature': 13, 'data': 8, 'rewind': 121, '}': 117, 'set': 111, 'ECDSABuffer': 56, 'native': 55, 'Order': 100, 'Byte': 50, '': 21, 'order': 96, 'Direct': 78, 'allocate': 77, 'Buffer': 51, '=': 54, '{': 20, 'null': 67, 'if': 62, 'get': 58, '<=': 37, 'length': 29, '&&': 33, 'Argument': 25, 'check': 24, 'Preconditions': 22, ']': 7, '[': 6, ',': 9, 'verify': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 44, ';': 43, ')': 28, 'actual': 27, ',': 23, 'expected': 22, 'STR': 37, '_': 36, '(': 16, 'Order': 15, 'Any': 14, 'Same': 12, 'assert': 11, '{': 29, '': 18, 'final': 17, ']': 21, '[': 20, 'void': 10, 'public': 9, 'static': 8}
{'}\n': 106, ';': 28, 'Percentage': 24, 'NUM': 27, '_': 26, '=': 25, '(': 7, 'float': 16, '{': 20, ')': 19}
{'}\n': 58, ';': 57, 'hostname': 21, 'return': 55, 'STR': 27, '_': 26, '{': 18, ')': 17, 'String': 3, '': 2, '(': 7, 'static': 1}
{'}\n': 86, '}': 83, ';': 65, '{': 37, ')': 52, 'NUM': 75, '_': 74, '(': 16, '.': 48, 'line': 45, 'if': 66, 'trim': 62, '=': 46, 'null': 55, '!=': 54, 'Line': 50, 'read': 49, 'br': 20, 'String': 39, '': 6, 'Reader': 19, 'Buffered': 18}
{'}\n': 111, ';': 50, '}': 106, ')': 9, '(': 5, '_': 34, '=': 87, 'STR': 35, 'NUM': 39, '.': 14, 'Of': 32, 'index': 31, 'expression': 8, '{': 10, 'if': 11, 'String': 3, '': 2, 'static': 1, 'private': 0}
{'}\n': 62, ';': 50, 'NUM': 18, '_': 17, '[': 23, 'msg': 14, ')': 8, ']': 19, '(': 35, '.': 32, '==': 20, '=': 13, 'int': 1, '{': 9, 'protected': 0}
{'}\n': 112, ';': 24, ')': 10, '(': 6, 'String': 3, 'to': 4, '.': 66, 'sb': 16, 'return': 104, 'NUM': 36, '_': 35, '==': 100, 't': 26, 'assert': 98, '}': 97, '<<': 93, '=': 17, 'STR': 70, 'append': 67, '{': 11, 'if': 47, '++': 44, 'i': 33, '<': 39, 'int': 32, 'for': 30, 'x': 9, 'long': 8, 'Builder': 15, '': 2, 'new': 18, 'final': 7, 'Bits': 5, 'static': 1, 'public': 0}
{'}\n': 90, ';': 31, ')': 13, '(': 4, 'STR': 29, '_': 28, '': 1, 'new': 22, 'Exception': 26, 'Argument': 25, 'Illegal': 24, 'throw': 21, '==': 18, 'null': 19, 'content': 17, 'if': 15, '{': 14, 'String': 11, ',': 9, 'public': 0}
{'}\n': 182, ';': 100, ')': 59, '(': 14, '=': 169, 'node': 84, '.': 75, '{': 60, 'ID': 46, 'int': 30, '': 9, 'public': 0}
{'}\n': 113, ';': 94, ')': 8, '(': 17, '.': 34, ',': 86, 'String': 69, '': 68, 'translation': 59, 'get': 35, 'Translation': 25, '{': 9, 'void': 1, 'private': 0}
{'}\n': 81, ';': 70, ')': 10, 'BOOL': 78, '_': 77, '(': 5, 'set': 22, 'CURSOR': 38, '': 26, '.': 28, 'Cursor': 24, 'Predefined': 30, 'get': 29, '{': 11, 'public': 0}
{'}\n': 31, ';': 21, ')': 10, 'Event': 3, 'new': 8, '(': 4, 'add': 2, '.': 14, 'Set': 23, 'sorted': 22, 'Serial': 16, 'set': 15, '{': 11, 'Sim': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 364, ';': 12, 'result': 214, 'return': 36, 'STR': 38, '_': 37, '+=': 178, '}': 208, '+': 45, ']': 329, 'j': 25, '[': 327, 'i': 22, 'Wins': 32, 'm_': 29, 'Sig': 31, 'Non': 30, 'NUM': 44, ')': 7, '==': 33, '(': 6, 'if': 27, 'continue': 165, 'Hidden': 160, 'Col': 61, 'get': 60, '{': 8, '++': 153, 'Count': 62, '<': 145, '=': 42, 'for': 137, 'titles': 177, 'Title': 193, 'Summary': 5, 'log': 58, '.': 48, 'Math': 47, '': 1, '/': 66, 'Row': 87, 'int': 21, ',': 76, 'max': 49, 'Length': 41, 'resultset': 40, 'null': 34, 'String': 2, 'to': 3, 'public': 0}
{'}\n': 111, ';': 48, 'temp': 27, 'return': 107, ')': 11, '(': 7, '.': 54, '!': 51, 'if': 49, 'STR': 41, '_': 40, 'File': 3, '': 2, '=': 29, '{': 15, 'IOException': 14, 'throws': 12, 'Temp': 5, 'static': 1, 'public': 0}
{'}\n': 63, ';': 34, ')': 17, 'Text': 21, 'legend': 22, ',': 6, 'color': 30, '(': 3, '': 10, 'new': 25, 'add': 37, '.': 36, 'Elements': 44, 'plot': 43, 'comments': 35, 'Legend': 20, '=': 24, '{': 18, 'double': 4, 'void': 1, 'public': 0}
{'}\n': 106, ';': 28, 'this': 104, 'return': 72, ')': 6, '(': 5, 'repaint': 99, '.': 49, 'i_brd': 97, 'filter': 93, 'WHOLE_': 89, 'TO_': 88, 'EXTEND_': 87, '': 1, 'Scope': 84, 'Logfile': 83, 'actlog_start_scope': 80, '=': 16, 'items_list': 36, 'return_state': 73, 'Empty': 67, 'is': 66, 'if': 39, '}': 60, 'curr_item': 34, 'All': 51, 'add': 50, '{': 7, 'Connectable': 45, 'Brd': 12, 'instanceof': 42, ':': 35, 'Item': 13, 'for': 29, '>': 14, '<': 10, 'Set': 9, 'Tree': 19, 'new': 17, 'Interactive': 3, 'State': 2, 'public': 0}
{'}\n': 247, ';': 245, ')': 29, '(': 7, 'collator': 14, 'Collator': 12, '': 2, '=': 62, '.': 39, '{': 30, 'public': 0}
{'}\n': 78, ';': 29, ')': 15, 'Property': 57, 'set': 70, 'get': 56, 'String': 52, '': 6, '.': 38, 'props': 37, '(': 27, 'Properties': 21, 'new': 24, '=': 23, '{': 19}
{'}\n': 100, '}': 95, ';': 93, ')': 5, '(': 4, '.': 49, 'Conn': 13, 'STR': 37, '_': 36, 'Statement': 51, 'try': 41, 'Connection': 11, 'get': 19, '=': 14, '': 7, '{': 9, 'throws': 6}
{'}\n': 222, ';': 46, ')': 26, 'task': 10, '(': 7, 'save': 217, '.': 59, 'Repository': 58, '}': 158, 'e': 164, 'Exception': 163, 'Runtime': 170, '': 1, 'new': 34, 'throw': 167, '{': 27, 'catch': 160, 'List': 29, 'Project': 32, ',': 11, 'Name': 25, 'field': 24, 'Property': 95, 'set': 183, 'Utils': 96, 'try': 90, 'projects': 53, 'get': 98, '>': 18, '<': 14, 'Iterable': 13, '=': 37, 'null': 66, '!=': 106, 'if': 92, 'Add': 55, 'To': 54, 'Ids': 20, 'project': 19, 'All': 61, 'find': 60, 'Linked': 40, 'String': 23, 'Id': 17, 'Object': 16, 'Task': 9, 'Relations': 6, 'add': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 336, ';': 290, '}': 291, 'BOOL': 239, '_': 238, '{': 20, ')': 19, '==': 134, '(': 5, 'get': 123, '.': 122, 'if': 104, 'switches': 88, ':': 87, 'Switch': 51, 'Switches': 45, '': 37}
{'}\n': 40, '}': 20, '{': 9, ')': 8, 'e': 27, 'Exception': 26, 'Interrupted': 25, '': 12, '(': 4, 'catch': 21, ';': 19, 'millis': 7, 'sleep': 2, '.': 14, 'Thread': 13, 'try': 10, 'long': 6, 'void': 1, 'public': 0}
{'}\n': 64, '}': 63, ')': 13, 'STR': 20, '_': 19, '(': 8, '': 10, 'new': 51, '.': 16, 'btree': 12, 'NUM': 29, '<': 32, ';': 22, '=': 27}
{'}\n': 53, ';': 52, '/': 49, ')': 22, 'd': 19, '*': 37, 'NUM': 34, '_': 33, '(': 26, '{': 23, 'double': 10, 'private': 0}
{'}\n': 493, '}': 271, ';': 270, ')': 12, '(': 7, '.': 48, 'e': 11, '': 8, 'Y': 407, 'get': 73, 'X': 394, '{': 13, 'if': 24, 'Mouse': 9, 'MASK': 84, 'Event': 10, 'Input': 156, '&': 77, 'Modifiers': 74, '_': 63, 'mouse': 5, 'void': 4, 'public': 3}
{'}\n': 97, '}': 92, ';': 91, ')': 28, '(': 47, '.': 71, '': 12, 'Value': 62, 'double': 61, ',': 53, 'String': 13, 'static': 1, 'private': 0}
{'}\n': 122, ';': 54, 'length': 50, ')': 35, ',': 91, 'bytes': 26, '(': 56, 'arraycopy': 88, '.': 41, 'System': 86, '': 10, 'if': 55, ']': 25, '[': 24, 'byte': 23, 'public': 0}
{'}\n': 21, ';': 20, ')': 11, 'listener': 10, '(': 5, 'Element': 16, '.': 14, 'listeners': 13, '{': 12, 'Listener': 4, 'Event': 8, 'Rtcp': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 70, ';': 28, 'Data': 34, 'new': 33, '=': 35, 'data': 18, ')': 14, 'length': 20, '.': 19, ',': 50, 'NUM': 52, '_': 51, '(': 9, 'arraycopy': 47, 'System': 45, '': 1, ']': 32, 'Columns': 8, 'Of': 7, 'number': 11, '[': 31, '}': 29, 'return': 27, '{': 15, '>=': 21, 'if': 16, 'int': 10, 'Number': 6, 'ensure': 5, 'void': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 92, ';': 89, ')': 73, 'e': 72, '(': 60, '{': 82, 'SAXException': 79, '': 61, 'Exception': 70, 'SAXParse': 62, 'void': 4, 'public': 3}
{'}\n': 70, ';': 38, ')': 37, '(': 4, '=': 57, '.': 27, '': 1, 'STR': 36, '_': 35, ',': 34, 'Provider': 10, 'Null': 30, 'Not': 29, 'check': 28, 'Preconditions': 26, 'final': 5, 'public': 0}
{'}\n': 120, '}': 76, ';': 43, ')': 20, '(': 6, 'close': 67, '.': 15, 'Stream': 26, 'i': 86, '{': 11, 'null': 74, '=': 73, 'STR': 19, '_': 18, 'equals': 16, 'access': 14, 'if': 12, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 22, ';': 21, ')': 9, '(': 8, 'Name': 7, 'file': 6, '.': 15, '{': 10, 'String': 5, '': 1}
{'}\n': 76, '}': 57, ';': 56, ')': 18, 'Triples': 10, 'n': 9, '+': 69, 'STR': 35, '_': 34, '(': 6, 'Exception': 23, 'Argument': 22, 'Illegal': 21, '': 2, 'new': 61, 'throw': 60, '{': 24, 'else': 58, '.': 30, 'BNode': 44, 'Factory': 15, 'value': 16, 'return': 39, 'With': 32, 'starts': 31, 'if': 25, 'throws': 19, 'Value': 14, ',': 12, 'String': 8, 'parse': 4, 'static': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 5, '(': 4, 'Elements': 12, 'All': 11, 'remove': 10, '.': 9, 'Rolls': 8, '{': 6, 'reset': 2, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 9, 'array': 8, '(': 4, 'sort': 3, '.': 15, 'Quicksort': 14, 'Pivot': 13, 'Dual': 12, '': 11, '{': 10, ']': 7, '[': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 7, '(': 4, 'remove': 31, '.': 30, '{': 8, 'cache': 11, 'id': 6, 'int': 5, 'void': 1}
{'}\n': 113, ';': 32, ')': 13, 'EXACTLY': 90, '': 6, '.': 26, 'Spec': 71, 'Measure': 70, ',': 9, 'Height': 102, '(': 5, 'make': 73, 'Width': 81, 'measure': 67, 'view': 8, 'NUM': 62, '_': 61, 'new': 34, 'max': 56, 'Math': 54, '=': 19, 'Margin': 43, 'lp': 18, '-': 39, 'Size': 12, 'cross': 11, 'int': 10, 'Params': 17, 'Layout': 16, 'get': 27, '{': 14, 'View': 3, 'stretch': 2, 'void': 1, 'private': 0}
{'}\n': 184, ';': 143, ')': 15, '(': 9, 'STR': 36, '_': 35, '': 2, '.': 67, 'addr': 38, 'String': 31, '{': 23, 'Address': 8}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'Double': 3, 'read': 2, '.': 13, 'return': 10, '{': 9, 'IOException': 8, '': 7, 'throws': 6, 'double': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 9, 'bar': 8, '(': 5, '.': 21, '{': 10, '': 6}
{'}\n': 184, ';': 33, ')': 32, ',': 158, '(': 31, '.': 44, '=': 108, 'STR': 80, '_': 47, 'desc': 71, '': 29, 'new': 28, 'void': 1}
{'}\n': 75, ';': 24, ')': 7, '(': 4, 'Time': 62, 'get': 54, '.': 13, 'cal': 49, 'return': 22, 'date': 27, 'set': 61, 'Instance': 55, 'Calendar': 48, '': 1, '=': 29, 'Long': 28, 'Date': 2, 'new': 39, 'value': 6, 'long': 26, '}': 25, 'null': 23, '{': 8, 'N': 16, 'Na': 15, 'is': 14, 'Double': 12, 'if': 9, 'double': 5, 'compute': 3, 'protected': 0}
{'}\n': 114, ';': 113, ')': 57, ',': 30, '(': 4, 'Pan': 3, 'Bluetooth': 6, '': 5, 'adapter': 29, 'Adapter': 7, 'void': 1, 'public': 0}
{'}\n': 83, ';': 36, '=': 26, ')': 35, '(': 31, '.': 29, 'Math': 28, '': 27, 'x1': 7, 'x2': 13, 'z2': 16, 'int': 6, ',': 8, 'z1': 10, 'private': 0}
{'}\n': 61, ';': 60, ')': 36, 'capabilities': 35, ',': 14, 'URIs': 27, 'volume': 26, 'URI': 11, 'pool': 17, 'system': 12, 'STR': 47, '_': 46, '(': 9, 'Method': 5, '': 1, '.': 3, 'Workflow': 2, 'new': 39, 'return': 38, '{': 37, 'Wrapper': 34, 'Values': 33, 'Capability': 32, 'Pool': 31, 'Virtual': 30, '>': 25, '<': 22, 'List': 21, 'Volumes': 7, 'create': 6, 'private': 0}
{'}\n': 35, ';': 34, ')': 19, ',': 8, 'command': 28, '(': 22, '{': 20, 'parameters': 18, 'String': 10, '': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 9, 'manual': 8, '(': 3, '{': 10, 'Herblore': 7, 'Manual': 6, 'Gui': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 6, '(': 5, 'get': 13, '.': 12, 'Count': 10, '_active': 9, 'Set': 15, 'And': 14, 'Max': 4, 'return': 8, '{': 7, 'sample': 3, 'double': 2, 'final': 1, 'public': 0}
{'}\n': 94, '}': 93, ';': 92, ')': 10, ',': 26, 'request': 88, '(': 9, '.': 62, 'OAuth2': 13, '': 1, '=': 36, 'final': 31, '{': 30, 'Exception': 15, 'Restlet': 14}
{'}\n': 118, ';': 15, ')': 7, 'Name': 4, ',': 113, '_': 13, '(': 6, 'Equals': 109, 'assert': 108, '.': 54, 'Assert': 106, '': 9, '}': 86, '{': 8, 'e': 93, 'Exception': 92, 'Parse': 91, 'Mission': 3, 'catch': 87, 'Stream': 41, 'Input': 40, 'mission': 42, 'get': 55, 'Parser': 75, 'try': 68, '=': 12, 'Bytes': 56, 'xml': 11, 'Array': 49, 'Byte': 48, 'new': 46, 'Xml': 35, 'End': 33, 'create': 32, '+=': 17, 'STR': 14, 'String': 10, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 442, ';': 46, '*': 129, ')': 64, '(': 56, 'NUM': 128, '_': 127, '+': 238, '-': 116, '=': 41, '/': 373, '.': 196, '': 49, 'Math': 195, '}': 134, 'else': 108, 'double': 1, 'public': 0}
{'}\n': 78, ';': 75, ')': 32, '(': 28, 'close': 2, '.': 49, 'Output': 47, 'm': 46, '{': 45, 'void': 1, 'public': 0}
{'}\n': 166, ';': 94, ')': 33, 'Path': 47, 'relative': 46, ',': 145, '.': 51, '(': 59, '': 16, '}': 95, '=': 67, '{': 43, 'String': 25}
{'}\n': 19, ';': 18, '{': 7, ')': 6, '(': 5, 'reload': 3, 'public': 0}
{'}\n': 43, '}': 42, ';': 40, ')': 12, 'Processor': 4, 'Message': 3, '(': 5, '.': 24, 'Processors': 17, 'message': 16, '{': 13, 'synchronized': 14, '': 6, 'void': 1, 'protected': 0}
{'}\n': 30, ';': 29, ')': 8, '(': 3, 'Serial': 24, 'cert': 7, '.': 13, '{': 9, 'Certificate': 6, '': 4}
{'}\n': 65, ';': 49, ')': 20, 'Name': 19, 'set': 18, ',': 11, 'Set': 4, 'update': 38, 'file': 14, 'persist': 10, '(': 5, 'Bundle': 52, 'Updated': 51, 'load': 41, '=': 40, '>': 37, 'Descriptor': 36, '': 6, '<': 31, 'Collection': 30, '{': 28, 'Exception': 27, 'Core': 26, 'IOException': 23, 'throws': 21, 'String': 17, 'IFile': 13, 'Persist': 9, 'Xml': 8, 'Object': 7, 'To': 3, 'add': 2, 'void': 1, 'private': 0}
{'}\n': 51, ';': 18, 'length': 16, '.': 15, 'bytes': 8, '+=': 46, 'position': 36, 'this': 29, ')': 9, ',': 25, 'Buffer': 32, 'byte': 5, 'NUM': 27, '_': 26, '(': 4, 'arraycopy': 22, 'System': 20, '': 19, 'Capacity': 12, 'ensure': 11, '{': 10, ']': 7, '[': 6, 'Bytes': 3, 'put': 2, 'void': 1, 'public': 0}
{'}\n': 97, ';': 43, ')': 25, '(': 8, 'String': 3, 'to': 92, '.': 79, 'sb': 35, 'return': 89, '}': 88, 'append': 80, 'i': 47, '{': 26, '++': 59, '<': 53, '=': 36, 'int': 46, 'for': 44, 'Buffer': 34, '': 2, 'new': 37, ',': 14, 'arr': 13, ']': 12, '[': 11, 'static': 1}
{'}\n': 81, ';': 23, ')': 10, '(': 21, '.': 33, '_': 61, '': 2, 'null': 30, '!=': 29, 'if': 26, '{': 11, 'Color': 14, 'Compiere': 13, '=': 16, 'cc': 15, 'static': 1, 'public': 0}
{'}\n': 50, ';': 21, 'return': 46, ')': 20, '=': 27, '': 3, 'State': 8, 'get': 15, 'Lua': 4, 'public': 0}
{'}\n': 110, ';': 40, '(': 5, '{': 10, ')': 9, '<': 92, '.': 16, '}': 41, 'cap': 13, 'if': 22}
{'}\n': 36, ';': 20, 'Stream': 12, 'input': 11, ')': 4, '(': 3, '{': 8, 'null': 14, 'if': 9, 'IOException': 7, '': 6, 'throws': 5}
{'}\n': 357, ';': 18, ')': 4, 'STR': 24, '_': 23, '+': 33, 'Pool': 39, 'Running': 77, 'long': 7, '(': 3, 'Count': 36, 'Task': 35, 'get': 34, 'info': 21, '.': 12, 'log': 19, 'instant': 57, 'scheduled': 38, 'begin': 8, '-': 247, 'Millis': 15, 'Time': 14, 'current': 13, 'System': 11, '': 10, 'success': 151, '}': 208, 'Trace': 221, 'Stack': 220, 'print': 219, 'e': 214, '{': 5, 'Exception': 213, 'Interrupted': 212, 'catch': 209, 'NUM': 164, 'Termination': 161, 'await': 160, '|=': 200, 'BOOL': 154, 'Policy': 177, 'Shutdown': 176, 'After': 175, 'Tasks': 174, 'Periodic': 189, 'Existing': 172, 'Continue': 187, 'set': 170, 'Delayed': 173, 'Execute': 171, 'try': 156, '=': 9, 'boolean': 150, 'shutdown': 2, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 255, ';': 147, ')': 83, '(': 55, '.': 139, 'Address': 111, 'Inet': 110, '': 62, 'Loopback': 171, 'is': 170, '{': 84, '}': 148, 'host': 69, 'static': 1, 'public': 0}
{'}\n': 153, ';': 68, 'String': 3, 'return': 149, '}': 128, '{': 13, 'else': 141, ')': 12, '(': 8, '.': 31, '=': 18, 'STR': 47, '_': 36, 'c': 106, 'if': 113, 'char': 105, 'i': 92, 'len': 86, '<': 98, 'int': 91, 's': 11, 'NUM': 37, 'length': 32, '': 2, 'static': 1, 'public': 0}
{'}\n': 116, ';': 115, '_': 96, ')': 48, '(': 47, '.': 77, 'Categories': 46, 'count': 42, 'int': 28}
{'}\n': 75, ';': 32, ')': 14, '(': 17, 'append': 27, '.': 26, 'sbuf': 9, 'STR': 23, '_': 22, 'Builder': 8, 'String': 7, '': 6}
{'}\n': 187, ';': 46, 'vars': 136, 'return': 184, '}': 160, ')': 45, ',': 52, 'column': 97, 'Type': 36, '(': 9, 'Resource': 54, 'As': 142, 'migrate': 7, 'All': 139, 'add': 138, '.': 40, '{': 135, 'else': 161, 'foreign': 80, 'Relation': 143, 'get': 41, 'columns': 61, '=': 37, 'Data': 58, '': 1, 'String': 34, 'for': 93, 'Columns': 8, 'Key': 88, 'Foreign': 87, '>': 6, '<': 3, 'Map': 48, 'Entity': 42, 'table': 35, 'Var': 5, 'SQLTable': 11, 'Collection': 2, 'private': 0}
{'}\n': 86, '}': 64, '{': 31, ')': 50, '(': 5, ';': 63, '.': 56, 'rs': 18, 'Set': 17, 'Result': 16, '': 15, 'public': 0}
{'}\n': 176, ';': 132, ')': 78, 'index': 35, '(': 26, 'add': 148, '.': 64, ',': 111, 'set': 108, 'attributes': 106, '{': 93, 'if': 80, '=': 48, 'a': 47, 'Attribute': 9, '': 1, 'int': 34, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 28, ';': 27, ')': 11, 'value': 10, '(': 4, 'String': 6, 'to': 21, '.': 20, '': 1, ',': 8, 'key': 7, 'with': 3, 'return': 13, '{': 12, 'B': 2, 'default': 0}
{'}\n': 79, ')': 32, '': 11, ',': 55, 'array': 15, '(': 10, 'sort': 7, '.': 49, 'Arrays': 48, '{': 33, ']': 14, '[': 13, 'void': 6, 'static': 1, 'public': 0}
{'}\n': 15, ';': 14, 'Transaction': 4, 'SIPServer': 12, '': 11, 'this': 9, 'return': 8, '{': 7, ')': 6, '(': 5, 'Server': 3}
{'}\n': 84, ';': 31, 'Read': 28, '}': 73, '{': 25, ')': 21, 'NUM': 61, '_': 60, '<': 59, '(': 5, 'if': 56, ',': 10, 'off': 17, 'buf': 48, 'read': 3, '.': 45, 'in': 9, '=': 29, 'int': 16, 'while': 32, 'IOException': 24, '': 6, 'throws': 22, 'len': 20, ']': 14, '[': 13, 'byte': 11, 'Stream': 8, 'Input': 7, 'Fully': 4, 'static': 1, 'public': 0}
{'}\n': 54, '}': 53, ';': 52, ')': 20, '(': 5, 'get': 33, '.': 32, 'Supplier': 8, 'message': 18, 'Exception': 25, 'Aborted': 24, 'Test': 23, 'throw': 40, '{': 26, 'Boolean': 7, 'As': 34, 'assumption': 9, 'if': 27, '': 6, 'throws': 21, '>': 17, 'String': 16, '<': 14, ',': 11, 'assume': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 215, '}': 207, ';': 47, 'STR': 62, '_': 61, 'return': 203, '{': 21, 'else': 208, ')': 20, 'ERROR': 199, '': 2, '(': 8, 'equals': 196, '.': 57, 'Directive': 107, 'control': 106, 'if': 191, 'request': 13, ',': 14, 'result': 118, 'Result': 184, 'process': 183, '=': 40, 'Map': 110, 'param': 129, 'Id': 146, 'catalog': 145, 'Bulk': 7, 'Cart': 6, 'To': 5, 'add': 4, 'Helper': 87, 'cart': 39, 'Catalog': 149, 'Current': 153, 'get': 41, 'Worker': 150, 'String': 3, 'Parameter': 137, 'Http': 10, 'Util': 133, '>': 117, 'Object': 43, '<': 111, 'dispatcher': 68, 'delegator': 50, 'Shopping': 37, 'new': 91, 'Attribute': 59, 'Dispatcher': 67, 'Local': 66, 'Delegator': 49, 'response': 19, 'Response': 18, 'Servlet': 11, 'Request': 12, 'static': 1, 'public': 0}
{'}\n': 47, ';': 22, ')': 12, '(': 5, '.': 16, 'Set': 4, '=': 26, 'add': 17, '{': 13, '': 6, 'void': 1}
{'}\n': 39, ';': 34, 'Skipped': 13, 'bytes': 12, 'return': 35, '(': 19, '.': 17, '=': 14, '{': 10, 'skip': 2}
{'}\n': 59, ';': 58, ')': 31, 'URIs': 30, 'Volume': 29, 'vplex': 14, ',': 16, 'URI': 13, 'cg': 19, 'CG_': 45, 'VOLUMES_': 43, '': 1, '(': 11, 'Method': 5, '.': 3, 'Workflow': 2, 'new': 34, 'return': 33, '{': 32, '>': 27, '<': 24, 'List': 23, 'CGMethod': 10, 'Volumes': 8, 'create': 6, 'protected': 0}
{'}\n': 181, ';': 131, ')': 18, ',': 172, '(': 28, '.': 63, 'urls': 78, '{': 94, '=': 56, 'String': 30, '': 11, 'url': 36}
{'}\n': 224, ';': 223, ')': 179, '(': 35, 'col': 202, 'return': 181, '{': 180, '>': 165, '': 42, '<': 79}
{'}\n': 220, ';': 78, ')': 22, '(': 7, 'String': 3, 'to': 215, '.': 84, 'return': 212, 'substring': 127, 'append': 117, '}': 176, ',': 12, 'old': 15, 'Of': 86, 'index': 85, '=': 81, '{': 23, 'NUM': 112, '_': 111, '>=': 110, 'while': 107, 'int': 79, '': 2, 'new': 20, 'static': 1}
{'}\n': 85, ';': 43, 'address': 10, '+': 31, 'STR': 81, '_': 80, 'String': 3, 'cid': 45, 'return': 76, ')': 11, '(': 7, 'Hex': 70, 'to': 20, '.': 19, 'Utils': 67, '': 2, '=': 16, 'Bytes': 56, 'get': 55, 'date': 15, 'digest': 51, ']': 47, '[': 46, 'byte': 44, '++': 34, 'IDCounter': 33, 'call': 32, 'Millis': 28, 'Time': 27, 'current': 26, 'System': 24, 'Long': 18, '{': 12, 'Identifier': 6, 'Call': 5, 'generate': 4, 'public': 0}
{'}\n': 171, '}': 170, ';': 58, ')': 9, '(': 4, '.': 66, 'History': 47, 'm_': 46, '{': 10, '': 5, 'size': 106, 'At': 68, 'public': 0}
{'}\n': 196, ';': 31, '}': 190, '=': 39, ']': 36, '[': 35, ')': 20, '(': 8, 'if': 22, 'Binding': 4, 'Reference': 3, '': 2, ',': 50, 'NUM': 49, '_': 48, 'new': 141, 'arraycopy': 130, '.': 129, 'System': 128, '{': 21, '!=': 113, 'Type': 79, '++': 63, '<': 59, 'int': 45, 'null': 30, 'return': 29, '==': 26, 'original': 18, 'public': 0}
{'}\n': 570, ';': 20, ')': 11, 'Paint': 438, 'm': 23, ',': 43, 'NUM': 142, '_': 141, '(': 7, 'Radians': 503, 'to': 502, '.': 14, 'Math': 495, '': 1, 'sin': 539, '*': 535, 'X': 38, 'Center': 37, 'cos': 497, 'draw': 55, 'canvas': 10, '/': 140, '+': 393, '{': 12, 'if': 21, 'Y': 42, '-': 131, 'Circle': 56, 'return': 29, 'null': 27, '==': 26, 'Shader': 25, 'Draw': 6, 'on': 5, 'super': 13, 'Canvas': 9, 'void': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 93, '}': 89, ';': 87, ')': 26, 'ep': 56, '(': 11, 'add': 81, '.': 80, '{': 27, '': 17}
{'}\n': 29, ';': 28, ')': 8, 'LOCKOUT': 26, 'UNTIL_': 24, 'SECONDS_': 23, 'GET_': 22, '': 14, '.': 11, 'Type': 19, 'Operation': 18, 'State': 17, 'Policy': 16, 'Password': 15, '(': 7, 'add': 12, 'operations': 10, '{': 9, 'Lockout': 6, 'Until': 4, 'Seconds': 3, 'request': 2, 'void': 1, 'public': 0}
{'}\n': 111, ';': 68, '.': 52, ')': 37, '(': 85, 'Hive': 34, '=': 47, '{': 41, '': 1}
{'}\n': 353, ';': 63, ')': 8, '(': 7, 'signum': 348, '.': 267, 'result': 263, ',': 20, 'NUM': 19, '_': 18, '-': 17, 'STR': 340, 'Equals': 337, 'assert': 319, '}': 62, ']': 14, 'i': 303, '[': 13, 'Bytes': 12, 'r': 150, '==': 327, 'res': 275, 'True': 320, '{': 9, '++': 316, 'length': 286, '<': 309, '=': 15, 'int': 133, 'for': 300, 'Array': 296, 'Byte': 295, 'to': 294, 'byte': 10, 'new': 230, 'Number': 228, 'b': 65, 'a': 11, 'Integer': 226, 'Big': 225, '': 224, 'Sign': 135, 'Shorter': 6, 'First': 5, 'Neg': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 48, ';': 23, 'NUM': 38, '_': 18, '(': 5, ')': 8, 'f': 7, '.': 15, '=': 12, '{': 9, 'static': 1}
{'}\n': 183, ';': 182, 'Document': 7, 'new': 8, '.': 145, 'document': 76, '{': 55, ')': 54, '(': 52, '': 5}
{'}\n': 25, ';': 24, ')': 8, 'Arg': 7, '': 4, '(': 3, '{': 9, 'public': 0}
{'}\n': 134, ';': 132, ')': 52, ',': 117, '_': 115, '(': 50, '.': 103, 'locker': 85, '{': 53, 'Lock': 18, 'public': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'Ref': 3, 'Unicast': 2, '': 1, 'public': 0}
{'}\n': 106, ';': 38, 'NUM': 42, '_': 41, '-': 102, 'return': 58, '}': 63, 'i': 35, ')': 23, ']': 18, '[': 17, 'elements': 19, '(': 6, 'equals': 86, '.': 85, 'o': 9, 'if': 25, '--': 45, '>=': 40, 'index': 22, '=': 36, 'int': 2, 'for': 32, '{': 24, 'else': 64, 'null': 29, '==': 28, ',': 10, 'Object': 8, '': 7, 'Of': 5, 'Index': 4, 'last': 3, 'static': 1, 'private': 0}
{'}\n': 232, ';': 68, ')': 35, '(': 16, '.': 45, '': 4, 'Buffer': 6, 'Byte': 5, 'buffer': 44, '}': 69, '{': 41}
{'}\n': 39, ';': 38, ')': 10, 'rhs': 9, '(': 4, '.': 24, 'lhs': 6, 'return': 12, '{': 11, ',': 7, 'public': 0}
{'}\n': 56, '}': 36, ';': 35, ')': 7, '(': 4, 'All': 51, 'notify': 50, '{': 8, 'else': 48, 'ex': 43, 'Exception': 42, 'Interrupted': 41, '': 28, 'catch': 38, 'wait': 32, 'IDLE': 29, '!=': 27, 'm_state': 26, '&&': 25, 'Alive': 22, 'is': 21, '.': 20, 'Thread': 19, 'if': 9, 'try': 14, 'tf': 6, 'boolean': 5, 'block': 3, 'void': 2, 'synchronized': 1, 'private': 0}
{'}\n': 123, ';': 21, 'gpm': 66, '=': 14, 'Point': 17, 'moving': 118, ')': 8, '(': 3, 'y': 36, ',': 75, 'x': 23, 'set': 100, '.': 29, 'Grab': 71, 'Offset': 70, '': 4, 'new': 68, '{': 9, 'OFFSET': 63, 'RENDERTYPE_': 62, 'OMGraphic': 59, '==': 57, 'Type': 54, 'Render': 53, 'get': 15, 'if': 48, 'Y': 44, 'pnt': 13, 'int': 22, 'X': 31, 'e': 7, 'Projection': 16, 'D': 12, 'Point2': 11, 'Event': 6, 'Mouse': 5, 'move': 2, 'void': 1, 'public': 0}
{'}\n': 103, ';': 24, 'BOOL': 23, '_': 22, '(': 5, 'if': 37, '=': 21, 'cidr': 33, '{': 46, ')': 17, 'NUM': 31, '>': 42, 'Mask': 34, 'ip': 16, ',': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 62, ';': 34, ')': 14, 'locked': 36, '(': 5, 'Of': 57, 'value': 56, '.': 26, 'Boolean': 3, '': 2, 'return': 52, 'NUM': 49, '_': 48, '-': 47, ',': 10, 'name': 13, 'lock': 40, 'service': 8, '=': 21, 'boolean': 35, 'Name': 9, 'Named': 29, 'Service': 19, 'get': 27, '{': 15, 'Object': 12, 'String': 7, 'static': 1, 'protected': 0}
{'}\n': 182, '}': 177, ';': 38, ')': 6, 'Cookie': 4, '(': 5, '.': 133, '': 83, '{': 7, 'null': 70, 'if': 39, '_': 19, '=': 11}
{'}\n': 358, ';': 79, 'null': 85, 'return': 143, '}': 119, '.': 35, '': 1, ')': 29, '(': 8, '{': 30, 'OPTION': 306, 'APPROVE_': 305, 'Chooser': 178, 'JFile': 177, '==': 84, 'Val': 283, 'if': 31, 'this': 96, 'Dialog': 68, 'show': 288, '=': 71, 'int': 281, 'set': 123, 'file': 25, 'Extension': 21, 'Name': 20, 'Filter': 22, 'CWD': 210, 'get': 42, 'Utils': 207, 'new': 91, 'title': 12, 'Choosers': 183, 'else': 174, 'File': 2, ',': 17, 'Directory': 158, '!=': 139, 'BOOL': 127, '_': 45, 'Visible': 124, 'put': 111, 'Dialogs': 73, 'Mac': 58, 'is': 57, 'OSType': 55, 'String': 11, 'to': 51, 'Boolean': 34, 'STR': 46, 'Property': 43, 'System': 40, 'parse': 36, 'final': 9, 'select': 5}
{'}\n': 159, ';': 27, ')': 20, ',': 11, '(': 6, 'Name': 152, '.': 36, '': 1, 'm': 128, '=': 62, '_': 98, 'new': 63, 'API': 35, 'Tech_': 34, 'Greg': 33, 'Unlocalized': 10, 'a': 9, 'super': 22, '{': 21, 'String': 8, 'Generated_': 4, 'Meta': 3, 'GT_': 2, 'public': 0}
{'}\n': 292, ';': 35, ')': 13, '(': 12, 'elements': 288, '.': 38, 'Vector': 16, 'new': 21, 'return': 284, 'STR': 50, '_': 32, ',': 51, 'NUM': 33, 'Option': 8, '': 1, 'Element': 40, 'add': 39, '+': 75, '>': 9, '<': 6, '=': 23, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 379, ';': 33, 'Sql': 4, 'parsed': 37, 'return': 375, ')': 12, 'Count': 64, 'Parameter': 63, 'total': 78, '(': 8, 'Total': 366, 'set': 339, '.': 54, 'unnamed': 70, 'Unnamed': 353, 'named': 20, 'Named': 286, '}': 137, '++': 227, 'i': 86, '{': 13, 'STR': 158, '_': 66, '==': 156, 'c': 146, 'if': 115, 'else': 310, 'NUM': 67, '-': 233, 'j': 167, '=': 22, ',': 111, 'parameter': 242, 'add': 271, 'Parameters': 21, 'contains': 262, '!': 214, '+': 170, 'substring': 246, 'sql': 11, 'String': 10, '': 2, '>': 19, ']': 50, '[': 49, 'statement': 51, 'Separator': 217, 'is': 215, '&&': 181, 'length': 97, '<': 16, 'while': 91, 'continue': 203, 'int': 61, '||': 159, 'char': 48, 'Position': 103, 'To': 102, 'skip': 101, 'break': 135, '>=': 129, '!=': 118, 'Quotes': 108, 'And': 107, 'Comments': 106, 'Array': 57, 'Char': 56, 'to': 55, 'Parsed': 3, 'new': 23, 'Set': 15, 'Hash': 25, 'Statement': 7, 'parse': 5, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 10, 'value': 9, ',': 7, 'address': 19, '+': 18, 'offset': 6, '(': 4, 'put': 2, '.': 13, 'unsafe': 12, '{': 11, 'int': 5, 'void': 1, 'final': 0}
{'}\n': 146, ';': 71, ')': 27, 'Id': 19, '(': 12, '.': 95, 'Request': 51, '': 16, '{': 65, 'request': 18, 'if': 33, 'String': 17}
{'}\n': 138, ';': 26, ')': 13, '(': 5, 'String': 3, 'to': 101, '.': 42, 'rs': 18, 'return': 130, 'length': 126, 'rnd': 28, ',': 8, 'encode_base64': 120, 'append': 51, 'STR': 54, '_': 53, 'log_rounds': 7, 'Integer': 99, '': 2, '}': 93, 'Exception': 87, 'Argument': 86, 'Illegal': 85, 'new': 20, 'throw': 82, '{': 14, 'NUM': 62, '>': 77, 'if': 57, '<': 60, 'Bytes': 44, 'next': 43, 'random': 12, ']': 30, 'LEN': 38, 'SALT_': 37, 'BCRYPT_': 36, '[': 29, 'byte': 27, '=': 19, 'Random': 11, 'Secure': 10, 'int': 6, 'gensalt': 4, 'static': 1, 'public': 0}
{'}\n': 219, ';': 30, ')': 15, '_': 59, ',': 210, '.': 37, 'int': 160, '(': 7, '': 9, '=': 134, 'str': 11, 'Double': 119, 'STR': 76, 'NUM': 60, '{': 16, 'String': 10, 'To': 5, 'public': 0}
{'}\n': 192, ';': 189, ')': 55, '(': 52, 'Script': 46, '.': 125, '': 24, '{': 58}
{'}\n': 91, '}': 90, ';': 88, ')': 11, 'x': 54, ',': 85, 'NUMBER': 84, 'FINITE_': 83, 'NOT_': 82, '': 13, '.': 50, 'Formats': 79, 'Core': 78, 'Localized': 77, '(': 5, 'Exception': 17, 'Argument': 16, 'Illegal': 15, 'Math': 14, 'new': 69, 'throw': 68, '{': 36, 'N': 62, 'Na': 61, 'is': 51, 'Double': 49, '||': 56, 'Infinite': 52, 'if': 46, 'throws': 12, 'double': 7, 'final': 6, 'Finite': 4, 'check': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 342, ';': 50, ')': 22, '(': 41, '.': 36, 'Button': 86, '': 6, 'id': 99, 'R': 70, 'Id': 94, 'By': 93, 'View': 65, 'find': 91, 'm': 51}
{'}\n': 89, ';': 33, ')': 15, 'ctx': 9, '(': 6, 'Auto': 4, 'is': 3, 'return': 71, '}': 80, 'BOOL': 51, '_': 30, 'else': 75, 'STR': 31, 'equals': 65, '.': 64, 's': 36, 'if': 17, '{': 16, 'null': 21, '!=': 57, ',': 10, 'No': 14, 'Window': 13, '': 7, 'Context': 39, 'get': 38, '=': 37, 'String': 35, 'Exception': 28, 'Argument': 27, 'Illegal': 26, 'new': 24, 'throw': 23, '==': 20, 'int': 11, 'Properties': 8, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 95, ';': 23, 'return': 91, '}': 51, 'Path': 6, 'rel': 21, '{': 18, 'else': 82, ')': 17, '(': 7, '.': 29, '=': 42, 'if': 52, 'File': 47, '': 2, 'String': 14, 'Relative': 5, 'find': 4}
{'}\n': 523, ';': 522, 'STR': 245, '_': 244, '+': 246, ')': 199, '(': 193, 'String': 174, '': 173, 'public': 0}
{'}\n': 106, '}': 105, ';': 104, ')': 61, '(': 53, '.': 100, 'Resources': 99, 'leaking': 98, '{': 64, 'resource': 57, 'Resource': 56, 'Leaking': 55, '': 54, 'void': 1, 'public': 0}
{'}\n': 329, ';': 80, ')': 10, '(': 9, 'signum': 324, '.': 243, 'result': 239, ',': 22, 'NUM': 21, '_': 20, 'STR': 317, 'Equals': 314, 'assert': 296, '}': 79, ']': 16, 'i': 280, '[': 15, 'Bytes': 14, 'r': 152, '==': 304, 'res': 252, 'True': 297, '{': 11, '++': 293, 'length': 263, '<': 286, '=': 17, 'int': 135, 'for': 277, 'Array': 273, 'Byte': 272, 'to': 271, 'byte': 12, 'new': 206, 'Number': 204, 'b': 82, 'and': 244, 'a': 13, 'Integer': 202, 'Big': 201, '': 200, 'Sign': 137, '-': 19, 'Longer': 8, 'First': 7, 'Neg': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 81, ';': 24, ')': 11, '(': 8, 'String': 3, 'to': 76, '.': 42, 'sb': 16, 'return': 73, '}': 72, 'random': 58, 'append': 43, '{': 12, 'NUM': 31, '_': 30, 'Builder': 15, '': 2, 'new': 18, '=': 17, 'int': 9, 'Of': 6, 'generate': 4, 'static': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 6, 'STR': 30, '_': 29, '(': 5, 'Exception': 27, 'Operation': 26, 'Unsupported': 25, '': 24, 'new': 23, 'throw': 22, '{': 7}
{'}\n': 133, '}': 131, ')': 8, '(': 4, 'equals': 103, '.': 36, 'if': 16, 'get': 87, '=': 48, '': 5, ';': 40, '{': 9, 'attributes': 18, 'remove': 2, 'void': 1, 'public': 0}
{'}\n': 41, ';': 34, ')': 10, '(': 6, '.': 36, '': 7, 'new': 25, 'key': 9, '{': 11, 'void': 4, 'public': 3}
{'}\n': 45, ';': 44, ')': 11, '_': 30, ',': 40, 'e': 10, '(': 14, 'Code': 37, 'Error': 36, 'STR': 31, '.': 17, '': 8, 'if': 13, '{': 12, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 172, '}': 162, ';': 22, ')': 21, 'STR': 139, '_': 64, 'prefix': 79, 'null': 108, '!=': 107, '(': 6, '.': 18, 'i': 62, '=': 38, 'String': 78, '': 77, '{': 76, '<': 68, 'NUM': 65, 'int': 61, 'for': 59, 'Prefixes': 5, 'void': 1, 'private': 0}
{'}\n': 38, ';': 21, ')': 9, 'duration': 8, '(': 6, 'Nanos': 5, 'Time': 4, 'add': 2, '.': 14, 'delegate': 24, 'null': 26, '!=': 25, 'if': 22, 'Get': 17, 'And': 16, '{': 10, 'long': 7, 'void': 1, 'public': 0}
{'}\n': 79, ';': 78, 'tweak': 71, '.': 62, ')': 59, 'FUNCS': 55, 'HASH_': 54, 'MAX_': 53, '': 5, '(': 10, ',': 15, 'data': 14, ']': 13, '[': 12, 'byte': 11, 'public': 0}
{'}\n': 844, ';': 120, ')': 18, 'Nums': 704, 'page': 215, ',': 9, 'NUMS': 838, 'PAGE_': 747, 'PAGINATION_': 667, '': 1, '.': 15, 'Pagination': 664, '(': 4, 'put': 342, 'Model': 188, 'data': 187, 'Count': 675, 'COUNT': 669, 'Num': 216, 'NUM': 748, 'CURRENT_': 491, '}': 47, '_': 7, '-': 785, 'size': 782, 'get': 111, 'LAST_': 770, 'FIRST_': 746, '{': 26, 'Empty': 234, 'is': 233, '!': 243, 'if': 228, 'Size': 283, 'window': 297, 'paginate': 709, 'Paginator': 707, '=': 6, '>': 186, 'Integer': 270, '<': 180, 'List': 394, 'final': 70, 'double': 690, '/': 688, 'Cnt': 654, 'following': 323, 'ceil': 683, 'Math': 681, 'int': 265, 'RECORD_': 668, 'Int': 289, 'opt': 328, 'Result': 372, 'ID': 336, 'OBJECT_': 335, 'Keys': 127, 'Long': 638, 'user': 93, 'Date': 633, 'new': 152, 'TIME': 629, 'CREATE_': 628, 'T_': 627, 'USER_': 432, 'Ext': 623, 'User': 42, 'Id': 324, 'Following': 67, 'home': 565, 'follower': 498, 'Service': 357, 'Query': 356, 'follow': 374, 'FOLLOWING': 544, 'IS_': 460, 'Common': 429, 'String': 92, ':': 557, 'JSONObject': 102, 'for': 550, 'boolean': 442, 'current': 475, 'USER': 118, 'In': 445, 'Logged': 444, 'IN': 462, 'LOGGED_': 461, 'Boolean': 449, 'FOLLOWING_': 348, 'HOME_': 433, 'RESULTS': 420, 'URL': 362, 'Avatar': 361, 'fill': 200, 'avatar': 355, 'Follow': 345, 'Home': 66, 'STR': 8, 'Symphonys': 135, 'Str': 217, 'Of': 273, 'value': 5, 'Numeric': 248, 'Strings': 231, '||': 242, 'Null': 236, 'Or': 235, 'Parameter': 222, 'request': 81, 'response': 88, 'Footer': 203, 'And': 202, 'Header': 201, 'filler': 198, 'Data': 193, 'renderer': 150, 'Object': 185, 'Map': 179, 'Name': 94, 'Template': 170, 'set': 123, 'Renderer': 149, 'context': 74, 'Skin': 154, 'Marker': 148, 'Free': 147, 'Abstract': 146, 'NAME': 132, 'DIR_': 131, 'TEMAPLTE_': 130, 'Attribute': 112, 'Exception': 98, 'throws': 96, 'Response': 87, 'Servlet': 79, 'Http': 78, 'Request': 2, 'Context': 73, 'HTTPRequest': 13, 'show': 65, 'void': 64, 'public': 63, 'class': 32, 'Advice': 30, 'End': 58, 'Stopwatch': 28, 'Class': 24, 'advice': 23, 'After': 51, '@': 0, 'Check': 37, 'Block': 43, 'View': 36, 'Anonymous': 35, 'Start': 29, 'Before': 21, 'GET': 17, 'Method': 14, 'method': 10, 'Processing': 3}
{'}\n': 130, ';': 70, 'NUM': 64, '_': 16, '-': 57, 'return': 125, '}': 123, 'lat_index': 48, '[': 98, ']': 100, 'elevations': 97, 'int': 1, ')': 10, '(': 4, 'Record': 106, 'Data': 105, 'read': 104, 'null': 102, '==': 15, 'if': 12, '.': 25, 'Math': 75, '': 74, '=': 49, 'uhl': 66, '/': 65, '*': 62, 'dsi': 24, '{': 11, 'ne_lon': 44, '<=': 29, 'lon': 9, '&&': 27, 'sw_lon': 38, '>=': 23, 'ne_lat': 32, 'lat': 6, 'sw_lat': 26, 'BOOL': 17, 'frame_is_valid': 14, 'float': 5, ',': 7, 'At': 3, 'public': 0}
{'}\n': 21, ';': 20, ')': 10, 'object': 9, '(': 5, 'Object': 4, 'Observed': 3, '': 6, 'return': 12, '{': 11, 'Name': 8}
{'}\n': 131, ';': 87, ')': 16, '(': 6, '.': 124, '}': 88, '{': 17, 'component': 15, 'if': 18, '': 13, 'void': 1}
{'}\n': 60, ';': 18, 'return': 51, ')': 4, '(': 3, '.': 45, 'if': 42, '{': 5, '': 6, '=': 14, '>': 12, 'Item': 11, 'Brd': 10, '<': 8, 'Set': 7, 'public': 0}
{'}\n': 39, ';': 38, ')': 21, 'location': 9, '(': 6, '{': 22, 'Location': 8, '': 7}
{'}\n': 34, ';': 33, ')': 14, 's': 9, ',': 10, 'STR': 23, '_': 22, '+': 24, 'Length': 13, 'min': 12, '(': 6, 'format': 20, '.': 19, 'String': 3, '': 2, 'return': 16, '{': 15, 'int': 11, 'pad': 4, 'static': 1, 'private': 0}
{'}\n': 42, ';': 31, ')': 16, '(': 7, 'Get': 38, 'And': 37, '.': 19, 'Tasks': 34, 'Send': 4, 'active': 32, 'buffer': 15, ',': 24, 'name': 25, 'STR': 23, '_': 22, 'trace': 20, 'logger': 18, '{': 17, '>': 14, 'R': 13, '': 8, '<': 11, 'Buffer': 10, 'Record': 9, 'on': 3, 'void': 2, 'synchronized': 1, 'protected': 0}
{'}\n': 62, ';': 20, ')': 6, 'Button': 11, '(': 5, 'add': 2, '.': 23, 'Panel': 54, 'button': 53, 'this': 49, 'Action': 26, 'get': 44, 'Actions': 42, 'Plot': 41, 'Raster': 40, '': 8, 'set': 24, '_': 17, 'STR': 18, 'JButton': 9, 'new': 13, '=': 12, '{': 7, 'void': 1, 'public': 0}
{'}\n': 226, ';': 173, '=': 204, 'keys': 87, '.': 175, ')': 93, '(': 60, '': 63, '{': 94, 'Key': 72}
{'}\n': 334, ';': 55, ')': 29, '(': 9, '.': 100, '': 10, '++': 302, 'NUM': 115, '_': 114, '=': 61, 'null': 106, '!=': 237, 'if': 234, '{': 30, ',': 105, 'next': 139, 'rs': 126, 'while': 135, 'Query': 131, 'execute': 130, 'pstmt': 96, 'ID': 120, 'AD_': 118, 'Int': 112, 'set': 111, 'sql': 104, 'Statement': 102, 'prepare': 101, 'DB': 99, 'try': 94, 'ctx': 12, 'Properties': 11, 'static': 1, 'public': 0}
{'}\n': 65, ';': 64, ')': 21, 'null': 62, ',': 11, 'origin': 20, '(': 5, 'Height': 55, 'get': 46, '.': 36, 'Model': 8, 'sample': 9, 'Width': 47, 'y': 41, 'x': 37, 'Rectangle': 33, '': 1, 'new': 31, 'Buffer': 14, 'data': 15, 'this': 23, '{': 22, 'Point': 19, 'Data': 13, 'Sample': 7, 'Raster': 4, 'Interleaved': 3, 'public': 0}
{'}\n': 75, ';': 74, ')': 15, '(': 7, 'Selector': 9, 'Ui': 18, 'to': 36, '.': 35, 'obj': 10, '{': 23, 'Exception': 22, 'Found': 21, 'Not': 20, 'Object': 19, '': 1, 'throws': 16, ',': 11, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 62, '}': 23, ';': 22, 'return': 53, '{': 10, ')': 9, 'e': 28, 'Exception': 27, '': 6, '(': 5, 'catch': 24, 's': 8, 'Double': 15, 'parse': 17, '.': 16, 'try': 11, 'String': 7, 'static': 1}
{'}\n': 25, ';': 24, ')': 15, 'listener': 14, '(': 4, 'Listener': 3, 'add': 2, '.': 18, 'm_listeners': 17, '{': 16, 'Panel': 8, '': 6, 'final': 5, 'void': 1, 'public': 0}
{'}\n': 580, ';': 178, ')': 79, 'orig': 30, ',': 11, '(': 3, 'write': 474, '.': 186, '': 4, '=': 147, 'get': 373, '{': 89, 'NUM': 220, '_': 219, '>': 204, 'Name': 47, 'File': 9, 'void': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 5, '(': 4, '.': 10, 'return': 7, '{': 6, 'Stable': 3, 'public': 0}
{'}\n': 93, ';': 48, ')': 20, '(': 6, 'height': 89, '.': 50, 'r': 24, 'width': 78, ',': 10, 'length': 64, 'Text': 4, 'demo': 13, 'NUM': 59, '_': 58, 'Bounds': 53, 'get': 51, 'paint': 9, 'Rect': 23, '=': 25, '': 7, '{': 21, 'String': 12, 'Paint': 8, 'Size': 5, 'calc': 3, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 12, '(': 4, 'perform': 2, 'void': 1, 'protected': 0}
{'}\n': 111, ';': 52, ')': 31, 'dos': 30, ',': 7, 'properties': 24, 'pixels': 43, 'image_height': 19, 'image_width': 16, '(': 4, 'write': 3, '.': 84, 'Raster': 92, 'Link': 22, '': 11, 'Pixels': 86, 'grab': 85, 'pixelgrabber': 56, 'NUM': 66, '_': 65, 'image': 13, 'Grabber': 55, 'Pixel': 54, 'new': 45, '=': 44, ']': 42, '*': 49, '[': 41, 'int': 15, '{': 39, 'Exception': 38, 'Interrupted': 37, 'IOException': 34, 'throws': 32, 'Stream': 29, 'Output': 28, 'Data': 27, 'Properties': 23, 'Image': 12, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 395, ';': 119, ')': 79, '_': 87, '(': 16, '': 23, 'new': 183, 'Class': 114, 'Loader': 115, 'get': 63, '.': 62, 'cls': 38, ',': 89, '{': 43, 'try': 42, 'void': 9}
{'}\n': 59, ';': 43, ')': 15, '(': 6, 'close': 55, '.': 46, 'Writer': 22, 'buffered': 23, 'Buffered': 21, '': 7, 'new': 26, '=': 25, 'File': 12, ',': 10, 'String': 8}
{'}\n': 160, ';': 136, ')': 55, '(': 52, '.': 113, 'Status': 24, '': 20, 'new': 81, '{': 56}
{'}\n': 136, '}': 131, ';': 64, ')': 20, 'Name': 19, 'site': 18, ',': 15, 'svr': 97, 'Token': 14, 'sso': 13, '(': 10, 'Site': 55, 'To': 110, '.': 85, 'Configuration': 29, 'Server': 106, '': 11, 'String': 17, '{': 31, 'null': 70, '!=': 69, 'Id': 52, 'if': 65, 'get': 54, '=': 53, 'Exception': 30, 'SSOException': 26, 'SMSException': 23, 'throws': 21, 'SSOToken': 12, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 13, 'null': 21, ',': 20, 'parent': 19, '(': 9, 'Dialog': 8, 'return': 15, '': 2, 'public': 0}
{'}\n': 85, ';': 76, 'return': 81, '}': 77, ')': 13, '(': 7, 'Datastore': 66, 'Feature': 65, 'Inline': 64, '.': 30, 'Layer': 10, 'user': 48, 'User': 41, '': 8, '=': 50, '{': 14, 'instanceof': 39, 'if': 15, 'layers': 31, 'sld': 12, ':': 28, 'Styled': 9, 'for': 22, 'null': 19, 'Descriptor': 11}
{'}\n': 16, ';': 15, '{': 7, ')': 6, '(': 5, 'Finalization': 4, 'run': 3, 'void': 2, 'public': 0}
{'}\n': 100, ';': 41, ')': 10, 'text': 18, '(': 9, 'Text': 16, 'set': 94, '.': 36, 'View': 17, 'list': 48, ',': 87, 'STR': 86, '_': 85, 'join': 83, 'Utils': 81, '': 12, '=': 20, 'String': 4, 'string': 69, 'R': 35, 'get': 63, 'add': 61, '>': 47, '<': 44, 'List': 43, 'Array': 52, 'new': 50, 'id': 37, 'Id': 32, 'By': 31, 'find': 29, 'Font': 15, 'Icon': 14, 'Simple': 13, '{': 11, 'Xml': 8, 'In': 6, 'Defined': 5, 'All': 3, 'display': 2, 'void': 1, 'private': 0}
{'}\n': 131, '}': 112, ';': 32, ')': 12, 'STR': 75, '_': 74, '(': 6, '.': 25, '{': 17, 'if': 80, '-': 58, 'length': 56, 'Length': 29, 'get': 48, '=': 22, 'int': 18, 'Content': 28, '': 7, 'static': 1}
{'}\n': 61, ';': 60, ')': 25, '(': 6, ',': 47, 'Constraint': 38, 'Key': 29, 'Foreign': 28, '{': 26, '': 7, 'void': 1}
{'}\n': 87, ';': 86, ')': 26, 'notification': 21, '(': 78, '.': 71, 'Notification': 5, '': 8, 'void': 1, 'public': 0}
{'}\n': 279, '}': 277, ';': 64, ')': 33, ',': 43, '(': 5, 'put': 232, '.': 74, 'Map': 38, 'get': 122, '{': 80, 'String': 11, '': 10, '=': 95, '<': 39, '>': 115, 'Set': 76, 'key': 75, ':': 71, 'for': 65, 'Hash': 46, 'Linked': 45, 'public': 0}
{'}\n': 131, ';': 19, ')': 13, '(': 17, 'Tables': 127, 'redraw': 126, 'Items': 74, 'deselected': 73, 'Event': 119, 'Change': 118, 'Selection': 117, 'fire': 116, '{': 14, 'Events': 12, 'Fire': 11, 'should': 10, 'if': 109, 'item': 87, 'add': 104, '.': 45, 'DESELECTION': 98, '': 67, 'ACTION': 95, 'LAST_': 94, 'Action': 91, 'Last': 90, 'set': 89, '>': 72, 'DLItem': 71, '<': 69, 'List': 68, 'Array': 78, 'new': 76, '=': 75, 'final': 8, 'items': 29, 'Widget': 16, 'check': 15, 'boolean': 9, 'deselect': 2, 'void': 1}
{'}\n': 30, ';': 29, ')': 8, '(': 4, 'Child': 25, '.': 23, 'nd': 18, 'Node': 11, '': 5, '=': 13, '{': 9, 'boolean': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 8, 'listener': 7, '(': 4, '.': 12, 'Listeners': 11, 'm': 10, '{': 9, 'Listener': 3, '': 5, 'add': 2, 'void': 1, 'public': 0}
{')': 9, 'obj': 8, 'Object': 7, '': 1, '(': 5, 'equals': 4, 'boolean': 3, 'Override': 2, '@': 0}
{'}\n': 103, ';': 39, 'd': 60, 'return': 100, '}': 99, ')': 10, '(': 6, 'Double': 70, '.': 68, '': 65, '=': 31, ']': 3, 'i': 43, '[': 2, '{': 11, '++': 55, '<': 49, 'NUM': 46, '_': 45, 'int': 42, 'for': 40, 'double': 1, 'new': 32}
{'}\n': 683, ';': 542, ')': 67, 'metadata': 58, ',': 396, '(': 46, '.': 223, 'get': 224, 'Schema': 229, '=': 184, 'String': 178, '': 52, '{': 99, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 8, '.': 22, '{': 9, 'ses': 7, 'Session': 6, '': 5, '(': 4, 'public': 0}
{'}\n': 141, ';': 137, 'return': 138, ')': 33, '(': 13, '.': 94, 'Batch': 6, '=': 90, '': 2, '{': 34, ',': 20}
{'}\n': 12, ';': 11, 'program': 3, 'return': 8, ')': 6, '(': 5, '': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, '(': 8, 'List': 18, '{': 10, 'clear': 5, 'void': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 75, ';': 54, ')': 11, '(': 7, '.': 37, 'current': 22, 'x': 10, 'if': 34, '{': 33, '': 2, 'public': 0}
{'}\n': 36, ';': 32, 'return': 33, ')': 11, '.': 27, 'Object': 2, '': 1, '(': 6}
{'}\n': 66, ';': 34, 'digit': 22, 'return': 63, '}': 62, ')': 13, 'index': 12, '+': 53, 'STR': 52, '_': 31, 'ch': 8, '(': 5, 'Exception': 49, '': 24, 'new': 45, 'throw': 44, '{': 19, 'NUM': 32, '-': 39, '==': 38, 'if': 35, ',': 9, '.': 26, 'Character': 25, '=': 23, 'int': 2, 'final': 6, 'char': 7, 'Digit': 4, 'to': 3, 'static': 1}
{'}\n': 84, ';': 20, 'json': 13, 'return': 81, ')': 6, 'Time': 75, ',': 60, 'STR': 59, '_': 58, '(': 5, 'put': 43, '.': 42, '}': 53, '{': 10, ':': 37, '': 1, 'for': 31, 'new': 15, '=': 14, 'JSONObject': 2, 'JSONException': 9, 'throws': 7, 'to': 3, 'public': 0}
{'}\n': 134, ';': 65, ')': 16, 'Type': 31, 'Store': 4, 'key': 60, ',': 21, '(': 6, '{': 39, '}': 66, 'ex': 85, 'STR': 100, '_': 99, 'String': 97, 'get': 96, '.': 48, 'res': 94, 'Exception': 20, 'Crypto': 19, '': 2, 'new': 89, 'throw': 88, 'catch': 81, 'throws': 17, 'Key': 3, 'static': 1, 'public': 0}
{'}\n': 49, ';': 32, ')': 14, '.': 24, 'prefs': 19, 'context': 13, '(': 10, 'Preferences': 18, 'Shared': 17, 'Default': 26, 'get': 25, 'Manager': 23, 'Preference': 22, '': 11, '=': 20, '{': 15, 'Context': 12, 'static': 5}
{'}\n': 81, ';': 27, ')': 9, '_': 33, 'Words': 20, '.': 16, '(': 3, '': 14, '=': 13, 'void': 1}
{'}\n': 74, ';': 73, 'Name': 70, 'principal': 58, '.': 57, 'Class': 59, '(': 6, '': 1, 'if': 22, ')': 17}
{'}\n': 44, '}': 43, ';': 42, 'BOOL': 41, '_': 40, 'return': 39, ')': 7, 'e': 36, '': 30, '(': 6, '{': 8, 'try': 9, 'Valid': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 375, '}': 266, ';': 122, ')': 24, '(': 5, '.': 66, '_': 56, 'STR': 128, '==': 126, 'if': 77, 'NUM': 152, '{': 59, 'c': 63, 'read': 2, 'in': 65, '=': 64, 'BOOL': 57, 'while': 54, '': 11, 'Buffer': 20, 'String': 19, 'private': 0}
{'}\n': 47, ';': 46, ')': 45, 'Join': 15, 'outer': 14, '(': 4, '.': 39, '{': 23, '': 5, ',': 9}
{'}\n': 295, ';': 294, ')': 124, 'data': 241, '(': 118, 'Stream': 111, 'Input': 110, '': 105, 'new': 129, 'public': 0}
{'}\n': 182, ';': 66, 'part': 140, 'return': 179, ')': 18, 'ENCODING': 175, 'WIKIPEDIA_': 174, '': 1, '(': 6, 'String': 171, 'to': 170, '.': 72, 'output': 97, 'Text': 166, 'set': 157, 's': 69, 'Start': 158, 'Action': 149, 'Diff': 2, 'Part': 3, 'new': 47, '=': 70, '}': 67, 'Byte': 93, 'read': 73, 'r': 71, 'write': 126, '{': 28, '++': 121, 'i': 111, 'l': 81, '<': 34, 'NUM': 36, '_': 35, 'int': 8, 'for': 108, 'Stream': 96, 'Output': 95, 'Array': 94, 'L': 17, 'Size_': 10, 'block': 9, 'S': 11, '+': 54, 'STR': 53, 'Exception': 23, 'Decoding': 26, 'throw': 46, '||': 37, 'if': 29, ',': 12, 'Encoding': 22, 'Unsupported': 21, 'throws': 19, 'final': 7, 'decode': 4, 'private': 0}
{'}\n': 75, ';': 32, ')': 5, 'Worker': 16, '(': 4, '.': 51, '{': 6, 'void': 1, 'public': 0}
{'}\n': 159, '}': 152, ';': 60, ')': 36, 'len': 97, ',': 94, 'buf': 93, '(': 34, 'Input': 91, 'set': 90, '.': 72, 'inf': 88, '_': 84, 'if': 61, '': 46, 'void': 1, 'protected': 0}
{'}\n': 23, ';': 22, ')': 12, '(': 8, '.': 16, 'obj': 11, 'return': 14, '{': 13, '': 4, 'String': 5, 'protected': 3}
{'}\n': 68, ';': 66, ')': 8, 'NUM': 61, '_': 60, '-': 31, '(': 7, 'size': 28, '.': 18, 'pages': 26, 'Item': 21, 'Current': 20, 'Pager': 17, 'view': 16, '{': 9, 'Page': 6, 'To': 4, 'go': 3, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 33, ';': 32, ')': 14, '(': 13, 'List': 2, 'as': 26, '.': 19, 'Arrays': 24, '': 1, 'unmodifiable': 20, 'Collections': 18, 'return': 16, '{': 15, '>': 9, '?': 8, '<': 3, 'public': 0}
{'}\n': 75, '}': 74, ';': 40, ')': 24, '(': 5, 'get': 67, '.': 54, 'rule': 45, ',': 14, 'Statement': 29, 'format': 60, 'String': 10, '': 6, 'add': 55, 'List': 7, 'batch': 12, '{': 25, 'To': 22, 'rules': 21, ':': 46, 'Rule': 19, 'for': 41, 'STR': 32, '_': 31, '+': 33, 'TABLE': 36, 'RULES_': 35, '=': 30, '>': 11, '<': 8, 'Rules': 4, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 21, ';': 20, ')': 8, 'element': 7, '(': 4, 'Visited': 12, 'Object': 6, '': 5}
{'}\n': 20, ';': 19, 'client': 11, '=': 17, '.': 15, 'Client': 10, '': 1, '(': 5}
{'}\n': 54, ';': 42, 'future': 30, 'return': 51, ')': 20, '(': 16, 'Exceptionally': 46, 'complete': 45, '.': 44, '>': 5, '<': 2, 'Future': 8, 'Completable': 7, '': 3, 'new': 32, '=': 31, 'T': 4, '{': 21, 'Throwable': 18, 'static': 1, 'public': 0}
{'}\n': 218, ';': 48, 'Err': 27, 'sum': 26, '/': 136, 'Abs': 34, '*': 152, '+=': 110, ')': 87, '.': 119, 'i': 76, '(': 5, 'abs': 120, 'Math': 118, '': 117, '-': 98, '=': 28, '{': 88, '++': 86, '<': 82, 'NUM': 30, '_': 29, 'int': 75, 'for': 73, 'double': 25, 'void': 1, 'protected': 0}
{'}\n': 21, ';': 20, 'modifiers': 19, ')': 9, '(': 4, 'Modifiers': 3, 'get': 14, '.': 13, 'e': 8, 'return': 11, '{': 10, 'Event': 7, 'Mouse': 6, '': 5, 'check': 2, 'boolean': 1, 'public': 0}
{'}\n': 96, ';': 32, ')': 22, '(': 5, '.': 57, 'gen': 25, 'STR': 61, '_': 29, 'out': 27, '': 6, 'void': 1, 'public': 0}
{'}\n': 127, ';': 28, ')': 22, '(': 13, '.': 36, 'break': 113, '==': 109, 'if': 29, 'k': 74, ',': 18, 'Node': 38, 'goal': 37, 'hg': 17, 'Kth': 94, 'get': 93, '=': 75, '': 14, '{': 23, '++': 85, 'N': 21, 'top': 20, '<=': 80, 'NUM': 77, '_': 76, 'int': 19, 'for': 71, 'return': 43, 'null': 33, 'State': 25, 'reset': 24, 'Graph': 16, 'Hyper': 15, 'HG': 12, 'On': 11, 'Extract': 10, 'public': 0}
{'}\n': 129, ';': 44, ')': 20, '(': 33, '.': 30, 'block': 25, ',': 39, 'class': 38, '': 15, 'query': 31, 'Client': 17, 'db': 18, '=': 27, 'Snapshot': 36, 'Block': 35, 'Db': 16}
{'}\n': 68, ';': 35, 'return': 64, '}': 63, ')': 11, '(': 10, 'get': 57, '.': 50, 'add': 51, 'Descriptors': 22, '{': 12, ':': 43, 'Descriptor': 6, '': 1, 'for': 36, '>': 7, '<': 3, 'List': 15, 'Array': 14, 'new': 24, '=': 23}
{'}\n': 26, ';': 25, ')': 11, 'STR': 20, '_': 19, ',': 21, '(': 7, 'All': 17, 'replace': 16, '.': 15, 'string': 10, 'return': 13, '{': 12, 'String': 2, '': 1, 'strip': 3, 'private': 0}
{'}\n': 171, ';': 65, ')': 13, 'beta': 12, '(': 4, ',': 7, 'Beta': 140, 'log': 139, 'alpha': 9, 'NUM': 72, '_': 71, 'return': 58, '{': 14, 'if': 15, '}': 66, '==': 92, '>': 75, '||': 26, '<': 70, 'N': 32, 'Na': 31, '': 27, '.': 29, 'Double': 28, 'is': 30, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 88, ';': 43, ')': 16, ',': 7, 'Bytes': 64, '(': 3, '.': 38, '': 4, '=': 35, ']': 32, '[': 31, 'byte': 60, 'Exception': 22, 'signature': 15, 'String': 5, 'public': 0}
{'}\n': 615, ';': 236, 'return': 612, '}': 611, ')': 171, 'STR': 463, '_': 462, '(': 25, '.': 141, '': 8, '+': 464, 'debug': 457, 'log': 187, 'Enabled': 451, 'Debug': 450, 'is': 449, 'if': 445, 'cls': 90, 'Class': 64, ',': 174, 'Ldr': 91, 'Loader': 65, 'grid': 151, 'U': 149, 'Grid': 9, '=': 92, 'Ignite': 40, 'private': 0}
{'}\n': 133, ';': 37, ')': 9, 'Name': 102, 'role': 101, ',': 69, 'STR': 24, '_': 23, '(': 8, 'Equals': 124, 'assert': 123, 'Xml': 40, 'web': 41, 'Role': 7, 'As': 6, 'Run': 5, 'Servlet': 4, 'get': 62, '.': 48, 'Utils': 107, 'Web': 39, '': 11, '=': 17, 'String': 15, 'Resolver': 72, 'Entity': 71, 'Bytes': 63, 'xml': 16, 'Stream': 58, 'Input': 57, 'Array': 56, 'Byte': 55, 'new': 53, 'parse': 49, 'Io': 47, '+': 22, 'HEADER': 21, 'TEST_': 20, 'WEBAPP_': 19, '{': 13, 'Exception': 12, 'throws': 10, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 10, 'field': 9, '(': 5, 'Null': 21, 'Non': 20, 'require': 19, '.': 13, 'Objects': 17, '': 7, '{': 11, 'String': 8}
{'}\n': 34, '}': 33, ';': 32, ')': 9, 'message': 8, '(': 5, 'Of': 27, 'value': 26, '.': 25, 'String': 24, '': 6, 'print': 3, '{': 10, 'Disabled': 15, 'is': 14, '!': 13, 'if': 11, 'Object': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 6, '{': 10, 'Exception': 9, '': 8, 'throws': 7, 'void': 1}
{'}\n': 41, ';': 21, ')': 8, '(': 5, '.': 35, 'acc': 13, 'NUM': 28, '_': 27, '=': 14, '{': 9, '': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 14, 'member': 9, '(': 6, '{': 15, '': 7, 'public': 0}
{'}\n': 52, ';': 29, 'formatter': 18, 'return': 49, ')': 13, 'STR': 45, '_': 44, '(': 8, 'Zone': 34, 'Time': 33, 'get': 40, '.': 31, '': 2, 'set': 32, 'Format': 17, 'Date': 16, 'Simple': 22, 'new': 20, '=': 19, '{': 14, 'date': 11, 'static': 1, 'public': 0}
{'}\n': 72, ';': 39, 'filename': 43, '}': 63, ')': 26, 'STR': 25, '_': 24, '(': 5, '{': 51, '.': 44, 'if': 41, '': 7, 'String': 8, 'public': 0}
{'}\n': 12, ';': 11, 'destination': 1, '{': 6, ')': 5}
{'}\n': 12, ';': 11, ')': 5, '(': 4, '{': 6, 'Boot': 2, '': 1}
{'}\n': 74, ';': 44, ')': 10, '(': 23, 'Date': 13, '': 12, 'new': 18, 'format': 60, '.': 59, 'Format': 14, 'date': 15, 'STR': 25, '_': 24, 'Simple': 20, '=': 17, '{': 11, 'private': 0}
{'}\n': 49, ';': 37, 'return': 46, ')': 6, 'list': 15, '': 1, '(': 5, '.': 19, '=': 16, '>': 14, 'Element': 13, '<': 10, 'List': 9, '{': 7, 'public': 0}
{'}\n': 84, ';': 49, 'Client': 4, 'new': 34, ')': 11, '(': 5, '': 6, '=': 17, '{': 12}
{'}\n': 108, ';': 46, ')': 16, 'Source': 70, 'input': 71, '(': 6, 'parse': 5, 'URI': 15, 'base': 14, 'Id': 96, 'System': 95, 'set': 94, '.': 93, 'BOOL': 87, '_': 43, ',': 11, 'in': 10, 'Stream': 9, 'BOMInput': 81, '': 1, 'new': 37, 'Input': 8, '=': 73, '}': 47, 'STR': 44, 'Exception': 23, 'Argument': 40, 'Illegal': 39, 'throw': 36, '{': 28, 'null': 33, '==': 32, 'if': 29, 'RDFHandler': 26, 'RDFParse': 22, 'IOException': 19, 'throws': 17, 'String': 13, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 261, ';': 41, ')': 16, 'Value': 10, 'date': 9, '+': 256, 'STR': 39, '_': 38, '(': 6, 'Exception': 21, 'Parse': 20, 'Date': 3, '': 2, 'new': 32, 'throw': 31, '}': 42, '{': 22, 'pe': 242, 'catch': 236, 'parse': 4, '.': 63, 'Parser': 120, 'return': 225, 'try': 223, 'format': 127, 'Pattern': 217, 'apply': 216, 'else': 211, 'Zone': 195, 'Time': 194, 'get': 201, 'set': 193, 'US': 187, 'Locale': 184, ',': 11, 'Format': 118, 'Simple': 116, '=': 53, 'null': 28, '==': 27, 'if': 23, 'next': 160, 'Iter': 128, 'String': 8, 'Next': 143, 'has': 142, 'while': 137, 'iterator': 133, 'Formats': 15, 'Iterator': 126, 'NUM': 69, '-': 109, 'length': 64, 'substring': 98, 'With': 75, 'ends': 84, '&&': 70, 'starts': 74, '>': 67, 'PATTERNS': 56, 'DEFAULT_': 55, 'Argument': 35, 'Illegal': 34, 'throws': 17, 'Collection': 13, 'static': 1, 'public': 0}
{'}\n': 72, ';': 27, 'this': 70, 'return': 69, '}': 28, ')': 8, 'index': 30, '(': 4, 'remove': 3, '.': 48, 'values': 61, 'names': 54, 'table': 47, '{': 9, 'NUM': 44, '_': 24, '-': 42, '!=': 41, 'if': 10, 'name': 7, 'Of': 33, '=': 31, 'int': 29, 'STR': 25, 'Exception': 22, 'Pointer': 21, 'Null': 20, '': 1, 'new': 18, 'throw': 17, 'null': 14, '==': 13, 'String': 6, 'public': 0}
{'}\n': 283, ';': 201, '}': 276, ')': 39, '(': 94, '.': 150, 'get': 233, 'Block': 33, '': 3, '{': 40, '<': 2, '>': 14, 'Map': 1, ',': 27}
{'}\n': 381, '}': 333, ';': 101, 'NUM': 99, '_': 98, ']': 330, '[': 94, '{': 29, ')': 7, ',': 123, '(': 6, 'new': 92, 'char': 61, '': 17, 'read': 4, 'int': 1, 'public': 0}
{'}\n': 210, ';': 208, 'writer': 202, '{': 108, ')': 107, '(': 93, 'test': 56, 'Writer': 50, 'Print': 49, '': 48}
{'}\n': 108, 'return': 104, ';': 43, ')': 22, '(': 56, '.': 84, 'get': 85, '{': 23, '==': 63, 'if': 60}
{'}\n': 55, ';': 54, ')': 9, 'NUM': 51, '_': 50, '(': 6, '==': 34, '.': 24, 'col': 13, 'return': 11, '{': 10}
{'}\n': 189, '}': 66, ';': 52, ')': 9, '(': 5, 'Trace': 184, 'Stack': 183, 'print': 182, '.': 29, 'e': 177, '{': 10, 'Exception': 176, '': 6, 'catch': 173, ']': 134, 'NUM': 133, '_': 24, '[': 131, 'coord': 96, 'set': 150, 'vec': 8, 'to': 93, 'Math': 125, 'Array': 94, 'try': 89, 'String': 20, 'proj4': 84, 'Instance': 60, 'new': 59, 'Proj4': 57, '=': 23, 'Projected': 70, 'pj': 13, 'null': 16, '==': 15, 'if': 11, 'Str': 22, 'proj': 21, 'Unprojected': 14, 'STR': 25, '+': 26, 'Axis': 33, 'Minor': 45, 'Semi': 31, 'get': 30, 'Info': 28, 'Major': 32, 'Vector3': 7, 'To': 3, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 11, 'str': 10, '(': 6, 'encode': 4, 'return': 13, '{': 12, 'String': 9, '': 8, 'final': 7, 'static': 1, 'public': 0}
{'}\n': 48, ';': 47, ')': 22, 'img': 9, '(': 5, 'Image': 4, 'draw': 2, '.': 30, 'm': 27, '{': 23, 'xform': 14, 'Transform': 13, 'Affine': 12, '': 6, ',': 10, 'Rendered': 3, 'void': 1, 'public': 0}
{'}\n': 624, ';': 455, 'return': 621, '}': 580, 'NUM': 29, '_': 28, '=': 444, 'bit': 24, '{': 15, ')': 36, '': 10, '(': 4}
{'}\n': 86, '}': 46, ';': 19, ')': 11, '.': 58, '': 1, '(': 7, '{': 12, 'catch': 47, 'reader': 16, 'Reader': 15, 'From': 40, 'new': 24, '=': 17, 'try': 20, 'null': 18, 'Buffered': 14, 'File': 9}
{'}\n': 34, ';': 33, ')': 17, 'listener': 16, ',': 11, 'Name': 10, 'property': 9, '(': 6, 'Listener': 5, 'Change': 4, 'Property': 3, 'add': 2, '.': 22, 'Support': 21, '{': 18, '': 7, 'String': 8, 'void': 1, 'public': 0}
{'}\n': 149, ';': 32, 'Folder': 5, 'new': 25, 'return': 145, '}': 33, ')': 11, '(': 6, 'mkdirs': 140, '.': 61, '{': 15, 'else': 135, 'Path': 129, 'Absolute': 128, 'get': 127, '+': 123, 'STR': 30, '_': 29, 'IOException': 14, '': 1, 'throw': 24, 'exists': 62, 'if': 16, '++': 103, 'i': 52, 'Integer': 95, ',': 45, 'String': 48, 'Next': 90, 'format': 86, 'Format': 84, 'Message': 83, 'Dir': 10, 'containing': 9, 'Object': 41, 'File': 2, 'create': 3, '=': 38, 'NUM': 55, '<': 67, '&&': 65, 'while': 57, 'int': 51, 'null': 21, '==': 20, 'throws': 12, 'New': 4, 'public': 0}
{'}\n': 110, ';': 37, 'this': 108, 'return': 107, ')': 23, 'element': 27, '(': 7, 'Child': 76, 'append': 75, '.': 30, 'Element': 26, 'resource': 98, '}': 97, 'value': 53, 'Node': 82, 'Text': 81, 'create': 31, 'document': 29, 'STR': 35, '_': 34, '=': 28, '': 1, '{': 24, 'values': 22, ':': 54, 'String': 9, 'for': 49, 'name': 10, ',': 11, 'Attribute': 41, 'set': 40, '>': 21, '<': 18, 'List': 17, 'Null': 15, 'Not': 14, '@': 12, 'Array': 6, 'add': 4, 'Poet': 3, 'Resources': 2, 'public': 0}
{'}\n': 161, ';': 154, 'return': 156, ')': 73, '(': 5, 'Action': 4, '': 18, 'add': 103, '.': 102, '{': 74, 'action': 24, 'Type': 28, 'public': 0}
{'}\n': 114, '}': 108, ';': 25, 'len': 55, '+=': 110, ')': 18, 'entry': 82, '(': 4, 'add': 103, '.': 102, 'entries': 13, 'code': 43, ',': 14, 'row': 17, 'this': 90, 'Entry': 11, 'Leaf': 10, 'Page': 9, '': 5, 'new': 84, '=': 22, '{': 19, 'REMOVE': 75, '==': 68, '||': 71, 'INSERT': 70, 'if': 65, 'Length': 58, 'get': 57, 'int': 20, 'MASK': 52, 'CODE_': 51, '&': 49, ']': 28, '[': 27, 'buffer': 29, 'while': 33, '_buffer': 31, 'byte': 26, 'Head': 24, '_row': 23, 'Row': 16, '>': 12, '<': 7, 'Set': 6, 'fill': 1, 'void': 0}
{'}\n': 73, '}': 68, ';': 42, 'return': 39, ')': 37, '(': 10, 'S': 23, '': 19, 'null': 36, '==': 35}
{'}\n': 209, '}': 208, ';': 46, ')': 20, 'STR': 39, '_': 38, '(': 4, '.': 106, 'db': 60, '{': 21, 'Case': 109, 'Ignore': 108, 'equals': 107, 'if': 92, '': 5, '=': 27, 'String': 6, ',': 8, 'void': 1}
{'}\n': 20, ';': 19, 'image': 10, '.': 14, '{': 12, ')': 11, 'Image': 9, '': 1, '(': 6, 'public': 0}
{'}\n': 24, ';': 23, ')': 8, '.': 16, '': 1, ',': 13, 'mimetype': 7, '(': 4, 'this': 10, '{': 9, 'String': 6, 'Resource': 3, 'public': 0}
{'}\n': 271, ';': 269, ')': 49, 'NUM': 113, '_': 59, '(': 31, '.': 55, 'arg': 43, 'STR': 60, 'Of': 83, 'index': 82, 'With': 57, 'starts': 56, 'String': 33, '': 32, 'private': 0}
{'}\n': 609, ';': 608, ')': 67, '(': 42, '.': 76, 'Fingerprint': 62, '': 52, 'boolean': 19}
{'}\n': 40, ';': 39, ')': 10, 'NUM': 15, '_': 14, '/': 29, 'Freq': 5, 'input': 8, '(': 6, '.': 20, 'Math': 19, '': 18, '*': 16, 'return': 12, '{': 11, 'double': 1, 'To': 3, 'private': 0}
{'}\n': 223, ';': 156, 'm': 157, '(': 107, '.': 196, 'Math': 195, '': 194, '=': 190, 'Px': 167, ')': 29, '{': 30, 'float': 25, 'public': 0}
{'}\n': 35, ';': 22, 'bytes': 15, 'return': 32, ')': 10, '(': 7, 'Bytes': 6, 'next': 26, '.': 25, ']': 4, '[': 3, 'byte': 2, 'new': 17, '=': 16, '{': 11, 'int': 8, 'random': 5, 'static': 1, 'public': 0}
{'}\n': 130, ';': 24, ')': 9, '(': 8, 'String': 5, 'to': 6, '.': 28, 'Bf': 15, '': 1, 'return': 120, 'STR': 32, '_': 31, '+': 98, 'NUM': 109, ',': 107, 'To': 60, 'double': 102, 'Utils': 100, 'append': 29, 'if': 35, '}': 76, 'Set': 59, 'start': 58, '{': 10, 'null': 39, 'm_starting': 37, 'Buffer': 13, 'new': 18, '=': 17, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 36, ';': 27, 'length': 13, 'm': 16, ')': 14, ',': 22, 'pos': 23, 'buf': 7, '(': 3, '.': 18, '{': 15, ']': 6, '[': 5, 'byte': 4, 'void': 1}
{'}\n': 23, ';': 22, ')': 4, '(': 3, 'Millis': 12, 'Time': 11, 'current': 10, '.': 9, 'System': 8, '': 7, 'return': 6, '{': 5, 'public': 0}
{'}\n': 332, '}': 48, ';': 29, ')': 15, 'position': 191, '(': 4, 'm': 145, '{': 16, 'if': 31, ',': 8, 'item': 20, 'Changed': 276, 'Selection': 265, 'on': 274, '.': 80, 'Listener': 266, 'null': 268, '!=': 267, 'Selections': 161, 'Management': 149, 'State': 148, 'Based': 147, 'Position': 146, 'is': 81, 'return': 46, 'void': 1}
{'}\n': 131, ';': 44, 'return': 45, ')': 28, '+': 124, 'STR': 42, '_': 41, 'Period': 20, 'Current_': 19, 'A_': 18, '': 5, '(': 4, '.': 38, 'if': 30, '=': 59, 'assetwk': 8, '}': 49, 'log': 37, '{': 29, 'Dep': 27, 'Accum_': 26, 'Decimal': 24, 'Big': 23, ',': 9, 'int': 16, 'Acct': 12, 'asset': 13, 'MAsset': 11, 'Workfile': 7, 'MDepreciation': 6, 'public': 0}
{'}\n': 38, ';': 37, ')': 25, 'STR': 35, '_': 34, '(': 24, 'Exception': 32, '': 1, 'new': 28, 'throw': 27, '{': 26, '>': 16, 'Integer': 15, '<': 4, 'List': 9, ',': 7, 'Map': 3, 'Tree': 2}
{'}\n': 27, ';': 26, ')': 16, 'Listener': 5, '(': 6, 'add': 2, '.': 19, '{': 17, 'Change': 4, '': 8, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 12, '(': 11, 'iterator': 10, '.': 16, 'return': 14, '{': 13, 'Iterator': 5, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 33, ';': 32, 'STR': 31, '_': 18, '==': 29, ')': 9, 'NUM': 19, '(': 5, 'At': 24, 'char': 23, '.': 13, 'str': 8, '&&': 20, '!=': 17, 'length': 14, 'return': 11, '{': 10, 'String': 7, '': 6, 'Space': 4, 'With': 3, 'boolean': 1, 'private': 0}
{'}\n': 35, ';': 24, '_': 21, '.': 18, 'token': 15, '(': 5, ')': 9, 'key': 2, '=': 16, 'String': 7, '': 6, '{': 10, 'private': 0}
{'}\n': 126, ';': 25, 'BOOL': 124, '_': 123, 'return': 122, '}': 121, '=': 18, ')': 9, 'Width': 83, 'plot': 52, 'Y': 32, '(': 4, 'X': 22, 'x': 17, 'get': 21, '.': 20, 'e': 8, 'y': 27, 'int': 16, '{': 10, 'if': 11, 'Event': 7, 'Mouse': 6, '': 5, 'mouse': 2, 'boolean': 1, 'public': 0}
{'}\n': 135, ';': 49, ')': 9, '(': 3, 'Changed': 131, 'Data': 130, 'Table': 129, 'fire': 128, 'data': 50, 'general': 7, '': 4, 'List': 58, 'new': 52, '=': 21, 'get': 25, '.': 24, '{': 10, 'General': 5, 'load': 2, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, '!=': 11, 'return': 8, '{': 7, ')': 6, '(': 5, 'boolean': 1, 'public': 0}
{'}\n': 52, ';': 45, ')': 14, '(': 6, 'Bytes': 41, 'get': 40, '.': 35, 'contents': 13, 'write': 36, 'fos': 23, 'file': 9, 'Stream': 22, 'Output': 21, 'File': 5, '': 7, 'new': 25, '=': 24, '{': 18, 'IOException': 17, 'throws': 15, 'String': 12, ',': 10, 'To': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 157, ';': 70, ')': 22, 'value': 150, '(': 6, '': 7, 'new': 143, 'add': 141, '.': 56, '=': 108, '<': 12, '{': 23, ',': 41, 'String': 14, 'Pair': 37, '>': 19, 'void': 1, 'public': 0}
{'}\n': 47, ';': 46, ')': 12, '.': 22, 'y': 30, 'p0': 32, '-': 31, 'p1': 28, '{': 13, '(': 4, 'angle': 3, 'double': 2, 'public': 0}
{'}\n': 29, ';': 21, 'Names': 11, 'column': 10, '=': 17, 'NUM': 20, '_': 19, ')': 12, ']': 9, '[': 8, 'String': 7, '': 1, '(': 5, 'public': 0}
{'}\n': 62, ';': 37, 'BOOL': 60, '_': 59, 'return': 28, '}': 38, ')': 8, '(': 7, 'Enabled': 6, 'is': 5, '.': 32, '{': 9, 'null': 17, '!=': 16, 'if': 10, 'else': 39, 'Panel': 15, 'Selection': 14, 'attribute': 13, 'Only': 23, 'Value': 22, '!': 20, '&&': 19, 'boolean': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 110, ';': 97, ')': 19, 'g2': 95, ',': 10, '(': 4, '': 6, 'get': 73, '.': 31, 'Hovered': 61, 'Operator': 59, 'model': 30, 'if': 21, '{': 20, 'printing': 18, 'boolean': 17, 'D': 14, 'final': 5, 'void': 1, 'private': 0}
{'}\n': 34, ';': 33, 'transaction': 23, '{': 8, ')': 7, '(': 6, 'Transaction': 5}
{'}\n': 32, ';': 24, ')': 11, '(': 7, 'start': 2, '.': 26, 'runner': 13, ',': 20, 'this': 19, 'Thread': 17, '': 16, 'new': 15, '=': 14, '{': 12, 'void': 1, 'public': 0}
{'}\n': 95, ';': 22, 'return': 68, '}': 72, '{': 8, ')': 7, '(': 6, '.': 28, 'Dir': 12, '!': 25, 'if': 23, 'else': 74, '': 9, '=': 13, 'boolean': 35, 'exists': 29, 'Name': 20, 'Directory': 19, 'File': 10, 'new': 14}
{'}\n': 160, ';': 29, ')': 13, '(': 8, 'String': 19, 'to': 155, '.': 130, '||': 107, '_': 66, 'character': 49, 'if': 62, '': 18, 'new': 23, '=': 22, '{': 17}
{'}\n': 154, '}': 153, ';': 64, 'Children': 38, 'new': 37, '(': 31, '.': 104, ')': 54, '=': 78, 'for': 67, '{': 55, 'List': 18, '': 12}
{'}\n': 269, ';': 268, ')': 197, '(': 195, '.': 256, 'messages': 227, '{': 198, 'Messages': 179, 'void': 1, 'private': 0}
{'}\n': 177, ';': 176, ')': 120, 'Config': 60, '(': 78, '.': 140, '': 95}
{'}\n': 37, ';': 33, 'sb': 10, 'return': 34, ')': 26, '(': 6, '': 2, 'Builder': 9, 'String': 3, 'final': 1}
{'}\n': 249, ';': 30, ')': 9, '(': 4, ']': 94, '[': 91, 'in': 8, '=': 23, 'read': 2, '.': 25, '{': 47, '++': 45, 'i': 34, '<': 40, 'NUM': 37, '_': 36, 'int': 33, 'for': 31, 'num': 68, 'UTF': 55, '': 5, 'IOException': 12, 'throws': 10, 'Input': 7, 'void': 1, 'public': 0}
{'}\n': 214, ';': 84, ')': 31, '.': 80, '': 78, 'xi': 95, '(': 5, 'x': 9, 'NUM': 71, '_': 70, '}': 127, 'INFINITY': 83, 'POSITIVE_': 119, 'Double': 79, '{': 32, 'if': 93, '-': 47, '=': 37, 'double': 2, ',': 10, 'static': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 9, '(': 4, 'Message': 18, 'get': 16, '.': 15, 'Cause': 8, 'root': 7, 'super': 11, '{': 10, 'Throwable': 6, '': 1, 'Exception': 3, 'Sdp': 2, 'public': 0}
{'}\n': 85, ';': 83, ')': 59, ',': 78, 'property': 63, '(': 33, 'Change': 27, 'Property': 26, '{': 60, 'listener': 56, 'Listener': 28, '': 16}
{'}\n': 38, ';': 37, ')': 10, '(': 5, 'template': 9, '.': 16, 'return': 12, '{': 11, '': 6, 'boolean': 1, 'public': 0}
{'}\n': 166, ';': 164, ')': 121, '(': 117, '.': 156, 'Attributes': 107, '{': 122}
{'}\n': 145, ';': 71, ')': 56, 'Url': 9, 'base': 30, '(': 73, '': 6, 'new': 125, ',': 108, '_': 88, '.': 77, 'STR': 89, 'if': 72, '{': 42, 'public': 0}
{'}\n': 177, ';': 59, ')': 5, '(': 4, '.': 38, '=': 83, 'start': 3, ',': 56, 'STR': 45, '_': 44, '': 7, '{': 11, 'throws': 6, 'public': 0}
{'}\n': 14, ';': 13, 'return': 10, '{': 9, ')': 8, '(': 7, 'Complete': 6, 'is': 5, 'boolean': 4, 'public': 3}
{'}\n': 198, ';': 158, ')': 28, ',': 177, 'code': 163, '(': 5, 'Result': 189, 'render': 188, 'return': 187, 'Level': 180, 'Correction': 179, 'contents': 8, 'encode': 4, '.': 41, 'Encoder': 172, '': 1, '=': 164, '}': 160, 'STR': 88, '_': 71, 'Exception': 32, 'Argument': 79, 'Illegal': 78, 'new': 76, 'throw': 75, '{': 33, 'NUM': 72, '==': 37, 'length': 42, '||': 39, 'null': 38, 'if': 34, 'Writer': 31, 'throws': 29, 'String': 7, 'Matrix': 3, 'Byte': 2, 'public': 0}
{'}\n': 46, ';': 23, 'this': 44, 'return': 43, ')': 12, 'value': 11, ',': 8, 'key': 7, '(': 4, 'put': 36, '.': 16, 'Null': 19, 'Non': 18, 'require': 17, 'Objects': 15, '': 1, '{': 13, 'String': 6, 'Request': 2, 'public': 0}
{'}\n': 151, ';': 13, '(': 4, '.': 8, ')': 5, 'null': 136, '!=': 135, '': 18, '=': 115, '}': 110, '{': 6, 'if': 93, 'STR': 84, '_': 21, 'set': 44, ',': 23, 'void': 1}
{'}\n': 85, ';': 32, ')': 11, '(': 6, 'String': 34, 'to': 79, '.': 46, 'builder': 36, ',': 27, 'File': 8, 'out': 18, 'To': 71, 'write': 69, 'Utils': 67, '': 7, 'Class': 60, 'generate': 3, 'Imports': 54, 'STR': 50, '_': 49, 'append': 47, 'Builder': 35, 'new': 21, '=': 20, 'PATH': 30, 'REGISTRY_': 29, 'Folder': 10, 'root': 9, '{': 15, 'IOException': 14, 'throws': 12, 'Manager': 5, 'Extension': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 17, 'task': 16, '(': 9, 'submit': 8, '.': 26, 'return': 24, '{': 23, '>': 7, '': 2, '<': 4, 'Callable': 11, 'Future': 3, 'public': 0}
{'}\n': 154, '}': 82, ';': 81, ')': 56, 'msg': 79, ',': 113, '_': 58, '{': 16, 'name': 8, '(': 5, 'STR': 102, '.': 53, 'if': 17, 'Exception': 75, '': 6, 'new': 70, 'throw': 69, 'NUM': 59, 'length': 54, '||': 51, 'null': 21, '==': 20, 'String': 7, 'Name': 4, 'check': 2, 'void': 1}
{'}\n': 60, ';': 46, ')': 16, '(': 8, 'Permissions': 55, 'Namespace': 4, 'get': 53, '.': 20, 'User': 3, 'Authorization': 33, '': 18, '{': 17, 'private': 0}
{'}\n': 18, ';': 17, ')': 8, '(': 4, 'String': 2, 'to': 13, '.': 12, 'o': 7, 'return': 10, '{': 9, 'Object': 6, '': 1}
{'}\n': 368, '}': 162, ';': 14, 'NUM': 85, '_': 84, '-': 95, '=': 32, 'Significance': 323, 'differences': 23, '{': 6, 'else': 163, ')': 5, 'mean': 124, '.': 9, 'Stats': 8, 'y': 15, '>': 249, 'x': 7, '(': 4, 'if': 40, 'Level': 334, 'sig': 333, '<=': 332, 'Probability': 255, '==': 300, 'Sq': 114, 'sum': 99, 'count': 106, 'int': 271, ',': 83, 'tval': 191, '*': 100, 'FProbability': 261, '': 33, 'Statistics': 258, 'sqrt': 201, 'Math': 199, 'double': 89, 'Dev': 54, 'std': 53, 'gr': 177, 'Utils': 74, 'correlation': 31, '/': 105, 'slope': 90, 'eq': 76, '!': 42, 'Sum': 94, 'xy': 93, '&&': 56, 'N': 38, 'Na': 37, 'is': 46, 'Double': 34, 'Derived': 3, 'calculate': 2, 'void': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 14, '(': 6, '.': 21, 'Group': 5, 'consistency': 12, 'get': 22, '{': 15, '': 8, 'Consistency': 4}
{'}\n': 25, ';': 17, ')': 8, '(': 7, '.': 20, 'prefetch': 19, 'return': 18, 'Closed': 14, 'check': 13, '{': 12, 'Exception': 11, '': 1, 'throws': 9, 'receive': 4, 'Message': 3, 'Amqp': 2, 'public': 0}
{'}\n': 206, '}': 90, ';': 50, 'BOOL': 189, '_': 20, 'return': 187, 'Read': 18, 'num': 153, '+=': 197, 'End': 43, 'zz': 2, '{': 13, 'else': 192, ')': 5, 'NUM': 21, '<': 182, '(': 4, 'if': 14, '-': 45, 'length': 100, '.': 8, 'Buffer': 30, ',': 31, 'read': 159, 'Reader': 157, '=': 86, 'int': 152, 'new': 105, 'arraycopy': 27, 'System': 25, '': 11, ']': 108, '*': 116, 'Pos': 61, 'Current': 60, '[': 107, 'char': 104, '>=': 96, 'Start': 17, '-=': 54, 'Pushback': 76, 'Marked': 68, '>': 19, 'IOException': 12, 'io': 9, 'java': 7, 'throws': 6, 'Refill': 3, 'boolean': 1, 'private': 0}
{'}\n': 468, ';': 386, ')': 106, '(': 82, '.': 421, 'ids': 390, 'NUM': 275, '_': 274, '>': 128, 'Integer': 127, '': 122, '<': 125, 'List': 124, 'Array': 123, 'new': 154, '=': 153, '{': 107, 'int': 83, 'Entity': 22, 'Delete': 6, 'void': 1}
{'}\n': 124, ';': 39, ')': 5, '(': 4, '.': 18, 'bs': 97, 'server': 86, 'shutdown': 74, 'get': 51, '=': 46, '': 7, 'if': 10, '{': 9, 'Exception': 8, 'throws': 6}
{'}\n': 30, '}': 29, ';': 28, ')': 12, 'item': 18, '(': 4, 'Selection': 24, '{': 13, 'items': 11, ':': 19, 'Entity': 9, '': 5, 'for': 14, '>': 10, '<': 7, 'Set': 6, 'Selections': 3, 'void': 1, 'public': 0}
{'}\n': 288, ';': 50, '}': 228, ')': 19, 'Exception': 263, '': 6, '(': 37, 'catch': 240, '{': 20, '.': 120, 'NUM': 149, '_': 148, 'line': 102, 'null': 130, '!=': 129, 'Line': 122, 'read': 121, 'br': 90, '=': 26, 'String': 7, 'fr': 76, 'Reader': 81, 'Buffered': 94, 'new': 78, 'file': 83, 'File': 80, 'try': 71, 'public': 0}
{'}\n': 88, ';': 26, 'BOOL': 25, '_': 24, 'return': 23, ')': 9, '(': 5, 'size': 69, '.': 16, 'List': 15, '_load': 14, ',': 65, 'NUM': 74, '+': 72, 'PROPERTY': 64, 'CHANGED_': 63, 'LOADS_': 62, '': 6, 'Change': 59, 'Property': 58, 'Fire': 57, 'And': 56, 'Dirty': 55, 'set': 54, 'load': 8, 'Name': 4, 'get': 43, 'STR': 41, 'debug': 38, 'log': 36, 'remove': 31, '}': 27, '{': 10, 'contains': 17, '!': 13, 'if': 11, 'String': 7, 'Load': 3, 'delete': 2, 'boolean': 1, 'public': 0}
{'}\n': 93, ';': 34, 'State': 38, ')': 17, '(': 7, 'assert': 78, 'Id': 11, ',': 12, 'host': 49, '.': 25, 'this': 24, 'AWSId': 45, 'By': 44, 'Compute': 37, 'get': 42, '=': 41, '': 8, '}': 35, 'return': 32, '{': 21, 'Mock': 29, 'Client': 28, 'Aws': 27, 'is': 26, 'if': 22, 'Throwable': 20, 'throws': 18, 'String': 9, 'private': 0}
{'}\n': 119, ';': 118, ')': 70, '(': 96, 'append': 92, '.': 91, 'builder': 26, '{': 79, 'Builder': 22, 'String': 15, '': 20, 'public': 0}
{'}\n': 111, ';': 50, ')': 27, 'arg': 19, '(': 9, '.': 87, 'args': 86, 'if': 29, '{': 28, '': 13, 'public': 0}
{'}\n': 63, ';': 62, ')': 26, ',': 21, '(': 54, 'Policy': 18, '': 13}
{'}\n': 63, ';': 62, ')': 8, ',': 58, '(': 5, 'Long': 31, '.': 27, 'Array': 16, '': 13, '{': 9, 'int': 6, 'public': 0}
{'}\n': 148, '}': 118, ';': 32, ')': 23, 'NUM': 39, '_': 38, '>': 141, '-': 136, 'k': 27, '(': 4, '*': 133, 'increment': 129, '.': 30, 'diststat': 22, '{': 24, 'null': 124, '!=': 123, 'if': 120, ']': 7, 'j': 69, '[': 6, 'means': 10, 'wrap': 58, 'Vector': 51, 'Double': 50, '': 19, ',': 11, 'mi': 52, 'distance': 98, 'Function': 99, '=': 28, 'i': 36, 'cdist': 17, '++': 46, '<': 42, 'int': 26, 'for': 33, 'length': 31, 'final': 25, 'Statistic': 21, 'Long': 20, 'double': 5, 'Seperation': 3, 'recompute': 2, 'void': 1, 'private': 0}
{'}\n': 113, '}': 34, ';': 33, 'input': 23, ')': 12, '(': 7, '_': 74, 'int': 60, 'return': 31, '{': 13, 'if': 14, '': 2, 'private': 0}
{'}\n': 110, ';': 43, ')': 10, '(': 5, '.': 25, ',': 91, 'Ele': 54, 'Element': 84, '=': 81, '}': 78, '{': 15, 'get': 61, '': 6, 'Exception': 14, 'throws': 11, 'Name': 9, 'String': 7}
{'}\n': 43, ';': 42, ')': 20, 'l': 17, '(': 6, 'add': 2, '.': 37, '{': 21, 'Listener': 5, 'Process': 3, '': 8, 'void': 1, 'public': 0}
{'}\n': 467, ';': 464, 'root': 369, '{': 413, ')': 412, '(': 406, 'String': 116, '': 115}
{'}\n': 120, ';': 41, 'this': 118, 'return': 117, '}': 115, ')': 18, 'Len': 23, 'replace': 4, ',': 12, 'Str': 2, 'search': 10, '+': 101, 'index': 98, '(': 6, 'Impl': 96, 'NUM': 32, '_': 31, '=': 24, 'int': 21, 'final': 7, '{': 19, '>': 46, 'if': 42, 'length': 37, '.': 36, ':': 33, '?': 30, 'null': 29, '==': 28, 'String': 9, '': 1, 'Builder': 3, 'public': 0}
{';\n': 12, '(': 5, 'internal': 3, 'void': 2, 'abstract': 1, 'protected': 0}
{'}\n': 372, ';': 100, 'Box': 53, ')': 72, '_': 129, '(': 58, 'set': 152, '.': 80, 'STR': 130, 'get': 126, '': 48, 'Horizontal': 82}
{'}\n': 122, ';': 28, ')': 10, '(': 6, '.': 68, 'end': 55, ',': 81, 'NUM': 74, '_': 20, '+': 22, 'start': 13, 'if': 29, 'STR': 21, 'Of': 18, '{': 11, '': 1}
{'}\n': 32, ';': 31, ')': 12, '(': 4, '.': 18, 'Space': 9, '{': 13, 'address': 10, 'Address': 8, '': 6, 'final': 5}
{'}\n': 54, ';': 53, ')': 27, '(': 14, '': 3, ',': 24, '.': 39, 'Supplier': 38, 'parallelism': 26, '{': 28, 'int': 25, 'source': 23, '>': 5, 'T': 4, 'extends': 19, '?': 18, '<': 2, 'Publisher': 16, 'from': 13, 'Flux': 8, 'Parallel': 7, 'static': 1, 'public': 0}
{'}\n': 112, ';': 23, ')': 12, 'm': 35, '(': 4, '.': 25, '': 49, ',': 8, 'void': 1, 'private': 0}
{'}\n': 101, ';': 78, 'Count': 25, 'last': 63, 'count': 82, ')': 29, '(': 55, '=': 43, '.': 52, '{': 30}
{'}\n': 78, ';': 77, ')': 65, 'channel': 46, '(': 21, 'add': 69, '.': 68, 'channels': 67, '{': 66, 'Channel': 2, '': 32}
{'}\n': 79, ';': 26, ')': 9, ',': 75, '(': 6, 'Float': 4, 'Point': 3, 'Pla': 2, '': 1, 'new': 68, '/': 53, '*': 37, 'v_y': 18, '=': 30, 'double': 7, '+': 39, 'sqrt': 34, '.': 33, 'Math': 32, '}': 27, 'return': 24, '{': 10, 'NUM': 21, '_': 20, 'v_x': 13, 'if': 11, 'public': 0}
{'}\n': 184, ';': 32, ')': 24, '(': 47, 'Head': 28, 'row': 5, '{': 64, 'NUM': 150, '_': 149, 'Tail': 35, 'blob': 34, ',': 90, '.': 45, 'Length': 54, '=': 29, '<': 60, 'if': 56, '-=': 52, 'int': 0, ']': 22, '[': 21, '': 3, 'Row': 4}
{'}\n': 82, ';': 23, ')': 70, 'uri': 26, '(': 5, '.': 76, 'URI': 45, 'resolve': 31, '=': 27, 'null': 18, '{': 12, '': 8}
{'}\n': 244, '}': 113, ';': 29, ')': 8, '(': 3, '{': 14, 'e': 232, 'Exception': 231, 'Format': 230, 'Number': 229, '': 4, 'catch': 225, 'new': 186, 'if': 30, 'Long': 167, '.': 22, 'NUM': 37, '_': 26, '=': 19, 'else': 114, '-': 35, '==': 34, 'STR': 27, 'Of': 24, 'index': 23, 'int': 16, 'throws': 9, 'String': 5}
{'}\n': 144, ';': 73, ')': 21, 'len2': 24, '(': 7, 'sqrt': 139, '.': 29, 'Math': 129, '': 8, '*': 37, 's': 75, 'abs': 131, 'return': 127, '/': 124, 'y': 54, 'A': 15, '-': 31, 'B': 20, 'x': 30, 'p': 10, '=': 25, 'double': 2, '+': 49, '{': 22, 'Coordinate': 9, ',': 11, 'Line': 5, 'Point': 4, 'distance': 3, 'static': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 7, 'STR': 16, '_': 15, '(': 6, 'Property': 13, 'get': 12, '.': 11, 'properties': 10, 'return': 9, '{': 8, 'String': 2, '': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 10, 'length': 29, '.': 13, 'b': 9, ',': 23, 'NUM': 25, '_': 24, '(': 5, '{': 18, 'IOException': 17, '': 16, 'io': 14, 'java': 12, 'throws': 11, ']': 8, '[': 7, 'byte': 6, 'void': 2, 'public': 0}
{'}\n': 585, ';': 25, ')': 5, 'CENTER': 307, '': 8, '.': 29, 'Layout': 21, 'Border': 20, ',': 80, '(': 4, 'add': 297, 'Panel': 12, 'new': 14, 'JPanel': 9, '=': 13, 'final': 7, 'NUM': 79, '_': 38, 'Empty': 69, 'set': 30, 'STR': 39, 'Titled': 35, '{': 6, 'void': 1, 'private': 0}
{'}\n': 32, ';': 31, 'BEAN': 30, 'JELLY_': 29, '': 11, '.': 13, 'CODES': 26, 'VERSION_': 25, 'Build': 12, '>=': 20, 'INT': 19, 'SDK_': 18, 'VERSION': 15, '{': 9, ')': 8, '(': 7}
{'}\n': 84, ';': 36, ')': 11, '-': 74, 'k': 10, 'n': 7, '(': 5, '=': 68, 'NUM': 43, '_': 42, '.': 52, 'Math': 51, '': 50, '{': 12, 'int': 6, ',': 8, 'public': 0}
{'}\n': 120, '}': 100, '{': 19, ')': 18, '(': 44, ';': 23, '.': 38, 'if': 76, '_': 71, 'line': 60, 'String': 59, '': 10, '>': 32, 'private': 0}
{'}\n': 106, '}': 98, ';': 66, '_': 95, '(': 18, ')': 24, '.': 21, 'File': 20, '!': 69, 'if': 17, '{': 34, 'Directory': 30, 'is': 29, 'output': 19, 'exists': 22, '': 10}
{'}\n': 23, ';': 22, ')': 11, 'a': 10, '(': 6, 'add': 2, '.': 16, '{': 12, 'Listener': 5, 'Action': 8, '': 7, 'void': 1, 'public': 0}
{'}\n': 70, ';': 14, 'L': 10, 'log': 9, 'return': 66, '}': 64, ')': 6, 'j': 28, '(': 5, 'Value': 58, 'Statistic': 18, 'get': 37, '.': 36, 'statistic': 19, 'Math': 50, '': 17, '-=': 48, '{': 7, '++': 43, 'Dimension': 38, '<': 34, 'NUM': 13, '_': 12, '=': 11, 'int': 27, 'for': 15, 'List': 22, 'data': 21, ':': 20, 'double': 1, 'Likelihood': 4, 'Log': 3, 'calculate': 2, 'public': 0}
{'}\n': 71, ';': 29, 'BOOL': 69, '_': 68, '==': 67, ')': 12, '(': 8, 'Empty': 64, 'is': 63, '.': 49, 'From': 18, 'reachable': 17, 'return': 58, 'Not': 51, 'and': 50, 'a': 11, 'Accept': 35, 'To': 40, 'States': 5, 'Live': 22, 'get': 21, '=': 20, 'Set': 16, 'Bit': 15, '': 9, 'Initial': 19, '{': 13, 'Automaton': 10, 'Dead': 4, 'has': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 58, ';': 14, ')': 8, 'SCALE': 55, '': 1, ',': 53, 'value': 31, '(': 4, 'Decimal': 2, 'new': 48, 'return': 22, 'Value': 42, 'Big': 29, 'get': 39, '.': 34, 'decimal': 7, 'm_value': 19, '=': 32, '}': 27, '{': 9, '==': 18, 'null': 17, 'if': 15, 'Defined': 11, 'assert': 10, 'public': 0}
{'}\n': 70, ';': 20, ')': 8, '(': 4, 'to': 61, '.': 53, 'equals': 3, 'return': 17, '}': 21, 'BOOL': 19, '_': 18, '{': 9, 'object': 7, 'if': 10, '==': 13, 'Object': 6, '': 5, 'boolean': 2, 'public': 0}
{'}\n': 123, ';': 59, ')': 37, '_': 22, '(': 4, '}': 104, '.': 34, '{': 47, 'STR': 23, 'c': 31, 'read': 35, 'reader': 33, '=': 32, '==': 43, 'if': 40, '': 9}
{'}\n': 63, ';': 62, ')': 18, 'uri': 55, '(': 39, 'get': 42, '.': 36, '': 13, '{': 19, 'public': 3}
{'}\n': 35, ';': 34, ')': 16, 'Key': 31, 'Encoded': 14, 'base64': 5, '(': 10, 'String': 6, '.': 22, 'Buffer': 4, 'Byte': 3, '': 2, '{': 17, 'To': 7, 'static': 1, 'public': 0}
{'}\n': 111, ';': 71, 'Duration': 104, 'm': 20, ')': 4, '(': 3, '/': 99, '{': 5, '<': 31, 'Start': 21, '.': 11, '': 9, '=': 8, 'public': 0}
{'}\n': 162, '}': 108, ';': 19, ')': 8, 'c': 14, '(': 17, 'append': 125, '.': 53, 'sb': 123, '': 10, ':': 48, '_': 77, 'case': 37, '{': 12, 'switch': 32, '=': 15, 'for': 20, 'throws': 9}
{'}\n': 177, ';': 62, ')': 31, '(': 29, '.': 98, 'Dom': 96, '': 53, '=': 36, 'signature': 33, 'Signature': 14, 'public': 0}
{'}\n': 242, ';': 186, ')': 44, '(': 6, '.': 65, '': 1, 'new': 69, 'NV': 71, ',': 12, 'Annotations': 74, '{': 45, 'final': 7, 'Node': 16, 'Var': 29, 'left': 11}
{'}\n': 124, ';': 22, 'return': 121, ')': 21, '(': 7, '.': 18, '=': 16, '{': 13, 'is': 29, 'Character': 27, '': 1, 'while': 81, 'reader': 17, 'STR': 43, '_': 42, 'ch': 15, 'if': 23, 'peek': 19, 'char': 14, 'private': 0}
{'}\n': 54, ';': 29, ')': 13, '(': 8, 'String': 4, 'to': 5, '.': 39, 'sb': 18, 'return': 46, '}': 45, 'append': 40, '{': 14, 'i': 35, 'int': 9, 'for': 30, 'Builder': 17, '': 3, 'new': 20, '=': 19, 'public': 0}
{'}\n': 31, ';': 30, ')': 14, '(': 22, 'Samples': 9, '.': 24, '': 2, 'Buffer': 4, 'Byte': 3, 'public': 0}
{'}\n': 105, ';': 101, ')': 26, 'Address': 97, 'ip': 17, '.': 54, '(': 39, 'port': 70, '{': 27, '': 14, ',': 21}
{'}\n': 58, '}': 57, ')': 10, '': 47, '(': 9, '.': 29, 'tm': 28, ';': 22, 'void': 1, 'public': 0}
{'}\n': 181, '}': 106, ';': 63, '(': 4, '.': 69, ')': 34, 'NUM': 103, '_': 93, '-': 101, 'namespace': 96, '{': 36, 'String': 20, '': 19}
{'}\n': 156, '}': 120, ';': 26, ')': 6, '(': 5, 'close': 150, '.': 86, 'cleaner': 45, '{': 10, 'null': 47, '!=': 144, 'if': 141, 'finally': 139, 'Down': 13, 'count': 133, 'latch': 15, 'success': 127, 'Exception': 126, 'Pointer': 125, 'Null': 124, '': 8, 'catch': 121, 'Throw': 116, 'should': 115, 'l': 68, 'Any': 110, 'invoke': 109, 'e': 30, 'try': 49, 'add': 87, 'Task': 92, 'String': 65, 'Awaiting': 90, '>': 66, '<': 60, 'Callable': 62, 'List': 59, 'Array': 72, 'new': 17, '=': 16, 'Cleaner': 44, 'Pool': 36, 'NUM': 24, '_': 23, 'Join': 35, 'Fork': 34, 'Service': 29, 'Executor': 28, 'Latch': 14, 'Count': 12, 'Throwable': 9, 'throws': 7, 'Invoke': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 1267, '}': 275, ';': 48, ']': 11, '[': 10, '': 32, 'i': 57, 'p': 1187, '{': 180, ')': 207, '++': 1182, '<': 1178, 'NUM': 70, '_': 69, '=': 44, '(': 4, 'for': 487, 'if': 1057, '-': 408, '.': 199, 'Math': 920, 'double': 9, '+': 452, 'l': 285, 'int': 42, ',': 8, 'void': 2, 'static': 1}
{'}\n': 13, '{': 12, ')': 11, 'String': 9, '': 1, '(': 7, 'Group': 3, 'Signal': 2}
{'}\n': 186, ';': 41, 'map': 83, 'return': 173, ')': 23, 'reg': 10, '(': 6, 'add': 4, '.': 36, 'regs': 121, 'contains': 168, 'if': 42, 'else': 163, '}': 79, ',': 11, 'value': 22, 'put': 71, 'NUM': 106, '_': 105, 'List': 120, 'Array': 119, '': 1, 'new': 53, '=': 32, '{': 24, 'null': 47, '==': 46, 'get': 37, ']': 29, 'fldidx': 18, '[': 28, 'Maps': 31, 'attr': 30, 'Map': 3, 'Hash': 2, 'eclass': 15, 'Attr': 5, 'By': 34, 'service': 33, 'Fields': 62, 'Num': 61, 'Object': 21, 'int': 17, 'Class': 14, 'Entry': 13, 'Reg': 9, 'Svc': 8, 'private': 0}
{'}\n': 25, ';': 24, ')': 10, '(': 6, 'Charset': 17, 'default': 19, '.': 18, '': 1, ',': 15, 'uri': 9, 'this': 12, '{': 11, 'Util': 5, 'Decoder': 4, 'String': 3, 'Query': 2, 'public': 0}
{'}\n': 22, ';': 21, ')': 10, '(': 6, 'Error': 4, 'show': 3, '{': 11, 'String': 8, '': 7, 'void': 2}
{'}\n': 52, '{': 41, ')': 40, '(': 34, 'Destroy': 29, 'on': 12, 'void': 4}
{'}\n': 198, ';': 30, ')': 11, 'NUM': 111, '_': 110, ',': 171, 'Tag': 186, 'reparse': 185, 'size': 88, 'Time': 33, 'Write': 70, 'last': 50, 'Access': 51, 'creation': 32, 'Attrs': 15, 'file': 14, '(': 8, 'Attributes': 4, 'File': 3, 'Windows': 2, '': 1, 'new': 163, 'return': 162, '&': 128, 'SIZELOW': 126, 'DATA_': 27, 'OFFSETOF_': 25, '+': 23, 'address': 10, 'Int': 20, 'get': 19, '.': 18, 'unsafe': 17, '<<': 109, 'SIZEHIGH': 106, 'long': 9, '=': 16, 'LASTWRITETIME': 84, 'Long': 38, 'LASTACCESSTIME': 65, 'CREATETIME': 46, 'ATTRIBUTES': 28, 'int': 13, '{': 12, 'Data': 7, 'from': 5, 'static': 0}
{'}\n': 122, '}': 42, ';': 41, ')': 22, 'callback': 21, ',': 11, 'out': 15, '(': 7, 'Key': 112, 'get': 100, '.': 48, 'e': 79, 'String': 107, '': 8, 'Value': 95, 'Xml': 6, 'write': 4, 'next': 90, 'i': 56, 'Entry': 78, 'Map': 5, '=': 46, '{': 32, 'Next': 69, 'has': 68, 'while': 64, 'iterator': 60, 's': 45, 'Iterator': 55, 'Set': 44, 'entry': 49, 'val': 10, 'return': 40, 'null': 37, '==': 36, 'if': 33, 'IOException': 31, 'Exception': 28, 'Parser': 27, 'Pull': 26, 'throws': 23, 'Callback': 20, 'Write': 18, 'Serializer': 14, 'void': 3, 'final': 2, 'static': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 9, 'event': 8, '(': 5, 'Event': 3, 'fire': 2, '.': 23, '{': 10, '': 6, 'void': 1, 'public': 0}
{'}\n': 145, ';': 71, 'return': 127, '}': 103, '++': 118, '{': 17, ')': 16, '(': 5, '.': 26, '=': 83, 'Side': 15, 'if': 18, '': 11, 'boolean': 1}
{'}\n': 33, ';': 32, ')': 9, '(': 5, '.': 20, '': 17, 'null': 15, '!=': 14, 'resource': 8, '{': 10, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 40, ';': 18, 'off': 11, 'return': 37, ')': 8, '.': 14, 'annotation': 7, '(': 4, 'write': 2, 'position': 15, 'data': 13, '=': 12, 'int': 1, '{': 9, 'Annotation': 3, '': 5, 'public': 0}
{'}\n': 41, ';': 23, ')': 22, '': 8, 'Address': 5, 'inet': 11, '(': 19, 'Inet': 9, 'public': 0}
{'}\n': 49, ';': 48, '}': 45, 'Name': 44, 'template': 13, '{': 21, 'String': 12, '': 11, 'List': 35, 'Id': 9, 'rev': 8, '(': 6, 'Names': 26, 'Template': 4, 'Exception': 20, 'Api': 19, 'Wiki': 18, 'throws': 16, ')': 15, ',': 10, 'int': 7, 'Contains': 3, 'revision': 2, 'boolean': 1, 'public': 0}
{'}\n': 90, ';': 46, ')': 18, 'class': 87, '.': 63, 'Feed': 85, 'Generic': 5, '': 1, ',': 26, 'url': 36, '(': 13, 'URL': 40, 'new': 76, 'Pages': 74, 'All': 9, 'get': 72, 'return': 71, '}': 70, 'Date': 15, 'from': 16, 'format': 64, 'FORMAT': 62, 'DATE_': 61, '+': 41, 'STR': 43, '_': 42, '+=': 56, '{': 33, 'null': 52, '!=': 51, 'if': 47, 'domain': 45, 'BASE_': 39, '=': 37, 'String': 35, 'Exception': 25, 'Service': 31, 'IOException': 28, 'Domain': 24, 'Your': 23, 'For': 22, 'Apps': 21, 'throws': 19, 'Requests': 12, 'retrieve': 8, '>': 7, 'Entry': 6, '<': 3, 'List': 2, 'public': 0}
{'}\n': 403, ';': 52, ')': 35, ',': 7, '(': 4, '.': 96, 'h': 15, '+': 81, 'y': 9, 'w': 12, 'x': 6, 'NUM': 43, '_': 42, '/': 309, '-': 232, '': 17, '=': 39, '{': 36, 'boolean': 32, 'Color': 18, 'pen': 29, 'Paint': 23, 'fill': 19, 'int': 5, 'draw': 2, 'void': 1, 'protected': 0}
{'}\n': 54, ';': 24, 'List': 3, 'new': 15, 'return': 50, ')': 10, '(': 22, '.': 42, '': 1, '=': 17, '{': 11, 'String': 7, 'public': 0}
{'}\n': 45, ';': 36, ')': 21, 'null': 42, '(': 5, '.': 38, 'Walker': 26, '=': 28, '': 6, '{': 22, 'tree': 20, 'void': 1}
{'}\n': 326, ';': 234, ')': 15, 'Word': 6, '(': 10, '=': 25, '': 4, '.': 223, 'String': 12, 'new': 26, '{': 16}
{'}\n': 95, ';': 31, 'STR': 24, '_': 23, '+': 89, 'filename': 16, 'return': 81, '}': 80, ')': 12, '(': 7, 'Of': 51, 'index': 50, '.': 20, ',': 25, 'NUM': 58, 'substring': 65, '=': 17, '{': 13, '>': 56, 'if': 46, 'First': 37, 'replace': 21, 'String': 3, '': 2, 'public': 0}
{'}\n': 33, ';': 18, ')': 9, 'Prefix': 4, 'title': 11, ',': 26, 'null': 27, 'PREFIX': 25, 'TITLE_': 24, '': 6, '(': 5, 'Change': 21, 'Property': 20, 'fire': 19, 'prfx': 8, '.': 13, '{': 10, 'String': 7, 'Title': 3, 'void': 1, 'public': 0}
{'}\n': 244, ';': 50, ')': 10, '(': 3, 'Replies': 240, 'For': 239, 'wait': 238, '.': 38, 'rp': 112, 'this': 158, 'Outgoing': 156, 'put': 155, 'Dm': 67, 'origin': 66, 'multicast': 9, 'Multicast': 143, 'set': 136, 'Recipients': 137, 'Id': 72, 'Processor': 131, 'get': 69, '=': 52, 'processor': 125, ',': 7, 'Processor21': 117, 'Reply': 17, '': 4, 'new': 44, '}': 111, 'me': 64, 'remove': 88, '{': 19, 'contains': 80, 'if': 34, 'Manager': 71, 'Distribution': 70, 'Member': 63, 'Distributed': 62, 'recipients': 6, 'Set': 5, 'Hash': 55, 'Exception': 14, 'Interrupted': 13, 'throw': 43, 'interrupted': 39, 'Thread': 37, 'throws': 11, 'boolean': 8, 'send': 2, 'void': 1, 'public': 0}
{'}\n': 138, '}': 134, ';': 89, 'flag': 58, '{': 37, ')': 36, '(': 30, '.': 118, 'if': 92, '': 31, 'private': 0}
{'}\n': 88, ';': 45, 'NUM': 40, '_': 39, '-': 84, 'return': 35, '}': 46, ')': 12, 'Number': 6, 'road': 10, ',': 41, '(': 7, 'Index': 37, 'get': 36, 'index': 48, '{': 13, '>': 62, 'if': 14, '_index': 53, '=': 49, 'int': 1, '_road': 30, 'equals': 28, '.': 27, '!': 24, 'null': 19, '!=': 18, 'List': 17, 'sys': 16, 'String': 9, '': 8, 'Road': 5, 'By': 4, 'find': 2, 'public': 0}
{'}\n': 84, ';': 78, 'Name': 4, 'class': 38, 'return': 58, '}': 79, ')': 12, 'STR': 11, '_': 10, ',': 73, '(': 9, 'replace': 69, '.': 32, 'String': 16, 'canonicalize': 63, 'Factory': 61, 'Descriptor': 60, '': 1, '{': 41, 'NUM': 55, '>=': 53, 'Of': 48, 'index': 47, 'if': 42, 'UNKNOWN': 34, 'When': 31, '=': 29, 'when': 28, 'Class': 3, 'Slashed': 24, '@': 0, 'to': 17, 'static': 14, 'public': 13, 'FBWarnings': 8, 'Suppress': 7}
{'}\n': 172, ';': 51, 'return': 169, '}': 160, ')': 67, 'j': 55, '(': 53, ']': 16, '[': 15, '{': 68, 'NUM': 58, '_': 57, '.': 81, 'if': 69, '++': 66, 'L': 27, '': 26, '<': 61, '=': 40, 'int': 13, 'for': 52, 'new': 41, 'static': 1, 'public': 0}
{'}\n': 122, ';': 32, ')': 9, '(': 5, 'size': 112, '.': 41, 'Table': 110, 'Hash': 109, '_location': 108, 'Of': 106, 'value': 105, 'Integer': 57, '': 6, ',': 47, 'Size': 100, 'old': 99, 'PROPERTY': 97, 'CHANGED_': 96, 'LISTLENGTH_': 95, 'Change': 92, 'Property': 91, 'Fire': 90, 'And': 89, 'Dirty': 88, 'set': 87, '=': 55, '{': 10, 'public': 0}
{'}\n': 39, ';': 38, ')': 7, '(': 6, '_': 26, ',': 28, 'Set': 24, 'And': 23, 'compare': 22, '.': 21, 'if': 14, 'close': 5, 'void': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 88, ';': 38, 'return': 84, '}': 83, '_': 64, ')': 20, '(': 34, '.': 61, 'STR': 65, '': 16, '{': 21, 'Home': 51, 'if': 39, '=': 26, 'String': 23, 'Dir': 19, 'static': 1, 'public': 0}
{'}\n': 44, ';': 43, '_': 21, 'Name': 11, 'event': 10, ')': 12, 'STR': 22, '(': 7, 'equals': 19, '.': 18, '{': 13, 'String': 9, '': 1, 'Allowed': 6, 'connection': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 44, ';': 43, ')': 12, 'z': 38, '.': 21, 'o': 8, '(': 5, 'Math': 20, '': 2, ',': 30, 'x': 26, 'Vector2': 3, 'new': 15, 'return': 14, '{': 13, 'static': 1, 'public': 0}
{'}\n': 87, '}': 58, ';': 57, ')': 27, 'STR': 78, '_': 77, '+': 79, 'clazz': 9, '(': 6, 'Exception': 33, 'Method': 32, 'Such': 31, 'No': 30, '': 2, 'new': 70, 'throw': 69, '{': 34, 'e': 66, 'Found': 64, 'Not': 63, 'Class': 42, 'catch': 59, 'Name': 14, 'method': 13, ',': 10, 'for': 44, '.': 43, 'Static': 5, 'invoke': 4, 'return': 37, 'try': 35, 'throws': 28, 'String': 8, 'Object': 3, 'static': 1, 'public': 0}
{'}\n': 176, ')': 13, '(': 4, '.': 106, 'return': 159, '{': 17, ';': 111, 'stream': 62, 'null': 77, '!=': 67, 'if': 18, 'IOException': 16, '': 15, 'throws': 14, 'public': 0}
{'}\n': 95, ';': 37, ')': 17, '(': 4, '.': 72, 'NUM': 67, '_': 57, ',': 59, '': 54, 'b': 21, '{': 18}
{'}\n': 40, ';': 39, ')': 20, ',': 15, 'Matcher': 8, 'request': 13, '(': 6, 'Pair': 31, 'Source': 18, 'Response': 17, '': 7, 'new': 26, 'add': 24, '.': 23, 'mappings': 22, '{': 21, '>': 12, 'Request': 11, '<': 9, 'void': 1}
{'}\n': 115, '}': 114, ';': 43, ')': 21, '(': 8, '.': 37, 'assignment': 27, '': 11, 'void': 4}
{'}\n': 154, ';': 26, 'return': 151, '}': 87, ')': 15, '(': 7, 'At': 145, 'element': 144, '.': 31, 'nodes': 19, 'String': 3, '': 2, '=': 29, ']': 5, '[': 4, '{': 16, '++': 130, 'size': 108, '<': 122, 'NUM': 43, '_': 42, 'int': 27, 'for': 113, 'new': 102, 'original': 10, 'Element': 49, 'add': 48, 'separator': 14, 'Of': 33, 'index': 28, 'length': 72, '+': 69, 'substring': 53, ',': 11, '>=': 41, 'while': 38, 'split': 6, 'static': 1, 'public': 0}
{'}\n': 100, ';': 30, ')': 12, 'STR': 92, '_': 91, '+': 93, 'inst': 7, '(': 4, 'Exception': 89, 'Compiler': 88, 'Optimizing': 87, '': 5, 'new': 44, 'throw': 84, '}': 82, 'return': 80, '.': 25, 'iter': 22, '{': 13, '==': 62, 'Instruction': 6, 'get': 58, 'Ptr': 45, 'if': 53, 'next': 49, '=': 23, 'Element': 20, 'GCIRMap': 19, 'Next': 36, 'has': 35, 'while': 31, 'list': 24, '>': 21, '<': 17, 'Iterator': 16, 'void': 1, 'public': 0}
{'}\n': 58, ';': 57, ')': 44, '(': 9, 'new': 33, '{': 28, 'Exception': 27, '': 5, '.': 2, 'lang': 3, 'java': 1, 'public': 0}
{'}\n': 63, '}': 61, ';': 43, ')': 21, 'separator': 58, '(': 24, 'append': 56, '.': 26, 'sb': 54, 'Next': 28, 'has': 27, 'iter': 25, 'if': 44, 'next': 39, '{': 32, 'Builder': 19, 'String': 4, '': 6, '>': 10, '<': 8, 'static': 1, 'public': 0}
{'}\n': 34, ';': 28, '_': 12, '{': 6, ')': 5, 'Size': 10, 'max': 9, '(': 4, '.': 16, 'NUM': 13, 'if': 7}
{'}\n': 64, '}': 62, ';': 61, ')': 6, 'SECONDS': 59, '': 44, '.': 22, 'Unit': 56, 'Time': 55, ',': 29, 'NUM': 52, '_': 27, '(': 5, 'Task': 47, 'Save': 4, 'new': 43, 'Once': 41, 'schedule': 2, 'Manager': 38, 'Pool': 37, 'Thread': 36, 'm': 11, '{': 7, 'BOOL': 28, 'Set': 25, 'And': 24, 'compare': 23, 'Pending': 21, 'if': 8, '!': 10, 'void': 1, 'private': 0}
{'}\n': 65, ';': 22, 'BOOL': 57, '_': 56, 'return': 55, '}': 59, '{': 7, ')': 6, '(': 5, 'To': 3, 'is': 2, '.': 18, 'v': 36, 'if': 44, 'next': 40, 'i': 15, '=': 16, 'Value': 13, 'Variable': 12, '': 8, 'Next': 28, 'has': 27, 'while': 23, 'iterator': 19, 'variables': 17, '>': 14, '<': 10, 'Iterator': 9, 'boolean': 1, 'public': 0}
{'}\n': 18, '{': 10, ')': 9, 'Event': 7, 'Action': 6, '': 5, '(': 4, 'Performed': 3, 'action': 2, 'void': 1, 'public': 0}
{'}\n': 93, ';': 75, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 78, 'text': 11, 'return': 85, 'STR': 82, '_': 81, 'append': 79, 'Buffer': 10, '': 1, 'new': 13, '=': 12, '{': 7, 'public': 0}
{'}\n': 24, ';': 23, ')': 12, 'i': 11, '(': 9, 'Of': 19, 'value': 18, '.': 17, 'Integer': 6, '': 5, 'return': 14, '{': 13, 'int': 10, 'static': 4, 'public': 3}
{'}\n': 318, '(': 4, '{': 123, '}': 233, ';': 119, ')': 88, ',': 218, '': 14, '.': 111, 'if': 167, 'null': 154, '==': 153, '++': 121, 'i': 102, 'length': 118, 'NUM': 105, '_': 104, '=': 103, 'int': 101, 'for': 99, ']': 28, '[': 27, 'Table': 37, 'value': 29, 'void': 1}
{'}\n': 79, ';': 30, ')': 19, 'BOOL': 76, '_': 75, ',': 12, '(': 4, 'Value': 71, 'get': 63, '.': 25, 'e': 49, 'Key': 64, 'Val': 59, 'put': 2, 'Set': 54, 'entry': 53, 'm': 18, ':': 50, '>': 17, 'V': 16, '': 5, 'extends': 9, '?': 8, 'K': 11, '<': 7, 'Entry': 37, 'Map': 6, 'for': 31, 'size': 26, 'Presize': 22, 'try': 21, '{': 20, 'All': 3, 'void': 1, 'public': 0}
{'}\n': 113, ';': 44, ')': 43, '(': 6, 'where': 104, '': 10, '.': 91, '_': 39, 'STR': 40, 'String': 11}
{'}\n': 195, ';': 143, ')': 99, '(': 93, '.': 165, '': 163, '_': 140, '=': 130, 'Sent': 102, '{': 100, 'Data': 55, 'sent': 13}
{'}\n': 40, '}': 39, ';': 38, ')': 28, '(': 24, 'close': 35, '.': 34, 'output': 27, '{': 32, '': 12}
{'}\n': 233, ';': 142, ')': 11, '.': 114, '': 13, '(': 5, '_': 134, '+': 133, 'STR': 135, '=': 95, 'String': 68, '{': 63, ',': 8, 'Keeper': 18, 'Zoo': 17, 'Exception': 14, 'throws': 12, 'public': 0}
{'}\n': 93, ';': 58, 'dst': 15, ')': 30, '(': 6, '{': 68, '}': 59, 'Transform': 5, '.': 36, 'get': 27, ',': 11, 'src': 10, 'inverse': 4, 'public': 0}
{'}\n': 228, ';': 43, 'STR': 50, '_': 49, '(': 12, '.': 77, ')': 18, '{': 19, 'close': 155, '}': 152, 'NUM': 138, 'Int': 135, 'get': 134, 'rs': 104, '': 20, 'new': 31, 'add': 124, 'list': 29, 'next': 117, 'while': 113, 'Query': 109, 'execute': 108, 'pstmt': 67, '=': 30, 'null': 69, ',': 83, 'sql': 46, 'Statement': 66, 'prepare': 78, 'DB': 76, 'try': 71, 'Prepared': 65, '+': 51, 'String': 45, '<': 23, 'List': 22, 'Array': 21, '>': 28}
{'}\n': 115, ';': 36, 'List': 5, 'filtered': 45, 'return': 111, ')': 27, 'workorder': 79, '(': 14, 'add': 106, '.': 30, 'Id': 98, 'get': 97, 'is': 91, '!': 90, 'if': 88, 'Map': 17, 'criteria': 25, 'WO': 82, 'search': 11, ':': 80, 'Order': 9, 'Work': 8, '': 1, 'final': 15, 'for': 73, 'STR': 34, '_': 33, ',': 21, 'FLAG': 67, 'ACTION_': 66, 'put': 63, '>': 10, '<': 6, 'Array': 50, 'new': 48, '=': 47, 'logger': 29, '{': 28, 'Object': 23, 'String': 20, 'WOFor': 12, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 241, ';': 31, ')': 16, 'calendar': 62, '(': 3, 'peg': 236, '.': 21, '': 1, 'YEAR': 192, 'Calendar': 61, 'get': 67, '=': 63, 'int': 83, 'NUM': 153, '_': 28, '+': 151, 'MONTH': 116, 'OF_': 96, 'time': 6, 'Time': 9, 'set': 77, 'locale': 15, ',': 7, 'zone': 11, 'Instance': 68, 'STR': 29, 'Permitted': 24, 'Not': 23, 'null': 22, 'Checks': 20, 'Param': 19, '{': 17, 'Locale': 14, 'Zone': 10, 'Date': 5, 'public': 0}
{'}\n': 111, ')': 25, 'resource': 24, '(': 4, ';': 42, 'Queue': 80, 'Exception': 54, 'Argument': 53, 'Illegal': 52, '': 6, 'new': 50, 'throw': 49, 'null': 47, '==': 46, 'if': 43, '{': 26, 'final': 5, 'Resource': 2}
{'}\n': 287, ';': 62, 'subject': 9, '=': 70, '.': 64, 'this': 63, ')': 14, 'STR': 60, '_': 59, '(': 48, 'Exception': 57, '': 6, 'new': 54, 'throw': 53, 'null': 51, 'if': 47, '{': 26, 'public': 0}
{'}\n': 67, ';': 65, ')': 14, ',': 11, 'task': 10, '(': 6, '.': 52, '=': 44, 'Exception': 39, 'Illegal': 37, '': 7, 'NUM': 28, '_': 27, '{': 15, 'period': 13, 'long': 12, 'Task': 9, 'Timer': 8, 'schedule': 3, 'void': 2, 'public': 0}
{'}\n': 88, '}': 87, ';': 23, ')': 6, 'BOOL': 54, '_': 30, '(': 5, 'Visible': 51, 'set': 27, '.': 19, 'Text2': 58, 'status': 24, 'STR': 31, 'Text': 28, 'Text1': 25, '+': 32, 'num': 39, 'String': 37, 'to': 36, 'Integer': 34, '': 33, 'stop': 2, 'Timer': 18, '{': 7, 'Test': 4, '&&': 12, 'Running': 11, 'test': 10, 'if': 8, 'void': 1, 'protected': 0}
{'}\n': 66, ';': 64, ')': 30, '_': 21, '(': 5, ',': 54, 'NUM': 22, 'row': 8, 'Exception': 39, '': 11, 'new': 34, 'throw': 33, '{': 16, 'Row': 3, 'get': 26, '||': 23, '<': 20, 'if': 17, 'int': 7, 'void': 1}
{'}\n': 65, ';': 18, 'NUM': 17, '_': 16, '=': 15, 'End': 60, '_coll': 47, 'Count': 54, ')': 5, 'null': 39, ',': 26, 'List': 48, '(': 4, 'fill': 22, '.': 21, 'Arrays': 20, '': 19, 'Names': 37, '_main': 24, 'Hash': 25, '_count': 7, '{': 6, 'Symbols': 3, 'nuke': 2, 'void': 1, 'private': 0}
{'}\n': 81, ';': 36, ')': 8, 'List': 18, 'Piece': 22, 'new': 24, '(': 4, 'Name': 2, '': 1, 'return': 71, '.': 40, 'add': 41, 'Pieces': 45, 'name': 44, 'All': 42, '>': 23, '<': 19, 'Array': 30, '=': 27, '{': 9, 'join': 3, 'public': 0}
{'}\n': 157, ';': 156, ')': 68, 'date': 55, '(': 30, 'format': 109, '.': 108, 'Time': 27, 'Date': 26, 'm': 84, '{': 71, '': 8, 'String': 9}
{'}\n': 160, ';': 155, 'string': 10, 'return': 157, '}': 156, 'STR': 81, '_': 24, ')': 6, 'NUM': 39, '(': 35, '.': 104, '-': 51, '!=': 50, '{': 7, 'String': 2, '': 1, 'public': 0}
{'}\n': 53, '}': 52, ';': 45, 'return': 42, ':': 20, 'default': 46, 'BOOL': 44, '_': 22, 'STR': 23, 'case': 16, '{': 10, ')': 9, 'c': 8, '(': 6, 'switch': 11, 'int': 7, 'Space': 5, 'White': 4, 'is': 3, 'boolean': 2, 'static': 1}
{'}\n': 17, ';': 16, ')': 8, 'filter': 7, '(': 3, 'remove': 2, '.': 11, 'filters': 10, '{': 9, 'Filter': 6, '': 4, 'void': 1, 'public': 0}
{'}\n': 73, ';': 13, ')': 9, 'BOOL': 70, '_': 42, '(': 4, 'Modified': 67, 'set': 66, '}': 31, ']': 7, 'i': 12, '[': 6, 'indices': 8, 'remove': 2, '.': 24, 'Model': 22, 'm_': 21, '--': 51, 'NUM': 43, '>=': 46, '-': 41, 'length': 40, '=': 37, 'for': 34, '{': 10, 'else': 32, 'Elements': 27, 'All': 26, 'null': 18, '==': 17, 'if': 14, 'int': 5, 'void': 1, 'protected': 0}
{'}\n': 73, ';': 43, 'null': 58, 'Object': 56, 'm_selected': 55, 'p_data': 25, ')': 9, '(': 4, '.': 35, '{': 10, 'void': 1, 'public': 0}
{'}\n': 133, '}': 132, ';': 62, ')': 16, '(': 6, 'Tags': 128, 'Array': 14, 'Virtual': 4, 'update': 125, 'Arrays': 5, 'All': 68, '.': 33, '_assigned': 112, 'URIs': 15, 'virtual': 13, 'add': 67, '>': 12, 'String': 11, '': 7, '<': 9, 'Set': 8, 'Hash': 42, 'new': 52, '=': 51, '{': 17, 'Empty': 35, 'is': 34, '!': 29, '&&': 27, 'null': 25, '!=': 24, 'if': 18, 'Assigned': 3, 'void': 1, 'public': 0}
{'}\n': 54, ';': 42, ')': 14, '.': 48, 'Var': 18, 'env': 19, 'BOOL': 41, '_': 40, '': 1, '(': 8, '=': 21, 'Env': 17, '{': 15, ',': 11, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 66, ';': 45, 'Block': 12, 'm': 38, ')': 6, 'null': 15, '!=': 14, '(': 5, 'if': 8, '{': 7, 'private': 0}
{'}\n': 70, '}': 66, ';': 65, ')': 20, 'values': 62, '(': 12, 'List': 5, 'as': 59, '.': 58, 'Arrays': 57, '': 1, '>': 3, '<': 0, 'Array': 33, 'new': 31, '{': 21, '...': 18, 'T': 2}
{'}\n': 81, ';': 48, ')': 8, '(': 25, 'add': 70, '.': 17, '': 1, '}': 49, '{': 9, 'Graph': 6, 'public': 0}
{'}\n': 19, ';': 18, '_': 16, 'return': 15, '{': 14, ')': 13, 'title': 8, 'String': 7, '': 6, '(': 5}
{'}\n': 71, ';': 70, ')': 30, 'tf': 29, ',': 15, 'Size': 18, 'pool': 17, 'q': 14, '(': 6, 'this': 32, '{': 31, 'Factory': 28, 'Thread': 27, '': 1, 'int': 16, '>': 13, 'Runnable': 12, '<': 10, 'Queue': 9, 'Blocking': 8, 'public': 0}
{'}\n': 43, ';': 37, 'return': 39, ')': 8, '.': 17, '{': 9, 'body': 7, 'String': 6, '': 5, '(': 4}
{'}\n': 139, ';': 107, ')': 51, '.': 119, 'child': 49, '(': 33, 'add': 5, 'Children': 68, 'm': 67, '<': 80, '': 36, 'new': 76, '=': 75, '{': 52, 'null': 70, '==': 69, 'if': 65, 'Child': 6, 'void': 4}
{'}\n': 211, ';': 59, 'BOOL': 208, '_': 116, '}': 60, '(': 5, '.': 110, 'selection': 108, 'if': 149, '{': 19, ')': 18, 'for': 128, ']': 95, '[': 92, '': 14, ',': 13}
{'}\n': 24, ';': 13, ')': 7, '(': 6, 'mute': 9, 'null': 11, '{': 8, '': 1}
{'}\n': 203, '}': 158, ';': 111, ')': 20, 'Event': 102, 'next': 103, '(': 73, 'accept': 150, '.': 69, 'Events': 148, '{': 25, 'null': 117, '!=': 116, 'if': 112, 'poll': 108, 'queue': 106, '=': 66, '': 16, 'Time': 65, 'stop': 64, '<': 96, 'Millis': 72, 'current': 70, 'System': 68, '+': 75, 'long': 8, 'final': 62, 'Exception': 24, 'Timeout': 23, 'throws': 21, ',': 12, 'timeout': 9, 'consume': 2, 'void': 1, 'public': 0}
{'}\n': 284, ';': 283, ')': 81, '(': 79, 'Text': 68, 'get': 174, '.': 173, 'Field': 69}
{'}\n': 32, ';': 31, ')': 13, '(': 5, 'next': 22, '.': 21, 'rand': 3, 'int': 2, 'return': 15, '{': 14, 'mean': 8, 'final': 6, 'static': 1, 'public': 0}
{'}\n': 25, ';': 24, ']': 23, ')': 6, 'c': 5, ',': 20, 'Capacity': 19, 'default': 18, '(': 3, 'max': 16, '.': 15, 'Math': 14, '': 1, '[': 12, 'new': 10, '=': 9, 'vector': 8, '{': 7, 'int': 4, 'public': 0}
{'}\n': 322, '}': 83, ';': 30, ')': 16, '(': 4, 'Trace': 317, 'Stack': 316, 'print': 315, '.': 25, 'ex': 310, '{': 17, 'Exception': 309, '': 5, 'catch': 306, 'response': 137, 'Response': 136, 'send': 190, 'st': 54, 'Tag': 122, 'to': 121, 'set': 181, 'Header': 156, 'NAME': 175, 'To': 155, 'get': 26, '=': 22, 'contact': 244, 'add': 259, 'address': 216, 'Contact': 242, 'create': 142, 'Factory': 140, 'header': 247, 'final': 18, 'STR': 125, '_': 124, '+': 126, 'Port': 234, 'my': 227, 'Address': 215, 'request': 8, ',': 10, 'OK': 208, 'message': 139, 'RINGING': 149, 'Time': 131, 'nano': 130, 'System': 128, 'String': 120, 'Transaction': 13, 'Server': 12, 'New': 76, 'Provider': 34, 'sip': 35, 'null': 65, '==': 64, 'if': 61, 'try': 59, 'server': 14, 'Source': 47, 'Event': 7, 'Sip': 33, 'Request': 6, 'Invite': 3, 'process': 2, 'void': 1, 'public': 0}
{'}\n': 83, ';': 40, 'log': 48, ')': 39, '(': 38, ',': 56, '.': 36, 'Logger': 4, 'Ignite': 3, '': 2}
{'}\n': 212, ';': 28, 'BOOL': 60, '_': 48, 'return': 81, '}': 29, ')': 6, '(': 5, 'Notes2': 77, 'reset': 76, '=': 12, 'Status1': 71, 'In': 70, 'error': 69, 'NUM': 67, 'Delay': 4, 'Visible': 57, 'set': 40, '.': 15, 'Text1': 38, 'status': 37, 'STR': 49, 'String': 46, 'get': 23, 'rb': 43, 'Text': 24, '{': 7, '>': 152, 'if': 88, '<': 92, 'e': 34, 'Exception': 33, '': 13, 'catch': 30, 'Field': 21, 'Int': 17, 'parse': 16, 'Integer': 14, 'try': 8, 'read': 2, 'boolean': 1, 'protected': 0}
{'}\n': 49, ';': 31, '(': 22, '.': 37, ')': 7, '=': 16, '': 9, 'private': 0}
{'}\n': 21, ';': 20, ')': 9, 'value': 8, '(': 5, 'Int': 16, 'parse': 3, '.': 14, 'Integer': 13, '': 6, 'return': 11, '{': 10, 'String': 7, 'static': 1}
{'}\n': 598, '}': 597, ';': 76, ')': 41, '': 17, '(': 15, 'get': 70, '.': 69, ',': 347, '{': 42, 'Event': 26, 'Mouse': 22, 'mouse': 10, '||': 118, 'if': 85, '=': 66, 'Point': 63}
{'}\n': 67, ';': 62, 'BOOL': 61, '_': 60, 'return': 59, ')': 30, '.': 54, 'candidate': 23, '(': 16, 'null': 36, 'if': 32, '': 21, 'Node': 4, 'boolean': 1}
{'}\n': 15, '{': 14, ')': 13, '': 5, ',': 9, 'Motion': 3, '(': 4, 'void': 1}
{'}\n': 24, ';': 23, ')': 13, 'cl': 12, '(': 7, '.': 18, 'Listeners': 17, 'Clusterer': 5, 'm_batch': 15, '{': 14, 'Listener': 6, 'Batch': 4, '': 8, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 11, 'Id': 21, 'version': 37, ',': 22, 'Timeout': 35, 'lock': 31, 'Map': 32, 'Ms': 10, 'Date': 9, 'expiration': 8, 'creation': 23, '(': 6, 'Locks': 3, 'Held': 2, '': 1, 'new': 14, 'return': 13, '{': 12, 'long': 7, 'refresh': 5, 'public': 0}
{'}\n': 25, '}': 24, ';': 23, ')': 9, 'object': 8, '(': 4, '.': 18, 'Objects': 17, 'known': 16, '{': 10, 'mutex': 13, 'synchronized': 11, 'Object': 3, 'Parse': 6, '': 5, 'Known': 2, 'void': 0}
{'}\n': 33, ';': 32, ')': 20, '(': 11, 'wrap': 10, '.': 27, 'Store': 4, 'Bytes': 3, 'Heap': 24, '': 1, 'return': 22, '{': 21, 'Null': 15, 'Not': 14, '@': 12, '>': 9, '<': 5, 'static': 0}
{'}\n': 39, ';': 25, ')': 10, '(': 5, '.': 16, 'base': 15, '}': 26, 'null': 24, 'return': 23, '{': 11, 'if': 12, '': 2, 'static': 1}
{'}\n': 83, ';': 42, '++': 81, 'size': 16, 'element': 9, '=': 77, ']': 76, 'index': 6, '[': 74, 'elements': 57, ')': 10, '-': 69, ',': 7, 'NUM': 21, '_': 20, '+': 34, '(': 4, 'arraycopy': 55, '.': 54, 'System': 53, '': 25, 'Capacity': 44, 'ensure': 43, 'STR': 33, 'Exception': 30, 'Bounds': 29, 'Of': 28, 'Out': 27, 'Index': 26, 'new': 24, 'throw': 23, '<': 19, '||': 17, '>': 15, 'if': 12, '{': 11, 'int': 5, 'Insert': 3, 'before': 2, 'void': 1, 'public': 0}
{'}\n': 131, ';': 63, '=': 127, ')': 5, ',': 44, 'objs': 112, '(': 4, '.': 39, '': 36, 'NUM': 61, '_': 60, 'Empty': 70, 'next': 69, '<<': 59, 'OFF': 48, 'ARR_': 47, 'INT_': 46, 'Memory': 41, 'copy': 40, 'Unsafe': 38, 'Grid': 37, '{': 6, 'void': 1}
{'}\n': 85, ';': 36, ')': 26, 'STR': 82, '_': 71, '(': 4, 'Exception': 79, 'Argument': 78, 'Illegal': 77, '': 1, 'new': 75, 'throw': 74, 'NUM': 72, '==': 70, 'Num': 38, 'sig': 37, 'if': 66, 'p': 8, 'evaluate': 60, 'signum': 58, '.': 57, 'Math': 56, '=': 39, 'B': 25, ',': 14, 'A': 19, 'super': 28, '{': 27, 'Vector': 7, 'final': 5, 'Plane': 3, 'Sided': 2, 'public': 0}
{'}\n': 63, ';': 61, ')': 46, '(': 40, 'clear': 2, '{': 47, 'void': 1}
{'}\n': 20, ';': 19, ')': 10, '.': 14, '{': 11, 'obj': 9, '': 7, '(': 6, 'static': 1, 'public': 0}
{'}\n': 48, ';': 46, ')': 16, 'STR': 33, '_': 32, '+': 34, '(': 7, 'fail': 30, '.': 22, '{': 17, '': 8, ',': 12, 'String': 9, 'expected': 10, 'Expected': 4, 'assert': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 71, ';': 12, ')': 7, '(': 3, '.': 42, 'names': 20, 'pkgname': 11, 'Cache': 41, 'm_': 40, 'classname': 6, 'Package': 33, 'extract': 32, '=': 23, 'Up': 25, 'clean': 24, '>': 19, 'String': 5, '': 4, '<': 16, 'Set': 15, 'Hash': 14, '{': 8, 'boolean': 1, 'public': 0}
{'}\n': 104, ';': 17, ')': 6, '(': 5, 'get': 84, '.': 72, 'r': 95, 'assert': 79, 'NUM': 89, '_': 88, ',': 87, 'x': 82, 'Equals': 80, 'null': 76, 'Complete': 74, 'when': 73, 'f': 71, '=': 11, '>': 24, '': 8, '<': 21, 'Atomic': 38, 'new': 12, '{': 7, 'Stage': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 118, ';': 20, ')': 11, '(': 7, 'draw': 112, 'Hints': 46, 'Rendering': 45, 'set': 35, '.': 34, 'QUALITY': 93, 'RENDER_': 92, 'VALUE_': 68, '': 1, ',': 62, 'RENDERING': 84, 'KEY_': 60, 'ON': 70, '{': 12, 'Graphics': 9, 'Component': 6, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 75, '}': 46, ';': 28, ')': 11, 'e': 51, ',': 63, '(': 5, 'String': 67, 'to': 66, '.': 22, 'WARNING': 62, '': 6, 'Level': 59, 'log': 54, '{': 12, 'Throwable': 50, 'catch': 47, 'invoke': 41, 'destroy': 15, 'try': 37, 'return': 35, 'null': 33, '==': 32, 'if': 29, 'Class': 8, 'get': 17, 'Method': 14, 'Destroy': 4, '=': 16, 'loader': 10, 'Loader': 3, 'Dynamic': 7, 'class': 2, 'void': 1, 'public': 0}
{'}\n': 213, ';': 38, 'BOOL': 205, '_': 34, 'return': 203, '}': 120, 'List': 51, 'ap': 19, '=': 20, 'Points': 127, 'attachment': 126, '.': 42, 'this': 41, ')': 14, 'index': 85, '(': 5, 'remove': 107, '{': 15, 'NUM': 35, '>': 56, 'if': 39, 'Of': 91, 'int': 84, 'All': 76, 'add': 75, 'Point': 4, 'Attachment': 3, '': 16, '<': 52, 'Array': 50, 'new': 21, 'null': 46, '!=': 45, 'APs': 44, 'old': 43, ',': 10, 'port': 13, 'sw': 9, 'delete': 2, 'boolean': 1, 'public': 0}
{'}\n': 594, ';': 223, 'return': 590, '}': 589, ')': 190, 'BOOL': 559, '_': 510, ',': 401, 'Be': 152, 'to': 151, '(': 138, '{': 191, '!=': 337, '&&': 268, '.': 254, 'if': 225, '': 122}
{'}\n': 49, ';': 14, 'total': 3, 'return': 46, '}': 44, '{': 8, ')': 7, 'BOOL': 38, '_': 12, '==': 36, '(': 6, 'reused': 33, '.': 23, 'file': 19, 'if': 29, 'values': 24, 'Details': 22, ':': 20, 'File': 18, '': 17, 'for': 15, 'NUM': 13, '=': 11, 'Recover': 4, 'synchronized': 1, 'public': 0}
{'}\n': 213, ';': 59, ')': 58, '(': 72, 'User': 42, 'To': 103, 'Experiments': 193, 'Bucket': 107, 'Experiment': 12, 'Count': 68, 'assign': 101, ',': 14, 'Export': 104, 'Log': 97, 'event': 96, 'Up': 62, 'count': 61, 'experiment': 13, 'Repository': 80, 'db': 85, 'assignments': 67, 'Envelope': 77, 'Assignment': 9, '': 1, 'new': 73, 'execute': 71, '.': 70, 'Executor': 69, 'BOOL': 65, '_': 64, '=': 63, 'boolean': 60, 'public': 6, 'Timed': 5, '@': 0, 'Override': 2}
{'}\n': 132, '}': 89, ';': 87, ')': 32, '(': 45, 'String': 8, 'to': 115, '.': 114, 'obj': 28, '{': 33, '': 7, 'instanceof': 47, 'if': 44}
{'}\n': 72, ';': 71, ')': 29, 'Dump': 16, '(': 6, '.': 45, '{': 30, '': 9, 'static': 1, 'public': 0}
{'}\n': 44, '}': 43, ';': 42, ')': 5, '(': 4, '.': 17, 'Output': 16, 'm': 9, '{': 6, 'Threshold': 33, 'Buffer': 31, 'available': 26, '&&': 13, 'Running': 19, 'is': 18, 'Audio': 12, 'Process': 11, 'Can': 10, 'if': 7, 'check': 2, 'void': 1, 'private': 0}
{'}\n': 47, ';': 41, 'return': 38, '}': 42, ')': 16, '(': 4, '.': 32, 'if': 28, '{': 27, 'String': 7, 'filter': 15, 'Filter': 3}
{'}\n': 416, '}': 263, ';': 53, '_': 227, '{': 237, ')': 65, 'e': 365, '': 11, '(': 61, 'catch': 361, 'NUM': 228, '==': 213, 'Code': 93, 'response': 91, 'if': 103, 'Response': 98, 'get': 97, '.': 67, '=': 42, 'int': 90, 'url': 75, 'Connection': 69, 'open': 68, 'URLConnection': 58, 'Http': 57, 'new': 43}
{'}\n': 200, ')': 6, '(': 49, '}': 145, ';': 32, 'null': 38, '=': 11, 'pstmt': 36, '{': 7, 'e': 150, ',': 51, 'SEVERE': 161, '': 8, '.': 46, 'Level': 158, 'log': 155, 'Exception': 149, 'catch': 146, 'STR': 13, '_': 12, 'NUM': 65, 'get': 67, 'rs': 78, 'new': 101, 'next': 91, 'while': 87, 'Query': 83, 'execute': 82, 'ID': 70, 'Int': 62, 'set': 61, 'sql': 10, 'Statement': 35, 'prepare': 47, 'DB': 45, 'try': 40, 'Prepared': 34, '+': 14, 'String': 9, 'void': 1}
{'}\n': 24, ';': 23, ')': 10, 'STR': 18, '_': 17, ',': 19, '(': 6, 'replace': 15, '.': 14, 'path': 9, '{': 11, 'String': 3, '': 2, 'Path': 5, 'static': 1}
{'}\n': 43, ';': 34, ')': 22, '_': 31, '(': 5, '.': 27, 'Notifier': 4, 'void': 1, 'public': 0}
{'}\n': 865, '}': 864, ';': 73, ')': 48, ',': 833, '': 89, '.': 121, '(': 47, 'if': 50, 'STR': 315, '_': 314, '{': 205, 'user': 99, 'User': 40, '=': 108, '!': 52, 'void': 2, 'private': 0}
{'}\n': 129, ';': 30, '+': 119, 'STR': 67, '_': 27, ')': 12, '(': 7, '.': 19, ',': 26, 'filename': 74, '=': 17, 'if': 49, '{': 13, 'String': 3, '': 2, 'public': 0}
{'}\n': 143, ';': 53, 'Buffer': 5, ')': 10, 'current': 14, '(': 6, '.': 34, '_': 23, 'if': 12, '{': 11, 'private': 0}
{'}\n': 188, '}': 187, ';': 186, '{': 89, ')': 72, '.': 170, 'text': 63, 'null': 125, '!=': 124, '(': 50, 'if': 107, 'String': 59, '': 33, 'Text': 39, 'public': 0}
{'}\n': 46, ';': 45, ')': 37, 'data': 31, '(': 15, 'Stream': 12, 'Input': 11, '': 7, 'public': 0}
{'}\n': 135, ';': 46, 'buffer': 12, 'return': 132, '}': 82, ')': 29, ']': 16, 'i': 42, '[': 15, 'Names': 28, 'parameter': 19, '(': 8, 'append': 5, '.': 51, 'STR': 71, '_': 44, '{': 30, 'null': 36, '!=': 35, '&&': 100, 'if': 31, 'Types': 20, 'NUM': 45, '>': 61, '++': 55, 'length': 52, '<': 48, '=': 43, 'int': 41, 'for': 39, 'char': 14, ',': 13, '': 2, 'Signature': 7, 'Parameter': 6, 'final': 1, 'private': 0}
{'}\n': 363, ';': 102, ')': 16, 'values': 110, ',': 11, 'Clause': 90, 'where': 89, 'Table': 355, 'hb': 256, '(': 4, 'update': 352, '.': 157, 'database': 7, 'add': 269, 'Value': 260, 'set': 259, 'Id': 257, 'KEY': 263, '': 5, 'now': 140, 'if': 188, '=': 91, '>': 88, 'Column': 87, '<': 85, 'List': 84, 'Array': 83, 'new': 92, '{': 20, 'SQLException': 19, 'throws': 17, 'String': 13, 'Database': 6, 'Heartbeat': 3, 'void': 1, 'public': 0}
{'}\n': 155, ';': 50, ')': 22, 'Len': 17, ',': 10, '(': 5, '.': 33, '': 24, 'NUM': 103, '_': 47, 'new': 41, '=': 56, 'Off': 13, 'in': 9, 'arraycopy': 92, 'System': 90, ']': 8, '[': 7, 'byte': 6, 'key': 57, '}': 51, 'STR': 48, 'Exception': 27, 'Illegal': 25, 'throw': 40, '{': 28, 'if': 29, 'throws': 23, 'int': 11, 'public': 0}
{'}\n': 143, ';': 34, 'return': 19, ')': 8, 'key': 86, '(': 7, 'String': 24, 'From': 23, 'Key': 3, 'get': 20, '=': 48, 'close': 116, '.': 29, 'r': 67, 'f': 47, '}': 35, 'tmp': 79, '+': 55, '{': 12, 'null': 104, '!=': 103, 'Line': 99, 'read': 98, 'while': 91, 'STR': 57, '_': 56, '': 1, 'Reader': 46, 'Buffered': 65, 'new': 49, 'id': 61, 'path': 54, 'File': 45, 'DEFAULT_': 31, 'Loader': 28, 'RSAKey': 27, 'Keys': 16, 'default': 15, 'if': 13, 'Exception': 11, 'throws': 9, 'load': 4, 'public': 0}
{'}\n': 20, ';': 19, ')': 11, 'listener': 10, '(': 5, '.': 14, 'listeners': 13, '{': 12, 'Listener': 4, 'Categories': 3, 'Snapshot': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 254, ';': 89, ')': 32, '(': 57, 'Week': 21, 'return': 222, 'Of': 128, 'days': 105, '.': 101, 'NUM': 73, '_': 72, '>': 40, 'Integer': 39, '': 1, '<': 37, 'new': 45, '=': 44, '{': 33}
{'}\n': 59, ';': 25, '}': 53, ')': 16, ']': 14, 'i': 21, '[': 13, 'array': 15, '(': 6, '.': 29, '{': 17, 'length': 30, '<': 27, 'NUM': 24, '_': 23, '=': 22, 'int': 20, 'for': 18, 'String': 8, '': 7, 'str': 9, 'Array': 5}
{'}\n': 105, ';': 104, '_': 76, 'Mins': 86, 'In': 85, 'Time': 84, 'Life': 83, 'Attemts': 68, 'Login': 67, 'Authn': 66, '_max': 65, 'Count': 69, '(': 31, ')': 56}
{'}\n': 102, ';': 101, ')': 57, '(': 52, 'size': 51, '.': 81, 'urls': 80, '{': 58, 'int': 41, 'public': 0}
{'}\n': 68, ';': 67, ')': 20, ',': 11, '(': 6, 'get': 58, '.': 40, '': 7, 'Constants': 39, 'Image': 9, 'image': 10, '{': 24, 'IOException': 23, 'throws': 21, 'String': 17, 'bkg': 14, 'Color': 13, 'Rendered': 8}
{'}\n': 80, ';': 28, 'vertex': 32, ')': 18, '': 41, ',': 51, '(': 4, '.': 47, '=': 33, '{': 14, 'void': 1, 'public': 0}
{'}\n': 52, ';': 18, ')': 6, '.': 10, 'client': 8, '': 32, 'Type': 30, '(': 15, '{': 7, 'configure': 2, 'void': 1}
{'}\n': 90, ';': 25, 'i': 42, 'return': 22, 'NUM': 24, '_': 23, ':': 58, ')': 14, '++': 56, 'j': 36, '(': 5, 'At': 53, 'char': 52, '.': 30, 'csq': 13, '?': 49, 'length': 27, '<': 46, '|=': 68, '<<=': 63, '=': 28, 'int': 2, 'Index': 8, 'from': 7, 'null': 20, '==': 19, 'if': 16, '{': 15, 'Sequence': 12, 'Char': 11, '': 10, ',': 9, 'Of': 4, 'index': 3, 'static': 1, 'private': 0}
{'}\n': 407, ';': 45, 'r': 15, 'return': 404, 'NUM': 401, '_': 400, '=': 38, 'alignment': 398, '.': 64, '': 1, 'maximum': 284, ')': 16, 'int': 9, '(': 8, 'minimum': 136, 'preferred': 145, 'min': 141, 'pref': 54, '}': 46, 'Requirements': 3, 'Size': 2, 'new': 39, '{': 17, 'null': 34, '==': 33, 'if': 30, ',': 11, 'axis': 10, 'Axis': 6, 'Minor': 5, 'calculate': 4, 'protected': 0}
{'}\n': 39, ';': 16, ')': 7, 'i': 12, '(': 3, 'At': 33, 'char': 32, '.': 20, 'string': 6, 'NUM': 15, '_': 14, '=': 13, 'int': 11, 'for': 9, '{': 8, 'String': 5, '': 4, 'public': 0}
{'}\n': 50, ';': 42, ')': 19, '(': 9, '.': 27, 'func': 35, 'name': 13, '': 5, '{': 20, 'String': 12, 'public': 0}
{'}\n': 72, ';': 71, '+': 26, 'STR': 20, '_': 19, 'return': 18, '{': 10, ')': 9, '(': 6, 'String': 3, '': 2, 'public': 0}
{'}\n': 46, ';': 45, ')': 32, '(': 6, 'Case': 30, 'to': 28, '.': 27, 'Name': 10, 'column': 9, 'String': 8, '': 7, 'Column': 4, 'public': 0}
{'}\n': 816, ';': 63, 'return': 501, '}': 398, ']': 12, '[': 11, '*': 360, '{': 115, ')': 51, '++': 340, 'length': 337, '.': 59, '<': 334, 'NUM': 50, '_': 49, '=': 57, 'int': 130, '(': 46, 'for': 325, 'double': 10, 'iter': 56, ',': 34, '': 23, 'private': 0}
{'}\n': 1115, ';': 40, 'ret_val': 586, 'return': 60, '}': 250, ')': 26, 'y_': 185, '(': 11, 'add': 307, '.': 34, 'x_': 172, 'l': 662, ',': 16, 'NUM': 51, '_': 37, 'off1': 1027, 'ys': 187, 'arraycopy': 691, 'System': 689, '': 1, 'xs': 174, ']': 7, '[': 6, 'float': 5, 'new': 61, '=': 31, '-': 437, 'off2': 1034, 'int': 17, 'index': 256, 'az2': 1009, 'az1': 992, '+': 387, 'j': 339, 'get': 1001, 'sections': 153, 'Var': 126, 'Azimuth': 125, '{': 27, '+=': 364, 'size': 911, '<': 4, 'for': 344, 'Poly': 10, 'Filled': 25, 'generate': 955, '>': 8, 'len': 42, '&&': 427, 'is': 24, 'if': 53, 'List': 3, 'Array': 2, 'az_save': 131, 'az_first': 127, 'STR': 38, 'output': 802, 'Debug': 33, 'DEBUG': 30, 'null': 129, '!=': 656, 'else': 251, 'az': 135, 'rawllpts': 15, 'X': 283, 'center': 276, 'Y': 277, 'spherical': 270, 'Circle': 268, 'Great': 267, 'current_azimuth': 264, 'length': 46, 'i': 334, '==': 527, 'prev_invalid': 109, '!': 300, 'invalid_count': 101, 'curr_invalid': 107, '++': 247, 'y': 233, 'temp': 116, 'x': 223, 'invalid_forward': 240, '_forward': 9, 'BOOL': 112, 'Point': 115, 'boolean': 23, 'nsegs': 21, 'ltype': 18, 'Dispatch': 88, 'do': 86, 'Type': 80, 'Line': 79, 'Complicated': 78, 'debugging': 35, 'protected': 0}
{'}\n': 97, ';': 32, ')': 20, '(': 5, '.': 35, '': 1, '=': 50, 'Type': 17, 'if': 25, 'types': 19, '{': 21, '>': 18, '<': 15, 'public': 0}
{'}\n': 116, ';': 85, ')': 24, '(': 13, 'add': 102, '.': 101, 'errors': 63, '>': 76, '': 18, '<': 72, '{': 25, 'null': 49, '==': 48, 'if': 45, 'String': 19, 'public': 0}
{'}\n': 261, '}': 40, ';': 39, ')': 15, 'e': 247, '(': 6, 'Error': 255, 'log': 254, '.': 20, 'Log': 252, 'GWTPlugin': 251, '': 7, '{': 16, 'Exception': 246, 'Location': 245, 'Bad': 244, 'catch': 241, 'String': 234, 'to': 233, '=': 45, 'text': 228, 'command': 14, '-': 23, 'offset': 21, ',': 10, 'whiteend': 190, 'get': 75, 'document': 9, 'Line': 76, 'ind': 123, 'Of': 77, 'Indent': 170, 'NUM': 25, '_': 24, 'if': 17, 'line': 71, 'Bracket': 129, 'Open': 128, 'Matching': 127, 'find': 126, 'int': 43, '==': 22, 'p': 44, 'Offset': 78, ':': 64, '?': 57, 'Length': 30, 'try': 41, 'return': 38, '||': 26, 'Command': 13, 'Document': 12, 'IDocument': 8, 'After': 4, 'smart': 2, 'void': 1, 'protected': 0}
{'}\n': 112, '}': 70, ';': 69, ')': 9, '(': 8, 'String': 2, 'to': 89, '.': 15, 'Number': 14, 'return': 71, '{': 10, 'else': 95, 'Input': 87, 'accrued': 86, ':': 85, 'National': 81, 'length': 16, 'national': 13, '': 1, 'private': 0}
{'}\n': 328, ';': 47, '.': 18, ')': 5, '': 7, '(': 4, ',': 28, 'set': 218, '_': 36, 'Ctx': 25, 'get': 24, 'Env': 22, 'add': 98, 'STR': 91, 'translate': 80, 'Msg': 78, 'NUM': 37, 'm_': 29, '=': 14, 'private': 0}
{'}\n': 62, ';': 28, 'copy': 25, 'return': 59, '}': 58, ')': 18, '(': 10, 'Data': 53, 'Common': 52, 'get': 51, '.': 50, 'Base': 7, 'Config': 6, 'field': 15, 'Field': 5, '': 1, 'new': 40, '=': 26, '{': 19, 'null': 27, '!=': 34, 'if': 29, 'Copy': 9, 'create': 8, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 183, ';': 36, ')': 18, '(': 6, 'dispose': 179, '.': 32, 'NUM': 76, '_': 75, '': 8, 'set': 141, 'size': 136, ',': 12, 'new': 106, '=': 25, 'get': 86, 'loc': 84, 'int': 82, 'create': 33, 'D': 16, 'Graphics2': 15, '{': 19, 'final': 7, 'anno': 11, 'Annotation': 10, 'Workflow': 9, 'void': 1, 'private': 0}
{'}\n': 34, ';': 25, ')': 7, 'pt': 6, '(': 3, '.': 28, '_': 22, '': 4, 'if': 9, '{': 8}
{'}\n': 49, '}': 39, ';': 25, ')': 9, '(': 5, 'close': 44, '.': 27, '{': 13, 'finally': 40, 'properties': 18, 'from': 34, 'return': 33, 'load': 4, 'Properties': 17, '': 2, 'new': 20, '=': 19, 'try': 14, 'IOException': 12, 'throws': 10, 'Configuration': 3, 'static': 1, 'public': 0}
{'}\n': 74, ';': 73, ')': 53, 'item': 20, '(': 3, 'add': 2, '.': 68, 'items': 67, '{': 54, '': 4, 'void': 1, 'public': 0}
{'}\n': 100, ';': 69, ')': 55, '(': 65, '.': 62, 'STR': 67, '_': 66, 'Element': 9, 'create': 63, 'doc': 61, '=': 60, 'elem': 59, '': 8, ',': 16, 'static': 1}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'Boolean': 3, 'read': 2, '.': 13, 'return': 10, '{': 9, 'IOException': 8, '': 7, 'throws': 6, 'boolean': 1, 'public': 0}
{'}\n': 51, ';': 32, ')': 10, '(': 9, 'elements': 47, '.': 35, 'Vector': 13, 'new': 18, 'return': 43, 'STR': 40, '_': 29, 'Element': 37, 'add': 36, 'NUM': 30, '>': 6, 'String': 5, '': 1, '<': 3, '=': 20, '{': 11, 'Measures': 8, 'enumerate': 7, 'Enumeration': 2, 'public': 0}
{'}\n': 431, ';': 36, 'Format': 8, 'Dataset': 405, 'm_': 37, 'return': 426, ')': 10, 'NUM': 423, '_': 341, ',': 419, 'atts': 22, '(': 9, 'Use': 416, 'To': 415, 'Name': 414, 'Relation': 413, 'get': 44, 'Instances': 5, '': 1, 'new': 40, '=': 39, 'STR': 342, 'Attribute': 20, 'add': 335, '.': 334, '>': 21, '<': 18, 'List': 17, 'Array': 16, 'Examples': 71, 'Num': 70, 'Act': 72, 'set': 69, 'Seed': 45, 'Random': 38, '{': 14, 'Exception': 13, 'throws': 11, 'Data': 7, 'define': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 133, ';': 132, 'NUM': 111, '_': 110, '*': 118, ')': 49, 'z': 45, '(': 5, '.': 95, 'Math': 94, '': 93, 'x': 11, 'return': 83, '{': 50, ',': 19, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 118, ';': 59, ')': 42, 'ticker': 80, '(': 15, 'parent': 46, '': 34, 'public': 0}
{'}\n': 112, ';': 87, 'return': 109, '}': 108, ')': 12, ',': 9, 'id2': 11, '(': 6, '.': 43, 'NUM': 69, '_': 68, 'id1': 8, 'int': 7}
{'}\n': 159, ';': 79, 'return': 154, ')': 37, 'Action': 6, '': 45, 'new': 52, ',': 89, '(': 8, 'put': 84, '.': 83, 'Map': 50, '=': 51, '{': 38, 'create': 4}
{'}\n': 273, ';': 268, ')': 243, '(': 236, '{': 244, 'Editor': 230, '': 222, 'public': 0}
{'}\n': 99, ';': 98, '.': 36, 'obj': 21, ')': 24, '': 18, '(': 6, 'get': 37, '==': 52, 'Class': 38, '{': 25}
{'}\n': 216, ';': 99, '(': 12, '.': 115, ')': 20, 'if': 111, '{': 21, 'largest': 57, '': 5, '>': 18, '<': 15, 'List': 14, 'static': 1, 'private': 0}
{'}\n': 23, ';': 22, ')': 10, '(': 6, 'Clipboard': 5, 'To': 4, 'copy': 3, '.': 15, '': 12, '{': 11, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 62, ';': 61, 'STR': 59, '_': 58, '+': 57, 'percent': 29, '(': 19, '.': 52, 'return': 49, ')': 44, 'float': 28, 'format': 4, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 747, ';': 32, ')': 12, '(': 8, 'String': 3, 'to': 742, '.': 48, 'Desc': 7, 'return': 738, 'STR': 30, '_': 29, 'append': 66, '}': 79, 'attr': 35, 'QDStrings': 720, 'write': 68, '{': 17, 'else': 80, 'continue': 709, 'ID': 53, 'OBSOLETE_': 171, '': 2, 'equals': 578, 'Id': 521, '||': 584, 'NAME_': 103, 'NUMERICOID_': 52, 'if': 56, 'get': 49, '=': 23, 'next': 559, 'ae': 536, 'Elements': 549, 'More': 548, 'has': 547, 'All': 541, 'attrs': 11, '>': 535, 'Attribute': 34, 'extends': 532, '?': 531, '<': 510, 'Enumeration': 529, 'Naming': 15, 'for': 525, 'null': 37, 'size': 513, 'count': 40, '++': 77, '!=': 59, 'Boolean': 188, 'SUP_': 205, 'QDString': 154, 'DESC_': 137, 'QDescrs': 120, '+': 90, 'Exception': 16, 'Configuration': 85, 'new': 24, 'throw': 82, 'OID': 70, 'Numeric': 69, 'NUM': 43, 'int': 39, 'Buffer': 20, 'throws': 13, 'Attributes': 10, 'Def2': 5, 'private': 1, 'final': 0}
{'}\n': 148, '}': 110, ';': 109, ')': 84, 'element': 115, '(': 14, '.': 70, '{': 35, ':': 116, 'T': 4, '': 3, 'for': 111, 'Collection': 16, '>': 5, '<': 2, 'static': 1, 'public': 0}
{'}\n': 182, ';': 179, ')': 15, ',': 175, 'hex': 9, '(': 6, 'get': 46, '.': 45, '{': 16, 'IHex': 8, '': 7, 'public': 0}
{'}\n': 55, '}': 27, ';': 26, ')': 11, 'STR': 51, '_': 50, '(': 6, 'Exception': 32, 'Runtime': 47, '': 2, 'new': 45, 'throw': 44, 'Trace': 40, 'Stack': 39, 'print': 38, '.': 20, 'e': 33, '{': 12, 'Parse': 31, 'catch': 28, 'Str': 10, 'date': 9, 'parse': 4, 'Format': 19, 'Simple': 17, 'm': 16, 'return': 15, 'try': 13, 'String': 8, 'Date': 3, 'static': 1, 'public': 0}
{'}\n': 123, '}': 78, ';': 76, 'node': 106, '(': 4, '.': 35, '{': 17, ')': 16, 'if': 51, '=': 73, 'null': 56, 'public': 0}
{'}\n': 64, '}': 63, ';': 33, ')': 32, '(': 31, '.': 29, 'next': 50, 'it': 25, '=': 26, '': 18, '{': 42, 'Next': 37, 'has': 36, 'iterator': 30, '>': 24, '<': 20}
{'}\n': 153, ';': 107, ')': 71, '(': 10, 'edge': 57, 'add': 111, '.': 84, '': 31, 'Edge': 3}
{'}\n': 384, '}': 31, ';': 30, ')': 14, 'e': 312, '(': 5, 'Exception': 19, 'Meta': 18, '': 6, 'new': 143, 'throw': 142, 'null': 26, ',': 9, 'data': 329, 'CONFIG': 94, 'ENTITY_': 93, 'DELETE_': 133, 'ERROR_': 363, 'CONFIG_': 281, '.': 67, 'Util': 115, 'Log': 114, 'INFO': 123, 'Level': 120, 'error': 117, 'realm': 8, 'Id': 13, 'Message': 335, 'get': 68, '{': 20, '=': 40, ']': 48, '[': 47, 'String': 7, 'STR': 42, '_': 41, 'debug': 315, 'Configuration': 69, 'catch': 307, 'Config': 4, 'Entity': 3, 'put': 294, 'Cache': 292, 'objs': 49, 'DELETED': 282, 'access': 267, 'attr': 230, 'delete': 2, 'Inst': 66, 'config': 65, 'ATTR_': 92, 'add': 241, 'Set': 78, 'Hash': 234, 'Trust': 217, 'Of': 216, 'Circle': 215, 'From': 214, 'remove': 213, 'DESCRIPTOR_': 132, 'NO_': 130, 'Empty': 108, 'is': 107, 'Values': 80, 'old': 62, '||': 103, '==': 25, 'if': 21, 'Attrs': 63, 'Map': 61, 'try': 58, 'return': 29, 'throws': 15, 'void': 1, 'public': 0}
{'}\n': 36, ';': 31, 'Instance': 9, 'shared': 8, 'return': 32, ')': 11, '(': 10, 'Manager': 7, 'Source': 5, 'Data': 4, '': 3, 'new': 23, '=': 22, 'null': 18, '==': 17, 'if': 13, '{': 12, 'synchronized': 2, 'static': 1, 'public': 0}
{'}\n': 112, ';': 111, ')': 16, '.': 104, 'color': 39, 'STR': 60, '_': 59, '+': 58, '(': 22, '{': 17, '': 5, 'String': 6, 'public': 0}
{'}\n': 98, ';': 38, ')': 23, '(': 7, 'String': 3, 'to': 92, '.': 59, 'Writer': 28, 'string': 29, 'print': 43, 'Print': 41, '': 2, 'new': 32, '=': 31}
{'}\n': 79, ';': 62, ')': 29, 'id': 51, '(': 28, '.': 40, 'Long': 66, '': 18, '=': 53, '{': 48, 'if': 31, 'String': 19}
{'}\n': 196, ';': 34, ')': 12, '(': 31, '.': 27, '{': 73, '': 14, 'catch': 165, '}': 146, 'inflater': 18, ',': 112, 'NUM': 114, '_': 68, 'buffer': 93, '=': 19, 'int': 86, 'while': 74, 'try': 72, 'Input': 29, 'Inflater': 15, 'new': 20}
{'}\n': 98, '}': 71, ';': 19, 'null': 79, '=': 17, 'Handler': 9, 'statistics': 15, '.': 14, 'this': 13, '{': 12, 'finally': 72, ')': 11, '(': 3, 'limit': 66, 'buffer': 33, ',': 57, 'position': 60, 'Token': 54, 'handle': 53, 'Parser': 44, 'line': 43, 'reset': 46, 'Buffer': 32, 'get': 38, 'Loader': 23, 'file': 22, 'Byte': 31, '': 5, 'final': 4, 'load': 25, 'try': 20, 'Statistics': 8, 'poll': 2, 'void': 1, 'public': 0}
{'}\n': 141, ';': 39, ')': 10, '(': 4, 'remaining': 17, '.': 23, 'Buffer': 7, 'other': 8, '-': 108, 'return': 101, '}': 115, '--': 126, 'Remaining': 14, 'compare': 2, '++': 118, 'Pos': 42, 'this': 41, 'NUM': 68, '_': 67, ':': 32, '?': 28, 'Byte': 57, '<': 20, '{': 11, '!=': 96, 'if': 92, 'get': 74, '=': 15, '>': 66, 'while': 62, ',': 58, 'position': 44, 'int': 1, '': 5, 'To': 3, 'public': 0}
{'}\n': 190, '}': 173, ';': 50, ')': 19, '(': 7, 'Trace': 185, 'Stack': 184, 'print': 183, '.': 44, 'e': 178, '{': 20, 'Exception': 177, '': 1, 'catch': 174, 'STR': 48, '_': 47, 'info': 45, 'log': 43, 'Line': 161, 'new': 160, 'Writer': 52, '+': 64, 'write': 92, 'Directory': 12, 'Buffered': 58, 'get': 57, 'IOUtils': 55, '=': 53, 'try': 41, 'String': 9, ',': 13, 'V2': 6, 'CSVWriter': 5, 'public': 0}
{'}\n': 107, ';': 42, 'Val': 10, 'new': 9, ')': 11, '': 1, '(': 6, '.': 72, 'agg': 5, '{': 12, '=': 27, 'if': 13, 'Object': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 271, ';': 270, ')': 106, 'notification': 69, '(': 8, '.': 143, '{': 107, 'Notification': 7, '': 29}
{'}\n': 128, ';': 59, '(': 53, '.': 49, '': 20, ')': 24, 'Constructor': 72, '_': 66, '=': 46, 'Class': 34, 'class': 22, 'String': 21}
{'}\n': 135, ';': 29, ')': 16, '(': 8, 'String': 4, 'to': 96, '.': 39, 'str': 21, 'return': 127, '}': 114, 'Char': 46, 'current': 45, 'append': 91, '{': 17, 'else': 115, 'i': 51, '++': 63, 'At': 75, 'char': 44, 'Name': 7, 'Field': 6, 'Xml': 13, 'p': 12, 'Case': 98, 'Upper': 97, 'Character': 94, '': 3, 'STR': 86, '_': 53, '==': 84, 'if': 80, '=': 22, 'Length': 33, 'field': 31, '<': 57, 'NUM': 54, 'int': 30, 'for': 48, 'length': 40, 'new': 23, 'final': 2, 'decode': 5, 'static': 1, 'private': 0}
{'}\n': 41, ';': 40, ')': 6, 'STR': 25, '_': 24, '(': 5, 'equals': 22, '.': 21, '!': 19, '&&': 13, 'null': 12, '!=': 11, 'password': 15, 'return': 8, '{': 7, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 46, ';': 35, ')': 11, 'Item': 4, 'content': 9, '(': 5, 'add': 2, '.': 39, 'Items': 16, '}': 36, '>': 32, 'Content': 3, '': 6, '<': 28, 'List': 27, 'Array': 26, 'new': 24, '=': 23, '{': 12, 'null': 18, '==': 17, 'if': 13, 'public': 0}
{'}\n': 95, ';': 40, ')': 11, '_': 24, '(': 7, 'classname': 15, '.': 18, ',': 36, 'STR': 35, '{': 12, 'String': 9, '': 8, 'Class': 5}
{'}\n': 119, ';': 117, ')': 59, ',': 33, '(': 5, '.': 90, '{': 60, 'milliseconds': 51, 'long': 39, 'final': 6, 'public': 0}
{'}\n': 16, ';': 15, 'return': 10, ')': 8, '(': 7, 'Invisible': 5, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 241, ';': 155, ')': 115, '(': 73, '.': 143, 'job': 103, '': 81, 'Job': 82}
{'}\n': 634, ';': 39, ')': 21, ']': 4, 'i': 261, '[': 3, 'j': 565, '=': 26, 'NUM': 38, '_': 37, '(': 6, '-': 395, '++': 272, 'for': 259, '+': 153, 'if': 301, 'A': 193, 'Minus': 192, 'one': 191, '/': 150, 'new': 55, 'double': 2, 'int': 23, 'static': 1, 'public': 0}
{'}\n': 188, ';': 186, ')': 90, '(': 83, 'iterator': 139, '.': 114, '{': 91, 'Field': 77, '': 9, '<': 11, 'Iterator': 10}
{'}\n': 16, ';': 15, ')': 5, '{': 6, '(': 4, 'public': 0}
{'}\n': 71, ';': 38, ')': 5, '(': 4, 'Pool': 34, 'Thread': 33, 'new': 31, '.': 30, 'Executors': 29, '': 28, 'Cached': 32, '{': 6, 'void': 2}
{'}\n': 163, '}': 102, ';': 101, 'Scroll': 74, 'm': 71, 'Offset': 75, 'Over': 73, '{': 47, 'else': 103, ')': 46, 'NUM': 78, '_': 77, '(': 26, 'if': 69, 'private': 0}
{'}\n': 192, '}': 62, ';': 36, ')': 18, '(': 4, 'close': 186, '.': 30, 'cursor': 66, '{': 19, 'null': 68, '!=': 104, 'if': 101, 'finally': 175, 'create': 139, 'Utils': 75, 'provider': 74, 'Next': 127, 'To': 126, 'move': 125, 'while': 121, 'Count': 116, 'get': 77, 'Capacity': 111, 'ensure': 110, 'ORDER': 93, 'SELECTION_': 83, '': 5, ',': 9, 'Args': 43, 'Selection': 42, 'QUERY': 84, 'Cursor': 65, '=': 25, 'try': 70, 'Like': 23, 'query': 8, ']': 40, '[': 39, 'String': 21, 'new': 45, 'STR': 27, '_': 26, '+': 28, 'Query': 7, 'text': 31, '>': 16, '<': 13, 'List': 12, 'Array': 11, 'Search': 6, 'retrieve': 2, 'void': 1, 'private': 0}
{'}\n': 27, ';': 26, ')': 3, '(': 2, '.': 21, 'loading': 14, '{': 4}
{'}\n': 49, ';': 31, ')': 10, 'cnt': 9, ',': 7, 'name': 6, 'this': 41, '(': 3, 'Count': 39, '': 4, 'new': 21, 'add': 35, '.': 34, '_values': 14, '}': 32, 'NUM': 29, '_': 28, '>': 26, '<': 25, 'List': 24, 'Array': 23, '=': 20, '{': 11, 'null': 16, '==': 15, 'if': 12, 'long': 8, 'String': 5, 'void': 1, 'public': 0}
{')': 4, '(': 3, 'Dialog': 2, 'close': 1, 'void': 0}
{'}\n': 55, ';': 54, ')': 16, '(': 4, '.': 41, 'param': 44, 'add': 2, 'params': 20, '': 5, '<': 31, 'null': 22, '==': 21, 'if': 18, 'void': 1, 'public': 0}
{'}\n': 156, ';': 23, ')': 10, '(': 16, 'List': 97, 'unmodifiable': 150, '.': 63, 'Collections': 148, '': 7, '=': 61, 'Ids': 145, 'm': 33, '}': 57, 'i': 117, 'String': 65, 'get': 79, 'add': 132, '{': 14, '++': 126, 'count': 88, '<': 98, 'NUM': 120, '_': 48, 'int': 87, 'for': 114, '>': 101, 'Array': 106, 'new': 40, 'length': 92, 'JSONArray': 74, 'json': 9, 'JSON_': 68, 'Xml': 60, 'STR': 49, '+': 47, 'JSONException': 13, 'throw': 39, 'Id': 35, 'Block': 34, 'if': 24, ',': 20, 'TYPE_': 18, 'super': 15, 'throws': 11, 'JSONObject': 8}
{'}\n': 109, ';': 24, 'result': 20, 'return': 106, '}': 104, 'BOOL': 23, '_': 22, '=': 21, '{': 18, ')': 17, 'SYNCHRONIZED': 96, '': 8, '.': 31, 'State': 28, 'Replication': 67, '==': 90, 'state': 69, '&&': 50, 'null': 54, '!=': 53, '(': 7, 'if': 38, 'replica': 27, 'Value': 77, 'Enum': 76, 'get': 32, 'Empty': 61, 'is': 3, '!': 56, 'Client': 14, 'db': 15, ',': 11, 'volume': 10, 'Copy': 5, 'Full': 4, 'Volume': 9, 'Replica': 33, 'String': 26, 'boolean': 2, 'Db': 13, 'static': 1, 'public': 0}
{'}\n': 33, ';': 32, 'pos': 17, '(': 9, '{': 23, ')': 18, ',': 13, 'read': 7, ']': 6, '[': 5, 'final': 1, 'private': 0}
{'}\n': 27, ';': 26, ')': 12, '(': 7, '.': 21, 'buf': 11, '{': 13, 'Buffer': 4, 'Byte': 9, '': 8, 'private': 0}
{'}\n': 21, ';': 20, '(': 16, '.': 14, 'TIME': 13, 'QUERY_': 12, 'SAFE_': 11, '': 10, '{': 9, ')': 8, 'Time': 6, 'static': 1, 'public': 0}
{')': 12, 'Response': 6, '': 2}
{'}\n': 135, ';': 62, 'return': 131, '}': 106, 'BOOL': 128, '_': 127, '=': 52, '{': 31, 'else': 107, ')': 30, 'MEDIA_': 92, '': 36, '.': 55, 'Environment': 54, '(': 26, 'equals': 86, 'status': 66, 'State': 59, 'Storage': 58, 'External': 57, 'get': 56}
{'}\n': 51, ';': 40, ')': 14, 'noun': 13, '(': 5, 'return': 35, '{': 15, 'else': 42, '}': 41, 'NUM': 32, '_': 31, '==': 30, 'quantity': 8, 'if': 27, 'String': 3, '': 2, 'final': 6, ',': 9, 'int': 7, 'plnoun': 4, 'static': 1, 'public': 0}
{'}\n': 44, ';': 43, ')': 23, 'Alias': 22, 'cert': 21, ',': 14, '(': 4, 'XMLSignature': 3, 'verify': 2, 'return': 29, '{': 28, 'Exception': 27, '': 11, 'throws': 24, 'String': 20, 'boolean': 1, 'public': 0}
{'}\n': 60, '}': 59, ';': 33, ')': 18, '(': 5, 'Line': 30, 'read': 2, '.': 28, 'reader': 17, '=': 26, 'line': 25, '{': 22, 'NUM': 47, '_': 46, '>': 45, 'length': 42, '&&': 39, 'null': 38, '!=': 37, 'while': 34, 'String': 24, '': 14, 'IOException': 21, 'throws': 19, 'Reader': 16, 'Buffered': 15, 'final': 6, ',': 12, 'Indices': 11, 'columns': 10, ']': 9, '[': 8, 'int': 7, 'void': 1, 'public': 0}
{'}\n': 93, ';': 50, 'this': 91, 'return': 90, ')': 31, 'value': 30, ',': 17, 'label': 53, 'type': 35, 'Tab': 80, 'current': 79, '(': 9, 'Entry': 77, 'Configuration': 76, '': 1, 'new': 74, 'add': 5, '.': 39, 'config': 70, 'Label': 13, 'item': 20, 'STR': 43, '_': 42, 'format': 40, 'String': 11, '=': 36, 'Type': 21, '{': 32, 'In': 7, 'Item': 6, 'Builder': 4, 'Config': 3, 'Component': 2, 'public': 0}
{'}\n': 104, ';': 49, '}': 94, ')': 25, '.': 84, 'parameters': 24, ',': 17, 'NUM': 75, '_': 46, '(': 4, '=': 40, '{': 38, 'null': 31, 'if': 27, '': 5}
{'}\n': 121, ';': 36, ')': 14, 'token': 13, '(': 6, 'Token': 5, 'Session': 4, '.': 20, 'Tokens': 41, 'site': 9, '_': 23, 'null': 59, '==': 58, 'if': 16, 'get': 49, 'session': 46, '=': 29, 'Set': 42, 'Http': 39, '': 7, '}': 37, 'STR': 24, '+': 31, '{': 15, 'contains': 21, '!': 18, 'String': 8, ',': 10, 'public': 0}
{'}\n': 316, ';': 116, ')': 56, '(': 20, '.': 272, 'distribution': 47, '': 25, '=': 224, '}': 189, 'return': 171, '{': 57, 'if': 117, 'public': 0}
{'}\n': 79, ';': 78, '.': 60, 'Math': 59, '': 58, 'NUM': 25, '_': 24, '(': 5, 'To': 3, 'double': 1}
{'}\n': 128, '}': 73, ';': 56, 'BOOL': 111, '_': 36, 'return': 109, ')': 26, 'STR': 37, ',': 35, 'TAG': 34, '': 28, '(': 6, '.': 30, 'Log': 29, '{': 80, 'e': 78, 'catch': 74, 'bytes': 66, 'Socket': 5, 'Data': 4, 'Via': 3, 'send': 2, 'boolean': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 9, '(': 4, 'push': 2, '.': 13, '{': 10, 'c': 8, 'Context': 3, '': 5, 'void': 1}
{'}\n': 105, ')': 103, '(': 98, 'extras': 64, 'void': 4}
{'}\n': 58, '}': 48, ';': 35, ')': 34, '(': 3, 'close': 53, '.': 52, 'fis': 24, '{': 19, 'finally': 49, 'load': 38, 'try': 36, 'Name': 7, 'file': 6, 'Stream': 23, 'Input': 22, 'File': 21, '': 1, 'new': 26, '=': 25, ',': 12, 'String': 5, 'public': 0}
{'}\n': 89, ';': 24, 'return': 86, ')': 35, ']': 4, 'i': 40, '[': 3, 'x': 70, '(': 18, '.': 59, '': 57, 'if': 54, 'NUM': 22, '_': 21, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 75, ';': 74, ')': 19, 'location': 17, '(': 3, 'add': 1, '.': 27, '{': 20, 'Location': 12, '': 4, 'void': 0}
{'}\n': 56, ';': 32, 'f': 33, '': 1, ',': 9, 'String': 6, '(': 4, 'public': 0}
{'}\n': 111, ';': 28, 'Time': 21, 'last': 19, 'NUM': 75, '_': 15, '-': 57, ')': 7, '(': 6, '.': 35, '=': 22, '{': 8}
{'}\n': 1149, ';': 30, 'Ratio': 1131, 'hastings': 1130, 'return': 1145, ')': 11, 'Prob': 1096, 'forward': 716, '/': 1100, 'backward': 229, '(': 3, 'log': 1136, '.': 24, 'Math': 59, '': 4, '=': 22, 'double': 1, 'Backward2': 891, 'sum': 223, '+': 259, 'Backward': 739, 'Forward2': 542, '}': 80, 'P': 179, 'j': 176, ',': 7, 'k': 550, 'tree': 23, 'swap': 357, 'prob': 373, '+=': 417, 'offset': 243, 'likelihood': 10, 'prior': 6, 'Likelihood': 9, 'Tree': 232, 'calculate': 231, 'exp': 256, '{': 17, 'Height': 102, 'Node': 26, 'get': 25, '<': 135, 'J': 529, 'height': 196, '&&': 97, 'JP': 515, '!=': 293, 'if': 290, 'Parent': 91, 'root': 35, 'n': 266, '++': 277, 'Count': 21, 'node': 20, 'NUM': 226, '_': 225, 'int': 19, 'for': 263, 'index': 50, 'Indices': 141, 'second': 139, 'i': 47, 'I': 51, 'IP': 197, 'probabilities': 160, 'Ref': 34, '--': 483, '-=': 470, 'ran': 444, '>': 106, 'while': 81, '*': 452, 'random': 449, 'STR': 439, 'Exception': 16, 'Failed': 15, 'Operator': 14, 'new': 143, 'throw': 431, '<=': 426, 'add': 352, '-': 248, 'Double': 158, 'List': 134, 'Array': 145, 'Integer': 137, 'Child': 115, 'Other': 114, '==': 84, '||': 86, 'Int': 63, 'next': 62, 'Utils': 60, 'do': 53, 'Root': 40, 'final': 18, 'throws': 12, 'Prior': 5, 'public': 0}
{'}\n': 84, ';': 34, 'BOOL': 33, '_': 28, 'return': 31, '}': 79, ')': 12, ']': 72, 'i': 47, '[': 70, '(': 7, 'equals': 67, '.': 23, 'Name': 5, 'column': 10, 'if': 14, '{': 13, '++': 59, 'length': 24, '<': 53, 'NUM': 29, '=': 48, 'int': 46, 'for': 44, 'Names': 38, 'Column': 4, 'get': 35, '==': 18, '||': 20, 'null': 19, 'String': 9, '': 8, 'Allowed': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 316, ';': 28, '(': 7, '.': 21, '}': 286, ')': 8, 'close': 291, 'stmt': 18, '{': 12, 'finally': 287, 'execute': 65, ',': 38, 'NUM': 37, '_': 25, 'Int': 34, 'set': 33, 'connection': 20, 'Update': 66, '': 10, 'try': 29, 'STR': 26, 'Statement': 17, 'prepare': 22, '=': 19, 'Prepared': 16, 'Exception': 11, 'throws': 9, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 315, ';': 25, ')': 6, 'ASCII': 58, 'US_': 57, '': 8, '.': 21, ',': 52, 'BOOL': 253, '_': 76, 'File': 44, 'journal': 13, '(': 5, 'Stream': 39, 'Output': 38, 'new': 31, 'Writer': 14, 'Buffered': 33, '=': 30, 'delete': 275, 'Backup': 250, 'Tmp': 50, 'To': 243, 'rename': 242, '}': 26, '{': 10, 'exists': 237, 'if': 11, 'close': 22, 'writer': 29, 'finally': 223, 'STR': 77, '+': 180, 'Lengths': 212, 'get': 211, 'entry': 154, 'key': 186, 'CLEAN': 200, 'write': 66, 'else': 193, 'DIRTY': 179, 'null': 16, '!=': 15, 'Editor': 169, 'current': 168, 'values': 159, 'Entries': 157, 'lru': 156, ':': 155, 'Entry': 153, 'for': 150, 'Count': 130, 'value': 129, 'String': 104, 'to': 103, 'Integer': 101, 'Version': 107, 'app': 106, 'VERSION_1': 85, 'MAGIC': 69, 'try': 62, 'IOException': 9, 'throws': 7, 'Journal': 4, 'rebuild': 3, 'void': 2, 'synchronized': 1, 'private': 0}
{'}\n': 92, ';': 69, ')': 7, '(': 4, 'close': 72, '.': 64, 'ois': 63, 'Object': 35, 'read': 65, '>': 61, '': 1, ',': 58, '<': 55, 'Map': 54, 'Stream': 30, 'Input': 29, 'new': 39, 'throws': 17, 'String': 13, 'void': 9, 'public': 8, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 32, ';': 31, ')': 13, 'Latch': 25, 'wait': 18, '{': 14, '(': 9, 'void': 1}
{'}\n': 139, ';': 24, ')': 8, 'size': 7, '/': 21, 'i': 57, '*': 79, 'PI': 93, 'two': 92, 'NUM': 23, '_': 22, '(': 5, 'cos': 90, '.': 16, 'Math': 88, '': 87, '-': 18, '+': 33, 'scale': 41, '=': 12, ']': 76, '[': 74, 'Function': 15, 'window': 14, '++': 67, ',': 68, 'start': 11, 'stop': 26, '<': 63, 'int': 6, 'for': 54, 'double': 40, 'length': 17, '{': 9, 'Harris4s': 3, 'blackman': 2, 'void': 1, 'private': 0}
{'}\n': 16, ';': 15, ')': 5, '(': 4, 'Code': 3, 'hash': 2, '.': 10, 'return': 7, '{': 6, 'int': 1, 'public': 0}
{'}\n': 78, '}': 67, ';': 22, 'NUM': 28, '_': 27, '=': 52, 'Packets': 51, '{': 30, ')': 29, '(': 24, 'if': 23}
{'}\n': 175, '}': 133, ';': 132, ')': 14, 'ctx': 13, ',': 165, '(': 56, '{': 15, 'else': 134, '.': 67, 'if': 16, 'Context': 12, 'Conversation': 11, '': 5, 'final': 9}
{'}\n': 93, ';': 89, 'Dir': 36, 'data': 35, '(': 6, '{': 69, ')': 16, 'Directory': 47, 'is': 46, '.': 37, '&&': 34, 'exists': 38, 'if': 28, 'Exception': 22, '': 7, 'public': 0}
{'}\n': 183, ';': 34, 'BOOL': 136, '_': 40, 'return': 134, '}': 138, ')': 17, 'Val': 85, 'current': 8, '(': 5, 'equals': 100, '.': 29, 'Type': 16, 'Position': 4, 'if': 95, 'length': 155, ',': 11, 'NUM': 41, 'substring': 147, '=': 25, '{': 18, 'else': 139, '!': 109, 'STR': 103, 'With': 114, 'starts': 113, 'Att': 72, 'Value': 91, 'Node': 21, 'get': 30, 'el': 59, 'String': 13, '': 6, 'Name': 78, 'z': 38, 'item': 64, 'Nodes': 24, 'att': 23, '++': 54, 'Length': 49, '<': 44, 'int': 37, 'for': 35, 'Attributes': 31, 'Part': 10, 'Rule': 9, 'Map': 22, 'Named': 20, 'Element': 7, 'check': 2, 'boolean': 1, 'protected': 0}
{'}\n': 37, ';': 36, ')': 21, 'null': 34, 'Loader': 18, 'class': 19, '(': 5, '{': 22, 'Class': 17, '': 6, ',': 9, 'String': 7, 'void': 2, 'static': 1}
{'}\n': 83, '}': 82, ';': 29, ')': 11, '(': 6, '.': 25, 'Container': 43, 'group': 9, 'DN': 44, ',': 15, 'token': 68, 'Impl': 66, 'AMGroup': 57, '': 7, 'new': 62, '=': 22, 'next': 52, 'iter': 21, 'String': 41, '{': 18, 'Next': 35, 'has': 34, 'while': 30, 'iterator': 26, 'Iterator': 20, 'SSOException': 17, 'AMException': 14, 'throws': 12, 'Set': 8, 'Containers': 5, 'Group': 4, 'Sub': 3, 'public': 0}
{'}\n': 81, ';': 42, '.': 46, ')': 28, '(': 4, '=': 44, ',': 8, '': 5, 'public': 0}
{'}\n': 89, ';': 86, 'e': 60, '=': 79, '.': 71, ')': 43, '(': 23, '{': 44, '': 5, 'Compiler': 17, 'public': 0}
{';\n': 7, ')': 6, '(': 5, 'native': 1, 'static': 0}
{'}\n': 104, ';': 26, ')': 9, '(': 5, '.': 47, 'bos': 16, 'close': 65, 'oos': 33, 'flush': 56, 'Object': 30, 'write': 48, 'Stream': 15, 'Output': 14, '': 6, 'new': 18, '=': 17, 'Array': 13, 'Byte': 12, '{': 10, 'static': 1, 'public': 0}
{'}\n': 108, ';': 32, 'BOOL': 31, '_': 30, 'return': 29, '}': 33, '{': 11, ')': 10, 'i': 64, '(': 6, 'At': 48, 'char': 47, '.': 16, 'Part': 86, 'Identifier': 42, 'Java': 41, 'is': 3, 'Character': 38, '': 7, '!': 36, 'if': 34, '<': 70, 'NUM': 51, '=': 65, 'int': 63, 'Start': 43, 'String': 8, 'boolean': 2, 'static': 1}
{'}\n': 37, ';': 36, ')': 12, 'VALUE': 23, 'MIN_': 22, '': 18, '.': 20, 'Long': 19, '+': 17, 'x2': 11, '(': 6, '<': 25, 'x1': 8, 'return': 14, '{': 13, 'long': 7, ',': 9, 'Unsigned': 4, 'Than': 3, 'less': 2, 'boolean': 1, 'static': 0}
{'}\n': 100, ';': 99, ')': 14, 'Y': 86, 'delta': 29, '(': 5, '+': 68, 'X': 30, '': 22, '{': 15, ',': 9}
{'}\n': 601, '}': 483, ';': 222, ')': 60, 'STR': 96, '_': 95, '(': 16, '': 139, 'new': 352, '{': 64, 'if': 88, 'get': 274, '.': 91, '=': 168, 'String': 140, 'hosts': 100}
{'}\n': 21, ';': 17, 'this': 19, 'return': 18, ')': 9, 'email': 8, '(': 5, 'add': 3, '.': 12, 'emails': 11, '{': 10, '': 1, 'Email': 4, 'Builder': 2, 'public': 0}
{'}\n': 33, ';': 32, ')': 11, '': 2, '.': 21, 'Support': 26, 'Hash': 3, '(': 6, 'Set': 20, 'Enum': 19, '{': 12, 'params': 10, 'Parameters': 9, 'best': 5, 'Provider': 4, 'static': 1, 'public': 0}
{'}\n': 140, '}': 37, ';': 36, ')': 11, '(': 7, 'Message': 69, 'truncated': 68, '.': 31, 'Exception': 30, 'Buffer': 28, 'Protocol': 27, 'Invalid': 26, '': 13, 'throw': 24, '{': 15, 'else': 124, 'bytes': 89, 'return': 120, 'size': 10, '+=': 117, 'Pos': 41, 'buffer': 40, ',': 103, 'NUM': 21, '_': 20, 'arraycopy': 100, 'System': 98, ']': 3, '[': 2, 'byte': 1, 'new': 91, '=': 90, 'final': 8, '-': 55, 'Size': 33, '<=': 77, 'if': 16, 'Limit': 46, 'current': 45, 'Bytes': 6, 'Raw': 5, 'skip': 49, '>': 44, '+': 42, 'negative': 32, '<': 19, 'IOException': 14, 'throws': 12, 'int': 9, 'read': 4, 'public': 0}
{'}\n': 101, ';': 21, 'BOOL': 67, '_': 34, 'return': 65, '}': 69, '{': 13, 'else': 70, '++': 87, ')': 12, 'x': 11, '<': 45, ']': 8, '[': 7, 'ar': 6, '(': 4, 'if': 50, '==': 61, 'j': 37, 'i': 32, 'NUM': 35, '=': 24, ',': 9, 'int': 5, 'for': 29, 'length': 27, '.': 16, 'len': 23, 'sort': 17, 'Arrays': 15, '': 14, 'pair': 2, 'boolean': 1, 'static': 0}
{'}\n': 161, ';': 27, ')': 7, '+': 151, 'STR': 123, '_': 122, '(': 6, '.': 21, '}': 134, '': 15, 'line': 73, '{': 8, 'CHARSET': 45, ',': 43, 'file': 17, 'Reader': 32, 'Buffered': 31, 'new': 38, 'Files': 36, '=': 18, 'reader': 33, 'try': 28, 'Name': 25, 'get': 22, 'Paths': 20, 'Path': 16, 'File': 5, 'From': 4, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 407, ';': 77, '': 33, '(': 4, '.': 32, 'NUM': 358, '_': 357, ')': 11, 'parents': 10, 'get': 53, '=': 40, 'double': 1, 'k': 148, 'int': 5, ',': 7, '{': 12, '...': 9, 'i': 6, 'Score': 3, 'local': 2, 'public': 0}
{'}\n': 51, ';': 27, 'success': 30, 'return': 48, ')': 7, 'Transaction': 12, '(': 3, 'offer': 42, '.': 34, 'Transactions': 40, 'm': 39, 'perform': 35, '=': 15, 'boolean': 1, 'final': 4, ',': 24, 'this': 23, '>': 21, '<': 20, '': 10, 'new': 16, 'Adapter': 11, '{': 8, 'public': 0}
{'}\n': 109, ';': 76, '}': 99, ')': 74, ',': 27, 'st': 81, '(': 69, 'add': 88, '.': 71, '{': 85, 'types': 35, ':': 82, '': 5, 'for': 77, 'size': 72, '>': 10, '<': 7, 'List': 6, 'Array': 65, 'new': 63, '=': 62, 'String': 25, 'Type': 9, 'private': 0}
{'}\n': 24, ';': 23, '_': 17, '(': 6, 'clear': 3, '{': 8, ')': 7, 'void': 2, 'public': 0}
{'}\n': 137, '}': 109, ';': 78, ')': 12, '(': 3, 'String': 5, 'to': 130, '.': 25, 'e': 114, '+': 127, 'STR': 126, '_': 125, ',': 7, 'TAG': 123, '': 4, 'Log': 118, '{': 13, 'JSONException': 113, 'catch': 110, 'result': 24, 'put': 26, 'Result': 102, 'List': 101, 'operation': 100, 'string': 36, 'R': 34, 'get': 30, 'resources': 28, 'intent_extra_status': 38, 'try': 14, 'code': 6, 'build': 2, 'void': 1, 'public': 0}
{'}\n': 99, ';': 98, 'Type': 69, 'return': 85, ')': 32, '(': 7, '.': 72, 'table': 16, '': 2}
{'}\n': 20, ';': 19, ')': 4, ']': 17, 'NUM': 16, '_': 15, '[': 14, 'fields': 13, '(': 3, 'Long': 8, 'parse': 10, '.': 9, '': 7, 'return': 6, '{': 5, 'long': 1, 'public': 0}
{'}\n': 564, '}': 188, ';': 138, ')': 24, '+': 429, 'STR': 428, '_': 427, 'Name': 134, '(': 8, 'message': 414, '.': 144, 'debug': 412, '{': 42, 'Enabled': 415, 'if': 150, 'get': 145, '=': 99, 'String': 318, '': 9, 'next': 222, 'Privilege': 212, 'Delegation': 30, 'dp': 213, 'Next': 204, 'has': 203, 'iterator': 197, 'Iterator': 192, 'return': 186, 'Empty': 159, 'is': 158, '||': 155, 'null': 154, '==': 153, 'Privileges': 5, 'Set': 140, ',': 18, 'token': 11, 'Manager': 97, 'new': 100, 'Exception': 31, 'SSOException': 27, 'throws': 25, 'SSOToken': 10, 'Realm': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 76, ';': 19, ')': 8, '.': 27, 'other': 26, '(': 3, 'equals': 35, '&&': 57, 'null': 24, 'type': 28, 'if': 10, 'BOOL': 18, '_': 17, 'return': 16, '==': 13, '{': 9, '': 4, 'boolean': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 8, '(': 7, 'Armed': 6, 'is': 5, '.': 12, 'return': 10, '{': 9, 'boolean': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 54, ';': 26, 'this': 52, 'return': 51, ')': 13, 'NUM': 24, '_': 23, '+': 22, 'max': 12, ',': 10, 'min': 9, '(': 7, 'clear': 29, '.': 16, 'set': 17, '{': 14, 'int': 8, 'Builder': 5, 'Suite': 4, 'Test': 3, 'Encoder': 2, '': 1, 'public': 0}
{'}\n': 752, ';': 246, 'return': 749, ')': 219, '(': 13, 'add': 693, '.': 609, ',': 34, '': 1, 'Change': 457, 'Varray': 97, 'Vpool': 131, 'Volume': 181, 'vpool': 456, 'get': 337, 'Pool': 129, '>': 7, '<': 3, 'new': 233, '=': 232, 'List': 2, 'Virtual': 25, 'Array': 92, 'create': 8}
{'}\n': 70, ';': 26, '_': 42, 'return': 66, '}': 65, ')': 13, '(': 7, '.': 21, 'STR': 43, 'Attribute': 40, 'session': 18, 'Session': 17, 'get': 22, 'request': 12, '=': 19, 'Http': 9, '': 8, '{': 14, 'Request': 11, 'Servlet': 10, 'static': 1, 'public': 0}
{'}\n': 52, ';': 18, 'BOOL': 17, '_': 16, 'return': 15, '}': 47, ')': 7, '.': 31, 'obj': 6, 'ECField': 24, '': 4, '(': 3, 'equals': 2, '{': 8, 'instanceof': 22, 'if': 9, '==': 12, 'this': 11, 'Object': 5, 'boolean': 1, 'public': 0}
{'}\n': 75, '}': 34, ';': 18, ')': 10, 'ex': 42, ',': 53, 'STR': 52, '_': 51, '(': 6, 'Exception': 41, 'Runtime': 48, '': 2, 'new': 46, 'throw': 45, '{': 11, 'Algorithm': 40, 'Such': 39, 'No': 38, 'catch': 35, 'get': 27, '.': 26, '=': 16, 'Digest': 14, 'Message': 13, 'data': 9, 'String': 3, 'static': 1, 'private': 0}
{'}\n': 159, '}': 158, ';': 72, '': 14, '{': 51, ')': 50, '(': 48, '.': 67, '=': 62, 'Builder': 59, 'Document': 58, 'new': 18, 'builder': 78, 'try': 73, 'Instance': 69, 'Factory': 60, 'static': 1, 'public': 0}
{'}\n': 46, ';': 31, ')': 14, '(': 5, 'String': 41, 'to': 40, '.': 39, 'obj': 13, ',': 9, 'index': 8, 'insert': 4, 'return': 23, '}': 32, 'Text': 29, 'null': 20, '{': 15, '==': 19, 'if': 16, 'Object': 12, '': 1, 'int': 7, 'Builder': 3, 'Str': 2, 'public': 0}
{'}\n': 84, ';': 83, ')': 18, '(': 8, 'Y': 79, 'get': 69, '.': 24, 'e': 17, ',': 13, 'X': 71, '=': 38, '{': 19, 'Event': 16, 'Mouse': 6, '': 1, 'canvas': 12, 'Canvas': 11, 'Chart': 10, 'handle': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 151, '}': 146, ';': 81, ')': 9, '(': 20, '.': 76, 'raf': 55, ',': 64, 'NUM': 105, '_': 65, 'ONLY': 102, 'READ_': 101, '': 6, 'Mode': 98, 'Map': 97, 'Channel': 71, 'File': 54, 'map': 90, 'get': 77, '=': 56, 'STR': 66, 'file': 44, 'Access': 53, 'Random': 52, 'new': 57, 'IOException': 12, 'throws': 10}
{'}\n': 323, ';': 40, 'return': 290, '}': 78, ')': 57, ',': 52, 'class': 56, '.': 45, '': 6, '(': 42, 'Object': 66, 'query': 65, 'Client': 63, '=': 38, '{': 59, 'block': 49, 'Type': 47, 'is': 46, 'URIUtil': 44, 'if': 41, 'else': 79, 'Snapshot': 94, 'Block': 93, 'Volume': 54, 'null': 39, 'public': 0}
{'}\n': 74, ';': 42, ')': 23, 'Radians': 17, 'Length': 21, 'path': 20, '(': 8, 'from': 54, '.': 53, 'Angle': 52, '': 2, ',': 13, 'Azimuth': 16, 'p': 12, 'Position': 7, 'End': 6, 'return': 44, '}': 43, 'STR': 40, '_': 39, 'Exception': 37, 'Argument': 36, 'Illegal': 35, 'new': 33, 'throw': 32, '{': 24, 'null': 29, '==': 28, 'if': 25, 'double': 14, 'Lon': 4, 'Lat': 3, 'static': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 10, 'VALUE': 22, 'MAX_': 21, '': 1, '.': 19, 'Integer': 18, ',': 23, '(': 6, 'Dimension': 2, 'new': 13, '{': 11, 'target': 9, 'Container': 8, 'Size': 5, 'Layout': 4, 'maximum': 3, 'public': 0}
{'}\n': 147, ';': 32, ')': 11, '(': 6, '.': 59, '{': 12, '}': 101, 'STR': 96, '_': 95, 'null': 66, '!=': 65, 'Line': 61, 'read': 4, '=': 17, 'line': 47, 'while': 53, 'String': 3, '': 2, 'Builder': 35, 'new': 18, 'sb': 36, 'Reader': 15, 'Stream': 9, 'Input': 8, 'Buffered': 14}
{'}\n': 60, '}': 59, ';': 58, ')': 8, 'STR': 52, '_': 51, ',': 50, '': 5, '.': 42, '(': 4, 'log': 43, 'logger': 41, '{': 9, 'e': 33, 'void': 1, 'private': 0}
{'}\n': 96, ';': 19, ')': 7, '(': 3, '=': 81, 'NUM': 45, '_': 44, '-': 65, 'Ripple': 5, '': 10, '{': 8}
{'}\n': 86, '}': 32, ';': 31, ')': 14, '_': 50, '(': 5, 'put': 25, '.': 24, 'buf': 23, 'i': 48, 'At': 69, 'char': 68, 'text': 18, 'Char': 64, '{': 15, '++': 58, 'len': 37, '<': 54, 'NUM': 51, '=': 38, 'int': 36, 'for': 45, 'length': 41, 'final': 1, 'else': 33, 'null': 20, '==': 19, 'if': 16, ',': 10, '': 6, 'S': 4, 'write': 3, 'void': 2, 'protected': 0}
{'}\n': 774, ';': 366, ')': 12, '(': 8, '.': 16, '': 1, 'GL_': 377, 'GLES20': 15, 'gl': 17, 'Enable': 412, 'NUM': 311, '_': 310, ',': 325, 'Clear': 18, '{': 13, 'Draw': 6, 'on': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 42, ';': 41, ')': 28, 'Records': 26, 'num': 10, '(': 27, 'int': 9}
{'}\n': 63, ';': 22, ')': 10, '.': 59, 'o': 9, '(': 6, '}': 40, 'BOOL': 21, '_': 20, 'return': 19, '{': 11, '': 1, 'instanceof': 29, '!': 26, 'if': 12, '==': 15, 'this': 14, 'Object': 8, 'equals': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 204, '}': 35, ';': 34, ')': 15, 'STR': 104, '_': 103, '(': 5, '.': 99, '': 11, 'new': 81, '{': 16, 'version': 13, 'String': 12, 'Version': 4}
{'}\n': 90, ';': 89, '.': 34, 'vector': 14, ')': 17, '_': 52, '(': 6, '': 38, '{': 18, 'public': 0}
{'}\n': 18, ';': 17, ')': 5, 'SUFFIX_': 14, '': 13, '(': 4, 'contains': 11, '.': 10, 'String': 9, 'type': 8, 'return': 7, '{': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 163, ';': 128, ')': 55, 'blk': 46, '(': 30, '.': 65, ',': 104, '{': 56, 'Block': 37, '': 36, 'void': 26, 'public': 25}
{'}\n': 20, ';': 19, ')': 8, 'target': 6, '(': 3, 'return': 10, '{': 9, '': 4, 'public': 0}
{'}\n': 35, ';': 33, ')': 23, '(': 5, '{': 24, 'observer': 18, 'Observer': 17, '': 6, 'void': 1}
{'}\n': 18, ';': 17, ')': 4, '': 11, '.': 7, 'Opcodes': 12, '(': 3, 'Insn': 9, 'visit': 8, 'mv': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 66, ';': 65, 'Page': 19, '(': 10, ')': 36, '': 2}
{'}\n': 163, ';': 161, ')': 37, ',': 155, '(': 17, 'Number': 69, 'Column': 86, 'get': 67, '.': 47, 'locator': 65, 'Line': 68, 'STR': 57, '_': 56, '': 12, '{': 38, 'String': 24, 'protected': 0}
{'}\n': 195, ';': 17, ')': 5, '(': 4, '.': 34, 'set': 173, 'But': 33, 'm_': 20, '_': 139, 'add': 18, '{': 6, '': 1, 'public': 0}
{'}\n': 57, ';': 44, ')': 31, '(': 41, 'Null': 40, 'Non': 39, 'require': 38, '.': 37, 'Objects': 36, '': 1, '{': 32, '>': 29, ',': 12, '<': 7, 'public': 0}
{'}\n': 67, ';': 54, ')': 12, 'single': 22, '(': 15, '': 2, '}': 55, '.': 25, '{': 13, 'null': 20, 'if': 14, 'static': 1, 'public': 0}
{'}\n': 46, ';': 45, ')': 15, 'field': 13, '(': 10, '.': 35, 'return': 31, 'Type': 20, '{': 16, '': 2, '>': 6, '<': 4}
{'}\n': 47, ';': 46, 'BOOL': 44, '_': 43, 'Token': 4, '(': 31, '{': 25, '': 12, ')': 21, 'Index': 10, 'last': 8, 'int': 7}
{'}\n': 594, ';': 95, 'return': 135, '}': 156, 'y': 88, 'x': 39, '{': 47, ')': 46, '(': 22, 'if': 97, '==': 286, 'is': 103, '.': 102, 'double': 17, 'static': 1, 'public': 0}
{'}\n': 403, ';': 400, ')': 33, '(': 3, '.': 361, '': 1, ',': 8, 'Prefix': 14, 'Name': 13, 'File': 12, 'temp': 6, 'Dir': 7, 'this': 59, '{': 41, 'Exception': 40, 'Parse': 39, 'IOException': 36, 'throws': 34, 'Stream': 18, 'Input': 17, 'affix': 19, 'String': 10, 'Directory': 5, 'Dictionary': 2, 'public': 0}
{'}\n': 66, ';': 64, ')': 44, '(': 14, '{': 45, 'Coords': 30, '': 5, 'Building': 6, 'public': 0}
{'}\n': 140, '}': 117, ';': 44, ')': 34, '(': 8, 'Message': 134, 'get': 94, '.': 26, 'e': 122, 'Exception': 38, 'Rpc': 2, '': 1, 'new': 51, 'throw': 125, '{': 39, 'TException': 121, 'catch': 118, 'handler': 33, ',': 13, 'Proxy': 72, 'client': 71, 'try': 104, 'Ip': 96, 'Host': 25, 'Id': 12, 'vm': 11, 'STR': 89, '_': 88, 'info': 86, 'logger': 84, 'MS': 81, 'TIMEOUT_': 80, 'DETACH_': 78, 'Timeout': 75, 'set': 74, 'Detach': 46, '=': 50, 'Client': 29, 'ensure': 40, 'throws': 35, '>': 32, 'Async': 20, '<': 23, 'Callback': 22, 'Method': 3, 'String': 10, 'detach': 6, 'void': 5, 'public': 4, '@': 0}
{'}\n': 139, 'STR': 127, '_': 55, '(': 7, '.': 33, ')': 12, '': 8, ';': 38, 'NUM': 56, 'get': 34, '=': 31}
{'}\n': 215, ';': 196, ')': 89, '(': 76, 'add': 123, '.': 122, 'm': 120, '{': 90, 'item': 80, 'Item': 67, '': 54}
{'}\n': 72, ';': 65, ')': 18, '(': 8, '}': 66, '.': 29, '{': 19, 'if': 37, 'Millis': 32, 'Time': 31, 'current': 30, 'System': 28, '': 27, 'Modified': 25, 'modified': 20}
{'}\n': 29, ';': 19, ')': 18, '.': 14, 'Stack': 13, '(': 5, 'Action': 8, 'Undoable': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 57, ';': 32, ')': 10, ',': 45, 'NUM': 26, '_': 25, 'data': 9, '(': 17, 'arraycopy': 42, '.': 22, 'System': 40, '': 1, 'length': 23, '=': 13, ']': 8, 'new': 14, '{': 11, '[': 7, 'public': 0}
{'}\n': 119, '}': 118, '(': 6, '.': 62, ')': 18, 'Ping': 12, ';': 44, 'null': 28, '==': 27, 'if': 22, '{': 21, 'void': 1, 'private': 0}
{'}\n': 22, ';': 21, ')': 11, '(': 6, 'append': 16, '.': 15, 'buffer': 10, 'return': 13, '{': 12, 'Builder': 3, 'String': 2, '': 1, 'Body': 5, 'encode': 4, 'public': 0}
{'}\n': 30, '}': 21, '{': 6, ')': 5, 'e': 26, 'Exception': 25, '': 24, '(': 4, 'catch': 22, ';': 14, 'close': 11, '.': 10, 'try': 7, 'void': 1}
{'}\n': 52, ';': 40, '.': 44, ')': 14, '(': 4, '==': 19, 'if': 16, '{': 15, 'subject': 7, 'String': 6, '': 1, 'public': 0}
{'}\n': 411, ';': 45, '': 228, '_': 36, '(': 11, 'if': 10, '}': 372, ')': 8, '.': 184, '{': 9, 'get': 168, 'Order': 137, 'Block': 216, 'Current': 136, '_idx': 135, '=': 49, 'STR': 37}
{'}\n': 37, ';': 35, ')': 14, 'listener': 13, '(': 7, '.': 30, 'Listeners': 21, 'Form': 5, 'Sash': 4, 'custom': 18, 'null': 23, 'if': 16, '{': 15, 'Listener': 6, 'ICustom': 9, '': 8, 'Custom': 3, 'void': 1, 'public': 0}
{'}\n': 116, ';': 73, ')': 7, '(': 6, 'Exception': 88, 'check': 111, '}': 83, 'close': 5, '.': 69, 'super': 104, '{': 11, 'finally': 102, 'STR': 98, '_': 97, 'IOException': 10, '': 1, 'new': 93, 'throw': 92, 'e': 89, 'Interrupted': 87, 'catch': 84, 'join': 79, 'Thread': 77, 'm': 35, 'try': 74, 'if': 12, 'throws': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 55, '}': 31, ';': 30, ')': 11, 'e': 38, ',': 50, 'in': 10, '(': 7, 'Exception': 17, 'Field': 16, 'Parse': 15, 'Index': 14, '': 8, 'new': 42, 'throw': 41, '{': 18, 'catch': 32, '.': 24, 'return': 21, 'try': 19, 'throws': 12, 'String': 4, 'As': 5, 'parse': 3, 'static': 1, 'public': 0}
{'}\n': 66, '}': 39, ';': 38, ')': 17, 'trim': 16, ',': 9, 'rs': 8, '(': 4, 'Values': 57, 'Column': 12, 'get': 55, '.': 43, 'Service': 53, 'result': 52, 'Next': 50, 'write': 2, '{': 24, 'next': 44, 'while': 40, 'Names': 13, 'include': 11, 'if': 25, 'IOException': 23, '': 5, 'SQLException': 20, 'throws': 18, 'boolean': 10, 'Set': 7, 'Result': 6, 'All': 3, 'void': 1, 'public': 0}
{'}\n': 139, ';': 40, 'this': 137, ')': 25, '(': 33, '.': 29, '}': 127, '_': 37, '': 1, '{': 26, 'NUM': 95, '>': 93, 'if': 85, ',': 13, 'STR': 38, 'Null': 32, 'Non': 31, 'require': 30, 'Objects': 28, 'Offset': 10, 'standard': 11, 'Zone': 9}
{'}\n': 89, ';': 88, ')': 25, '(': 49, '.': 51, '=': 35, '>': 13, 'Segment': 12, 'ILine': 11, '': 1, '<': 9, 'List': 8}
{'}\n': 11, ';': 10, '{': 7, ')': 6, '(': 5, 'Font': 4}
{'}\n': 78, ';': 22, ')': 5, '(': 4, '.': 16, 'get': 17, '=': 13, '>': 40, '': 35, '<': 37, 'Set': 36, 'final': 34, 'null': 28, '==': 27, 'Machine': 10, '{': 6}
{'}\n': 362, '}': 250, ';': 65, ')': 40, '(': 5, 'commit': 356, '.': 79, 'transaction': 66, '{': 75, 'finally': 352, 'close': 253, 'statement': 76, 'param2': 306, ',': 9, 'param1': 285, 'of': 337, 'Value': 284, 'Row': 334, '': 21, 'execute': 331, 'Id': 8, 'Blob': 4, 'get': 68, 'blob': 142, 'Long': 317, 'encode': 295, 'Coder': 270, 'datatype': 271, 'Field': 283, 'new': 58, '=': 57, 'test': 7, 'Int': 296, 'Datatype': 269, 'db': 71, 'final': 138, 'TABLE': 264, 'BLOB_': 263, 'INSERT_': 262, 'prepare': 259, 'length': 179, 'buffer': 185, '+=': 245, 'Written': 166, 'bytes': 165, 'Segment': 199, 'put': 237, 'NUM': 169, '_': 168, 'Bytes': 177, 'arraycopy': 217, 'System': 215, ']': 12, '-': 208, 'Size': 200, 'Maximum': 198, 'min': 193, 'Math': 191, '[': 11, 'byte': 10, '<': 175, 'while': 171, 'int': 6, 'open': 160, 'Buffer': 155, 'Parameter': 154, 'Output': 149, 'For': 148, 'create': 80, 'Fb': 140, 'listener': 56, 'Listener': 62, 'Statement': 61, 'add': 88, 'try': 74, 'Transaction': 69, 'Simple': 60, 'void': 1, 'protected': 0}
{'}\n': 33, ';': 32, '|': 29, ')': 11, '(': 22, 'Bits': 21, 'Long': 20, 'Raw': 19, 'To': 18, 'double': 9, '.': 16, 'Double': 15, '': 14, 'return': 13, '{': 12, 'final': 8, 'static': 1}
{'}\n': 33, ';': 32, ')': 18, 'key': 10, '(': 5, 'add': 2, '.': 27, 'Keys': 26, 'near': 25, '{': 24, 'Exception': 23, 'Checked': 22, 'Ignite': 21, '': 6, 'throws': 19, 'ctx': 17, 'Context': 16, 'Shared': 15, 'Cache': 8, 'Grid': 13, ',': 11, 'Object': 9, 'Key': 4, 'Near': 3, 'void': 1, 'public': 0}
{'}\n': 140, '}': 99, ';': 96, '': 17, 'Exception': 128, 'Found': 105, 'Not': 104, 'Class': 18, '(': 51, 'catch': 100, ')': 57, 'Name': 77, 'class': 31, '{': 58, '>': 21, '?': 20, '<': 19}
{'}\n': 188, '}': 187, ';': 73, ')': 24, '(': 5, '.': 89, 'Functions': 121, 'CUtility': 120, '': 12, 'final': 11, '{': 25, 'STR': 69, '_': 68, ',': 64, 'debugger': 14, 'IDebugger': 13, 'void': 2, 'public': 0}
{'}\n': 372, ';': 99, '}': 160, ')': 14, '(': 5, '.': 61, 'if': 25, 'BOOL': 314, '_': 127, '': 6, '{': 18, 'Exit': 151, 'On': 150, 'delete': 3, '=': 110, 'file': 60, 'new': 37, 'boolean': 2, ',': 9, 'static': 1, 'public': 0}
{'}\n': 132, '}': 81, ';': 38, ')': 11, 'STR': 36, '_': 35, '(': 7, 'Exception': 125, 'State': 124, 'Illegal': 123, '': 2, 'new': 121, 'throw': 120, '{': 12, 'else': 82, 'tables': 10, 'return': 70, 'commapos': 40, ',': 77, 'NUM': 56, 'substring': 73, '.': 19, '<': 60, 'spacepos': 28, '||': 62, '&&': 57, '>': 54, 'if': 13, 'Of': 33, 'index': 32, '=': 29, 'int': 27, 'Empty': 21, 'is': 20, 'Utils': 18, '!': 15, 'String': 3, 'Table': 6, 'Edit': 5, 'find': 4, 'static': 1, 'public': 0}
{'}\n': 158, '}': 106, ';': 19, ')': 7, 'e': 144, '+': 153, 'STR': 103, '_': 102, '(': 6, 'error': 100, '.': 37, 'log': 98, '{': 8, 'Exception': 143, '': 40, 'catch': 140, 'Filename': 15, 'Operations': 3, 'default': 13, 'File': 5, 'write': 2, 'debug': 121, 'New': 113, 'create': 112, 'file': 42, 'if': 22, 'mkdir': 93, 'Dir': 66, 'parent': 65, '!': 24, 'exists': 82, 'Parent': 71, 'get': 70, '=': 43, 'io': 38, 'java': 36, 'new': 44, 'check': 25, 'try': 20, 'Backup': 10, 'make': 9, 'void': 1, 'public': 0}
{'}\n': 35, ';': 34, '.': 18, '_': 28, ')': 13, '(': 21, 'followers': 12, '{': 14, '>': 11, 'Follower': 10, '': 6, '<': 8, 'List': 7}
{'}\n': 130, ';': 128, 'STR': 116, '_': 115, 'latitude': 18, '{': 71, ')': 67, '(': 38, 'String': 17, '': 16, 'private': 0}
{'}\n': 23, ';': 22, ')': 12, 'evt': 11, '(': 6, 'Change': 5, 'Property': 4, '.': 15, '{': 13, 'Event': 10, '': 7, 'fire': 3, 'void': 2}
{'}\n': 38, ';': 37, ')': 19, 'COMPARATOR': 35, '': 6, ',': 13, 'right': 18, 'left': 15, 'sorted': 11, '(': 5, 'sort': 3, '.': 23, 'Arrays': 22, '{': 20, 'int': 14, ']': 10, '[': 9, 'Binding': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 46, ';': 20, ')': 9, '(': 4, 'Height': 41, 'get': 40, ',': 32, 'Width': 31, 'View': 37, 'm_offset': 36, 'NUM': 34, '_': 33, 'm_char': 30, '*': 29, 'Column': 28, 'm_first': 27, '-': 26, 'Rect': 24, 'fill': 23, '.': 12, 'g': 8, 'Offset': 18, 'Color': 14, 'm_bg': 16, 'set': 13, '{': 10, 'Graphics': 7, '': 6, 'final': 5, 'Background': 3, 'draw': 2, 'void': 1, 'private': 0}
{'}\n': 51, ';': 49, ')': 17, '.': 40, 'Name': 10, 'attr': 29, 'null': 25, '{': 18, 'public': 0}
{'}\n': 159, ';': 35, 'Response': 5, 'Vm': 4, 'return': 154, '}': 153, ')': 18, '(': 10, 'Result': 43, 'get': 42, '.': 25, ',': 30, 'STR': 29, '_': 28, 'format': 137, 'String': 135, '': 2, 'Exception': 22, 'Rpc': 21, 'new': 60, 'throw': 59, ':': 51, 'default': 126, 'Error': 71, 'case': 48, 'Found': 87, 'Not': 86, 'FOUND': 80, 'NOT_': 79, 'break': 52, 'OK': 50, '{': 23, 'switch': 36, 'info': 26, 'logger': 24, 'throws': 19, 'check': 6, 'static': 1, 'private': 0}
{'}\n': 13, ';': 12, 'vf': 11, 'return': 10, '{': 9, ')': 8, '(': 7, 'value': 5, 'Factory': 4, 'Value': 3, '': 1}
{'}\n': 58, '}': 57, ';': 21, ')': 10, '(': 5, 'Id': 52, 'Token': 33, 'get': 32, '+': 49, 'STR': 48, '_': 47, 'Exception': 15, 'Grant': 14, 'Invalid': 13, '': 1, 'new': 41, 'throw': 40, '{': 16, 'Name': 34, 'equals': 30, '.': 29, 'OAUTH_': 26, '!': 24, 'if': 22, 'token': 9, 'super': 17, 'throws': 11, 'Value': 8, 'Json': 7, 'public': 0}
{'}\n': 73, ';': 72, ')': 15, '(': 4, '.': 63, '}': 60, 'style': 13, '{': 18, 'Style': 3, '': 5}
{'}\n': 241, ';': 68, 'return': 238, '}': 237, ')': 51, 'NUM': 108, '_': 82, '-': 186, '(': 7, 'length': 128, '.': 78, 'host': 49, ',': 109, 'substring': 105, '=': 56, '{': 52, 'STR': 83, 'String': 3, '': 2, 'static': 1}
{'}\n': 65, ';': 46, '.': 48, ')': 26, '(': 16, 'cf': 47, '>': 5, '<': 2, 'Future': 31, '': 3, 'new': 38, '=': 37, 'T': 4, 'final': 17, '{': 27, 'static': 1, 'public': 0}
{'}\n': 48, ';': 42, 'BOOL': 41, '_': 40, 'return': 39, '}': 43, ':': 23, 'case': 18, '{': 12, ')': 11, '(': 6, 'switch': 13, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 50, ';': 33, ')': 13, '(': 8, 'Array': 20, 'Byte': 19, 'to': 44, '.': 43, 'return': 41, ',': 37, 'copy': 34, 'Stream': 11, 'Output': 21, '': 9, 'new': 25, '=': 24, '{': 17, 'IOException': 16, 'throws': 14, 'Input': 10, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 92, ';': 81, ')': 54, '(': 49, 'State': 84, 'get': 86, 'notify': 83, '.': 70, 'mplayer': 69, '{': 55, 'void': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 11, '(': 7, '.': 19, 's': 10, 'String': 3, '': 2, 'to': 4, 'public': 0}
{'}\n': 52, ';': 48, 'bits': 44, 'NUM': 47, '_': 46, ')': 18, '.': 38, 'Cache': 13, 'Client': 12, 'Grid': 11, '': 7, '{': 19, 'Flag': 14, '(': 6, 'public': 0}
{'}\n': 26, ';': 25, ')': 11, 'source': 7, '(': 3, '.': 16, '{': 12, 'Source': 6, 'Data': 5, '': 4, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 86, ';': 22, 'weight': 12, '+=': 18, 'Weights': 37, 'Of': 36, 'Sum': 17, 'm_': 15, '*': 20, 'value': 9, 'Squared': 26, 'Weighted': 16, '{': 14, ')': 13, 'double': 8, ',': 10, '(': 7, 'Value': 6, 'add': 5, 'void': 4, 'public': 3}
{'}\n': 81, ';': 80, ')': 26, 'date': 51, '(': 50, 'format': 13, '.': 48, 'Date': 14, '{': 29, '': 3, 'String': 4, 'static': 1}
{'}\n': 45, ';': 44, ')': 13, 'STR': 39, '_': 38, '(': 9, 'Exception': 23, 'Bounds': 7, 'Of': 21, 'Out': 20, 'Index': 19, '': 17, 'new': 16, 'throw': 2, '{': 14, 'void': 1, 'private': 0}
{'}\n': 236, ';': 84, 'null': 144, ')': 16, '(': 19, '.': 41, ',': 100, 'Sequence': 36, '': 1, '=': 133, '{': 17, 'get': 182, '<': 165, 'if': 114, 'else': 159, '}': 85, 'NUM': 111, '_': 69, 'int': 87, '+': 68, '==': 55, 'reference': 38, 'private': 0}
{'}\n': 30, '{': 29, ')': 28, 'version': 13, 'String': 7, '': 6, ',': 10, 'Name': 9, 'service': 8, '(': 5, 'Changed': 4, 'void': 1, 'public': 0}
{'}\n': 154, '}': 153, ';': 42, ')': 19, '(': 6, '.': 23, '{': 20, 'if': 131, 'Manager': 118, '=': 47, '>': 113, 'Info': 112, '': 8, '<': 109, '+': 32, 'STR': 31, '_': 30, ',': 29, 'TAG': 28, 'Log': 22, 'Intent': 5, 'launch': 3}
{'}\n': 9, ';': 8, 'return': 6, '{': 5, ')': 4, '(': 3, 'count': 2, 'public': 0}
{'}\n': 84, '}': 76, ';': 29, ')': 8, '(': 4, 'write': 2, '.': 42, 'out': 59, 's': 7, '<': 31, 'i': 25, 'NUM': 28, '_': 27, '=': 26, 'int': 24, 'for': 22, '{': 12, 'IOException': 11, '': 5, 'throws': 9, 'String': 6, 'void': 1}
{'}\n': 25, ';': 24, ')': 9, ',': 21, '(': 5, '': 6, 'filename': 8, 'String': 7, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 89, '}': 88, ';': 32, ')': 17, '(': 5, 'Changed': 84, 'on': 83, '.': 34, 'Observer': 73, 'Set': 72, 'Data': 71, 'm': 53, '{': 18, 'null': 75, '!=': 74, 'if': 63, 'info': 23, 'add': 2, 'Infos': 56, 'View': 4, 'Footer': 3, 'Selectable': 16, 'is': 15, '=': 24, 'data': 12, 'v': 8, 'view': 35, 'Info': 22, 'Fixed': 20, '': 6, 'new': 25, 'boolean': 14, ',': 9, 'Object': 11, 'void': 1, 'public': 0}
{'}\n': 44, ';': 43, 'filename': 7, '(': 4, ')': 8, 'if': 16, '{': 15, 'String': 6, '': 5, 'public': 0}
{'}\n': 18, ';': 17, ')': 9, '(': 5, '.': 12, 'player': 8, '{': 10, 'Player': 7, '': 6}
{'}\n': 141, '}': 107, ';': 58, ')': 33, '(': 6, '.': 88, 'address': 127, 'add': 125, '{': 80, 'if': 94, 'get': 89, '=': 45, 'Breakpoint': 40, '': 8, 'final': 7, ':': 77, 'for': 70, '>': 42, 'Address': 41, '<': 38, 'Set': 37, 'Hash': 49, 'new': 46, 'addresses': 32, ',': 13, 'void': 2, 'static': 1}
{'}\n': 47, ';': 45, ')': 27, 'BOOL': 34, '_': 33, '(': 15, 'cancel': 31, '.': 30, '{': 28, 'interrupt': 2, 'void': 1, 'public': 0}
{'}\n': 154, ';': 41, ')': 15, '(': 14, '.': 47, '}': 133, ',': 53, 'String': 26, '': 25, '{': 16, 'Set': 63, 'entry': 57, ':': 58, '>': 56, '<': 50, 'Entry': 49, 'Map': 46, 'for': 42, '=': 30, 'final': 17}
{'}\n': 350, ';': 112, '}': 321, ')': 76, ',': 17, '(': 110, 'put': 269, '.': 123, 'get': 218, '=': 94, '>': 23, 'String': 16, '': 12, '<': 14, 'Set': 19, '{': 148, ':': 120, 'for': 113, 'Map': 13, 'Hash': 97, 'new': 95, 'static': 1}
{'}\n': 99, ';': 21, ')': 8, '(': 7, 'size': 94, '.': 33, 'result': 24, ',': 43, 'NUM': 90, '_': 41, 'Equals': 87, 'assert': 79, 'Null': 81, 'Not': 80, '}': 70, '{': 9, 'e': 75, 'Exception': 74, '': 10, 'catch': 71, 'SUBTREE': 66, 'SCOPE_': 65, 'Constants': 46, 'Scope': 61, 'Ldap': 6, 'null': 26, 'LIMIT': 51, 'SEARCH_': 50, 'NO_': 49, 'STR': 42, 'VO': 39, 'Search': 38, 'get': 15, 'find': 34, 'proxy': 13, '=': 14, 'try': 28, 'List': 23, 'Open': 5, 'Proxy': 12, 'Spring': 4, 'Find': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 152, ';': 55, ')': 11, 'DELETE': 149, '': 4, ',': 7, 'dn': 10, '(': 3, 'Changed': 144, 'object': 143, 'get': 135, '.': 47, '}': 77, 'STR': 33, '_': 32, '+': 68, 'debug': 46, '{': 18, 'SSOException': 17, 'SMSException': 14, 'throws': 12, 'String': 9, 'token': 6, 'SSOToken': 5, 'public': 0}
{'}\n': 92, '}': 91, ';': 89, ')': 37, 'worklist': 30, '(': 18, '.': 46, '{': 38, 'Blocks': 36, 'visited': 35, 'Set': 34, 'Bit': 33, '': 3, ',': 22, '>': 13, 'T': 4, '<': 2, 'Queue': 25, 'Priority': 24, 'void': 15, 'Base': 9, 'Block': 8, 'Abstract': 7, 'extends': 5, 'static': 1, 'private': 0}
{'}\n': 25, ';': 23, ')': 15, 'role': 12, '(': 4, 'add': 2, '.': 18, 'roles': 17, '{': 16, '': 5, 'Role': 3, 'void': 1, 'public': 0}
{'}\n': 73, ';': 42, 'Box': 4, 'check': 31, '(': 6, ')': 15, '.': 45, 'STR': 40, '_': 39, '': 1, '{': 16, 'Check': 3}
{'}\n': 13, ';': 12, ')': 4, 'Zone': 10, 'Time': 9, '_gmt': 8, '(': 3, '{': 5, 'QDate': 2, '': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 11, 'response': 9, '(': 4, '.': 22, '{': 12, 'Response': 7, '': 5, 'void': 1}
{'}\n': 382, ';': 170, ')': 33, ',': 26, '(': 52, '': 4, 'new': 207, '}': 171, '.': 160, 'snapshot': 321, '{': 34, 'blob': 155, 'PREFIX': 251, 'With': 247, 'starts': 246, 'if': 242, 'Set': 225, 'key': 224, 'blobs': 32, ':': 221, 'String': 25, 'for': 216, '>': 13, '<': 23, 'List': 210, 'Array': 209, '=': 206, '+': 192, 'e': 176, 'IOException': 175, 'catch': 172, 'Container': 156, 'Data': 30, 'Meta': 29, 'Blob': 28, 'Map': 22, 'protected': 0}
{'}\n': 627, ';': 57, ')': 15, '(': 5, 'Short': 76, 'read': 50, '.': 43, 'data': 14, '=': 47, 'Int': 495, 'Byte': 382, 'this': 42, '{': 19, '': 11}
{'}\n': 15, ';': 14, ')': 5, '(': 4, 'Armed': 3, 'is': 2, '.': 9, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 18, 'Name': 17, '': 2, '(': 8, 'Attrib': 23, 'return': 20, '{': 19, 'static': 1}
{'}\n': 392, ';': 65, ')': 42, '(': 2, 'cast': 246, '.': 73, 'Type': 11, 'Array': 1, 'linear': 9, '=': 69, 'Values': 240, '_imag': 266, '_real': 239, 'Indices': 17, '_col': 213, '_row': 200, 'NUM': 107, '_': 106, ',': 12, 'Component': 67, '_base': 66, 'Class': 4, 'get': 74, 'Utils': 96, '': 3, '>': 8, ']': 15, '[': 14, 'L': 7, '<': 5, '_output': 80, '{': 43, 'Cols': 41, 'num': 36, 'int': 13, 'Rows': 37, 'imag': 32, 'real': 27, 'col': 22, 'row': 16, 'Sparse': 0}
{'}\n': 171, ';': 32, ')': 6, '(': 5, 'Selected': 28, '.': 10, 'But': 161, 'm_': 8, 'Enabled': 12, 'set': 11, 'Lab': 150, 'CVBut': 98, 'is': 27, '{': 7, 'Links': 4, 'Radio': 3, 'update': 2, 'void': 1, 'protected': 0}
{'}\n': 71, ';': 70, '_': 42, ')': 11, 'id1': 7, '(': 5, 'NUM': 43, '.': 19, '': 17, 'id2': 10, 'int': 6, ',': 8}
{'}\n': 28, ';': 16, 'return': 25, ')': 7, '_': 13, '(': 6, '.': 10, 'NUM': 14, 'hits': 9, '{': 8, '': 1}
{'}\n': 49, ')': 8, 'STR': 44, '_': 23, '(': 7, ',': 37, 'convert': 31, '.': 30, 'converter': 13, ';': 19, 'Converter': 12, 'make': 15, '=': 14, '': 10, '{': 9, 'To': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 74, '}': 73, ';': 25, ')': 31, 'filter': 67, '(': 5, 'Filter': 3, '': 6, '{': 32, 'NUM': 24, '_': 23, 'void': 1, 'private': 0}
{'}\n': 66, ';': 65, ')': 18, '-': 39, '(': 6, '+': 46, 'sqrt': 27, '.': 26, 'Math': 25, '': 24, 'return': 20, '{': 19, 'y2': 17, ',': 9, 'x2': 14, 'y1': 11, 'x1': 8, 'static': 1}
{'}\n': 90, 'return': 79, ';': 82, ':': 37, '': 5, '.': 16, 'Dictionary': 23, 'Pdf': 22, 'case': 30, 'Underline': 60, 'Highlight': 52, 'Text': 36, '{': 11, ')': 10, 'Subtype': 26, '(': 4, 'Constant': 19, 'Parameter': 18, 'get': 17, 'form': 8, 'Object': 7, 'Form': 6}
{'}\n': 278, ';': 36, 'Git': 269, '': 2, '(': 32, '.': 43, 'STR': 34, '_': 33, '+': 235, ')': 35, 'add': 180, '=': 117, '{': 136, 'null': 134, 'git': 22, 'if': 129, '>': 115, 'String': 11, '<': 112, 'List': 111, 'Array': 120, 'new': 118, 'static': 1}
{'}\n': 49, ';': 48, ')': 13, 'z': 41, '.': 22, 'o2': 12, ',': 9, 'o1': 8, '(': 5, 'Math': 21, '': 2, 'x': 27, 'Vector2': 3, 'new': 16, 'return': 15, '{': 14, 'static': 1, 'public': 0}
{'}\n': 38, ';': 37, ')': 14, '(': 26, 'call': 13, '.': 23, '': 16, 'void': 1, 'public': 0}
{'}\n': 108, '}': 107, ';': 106, ')': 34, 'serializer': 33, '(': 3, 'serialize': 2, '.': 101, '{': 99, ':': 96, ',': 80, '<': 58, '': 10, 'void': 1, 'public': 0}
{'}\n': 106, ';': 19, ')': 7, 'Objects': 36, 'block': 27, '(': 6, '}': 97, 'next': 92, '.': 13, 'add': 86, '{': 82, 'Next': 78, 'has': 77, 'while': 71, '>': 26, 'Object': 54, 'Block': 3, '': 9, '<': 22, 'List': 50, 'Array': 61, 'new': 59, '=': 30, 'URIs': 46, 'Mirror': 4, ',': 43, 'class': 42, 'Iterative': 35, 'query': 34, 'Client': 32, 'Iterator': 21, '_': 16, 'void': 1, 'private': 0}
{'}\n': 94, ';': 93, '.': 20, ')': 8, 'lvl': 57, '(': 11, '': 18, '{': 9, 'public': 0}
{'}\n': 181, ';': 35, 'Ele': 19, 'return': 177, ')': 11, 'org': 172, '(': 26, 'Child': 111, 'append': 110, '.': 22, '': 1, 'SAMLNames': 30, 'create': 3, '=': 20, 'Element': 2, '}': 142, '{': 15, ',': 90, 'Attribute': 83, 'set': 82, 'doc': 21, 'Exception': 14, 'throws': 12, 'private': 0}
{'}\n': 64, ';': 12, 'Length': 62, 'allocation': 61, '=': 41, 'Offset': 59, 'Allocation': 53, 'last': 52, 'null': 55, 'NUM': 43, '_': 42, 'Written': 47, 'Bytes': 39, 'total': 38, 'Dropped': 40, ')': 4, '(': 3, '.': 8, 'Queue': 7, 'data': 16, 'clear': 2, 'info': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 184, ';': 183, ')': 8, '(': 4, 'Matrix': 149, 'gl': 7, '.': 104, '{': 9, 'GL2': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 90, ';': 40, 'rs': 31, 'return': 87, ')': 25, ',': 48, '': 2, '(': 24, 'add': 43, '.': 42, 'NUM': 60, '_': 46, 'Types': 50, 'STR': 47, 'Column': 44, 'Set': 4, 'Result': 3, 'Simple': 28, 'new': 33, '=': 32, 'static': 1, 'public': 0}
{'}\n': 164, '}': 162, ';': 39, ')': 20, '(': 42, '.': 64, '{': 21, '': 9, 'Volumes': 75, '!': 91, '&&': 83, 'if': 71, 'String': 44, 'void': 1}
{'}\n': 134, ';': 133, ')': 15, 'suffix': 14, 'prefix': 10, '': 1, '(': 7, '{': 73, 'IOException': 18, 'throws': 16, 'String': 9, ',': 11, 'File': 6, 'Temp': 5, 'create': 4, 'public': 0}
{'}\n': 194, ';': 76, 'Type': 12, 'target': 43, 'return': 188, '}': 186, ')': 45, '.': 93, '(': 20, '=': 136, '{': 46, '': 8, 'for': 77}
{'}\n': 191, '}': 172, ';': 45, '(': 3, '{': 15, ')': 14, 'e': 178, 'IOException': 177, '': 19, 'catch': 173, 'NUM': 124, '_': 123, 'buffer': 46, '.': 47, 'Channel': 21, 'file': 60}
{'}\n': 81, ';': 78, ')': 36, '(': 18, '.': 64, '': 12, '{': 37, 'amount': 32}
{'}\n': 119, ';': 118, ')': 72, '(': 65, '.': 112, 'Folders': 83, 'Template': 45, 'Last': 81, 'my': 80, '{': 73, 'Folder': 47}
{'}\n': 65, ';': 63, ')': 42, '(': 39, 'Tip': 4, 'Tool': 18, 'return': 44, 'public': 0}
{'}\n': 129, ')': 48, '': 30, 'new': 39, '(': 25, 'add': 104, '.': 94, '{': 101, 'item': 70, '!': 92, 'String': 35, 'for': 50, ';': 49, '>': 36, '<': 33, 'List': 32, 'public': 0}
{'}\n': 481, '}': 480, ';': 478, ')': 24, 'os': 78, '(': 4, 'Output': 76, 'Data': 298, 'Stream': 77, '': 20, '{': 28, 'new': 98, '.': 175, '=': 97, 'IOException': 27, 'throws': 25, 'final': 19, 'void': 1}
{'}\n': 20, ';': 19, ')': 4, ']': 17, 'NUM': 16, '_': 15, '[': 14, 'fields': 13, '(': 3, 'Long': 8, 'parse': 10, '.': 9, '': 7, 'return': 6, '{': 5, 'long': 1, 'public': 0}
{'}\n': 168, '}': 146, ';': 29, ')': 8, 'e': 152, ',': 163, 'STR': 162, '_': 161, '(': 7, 'Exception': 159, 'Security': 158, '': 13, 'new': 21, 'throw': 155, '{': 9, 'IOException': 151, 'catch': 147, 'Array': 15, 'Byte': 14, 'to': 140, '.': 52, 'Buffer': 19, 'seed': 18, 'return': 136, 'close': 132, 'Out': 37, 'SERIAL': 125, 'DEVICE_': 124, 'AND_': 123, 'FINGERPRINT_': 122, 'BUILD_': 121, 'write': 53, 'Uid': 109, 'my': 92, 'Process': 90, 'Int': 87, 'Pid': 93, 'Time': 60, 'nano': 76, 'System': 57, 'Long': 54, 'Millis': 61, 'current': 59, 'Stream': 17, 'Output': 16, 'Data': 32, '=': 20, 'try': 10, 'Seed': 6, 'generate': 5, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'private': 0}
{'}\n': 32, ';': 31, ')': 10, '(': 4, '.': 17, '{': 14, 'Expr': 7, 'the': 8, 'Value': 6, '': 5, 'public': 0}
{'}\n': 39, '}': 38, ';': 31, ')': 5, '(': 4, 'Thread': 28, 'Sampling': 3, '.': 12, 'Handler': 24, 'm': 9, '{': 6, 'NUM': 20, '_': 19, '==': 18, 'And': 14, 'Counter': 11, 'if': 7, 'void': 1, 'public': 0}
{'}\n': 138, ';': 67, ')': 46, '(': 4, 'Components': 134, 'init': 133, 'STR': 129, '_': 128, 'String': 126, 'get': 125, '.': 58, 'res': 123, 'Title': 121, 'set': 120, 'provider': 45, '=': 72, 'this': 68, 'Certificate': 39, 'verification': 40, 'Type': 31, 'Pair': 30, 'Key': 23, 'sign': 24, 'Private': 22, 'File': 17, 'csr': 18, 'Csr': 3, 'MODAL': 65, 'DOCUMENT_': 64, '': 1, 'Modality': 60, 'Dialog': 57, ',': 8, 'parent': 7, 'super': 52, '{': 51, 'Exception': 50, 'Crypto': 49, 'throws': 47, 'Provider': 44, 'X509': 38, 'JFrame': 6, 'DSign': 2, 'public': 0}
{'}\n': 110, ';': 68, '=': 97, 'host': 95, 'String': 17, '': 2, '}': 49, ')': 12, 'STR': 89, '_': 88, '(': 15, 'Exception': 86, 'Illegal': 84, 'new': 82, 'throw': 81, '{': 13, '.': 19, 'if': 14, ']': 53, '[': 52, 'volume': 11, 'is': 20, 'Utils': 18, 'public': 0}
{'}\n': 31, ';': 30, ')': 8, 'time': 7, 'return': 10, '{': 9, '(': 5, 'Time': 4, 'String': 2, '': 1}
{'}\n': 91, ';': 31, ')': 16, '(': 5, 'String': 3, 'to': 86, '.': 21, 'sb': 36, 'return': 29, '}': 32, 'Char': 15, 'fill': 14, 'append': 69, '{': 17, 'NUM': 63, '_': 62, '>=': 25, 'i': 49, '--': 59, 'length': 22, 's': 8, '-': 52, 'width': 11, '=': 37, 'int': 10, 'for': 46, 'Buffer': 35, '': 2, 'new': 38, 'if': 18, 'char': 13, ',': 9, 'static': 1, 'public': 0}
{'}\n': 86, ';': 20, 'NUM': 61, '_': 60, '!=': 82, 'New': 36, 'num': 35, 'return': 79, '+=': 75, 'Count': 18, 'element': 46, ')': 15, ',': 59, 'Data': 64, 'a': 25, '(': 5, 'arraycopy': 56, '.': 28, 'System': 54, '': 6, '+': 48, 'Helper': 44, 'Capacity': 43, 'ensure': 42, 'length': 40, '=': 26, 'int': 34, 'Array': 30, 'to': 29, 'c': 14, ']': 24, '[': 23, 'Object': 22, '++': 19, 'mod': 17, '{': 16, 'Collection': 7, 'All': 4, 'add': 3, 'boolean': 2, 'synchronized': 1, 'public': 0}
{'}\n': 62, ';': 45, ')': 13, '(': 6, 'CID': 41, 'Checkpoint': 16, 'get': 21, '.': 20, 'Last': 47, 'set': 46, ',': 25, 'Hash': 31, 'State': 22, 'new': 15, '{': 14, '': 7, 'update': 5, 'void': 4, 'public': 3}
{'}\n': 125, ';': 64, '(': 62, '.': 83, ')': 29, 'pair': 80, '>': 27, '': 4, ',': 9, 'String': 23, '<': 21, 'List': 16, 'Array': 49, 'Pair': 36, '{': 30}
{'}\n': 55, ';': 28, ')': 11, 'observer': 10, '(': 5, '.': 49, 'Observers': 34, 'message': 33, '{': 12, 'null': 17, 'if': 13, 'else': 30, '}': 29, 'Exception': 25, 'Pointer': 24, 'Null': 23, '': 7, 'new': 21, 'throw': 20, '==': 16, 'Observer': 4, 'Message': 3, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 53, '}': 52, ';': 20, ')': 7, '(': 3, '.': 14, '': 27, 'if': 25, 'initial': 5, '{': 8, 'void': 1}
{'}\n': 64, ';': 39, ')': 23, '[': 47, 'HEX_': 45, '': 8, '(': 4, 'append': 42, '.': 41, 'buf': 11, 'NUM': 37, '_': 36, '&': 35, 'b': 34, 'String': 9, 'byte': 5, 'static': 1}
{'}\n': 87, ';': 17, 'Value': 25, 'old': 24, 'return': 83, 'null': 81, '=': 26, ']': 79, 'size': 37, '--': 77, '[': 76, 'Data': 28, 'element': 27, ')': 7, 'Moved': 35, 'num': 34, ',': 59, 'index': 6, 'NUM': 42, '_': 41, '+': 61, '(': 4, 'arraycopy': 55, '.': 54, 'System': 53, '': 1, '>': 48, 'if': 44, '-': 38, 'int': 5, 'E': 2, '++': 20, 'Count': 19, 'mod': 18, '{': 8, 'remove': 3, 'public': 0}
{'}\n': 108, ';': 56, 'v': 106, 'return': 105, ')': 19, 'mean': 99, '+': 98, '(': 6, 'Gaussian': 95, 'next': 94, '.': 93, 'random': 18, '++': 83, 'i': 73, 'n': 8, '<': 79, 'NUM': 76, '_': 75, '=': 61, 'int': 7, 'for': 70, 'Vector': 4, 'Double': 3, '': 2, 'new': 47, '{': 20, 'Random': 17, ',': 12, 'double': 13, 'static': 1, 'public': 0}
{'}\n': 719, '}': 440, ';': 93, ')': 39, 'File': 20, 'Pdf': 2, 'current': 22, ',': 16, 'eof': 705, 'pointer': 47, 'Obj': 12, 'root': 523, '(': 7, 'Table': 695, 'Reference': 694, 'Legacy': 693, 'read': 4, 'return': 691, '{': 44, 'else': 651, '.': 118, '_': 50, '': 1, '=': 86, 'offset': 508, 'NUM': 51, ']': 375, 'if': 151, '[': 300, 'STR': 161, '==': 159, 'length': 119, 'null': 77, '-': 49, 'Exception': 43, 'throws': 40, 'Reader': 21, 'object': 30, 'Object': 3, 'final': 17}
{'}\n': 75, '}': 46, ';': 15, ')': 7, '(': 4, 'unlock': 70, '.': 11, 'Lock': 10, 'cb': 9, '{': 8, 'finally': 65, 'code': 6, 'String': 58, 'to': 57, 'Integer': 55, '': 30, ',': 53, 'STR': 43, '_': 23, 'Occurred': 3, 'Warning': 48, 'process': 47, 'Error': 40, 'Internal': 39, 'new': 37, 'throw': 36, 'WARNING': 32, 'MAX_': 31, '>': 29, '||': 26, 'NUM': 24, '<': 22, 'if': 18, 'try': 16, 'lock': 12, 'int': 5, 'warning': 2, 'void': 1}
{'}\n': 23, ';': 22, ')': 10, 'sub': 19, '(': 5, '.': 16, '{': 11, '': 6, 'public': 0}
{'}\n': 20, ';': 19, ')': 5, '(': 4, '': 8, 'Stored': 3}
{'}\n': 103, ';': 27, '_': 24, '}': 34, ')': 9, '(': 6, '{': 10, 'NUM': 41, ']': 84, 'bit': 8, '[': 82, 'Bits': 81, 'Light': 4, 'Search': 3, 'loc': 78, 'return': 28, 'String': 63, 'to': 62, '.': 21, 'Integer': 60, '': 16, '+': 58, 'STR': 25, 'error': 22, 'log': 20, '>': 46, '||': 43, '<': 39, 'if': 11, 'SMINI': 17, '!=': 15, 'Type': 14, 'node': 13, 'int': 7, 'public': 0}
{'}\n': 39, ';': 38, ')': 6, 'Tick': 4, '/': 30, '(': 5, '.': 23, 'Math': 22, '': 21, 'NUM': 12, '_': 11, '{': 7, 'calc': 2, 'void': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 16, 'value': 29, ',': 7, '(': 3, '{': 17, '': 4, 'attribute': 11, 'String': 5}
{'}\n': 532, ';': 353, '.': 297, 'Queue': 15, '}': 355, 'FULL': 300, '': 13, ')': 168, '(': 164, '{': 169, '_': 322, 'And': 46, 'if': 178, '==': 253, 'get': 238, 'Traffic': 48, 'Pause': 47, 'Upstream': 44, 'monitor': 43}
{'}\n': 73, ';': 32, '(': 4, '.': 55, 'return': 52, ')': 12, 'second': 11, 'first': 7, '{': 13, ',': 8}
{'}\n': 125, ';': 27, 'return': 122, 'STR': 90, '_': 89, ')': 11, '(': 6, '.': 65, 'reader': 53, '=': 20, ',': 60, 'Writer': 18, 'String': 2, '': 1, 'new': 21}
{'}\n': 371, ';': 16, 'path': 13, 'return': 321, '}': 186, ')': 8, 'y1': 42, ',': 74, 'x1': 51, '(': 7, 'To': 161, 'line': 327, '.': 24, '{': 9, 'else': 354, 'Deg': 162, 'rad': 160, 'Math': 158, 'Proj': 157, '': 1, 'Degrees': 322, 'if': 17, ']': 48, '[': 45, '=': 14, 'NUM': 28, '_': 27, '+': 269, '+=': 250, '-': 245, 'length': 25, 'int': 234, 'for': 232, '/': 78, 'llpts': 19, 'ODD': 73, 'EVEN_': 72, 'WIND_': 71, 'Path': 12, 'General': 11, 'new': 61, 'double': 41, '==': 36, '%': 33, '&&': 22, '>=': 26, 'null': 15, '!=': 20, 'Shape': 2, 'Line': 5, 'public': 0}
{'}\n': 25, ';': 24, ')': 11, 'Address': 8, 'peer': 9, '(': 14, '{': 12, 'Socket': 7, 'Inet': 6, '': 1}
{'}\n': 67, ';': 27, 'v': 32, 'return': 25, '}': 28, ')': 15, 'element': 49, '(': 7, 'Element': 58, 'add': 57, '.': 40, '{': 16, 'Array': 14, 'an': 13, ':': 50, 'Object': 10, '': 2, 'final': 8, 'for': 44, 'length': 41, 'Vector': 3, 'new': 34, '=': 33, 'null': 22, '==': 21, 'if': 17, ']': 12, '[': 11, 'To': 5, 'convert': 4, 'static': 1, 'protected': 0}
{'}\n': 75, '}': 74, ';': 15, ')': 10, '+': 69, 'STR': 68, '_': 67, '(': 38, '': 6, '.': 44, 'Version': 8, 'notify': 36, 'Sprog': 7, '=': 13, '{': 11, 'v': 9, 'protected': 0}
{'}\n': 42, '}': 41, ';': 24, ')': 8, '(': 4, 'Drop': 3, '.': 33, 'peer': 15, '{': 9, 'null': 29, '!=': 28, 'if': 25, 'Peer': 14, 'Context': 13, 'Target': 12, 'get': 17, '=': 16, '': 10, 'void': 1, 'protected': 0}
{'}\n': 127, ';': 126, ')': 102, '(': 53, '.': 95, 'Filter': 28, 'Capabilities': 27, 'm_': 65, 'public': 3}
{'}\n': 1121, ')': 268, 'Right': 1076, 'm_': 327, '.': 326, 'node': 248, '(': 75, 'Nodes': 54, ';': 648, 'Left': 902, 'if': 696, 'End': 668, '++': 339, '{': 269, 'Node': 140, '': 130, 'void': 1}
{'}\n': 191, '}': 49, ';': 48, ')': 9, '(': 5, 'Exception': 14, 'Reply': 21, 'FTPIllegal': 20, '': 6, 'new': 39, 'throw': 38, '{': 26, 'catch': 171, ']': 121, 'NUM': 138, '_': 45, '[': 120, 'messages': 122, 'parse': 161, '.': 69, 'return': 155, 'try': 153, 'else': 151, '!=': 136, 'length': 135, 'if': 32, 'Messages': 127, 'get': 126, 'r': 81, '=': 82, 'String': 7, 'FTPException': 25, 'Code': 104, 'Success': 103, 'is': 102, '!': 34, 'Timer': 93, 'Noop': 92, 'Auto': 91, 'touch': 90, 'FTPReply': 86, 'read': 85, 'communication': 68, 'STR': 46, 'FTPCommand': 71, 'send': 70, 'State': 13, 'Illegal': 12, 'authenticated': 53, 'connected': 35, 'lock': 29, 'synchronized': 27, ',': 15, 'IOException': 17, 'throws': 10, 'path': 8, 'public': 0}
{'}\n': 16, ';': 15, 'Selected': 12, 'return': 7, '{': 6, ')': 5, '(': 4, 'import': 2, 'boolean': 1, 'public': 0}
{'}\n': 57, ';': 45, ')': 28, 'AST': 54, 'underlying': 53, ',': 12, '(': 6, 'return': 46, 'Tree': 20, '': 1, 'new': 36, '=': 35, '{': 29, 'tree': 21, 'env': 16, 'Environment': 15, 'Processing': 14, 'public': 0}
{'}\n': 389, ';': 383, 'BOOL': 382, '_': 381, 'return': 380, '}': 384, '{': 38, ')': 37, 'MAGLEV': 275, '': 78, 'Type': 76, 'engine': 75, '(': 14, '||': 172, 'CELL': 97, 'FUEL_': 96, 'ENGINE': 80, 'COMBUSTION_': 79, 'if': 55, 'is': 2, 'boolean': 1}
{'}\n': 104, '}': 103, ';': 33, ')': 9, ']': 7, '(': 19, 'get': 65, '.': 17, 'Indices': 16, 'Extremal': 15, 'm': 14, '[': 6, 'Grid': 63, 'Frequency': 67, 'Cosine': 66, 'k': 37, '=': 13, '{': 10, '++': 47, 'length': 12, '<': 43, 'NUM': 40, '_': 39, 'int': 11, 'for': 34, 'double': 5, 'new': 28, 'size': 18, 'private': 0}
{'}\n': 576, ';': 136, ')': 31, 'NUM': 326, '_': 325, '(': 13, 'return': 503, '-': 365, 'src': 24, '>': 295, 'while': 148, 'len': 34, '=': 35, 'int': 33, 'length': 38, '.': 37, 'String': 8, '': 7, 'static': 1, 'public': 0}
{'}\n': 72, ';': 47, ')': 46, 'STR': 63, '_': 62, '(': 6, 'Properties': 14, '=': 16, 'properties': 15, '': 13, '{': 12}
{'}\n': 334, ';': 63, 'return': 331, '}': 290, ')': 23, '(': 18, '.': 72, ',': 6, 'put': 283, 'if': 291, '=': 42, 'String': 5, '': 1, '<': 3, 'STR': 158, '_': 99, '{': 24, 'Name': 79, '>': 15, 'Map': 2, 'Hash': 45, 'new': 43, 'public': 0}
{'}\n': 105, ';': 104, ')': 34, 'BOOL': 100, '_': 6, ',': 91, 'ORDERED': 96, '': 1, '.': 76, 'Spliterator': 93, 'iterator': 88, '(': 4, 'Size': 84, 'Unknown': 83, 'spliterator': 82, 'Spliterators': 80, 'stream': 77, 'Support': 75, 'Stream': 17, 'from': 37, 'return': 36, '{': 35, '>': 21, 'U': 20, '<': 18, 'final': 24, 'Future': 16, 'Lazy': 15, 'STR': 7, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 427, ';': 65, '+': 419, ')': 45, '(': 4, 'NUM': 62, '_': 61, 'i': 150, '=': 143, '{': 139, '++': 161, '<': 156, 'int': 1, 'for': 147, '.': 257, '': 97, '}': 112, ':': 56, 'case': 53}
{'}\n': 100, ';': 90, ')': 12, '(': 7, 'read': 5, '.': 85, 'in': 11, '=': 83, '{': 16, 'IOException': 15, '': 1, 'throws': 13, 'Input': 10, 'Object': 9, 'External': 6, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 38, ';': 37, ')': 7, '(': 6, 'Instance': 23, 'Number': 18, 'get': 21, '.': 20, 'Format': 19, '': 1, ',': 16, 'FORMAT': 15, 'LABEL_': 14, 'ITEM_': 13, 'DEFAULT_': 12, 'this': 9, '{': 8, 'Generator': 5, 'Label': 4, 'XYItem': 3, 'public': 0}
{'}\n': 95, ';': 19, 'res': 70, ':': 92, ')': 7, '-': 28, '(': 4, '?': 87, 'Flag': 11, 'neg': 10, 'return': 84, '.': 74, 'Math': 73, '': 72, '=': 12, '}': 31, 'NUM': 17, '_': 16, '/': 63, '{': 8, '<': 15, 'val': 6, 'if': 20, 'boolean': 9, 'double': 1, 'adjusted': 2, 'public': 0}
{'}\n': 33, ';': 17, ')': 6, 'Invoice': 4, 'Last': 3, 'COSTINGMETHOD_': 28, '': 8, '(': 5, 'equals': 25, '.': 24, 'cm': 10, '&&': 22, 'null': 21, '!=': 20, 'return': 18, 'Method': 14, 'Costing': 13, 'get': 12, '=': 11, 'String': 9, '{': 7, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 71, ';': 70, 'Name': 6, 'cluster': 10, '': 2, '(': 7, '.': 34, 'String': 3, 'Cluster': 5, 'static': 1, 'public': 0}
{'}\n': 73, ';': 16, ')': 9, 'Callback': 13, 'retro': 14, '(': 8, 'Cards': 5, 'Service': 4, 'get': 64, '.': 30, 'Api': 40, 'Yelo': 61, 'm': 60, 'add': 54, 'List': 52, 'SERVICES': 47, 'GET_': 45, '': 11, 'Codes': 42, 'Response': 41, 'Id': 33, 'Request': 32, 'set': 31, 'this': 25, 'Retro': 12, 'new': 20, '=': 19, '{': 10, 'Server': 7, 'From': 6, 'fetch': 2, 'void': 1, 'private': 0}
{'}\n': 52, ';': 40, ')': 21, '(': 6, 'init': 47, 'Key': 4, 'MODAL': 38, 'DOCUMENT_': 37, '': 1, '.': 31, 'Type': 34, 'Modality': 33, 'Dialog': 30, ',': 10, 'title': 13, 'parent': 9, 'super': 23, '{': 22, 'String': 12, 'DView': 2, 'public': 0}
{'}\n': 198, ';': 56, 'Changes': 43, 'colour': 42, 'return': 194, ')': 33, 'Colour': 5, 'parent': 14, ',': 16, '(': 12, 'List': 2, 'Change': 6, 'reverse': 182, '}': 170, 'add': 164, '.': 143, 'current': 93, '=': 44, 'Height': 19, '{': 34, '_': 108, '>': 7, '': 1, '<': 3, 'Array': 47, 'new': 45, 'm': 32, ']': 31, '[': 30, 'double': 17, 'child': 22, 'int': 13, 'Migration': 10, 'Conditional': 9, 'sample': 8, 'public': 0}
{'}\n': 68, ';': 61, 'BOOL': 60, '_': 59, 'return': 58, '}': 63, '{': 11, ')': 10, '': 6, '(': 5, 'if': 12, 'obj': 8, 'Object': 7, 'boolean': 2}
{'}\n': 115, ';': 50, ')': 20, 'b': 89, '(': 6, 'i': 54, '++': 64, 'len': 19, '<': 60, 'NUM': 57, '_': 56, '=': 55, 'int': 14, 'for': 51, '{': 21, ',': 12, 'off': 15, ']': 10, '[': 9}
{'}\n': 76, ';': 73, ')': 19, '(': 44, '.': 66, 'selected': 55, 'Operators': 43, 'Selected': 42, 'get': 41, '>': 37, '<': 34, 'List': 33, '{': 20, 'Selection': 10, 'void': 4, 'public': 3}
{'}\n': 22, ';': 21, ')': 13, 'listener': 12, '(': 7, 'remove': 3, '.': 16, '{': 14, 'Listener': 6, 'Change': 5, 'Property': 4, '': 8, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 103, ';': 36, 'share': 15, '(': 7, '.': 31, ')': 17, ',': 11, 'EXTRA_': 51, '': 8, 'Intent': 21, 'SUBJECT': 52, 'Extra': 41, 'put': 40, 'SEND': 34, 'ACTION_': 33, 'new': 25, '=': 24, '{': 18, 'Text': 16, 'String': 14, 'context': 10, 'Context': 9, 'Share': 5, 'static': 1}
{'}\n': 80, ';': 79, ')': 42, '.': 70, '': 3, 'Name': 29, 'field': 28, ',': 25, 'tclass': 24, '(': 17, '>': 5, 'U': 4, '<': 2, 'Impl': 51, 'Updater': 10, 'Field': 9, 'Integer': 8, 'Atomic': 7, 'new': 15, 'return': 44, '{': 43, 'String': 27, 'Class': 19, 'static': 1, 'public': 0}
{'}\n': 523, ';': 92, 'return': 519, ']': 12, '[': 11, 'i': 109, '=': 95, '{': 196, ')': 195, '(': 201, 'for': 225, '}': 463, 'BOOL': 461, '_': 135, 'NUM': 136, ',': 8, '<': 234, 'int': 65, 'double': 10}
{'}\n': 274, ';': 69, ')': 54, 'Value1': 39, 'Node': 38, 'register': 37, ',': 7, 'address': 59, '(': 13, '>': 10, 'String': 6, '': 2, '<': 4, 'Pair': 3, 'new': 256, 'return': 255, 'dw': 135, 'Mask': 182, 'Bit': 181, 'Word': 180, 'd': 179, 'Var2': 89, 'tmp': 73, '++': 133, 'Offset': 116, 'base': 115, 'And': 166, 'create': 128, '.': 62, 'Helpers': 126, 'Reil': 29, 'add': 122, 'instructions': 32, 'index': 103, 'Add': 199, 'Var1': 74, 'qw': 150, 'Value': 53, 'immediate': 51, '+': 145, 'STR': 144, '_': 143, 'Value2': 46, 'Bsh': 129, 'offset': 16, '=': 60, 'long': 15, 'Variable': 65, 'Next': 64, 'get': 63, 'environment': 22, 'final': 14, '{': 55, 'Instruction': 30, 'List': 26, 'Environment': 21, 'ITranslation': 20, 'LSR': 12, 'static': 1, 'private': 0}
{'}\n': 266, ';': 59, 'return': 244, '}': 199, '': 11, '=': 44, ')': 22, '{': 23, '(': 80, 'if': 214, 'null': 85, '.': 119, 'ctx': 35}
{'}\n': 65, ';': 29, 'return': 56, 'NUM': 59, '_': 58, '-': 57, ')': 9, 'min_last_layer': 31, '>': 52, 'max_first_layer': 12, '(': 4, 'if': 49, 'last_layer': 38, '.': 16, 'p_other': 8, ',': 22, 'min': 36, 'Math': 15, '': 5, '=': 13, 'int': 2, 'first_layer': 19, 'max': 17, '{': 10, 'Item': 7, 'Brd': 6, 'final': 1, 'public': 0}
{'}\n': 106, ';': 37, 'return': 35, '}': 102, ')': 20, 'drive': 10, '(': 6, 'Dirty': 97, 'mark': 96, 'amount': 51, 'Size': 91, 'stack': 90, '.': 56, ',': 11, 'Stored': 76, 'Amount': 75, 'set': 74, '{': 21, 'NUM': 33, '_': 32, '>': 69, 'if': 22, 'min': 57, 'Math': 55, '': 1, '=': 40, 'int': 38, 'get': 24, 'null': 36, '-': 31, '==': 30, 'Stack': 3, 'Item': 2, 'public': 0}
{'}\n': 322, '}': 278, ';': 119, ')': 88, '.': 111, '(': 4, '{': 123, 'if': 167, 'null': 154, '==': 153, '++': 121, 'i': 102, 'length': 118, 'NUM': 105, '_': 104, '=': 103, 'int': 101, 'for': 99, ']': 28, '[': 27, '': 14, 'Table': 37, 'value': 29, 'void': 1}
{'}\n': 75, ';': 29, ')': 11, '_': 26, '(': 4, 'Count': 44, 'Item': 3, 'get': 42, 'STR': 27, 'Exception': 24, 'Pointer': 23, 'Null': 22, '': 5, 'new': 20, 'throw': 19, 'null': 17, '==': 16, 'artist': 7, 'if': 13, '{': 12, 'Artist': 6, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 68, ';': 42, ')': 12, '(': 7, 'get': 61, ',': 51, 'location': 11, '{': 13, 'else': 44, '}': 43, '.': 17, 'if': 14, '': 8, 'void': 1}
{'}\n': 115, ';': 39, ')': 21, '(': 6, '.': 31, 'editor': 83, 'Long': 86, ',': 10, '': 7, 'put': 85, '=': 28, 'Preferences': 42, 'Shared': 41, '{': 22, 'context': 9, 'Context': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 83, ';': 26, ')': 8, '(': 3, 'Array': 78, 'Byte': 77, 'to': 76, '.': 30, 'tmp': 17, 'write': 72, 'out': 7, 'encode': 2, 'super': 63, '}': 62, 'This': 58, 'BOOL': 55, '_': 54, '=': 18, 'critical': 52, 'this': 29, 'Id': 40, '': 4, 'PKIXExtensions': 43, 'extension': 31, '{': 12, 'null': 34, '==': 33, 'Value': 32, 'if': 27, 'Stream': 6, 'Output': 5, 'Der': 14, 'new': 19, 'IOException': 11, 'throws': 9, 'void': 1, 'public': 0}
{'}\n': 548, ';': 57, 'task': 39, 'return': 545, '}': 377, ')': 34, 'FAILED': 524, 'PARTIALLY_': 540, '': 1, '.': 93, 'Status': 493, 'Task': 3, '(': 8, 'set': 466, '{': 87, 'else': 504, 'NUM': 76, '_': 47, '==': 482, 'volumes': 24, 'if': 478, 'READY': 500, 'size': 485, 'String': 59, 'to': 472, 'Buffer': 62, 'err': 61, 'Message': 467, 'error': 394, ',': 246, 'STR': 48, 'format': 399, 'append': 426, 'LOG': 360, 'dex': 389, 'Name': 408, 'Display': 407, 'get': 94, 'volume': 83, '=': 40, 'Exception': 388, 'SCDriver': 44, 'Dell': 43, '|': 384, 'APIException': 383, 'Center': 131, 'Storage': 21, 'catch': 378, 'name': 374, 'Vol': 159, 'sc': 158, 'info': 362, '++': 357, 'Id': 116, 'instance': 324, 'api': 133, 'Volume': 22, 'Sc': 145, 'ssn': 141, 'Connection': 139, 'Manager': 136, 'connection': 135, 'API': 132, 'try': 127, ':': 84, 'for': 78, 'int': 71, 'Builder': 60, 'new': 41, 'Driver': 2, '>': 23, '<': 19, 'List': 18, 'Volumes': 5, 'public': 0}
{'}\n': 78, ';': 57, ')': 31, 'Callback': 24, 'response': 29, ',': 11, 'Spec': 16, 'Create': 15, '(': 5, 'Json': 67, 'As': 66, 'Object': 59, 'serialize': 64, 'path': 38, 'Async': 4, 'create': 2, 'Id': 10, 'Path': 50, 'Base': 49, 'get': 48, 'STR': 46, '_': 45, 'format': 43, '.': 42, 'String': 8, '': 7, '=': 39, '{': 35, 'IOException': 34, 'throws': 32, '>': 28, 'Task': 27, '<': 25, 'Future': 23, 'final': 21, 'void': 1, 'public': 0}
{'}\n': 44, ';': 43, 'return': 36, '{': 31, ')': 30, '(': 16, 'Value': 12, 'int': 10, 'public': 0}
{'}\n': 75, ';': 38, ')': 20, 'QUOTE': 72, '': 6, '(': 5, 'Unsafe': 4, 'write': 3, '.': 40, 'out': 10, 'Escapes': 19, 'Backslash': 18, 'no': 17, ',': 11, 'Escaped': 50, 'Bytes': 49, '=': 29, ']': 27, '[': 26, 'byte': 25, '{': 24, 'IOException': 23, 'throws': 21, 'boolean': 16, 'Stream': 9, 'Output': 8, 'Packet': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 12, ',': 27, '(': 3, '': 21, 'position': 11, 'final': 9, 'void': 1, 'public': 0}
{'}\n': 81, ';': 30, ')': 7, '(': 6, 'Array': 13, 'Byte': 12, 'to': 54, '.': 53, 'bos': 16, 'return': 37, 'Stream': 15, 'Output': 14, '': 11, 'new': 18, '=': 17, '{': 10}
{'}\n': 164, ';': 115, ')': 61, '(': 31, '.': 103, 'prop': 40, '': 35, '{': 62}
{'}\n': 27, ';': 26, ')': 12, 'null': 24, 'object2': 11, '(': 4, '.': 18, 'object1': 7, '{': 13, '': 5, ',': 8, 'static': 1, 'public': 0}
{'}\n': 15, '{': 14, ')': 9, '(': 5, 'pre': 2, 'void': 1, 'protected': 0}
{'}\n': 84, ';': 83, ')': 42, 'STR': 68, '_': 67, '+': 69, 'delta_time': 33, 'query': 11, '(': 8, '.': 50, '': 9, 'long': 32, ',': 27, 'String': 10, 'Perf': 7, 'private': 0}
{'}\n': 104, ';': 33, 'return': 101, ')': 20, '(': 6, '.': 28, 'class': 13, '': 1, '}': 66, '{': 21, 'wrapper': 25, 'if': 34, 'String': 12, ',': 10, 'public': 0}
{'}\n': 104, ';': 24, '}': 100, ')': 17, ',': 11, '(': 7, '=': 22, '+': 73, 'STR': 72, '_': 71, 'info': 69, '.': 33, 'log': 67, '{': 18, 'Source': 46, 'Message': 45, 'get': 44, 'State': 14, 'logout': 15, 'tenant': 10, 'Tenant': 37, 'For': 36, 'generate': 34, 'saml': 28, 'Response': 27, '': 8, 'Logout': 13, 'String': 9, 'static': 1, 'public': 0}
{'}\n': 113, ';': 40, ')': 14, 'text': 13, '+': 25, 'STR': 24, '_': 23, ',': 10, '(': 5, 'Text': 79, 'get': 78, '.': 77, 'l': 44, 'equals': 85, '||': 82, '==': 75, 'Bool': 59, 'assert': 3, 'null': 63, '!=': 62, 'By': 52, 'Label': 4, '': 11, '=': 45, '}': 41, 'log': 21, '{': 15, 'verbose': 18, 'if': 16, 'String': 12, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 276, '}': 271, ';': 112, '_': 110, '(': 5, 'NUM': 250, 'i': 247, 'BOOL': 240, '=': 109, ')': 83, '.': 13, '&&': 176, '{': 147, '!': 135, 'Node': 17, 'Data': 16, 'Path': 11, '': 6, 'Parser': 12, 'int': 85, '>': 18, '<': 9, 'List': 8, 'Array': 7}
{'}\n': 120, ';': 17, ')': 9, 'BOOL': 117, '_': 23, '(': 4, 'Significant': 114, 'Is': 113, 'eol': 112, '.': 12, 'tokenizer': 8, 'STR': 28, 'Char': 74, 'comment': 73, ',': 25, 'Chars': 21, 'whitespace': 20, 'NUM': 24, 'Syntax': 14, 'reset': 13, '{': 10, 'Tokenizer': 3, 'Stream': 6, '': 5, 'private': 0}
{'}\n': 63, '}': 52, '{': 11, ')': 7, 'e': 58, 'Exception': 10, 'Interrupted': 56, '': 9, '(': 6, 'catch': 53, ';': 19, 'NUM': 18, '_': 17, 'sleep': 43, '.': 42, 'Thread': 41, 'i': 15, '=': 16, 'int': 14, 'for': 12, 'throws': 8, 'void': 1, 'protected': 0}
{'}\n': 169, ';': 72, 'return': 165, '}': 164, '': 14, 'Data': 43, '{': 13, ')': 12, 'NUM': 122, '_': 121, '==': 119, '(': 7, 'length': 94, '.': 93, 'temp': 36, '=': 55}
{'}\n': 221, '}': 59, ';': 58, 'BOOL': 185, '_': 184, 'return': 183, '{': 8, ')': 7, 'e': 180, 'IOException': 212, '': 1, '(': 6, 'catch': 173, 'else': 201, 'Lock': 114, 'file': 134, '!=': 191, 'null': 190, 'if': 11, 'Exception': 179, 'File': 15, 'Overlapping': 176, 'try': 9, '.': 17, 'channel': 149, '=': 65, 'Channel': 156, 'get': 28, 'Stream': 136, 'Output': 135, 'Path': 33, 'lock': 5, 'new': 138, 'location': 22, 'Type': 30, 'Factory': 16, ',': 23, 'New': 113, 'create': 112, 'Exist': 20, 'is': 18, '!': 13, '+': 67, 'SEPARATOR': 75, 'FILE_': 74, 'Constants': 71, 'Common': 70, 'Carbon': 69, 'tmp': 32, 'mkdirs': 42, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 80, ';': 25, 'script': 7, ',': 75, '(': 4, ')': 8, '.': 48, '': 1, 'new': 16, '=': 15, '{': 9, 'Script': 6, 'public': 0}
{'}\n': 18, ';': 17, ')': 9, 'feature': 8, '(': 3, '.': 12, 'features': 11, '{': 10, 'Feature': 7, 'Formatter': 6, 'Rich': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 32, '}': 31, ';': 30, ')': 12, 'Listener': 4, 'event': 10, '(': 5, '.': 24, 'Listeners': 18, 'Event': 3, 'zwave': 16, '{': 13, 'synchronized': 14, 'ZWave': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 6, '(': 5, 'Millis': 14, 'Time': 4, 'current': 12, '.': 11, 'System': 10, '': 9, 'return': 8, '{': 7}
{'}\n': 29, ';': 28, ')': 14, 'Items': 13, 'new': 12, '(': 8, 'List': 22, 'as': 21, '.': 20, 'Arrays': 19, '': 1, 'add': 16, '{': 15, '...': 11}
{'}\n': 27, ';': 26, ')': 12, 'name': 11, '(': 8, 'quote': 4, '.': 18, 'Util': 17, 'JVMModule': 16, '': 2, 'return': 14, '{': 13, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 199, ';': 189, ')': 41, 'statements': 40, ',': 150, '.': 93, '(': 14, '': 6, '{': 42, 'Table': 22}
{'}\n': 175, '}': 174, ';': 107, ')': 13, '.': 19, '': 10, '_': 23, 'STR': 24, '(': 9, 'if': 15, 'NUM': 87, '=': 48, '-': 75, 'length': 72, 't': 49, 'index': 58, 'return': 28, '{': 14, 'String': 11, 'static': 1}
{'}\n': 78, ';': 65, 'NUM': 7, '_': 6, 'return': 74, ')': 13, '(': 3, '.': 37, 'ticks': 28, 'Time': 51, '=': 5, 'Date': 50, 'Psp': 49, 'Sce': 48, '': 1, '{': 31, 'Addr': 29, 'TPointer64': 27, ',': 8, 'Tick': 19, 'Rtc': 17, 'sce': 16, 'int': 15, 'public': 14, 'version': 9, 'nid': 4, 'HLEFunction': 2, '@': 0}
{'}\n': 161, ';': 16, ')': 6, '(': 5, 'Items': 11, 'Drawer': 4, 'Nav': 3, 'create': 154, 'ITEM_': 26, 'NAVDRAWER_': 25, '': 24, 'add': 22, '.': 12, 'm': 8, 'HOME': 27, 'clear': 13, '{': 7, 'populate': 2, 'void': 1, 'private': 0}
{'}\n': 1083, ';': 1082, ')': 895, 'mod': 483, ',': 487, '(': 392, '.': 905, '==': 958, 'if': 897, '{': 896, '': 431}
{'}\n': 492, ';': 171, ')': 66, ',': 481, '(': 36, 'String': 476, '': 13, 'new': 474, 'index': 75, 'Char': 53, '}': 254, '=': 81, ']': 307, '[': 305, '{': 235, '_': 157, 'char': 51, 'return': 245, '==': 204, 'if': 176, 'public': 0}
{'}\n': 69, ';': 29, 'dest': 19, 'return': 66, '}': 65, ')': 13, ']': 5, 'i': 33, '[': 4, '{': 14, '++': 45, 'length': 27, '.': 26, 'array': 12, '<': 39, 'NUM': 36, '_': 35, '=': 20, 'int': 32, '(': 31, 'for': 30, 'new': 21, 'values': 6, 'static': 1, 'public': 0}
{'}\n': 63, ';': 62, ')': 25, 'descparams': 24, ',': 11, 'description': 19, 'Status': 15, 'operational': 14, '(': 4, 'Millis': 51, 'Time': 50, 'current': 49, '.': 29, 'System': 47, '': 5, 'Type': 7, 'audit': 2, 'TYPE': 41, 'SERVICE_': 40, 'EVENT_': 39, 'null': 34, 'Log': 32, 'Audit': 31, 'record': 30, 'Mgr': 28, '_audit': 27, '{': 26, '...': 23, 'Object': 22, 'String': 13, 'Enum': 8, 'Operation': 6, 'void': 1, 'public': 0}
{'}\n': 174, ';': 24, 'mean': 3, 'return': 171, 'total': 26, '/=': 168, '}': 166, '++': 127, ']': 7, 'i': 116, '[': 6, 'data': 8, '+=': 157, ')': 17, 'STR': 153, '_': 22, '(': 4, 'Exception': 150, 'Argument': 149, 'Illegal': 148, '': 34, 'new': 146, 'throw': 145, 'N': 137, 'Na': 136, 'is': 135, '.': 36, 'if': 99, '{': 18, 'Index': 12, 'end': 15, '<=': 122, 'start': 11, '=': 21, 'int': 10, 'for': 113, '>': 103, 'NUM': 23, '-': 60, 'length': 59, ',': 9, 'min': 52, 'Math': 35, 'max': 37, 'static': 1, 'public': 0}
{'}\n': 47, ';': 46, ')': 45, 'Time': 13, 'start': 19, '': 25, 'long': 18, 'public': 0}
{'}\n': 238, ';': 75, ')': 23, '(': 7, 'Media': 2, '': 1, '.': 113, 'add': 114, '>': 61, '<': 57, 'Set': 56, 'new': 66, '=': 65, 'Type': 60, '{': 24}
{'}\n': 354, ';': 52, ')': 36, 'Color': 273, '(': 4, 'set': 100, '.': 47, 'g': 11, 'Font': 101, '+': 318, 'y': 317, ',': 21, 'x': 204, 'String': 283, 'draw': 282, 'NUM': 215, '_': 214, '-': 209, 'get': 48, '': 9, '=': 45, '{': 37, 'Graphics': 10, 'paint': 2, 'void': 1, 'public': 0}
{'}\n': 79, ';': 59, ')': 16, ',': 66, 'NUM': 68, '_': 67, 'array': 23, '(': 10, 'arraycopy': 63, '.': 24, 'System': 61, '': 60, ']': 58, '[': 50, 'int': 5, 'new': 48, '=': 47, 'length': 25, '{': 17, 'public': 0}
{'}\n': 67, '}': 65, ';': 27, ')': 42, 'cleaner': 18, '{': 22, '': 6, '(': 5, '.': 29, '=': 24, 'null': 20, 'void': 1, 'public': 0}
{'}\n': 56, ';': 23, ')': 8, 'file': 7, '(': 4, '}': 24, '_': 21, '{': 9, '.': 14, '!': 12, 'if': 10, 'File': 6, '': 5, 'public': 0}
{'}\n': 133, ';': 22, 'BOOL': 21, '_': 20, 'return': 19, '}': 23, '{': 11, ')': 10, '.': 47, 'that': 64, ',': 88, 'this': 16, '(': 6, 'equal': 82, 'Utilities': 80, 'Object': 8, '': 1, '!': 26, 'if': 12, 'instanceof': 29, 'obj': 9, '==': 15, 'equals': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 94, ';': 24, '}': 88, '{': 11, ')': 10, '': 7, '.': 18, 'Node': 13, '(': 22, 'if': 66, '=': 16, 'int': 43, 'Length': 37, 'get': 19, 'nl': 15, 'Nodes': 21, 'Child': 20, 'List': 14, 'Element': 4}
{'}\n': 118, ';': 35, '}': 69, ')': 25, '_': 100, '(': 20, '{': 26, 'if': 38, 'else': 70, 'Index': 47, 'selected': 46, 'index': 24, 'synchronized': 9, 'public': 0}
{'}\n': 20, ';': 19, ')': 7, '(': 6, '.': 15, 'return': 9, '{': 8, 'int': 2, 'public': 0}
{'}\n': 170, '}': 169, ';': 60, ')': 58, '(': 4, 'Exception': 23, 'throw': 134, '{': 133, '.': 122, 'Exceptions': 27, 'Denied': 22, 'access': 25, 'if': 85, ',': 8, 'permissions': 15, 'Permission': 3, 'check': 2, '>': 24, '<': 19, '': 5, 'Access': 21, 'List': 18, ']': 14, '[': 13, 'Enum': 12, 'Namespace': 10, 'object': 7, 'Object': 6, 'void': 1}
{'}\n': 129, ';': 28, 'null': 127, 'return': 120, '}': 124, 'Intent': 3, ')': 19, 'TASK': 117, 'NEW_': 116, 'ACTIVITY_': 115, 'FLAG_': 114, '': 2, '.': 33, '(': 8, 'Flags': 108, 'add': 107, 'String': 52, 'url': 17, 'parse': 97, 'Uri': 95, ',': 12, 'ACTION_': 91, 'new': 83, '=': 25, '{': 20, 'PREFIX': 74, 'With': 70, 'starts': 69, 'if': 64, 'URL': 60, 'get': 59, 'Span': 43, ']': 16, 'span_i': 24, '[': 15, 'Spans': 18, 'URLSpan': 14, '++': 37, 'length': 34, '<': 30, 'NUM': 27, '_': 26, 'int': 23, 'for': 21, 'context': 11, 'Context': 10, 'Activity': 6, 'create': 4, 'static': 1, 'private': 0}
{'}\n': 262, ';': 158, ')': 32, '(': 55, '': 9, '.': 99, 'if': 54, '}': 159, '{': 33, 'filter': 23, 'String': 16, 'null': 59}
{'}\n': 60, ';': 59, ')': 21, '(': 17, 'length': 52, '.': 26, 'signature': 20, ',': 49, 'NUM': 48, '_': 30, 'substring': 45, '{': 37, '': 3}
{'}\n': 258, ';': 48, ')': 20, '(': 4, '.': 42, 'get': 43, ',': 10, 'Width': 194, 'NUM': 164, '_': 163, 'Rect': 161, 'bg': 79, 'Color': 56, 'set': 51, 'D': 24, 'Graphics2': 23, '': 22, '=': 26, '{': 21, 'void': 1}
{'}\n': 137, ';': 59, 'ret': 126, 'return': 134, ')': 25, '(': 14, '.': 96, ':': 112, 'for': 103, 'List': 6, '=': 78, '>': 10, '': 5, '<': 7, '{': 26, 'static': 1, 'public': 0}
{'}\n': 59, ';': 57, ')': 37, '(': 6, 'Window': 8, 'window': 31, '': 7, 'void': 2, 'static': 1}
{'}\n': 194, ';': 65, 'return': 191, '}': 189, ')': 28, 'widget': 71, '(': 11, '.': 74, '{': 29, 'Widget': 7, '': 1, 'Children': 76, 'get': 75, 'container': 15, ':': 72, 'Constraint': 6, 'for': 66, '>': 8, '<': 4, 'List': 3, 'Array': 2, 'new': 40, '=': 39, 'Container': 14}
{'}\n': 103, '}': 29, ';': 28, ')': 10, 'STR': 26, '_': 25, '(': 5, 'Ascii': 23, 'append': 22, 'CODES': 83, 'ESCAPE_': 82, 'SYMBOL_': 81, '': 6, ',': 79, 'text': 9, 'Points': 76, 'Code': 75, 'print': 3, '{': 14, 'else': 30, 'Exception': 48, 'Symbol': 4, 'Empty': 46, 'new': 44, 'throw': 43, 'NUM': 40, '==': 18, 'length': 35, '.': 34, 'if': 15, 'null': 19, 'IOException': 13, 'throws': 11, 'Sequence': 8, 'Char': 7, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 149, ';': 47, 'str': 50, ':': 67, ')': 9, 'NUM': 44, '_': 43, '-': 142, '(': 8, 'length': 122, '.': 26, ',': 16, 'substring': 132, '?': 129, '>': 19, 'return': 118, '}': 117, 'STR': 53, '+': 101, 'prob': 79, 'Key': 105, 'get': 27, 'entry': 66, '+=': 98, 'Value': 92, 'Form': 87, 'Short': 86, 'Utils': 25, 'String': 5, '': 1, '=': 22, '{': 10, 'Set': 72, 'Table': 21, 'sorted': 20, 'Double': 18, '<': 13, 'Entry': 58, 'for': 55, 'size': 39, 'table': 30, 'max': 35, 'Math': 33, 'NBest': 28, 'Inference': 24, 'Map': 12, 'to': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 40, ';': 34, ')': 11, '(': 6, 'UI': 36, 'update': 3, 'Border': 4, '.': 15, '{': 12, 'void': 2}
{'}\n': 76, ';': 57, ')': 30, '(': 33, '.': 39, '<': 20, 'for': 58, '': 5, 'NUM': 43, '_': 42, '==': 35, 'length': 40, 'classes': 34, '||': 37, 'null': 36, 'if': 32, '{': 31, '>': 23, '?': 21, 'Class': 19, ']': 11, '[': 10}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'clear': 15, '.': 14, '_refs': 13, '{': 6, 'References': 3, 'reset': 2, 'void': 1, 'public': 0}
{'}\n': 35, '}': 34, ';': 33, ')': 13, '(': 4, '.': 27, 'Realm': 18, 'map': 17, '{': 14, '': 5, ',': 9, 'Name': 8, 'service': 7, 'String': 6, 'public': 0}
{'}\n': 267, ';': 34, 'date': 22, 'return': 264, 'NUM': 66, '_': 65, '=': 23, 'position': 259, '.': 39, '}': 99, ')': 10, '(': 6, 'normalize': 251, '{': 17, 'STR': 70, '!=': 68, 'utc': 238, '&&': 242, 'if': 58, 'Unnormalized': 229, 'save': 228, 'Time': 3, 'Date': 2, 'validate': 221, 'len': 36, ',': 31, 'str': 9, 'Zone': 208, 'get': 206, 'else': 204, '+': 95, 'Exception': 16, 'Schema': 13, '': 1, 'new': 24, 'throw': 85, 'UTCSign': 179, 'Char': 178, 'Next': 177, 'is': 176, '!': 175, '<': 169, 'Int': 111, 'parse': 5, 'month': 108, 'At': 63, 'char': 62, '||': 71, 'YEAR': 49, 'year': 46, 'length': 40, 'int': 35, 'this': 32, 'Data': 4, 'throws': 11, 'String': 8, 'protected': 0}
{'}\n': 63, ';': 62, ')': 19, '(': 14, '.': 50, 'Queue': 49, 'serial': 32, 'return': 21, '{': 20}
{'}\n': 29, ';': 28, ')': 10, '.': 15, '': 1, '(': 6, 'return': 12, '{': 11, 'query': 9, 'String': 8}
{'}\n': 57, ';': 26, ')': 11, 'NUM': 19, '_': 18, ',': 49, 'work': 16, '(': 8, 'write': 6, '.': 45, 'dis': 44, '>': 38, 'v': 10, 'byte': 23, '=': 21, ']': 20, '[': 17, '{': 15, 'IOException': 14, '': 1, 'throws': 12, 'int': 9, 'void': 5, 'final': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 75, '}': 46, ';': 16, ')': 7, 'e': 51, ',': 37, '(': 4, 'String': 67, 'to': 66, '.': 14, 'FINE': 62, '': 9, 'Level': 59, 'log': 54, '{': 8, 'IOException': 50, 'catch': 47, 'length': 43, '_newline': 36, 'NUM': 39, '_': 38, 'write': 34, 'out': 11, 'try': 30, 'v': 6, 'print': 25, 'return': 23, 'null': 21, '==': 20, 'if': 17, 'this': 13, '=': 12, 'Writer': 10, 'println': 3, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 42, ';': 25, 'service': 11, '(': 5, '.': 34, '': 1, 'null': 30, ')': 13, 'STR': 23, '_': 22, '{': 14, 'public': 0}
{'}\n': 95, ';': 54, ')': 14, 'NUM': 21, '_': 20, ',': 11, '(': 8, 'Point': 85, '': 1, 'new': 30, 'sm': 59, 'Raster': 3, 'Byte': 77, 'return': 74, 'h': 13, 'w': 10, 'Model': 58, 'Sample': 57, 'Compatible': 5, 'create': 4, '.': 63, 'sample': 61, '=': 60, '}': 55, 'STR': 37, ':': 49, '?': 46, '<=': 19, '+': 38, 'Exception': 34, 'Format': 33, 'throw': 29, '{': 15, '||': 22, 'if': 16, 'int': 9, 'Writable': 2, 'public': 0}
{'}\n': 150, ';': 110, 'Message': 58, 'error': 17, '_': 31, 'STR': 78, ')': 12, '(': 6, 'if': 50, '{': 13, '': 7}
{'}\n': 240, ';': 194, ')': 78, 'msg': 75, '(': 59, '.': 147, 'STR': 193, '_': 192, '=': 191, '||': 129, 'null': 98, '{': 79, 'String': 63, '': 62, 'public': 0}
{'}\n': 453, ';': 103, '}': 406, ')': 58, '(': 38, 'add': 354, '.': 111, 'tokens': 308, '_': 243, 'matcher': 106, '=': 71, '': 20, '{': 133, 'find': 129, 'String': 95, 'Matcher': 105, '<': 22, 'List': 21, '>': 25}
{'}\n': 110, '}': 63, ';': 44, '_': 80, ')': 15, 'url': 14, '+': 82, 'STR': 81, '(': 3, '.': 29, '{': 16, '': 4, 'java': 66, 'catch': 64, 'load': 47, 'props': 45, 'Stream': 25, 'open': 30, '=': 27, 'Input': 24, 'try': 17, 'URL': 13, ',': 7, 'public': 0}
{'}\n': 93, ';': 87, 'return': 90, '}': 89, ')': 45, '(': 6, 'Value': 83, 'get': 75, '.': 61, 'entry': 58, ',': 79, 'Key': 76, '{': 46, 'Set': 63, ':': 59, '': 2, 'for': 47, 'properties': 22, 'Properties': 21, 'public': 0}
{'}\n': 50, ';': 24, ')': 9, '(': 5, '.': 29, 'Nodes': 18, 'selected': 17, '{': 35, 'Empty': 31, 'is': 30, 'if': 25, '=': 19, '>': 16, 'Node': 15, '': 6, '<': 13}
{'}\n': 161, ';': 32, 'return': 158, '}': 129, ')': 44, '(': 41, '{': 61, '.': 38, '=': 30, 'i': 103, '++': 114, 'num': 96, '[': 4, '': 2, 'new': 69, 'NUM': 59, '_': 58, '>': 57, 'if': 46, 'String': 16, ']': 5}
{'}\n': 1859, ';': 1858, ')': 677, '-': 812, 'x2': 650, '(': 590, '*': 1541, 'x1': 599, 'y1': 620, 'y2': 671, '.': 719, 'Math': 704, '': 703, 'double': 395, ',': 601, 'distance': 422}
{'}\n': 136, ';': 26, 'return': 127, '}': 92, '{': 14, '(': 24, '.': 21, '!': 74, ')': 13, '_': 89, 'if': 66, 'get': 22, '=': 19, 'String': 17, '': 6, 'Language': 23, 'Locale': 7, 'static': 1, 'private': 0}
{'}\n': 92, ';': 52, ')': 24, 'i': 84, '(': 38, 'String': 82, '.': 34, '_': 67, 'rs': 17, 'column': 42, 'get': 35, '=': 32, '': 5, 'Set': 16, 'Result': 15}
{'}\n': 44, ';': 26, 'return': 35, '}': 39, 'BOOL': 37, '_': 36, ')': 7, '.': 32, '==': 30, '(': 3, 'if': 9, '{': 8, 'obj': 6, 'Object': 5, '': 4, 'equals': 2, 'boolean': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 10, '(': 5, '.': 19, 'connection': 9, '': 7, 'Transaction': 4, 'public': 0}
{'}\n': 60, ';': 17, ')': 6, '(': 9, '': 1, 'new': 10, 'm_table': 41, 'Pane': 39, 'JScroll': 38, 'add': 34, '.': 19, 'Model': 27, 'Selection': 26, 'set': 20, 'Layout': 13, 'Border': 12, '{': 7}
{'}\n': 38, ';': 37, ')': 13, '.': 19, '(': 6, '{': 14, 'Folder': 5, '': 7}
{'}\n': 288, ';': 114, 'link': 23, 'return': 285, ')': 31, '_': 45, '(': 38, '.': 41, ',': 181, 'NUM': 152, 'substring': 177, '=': 63, 'STR': 46, 'if': 37, 'With': 121, 'ends': 120, '{': 32, 'String': 2, '': 1, 'Url': 5, 'protected': 0}
{'}\n': 196, '}': 195, ';': 128, ')': 25, '(': 16, 'get': 133, '.': 123, '{': 29, '': 48, '=': 86, 'Manifest': 10}
{'}\n': 203, ';': 39, '}': 197, '=': 47, ']': 44, '[': 43, ')': 28, '(': 10, 'if': 30, ',': 58, 'NUM': 57, '_': 56, 'Binding': 3, 'Reference': 2, '': 1, 'new': 153, 'arraycopy': 142, '.': 107, 'System': 140, '{': 29, '!=': 125, 'Type': 27, 'original': 16, 'To': 98, '++': 71, '<': 67, 'int': 53, 'null': 38, 'return': 37, '==': 34, 'public': 0}
{'}\n': 30, ';': 28, ')': 18, 'column': 15, '(': 4, 'add': 2, '.': 21, 'columns': 20, '{': 19, 'Column': 3, '': 8, 'void': 1}
{'}\n': 17, ';': 16, ')': 7, 'display': 6, '(': 3, 'remove': 1, '.': 11, '{': 8, 'Display': 5, '': 4}
{'}\n': 143, 'return': 137, ';': 24, '_': 22, ')': 5, '/': 115, '.': 100, '*': 47, '(': 4, 'sqrt': 101, 'Math': 99, '': 97, '=': 96, 'double': 94, 'v1': 71, 'v2': 56, 'if': 7, '{': 6, 'public': 0}
{'}\n': 143, ';': 38, ')': 10, 'l': 83, '(': 4, '.': 50, 'listeners': 49, 'Exception': 23, 'Argument': 22, 'Illegal': 21, '': 6, 'new': 19, 'throw': 18, 'null': 16, '==': 15, 'if': 12, '{': 11, 'Query': 8, 'IRunning': 7, 'final': 5, 'void': 1}
{'}\n': 71, '}': 70, ';': 46, ')': 14, '(': 6, 'set': 63, '.': 23, 'contact': 36, '=': 38, '': 11, 'Contact': 3, 'if': 16, 'void': 1, 'private': 0}
{'}\n': 137, ';': 76, 'c': 31, 'return': 114, '}': 117, ')': 17, '(': 10, '.': 34, 'entry': 16, '{': 25, 'null': 44, '!=': 121, 'if': 77, 'Failed': 110, 'on': 109, '+': 105, 'STR': 104, '_': 85, 'debug': 101, 'log': 91, 'Enabled': 95, 'Debug': 94, 'is': 93, 'NUM': 86, '<': 84, 'timeout': 48, '&&': 82, '==': 80, 'Single': 62, 'implicit': 61, ',': 40, 'Tx': 57, 'in': 56, 'Ver': 42, 'lock': 41, 'Id': 39, 'thread': 38, 'Local': 36, 'add': 8, '=': 32, 'Candidate': 7, 'Mvcc': 6, 'Cache': 5, 'Grid': 4, '': 1, 'Exception': 24, 'Removed': 23, 'Entry': 9, 'throws': 18, 'Nullable': 2, '@': 0}
{'}\n': 132, ';': 62, ')': 43, '_': 88, '(': 7, '.': 55, 'add': 98, 'get': 77, 'edge': 36, '{': 44, 'Edge': 25, '': 17, 'void': 4}
{'}\n': 70, ';': 69, ')': 68, 'helper': 67, ',': 66, '(': 6, 'Order': 44, 'Join': 43, 'Same': 42, 'assert': 41, '{': 34, '': 19, 'Helper': 21, 'Test': 20, 'final': 12, 'void': 1}
{'}\n': 41, ';': 39, ')': 11, 'file': 10, '(': 26, 'delete': 3, '{': 12, 'File': 4, '': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 53, ';': 52, ')': 25, '(': 8, 'Id': 38, 'get': 37, '.': 36, 'user': 17, ',': 13, 'group': 12, 'Member': 7, 'Group': 6, '{': 29, 'IOException': 28, '': 9, 'throws': 26, 'User': 16, 'Gitlab': 10, 'public': 0}
{'}\n': 24, ';': 23, ')': 13, 'Name': 12, 'Bundle': 11, 'resource': 10, '(': 3, '{': 14, 'String': 5, '': 4}
{'}\n': 259, '}': 86, ';': 23, 'val': 11, '+=': 255, ']': 45, 'bin': 15, '[': 44, 'data': 38, 'NUM': 29, '_': 28, '+': 182, '=': 16, 'size': 34, '{': 13, ')': 12, '>=': 141, '(': 6, 'if': 24, 'else': 87, 'VALUE': 231, 'MAX_': 230, '': 1, '.': 39, 'Double': 227, 'max': 224, 'tmpdata': 46, ',': 9, 'arraycopy': 67, 'System': 65, 'length': 40, 'Size': 52, 'grow': 51, 'new': 48, '-=': 148, 'offset': 147, '-': 35, 'assert': 136, 'fill': 110, 'Arrays': 108, '>': 37, '<': 27, 'coord': 8, 'Nr': 19, 'Bin': 18, 'get': 17, 'int': 14, 'double': 7, 'increment': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 77, ';': 71, 'this': 75, 'return': 74, '}': 73, ')': 26, '(': 5, 'Value': 67, 'get': 59, '.': 32, 'entry': 45, ',': 63, 'Key': 60, '{': 27, 'Set': 50, ':': 46, 'Entry': 34, '': 1, 'Map': 31, 'for': 28, 'put': 3}
{'}\n': 140, ';': 63, ')': 73, '(': 5, 'xi': 88, 'NUM': 71, '_': 70, 'INFINITY': 83, 'POSITIVE_': 82, '': 78, '.': 58, 'Double': 79, '{': 74, '-': 47, 'x': 9, 'double': 2, ',': 10, 'static': 1, 'public': 0}
{'}\n': 203, '}': 179, ';': 124, ')': 96, '': 3, '.': 114, 'Plugin': 59, ',': 57, 'plugin': 132, '(': 10, 'add': 115, '{': 111, 'else': 180, 'if': 148, 'Plugins': 9, 'validated': 63, '>': 5, 'T': 4, '<': 2, 'IPlugin': 52, 'final': 11, 'Pair': 71, 'List': 33, 'Status': 60, 'static': 1, 'private': 0}
{'}\n': 29, ';': 16, 'null': 13, '=': 26, 'm': 10, ')': 6, '(': 5, '.': 19, 'Process': 11, 'if': 8, '{': 7, 'void': 2, 'public': 0}
{'}\n': 104, ';': 53, ')': 20, 'callback': 19, ',': 12, 'POST': 99, '': 2, '.': 38, 'Method': 96, 'Http': 95, 'parameters': 56, 'VIDEOS': 90, 'MY_': 89, '(': 8, 'Request': 3, 'new': 4, 'return': 81, 'descriptor': 32, 'Name': 74, 'get': 73, 'file': 15, 'Parcelable': 69, 'put': 68, 'NUM': 63, '_': 62, 'Bundle': 55, '=': 33, 'ONLY': 51, 'READ_': 50, 'MODE_': 49, 'Descriptor': 31, 'File': 14, 'Parcel': 29, 'open': 39, '{': 27, 'Exception': 26, 'Found': 25, 'Not': 24, 'throws': 21, 'Callback': 18, 'Video': 6, 'Upload': 5, 'static': 1, 'public': 0}
{'}\n': 106, ';': 25, 'sock': 15, 'return': 103, ')': 7, '(': 6, 'set': 95, '.': 44, 'NUM': 91, '_': 90, '': 9, 'Socket': 3, '{': 11, 'IOException': 10, 'throws': 8, 'create': 4}
{'}\n': 356, ';': 353, ')': 85, '(': 32, '.': 92, '=': 326, 'destination': 29, '{': 86, '': 34}
{'}\n': 18, '{': 17, ')': 16, 'Data': 6, 'Meta': 5, '': 8, '(': 7, 'check': 2}
{'}\n': 51, ';': 37, ')': 12, 'dest': 45, '}': 38, '(': 4, '{': 13, '': 5, ',': 8, 'private': 0}
{'}\n': 47, ')': 12, ',': 39, '(': 5, '{': 13, '': 6, 'Member': 4}
{'}\n': 11, ';': 10, 'Font': 3, '{': 6, ')': 5, '(': 4}
{'}\n': 62, ';': 36, ')': 11, '(': 6, 'Loaded': 5, 'if': 38, '=': 25, '{': 12, 'String': 9, '': 8, 'public': 0}
{'}\n': 57, ';': 56, 'return': 54, '}': 53, '(': 5, '.': 18, ')': 13, 'fields': 17, 'field': 27, '': 1, '{': 14}
{'}\n': 30, ';': 29, ')': 28, 'repo': 9, '': 1, '(': 6, 'public': 0}
{'}\n': 209, ';': 43, ')': 22, 'STR': 195, '_': 194, '(': 5, '.': 77, 'Buffer': 93, 'Only': 92, 'Read': 91, 'as': 90, 'ROOT_': 54, '': 12, 'Exception': 40, 'Argument': 39, 'Illegal': 38, 'new': 36, 'throw': 35, 'null': 33, '==': 32, 'if': 29, '{': 28, 'throws': 23, 'final': 6, ',': 10, 'Block0': 9, 'boolean': 7, 'Block': 3, 'Root': 2}
{'}\n': 129, ';': 39, ')': 19, 'Entity': 63, ',': 11, '(': 5, '': 1, 'new': 27, 'return': 118, 'set': 110, '.': 33, '=': 26, 'Name': 10, '_': 46, 'String': 8, '{': 20}
{'}\n': 283, ';': 159, ')': 7, '>': 39, '?': 21, '<': 20, 'Enum': 35, '': 1, '(': 4, '}': 162, 'get': 152, '.': 102, '{': 88, 'if': 99, 'Class': 19, 'public': 11, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 25, ';': 24, ')': 10, '(': 6, 'Path': 20, '.': 18, 'file': 9, 'Dir': 5, '{': 11, '': 7, 'public': 0}
{'}\n': 73, ';': 19, 'BOOL': 63, '_': 62, 'return': 61, 'i': 16, '=': 17, 'index': 18, ')': 13, '==': 58, '(': 5, 'if': 55, '}': 54, '{': 14, '++': 51, 'At': 42, 'char': 6, '.': 24, 'csq': 12, '&&': 37, 'n': 21, '<': 34, 'for': 29, 'length': 25, 'int': 15, 'Sequence': 11, 'Char': 10, '': 9, ',': 8, 'Any': 4, 'skip': 3, 'boolean': 2, 'final': 1, 'public': 0}
{'}\n': 561, '}': 54, ';': 32, ')': 25, 'example': 29, '(': 6, 'add': 444, '.': 67, 'format': 9, 'Name': 24, 'c': 23, 'Value': 90, 'Class': 44, 'set': 68, '{': 26, 'Flag': 45, 'get': 43, 'if': 41, 'i': 183, 'Missing': 353, 'else': 348, ',': 10, 'num': 12, '[': 75, '*': 267, ']': 76, '=': 30, '++': 52, '<': 189, 'NUM': 178, '_': 177, 'int': 11, 'for': 180, 'cl': 19, 'double': 86, 'Attributes': 39, 'attributes': 77, 'boolean': 74, 'Dataset': 69, 'Atts': 35, 'Instance': 28, 'Dense': 59, '': 7, 'new': 57, 'Num': 38, 'm_': 37, 'null': 31, 'String': 22, 'Definition': 18, 'Cluster': 17, 'Subspace': 16, 'Instances': 8, 'Examples': 5, 'generate': 2, 'void': 1, 'private': 0}
{'}\n': 140, ';': 21, 'BOOL': 132, '_': 33, 'return': 130, '}': 99, ')': 9, 'class': 126, '.': 26, ']': 14, '[': 13, 'Object': 12, '': 6, ',': 115, 'newlen': 38, 'NUM': 34, 'temp': 47, '(': 5, 'Range': 112, 'Of': 111, 'copy': 110, 'Array': 18, 'set': 107, '{': 10, 'len': 23, '!=': 32, 'if': 29, 'element': 74, '=': 16, '++': 68, 'contains': 86, 'c': 8, 'i': 59, 'elements': 15, '<': 65, 'int': 22, 'for': 56, 'new': 49, 'length': 27, 'get': 17, 'Collection': 7, 'All': 4, 'boolean': 2, 'synchronized': 1, 'public': 0}
{'}\n': 57, ';': 51, 'return': 53, '}': 52, ')': 9, '(': 5, 'phone': 26, '=': 16, '': 1, '{': 10, 'String': 7}
{'}\n': 32, ';': 31, 'STR': 15, '_': 14, '+': 16, ')': 11, ',': 24, '(': 6, 'All': 20, 'replace': 19, '.': 18, 'string': 10, '{': 12, 'String': 2, '': 1}
{'}\n': 92, '}': 91, ';': 36, ')': 13, 'event': 57, '(': 7, 'Change': 42, 'property': 85, '.': 84, 'listener': 44, 'Primitive': 20, 'As': 19, 'Value': 6, 'new': 11, ',': 66, 'Period': 30, 'Update': 29, 'get': 27, 'STR': 68, '_': 67, 'this': 65, 'Event': 56, 'Property': 41, '': 9, '=': 21, 'final': 8, '{': 14, 'Listeners': 49, ':': 33, 'Listener': 43, 'for': 37, '?': 26, 'null': 25, '==': 24, 'long': 16, 'Long': 10, 'New': 5, 'With': 4, 'reload': 2, 'void': 1, 'private': 0}
{'}\n': 52, '}': 42, ';': 32, ')': 15, '(': 7, 'close': 47, '.': 36, 'bw': 23, '{': 19, 'finally': 43, 'write': 3, 'try': 33, 'writer': 14, 'Writer': 6, 'Buffered': 21, '': 12, 'new': 25, '=': 24, 'IOException': 18, 'throws': 16, ',': 11, 'To': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 107, 'rc': 18, '+': 99, 'STR': 98, '_': 86, '(': 13, 'Exception': 95, 'State': 94, 'Illegal': 93, '': 92, 'new': 91, 'throw': 90, '{': 89, ')': 14, 'NUM': 87, '<': 85, 'if': 82, ';': 77, 'Get': 25, 'And': 24, 'decrement': 23, '.': 22, 'Count': 21, 'ref': 20, '=': 19, 'int': 17, 'Ref': 4, 'dec': 3, 'public': 0}
{'}\n': 42, ';': 41, ')': 15, '(': 10, '.': 21, '': 11, 'get': 22, 'X500': 19, '{': 16, 'static': 1, 'public': 0}
{'}\n': 188, ';': 54, ')': 25, '(': 5, '.': 40, 'assert': 175, 'get': 167, '': 14, 'Graph': 29, 'new': 80, '=': 32, '{': 26, ',': 19, 'void': 1, 'private': 0}
{'}\n': 20, ';': 19, ')': 5, '(': 4, 'equals': 12, '.': 11, 'FLAT': 10, 'TYPE_': 9, '': 8, '{': 6, 'public': 0}
{'}\n': 259, ';': 258, ')': 90, 'subscriber': 86, '(': 25, '.': 114, '': 19, '{': 91, '<': 32}
{'}\n': 170, '}': 155, ';': 46, ')': 10, '(': 4, '.': 93, '': 5, '=': 49, 'parse': 94, 'Int': 95, ']': 77, '[': 75, 'tokens': 50, '{': 69, 'NUM': 60, '_': 26, 'String': 6}
{'}\n': 129, ';': 34, ')': 17, 'Code': 16, 'exit': 3, '(': 4, '.': 41, 'System': 40, '': 5, '}': 119, ',': 9, 'if': 19, 'space': 55, ':': 86, 'length': 83, 'runner': 37, '?': 80, 'NUM': 73, '_': 50, '-': 77, '==': 76, 'substring': 70, '=': 38, 'STR': 51, 'Of': 60, 'index': 59, 'int': 14, 'NAME': 48, 'PROG_': 47, 'IGNITE_': 46, 'Property': 43, 'get': 42, 'String': 6, 'Msg': 8, 'err': 7, 'null': 24, '!=': 23, '{': 18, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 31, ';': 30, ')': 20, 'term2': 28, '(': 6, '.': 24, 'return': 22, 'Term': 11, 'Emitted': 10, 'Split': 9, 'New': 8, '': 1, 'compare': 5, 'int': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 115, ';': 114, ')': 59, 'max': 40, ',': 20, '(': 17, '.': 73, 'Math': 65, '': 64, 'min': 23}
{'}\n': 313, ';': 312, ')': 109, '(': 51, '': 54, '.': 219, '&&': 226, '!': 173, 'if': 171, '{': 143, 'pkg': 87, 'static': 1}
{'}\n': 467, ';': 199, ')': 88, ',': 70, 'Payload': 140, '(': 4, '.': 267, '=': 143, '>': 149, '<': 148, '': 5, 'new': 144, 'NUM': 178, '_': 177, 'args': 65, ']': 54, '[': 51, 'String': 6, 'handle': 2, 'void': 1, 'private': 0}
{'}\n': 42, ';': 31, ')': 40, '(': 14, 'Configuration': 28, 'configuration': 22, 'void': 5, 'public': 4}
{'}\n': 140, ';': 116, ')': 59, '(': 51, 'start': 135, '.': 118, 'thread': 34, 'BOOL': 123, '_': 122, 'Daemon': 120, 'set': 119, ',': 110, 'Thread': 98, '': 97, 'new': 96, '=': 95, '{': 60, 'if': 61, 'void': 4}
{'}\n': 386, ';': 20, '}': 113, ')': 12, '=': 17, 'i': 56, '{': 13, '(': 39, 'j': 85, '': 1, '++': 97, 'NUM': 19, '_': 18, 'int': 50, 'for': 48, '[': 5, '<': 91, ']': 6, '*': 182, 'double': 4}
{'}\n': 25, ';': 23, ')': 15, 'column': 12, '(': 4, '.': 18, 'columns': 17, '{': 16, 'Column': 3, '': 5, 'void': 1}
{'}\n': 240, ';': 56, ')': 49, '(': 214, '.': 41, '+': 36, 'STR': 45, '_': 44, 'i': 82, '=': 64, 'String': 14, '': 13}
{'}\n': 102, ';': 51, 'return': 99, '}': 98, 'BOOL': 96, '_': 95, '=': 94, ')': 14, '.': 33, ',': 87, 'info': 59, '(': 4, 'set': 72, 'Info': 11, '': 5}
{'}\n': 66, ';': 35, 'Result': 7, ')': 18, '.': 54, '(': 10, '': 1, 'new': 47, '{': 24, 'Exception': 23, 'Execution': 22, 'Query': 21, 'throws': 19, 'Scanned': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 25, ';': 24, ')': 8, '(': 7, 'Code': 6, 'hash': 5, '.': 19, 'return': 10, '{': 9, 'int': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 76, '}': 75, ';': 74, ')': 5, '(': 4, '.': 57, 'Schema': 20, 'MAcct': 44, '': 43, '=': 29, 'm_acct': 15, '{': 6, 'void': 1}
{'}\n': 93, ';': 92, ')': 18, '(': 4, '.': 85, '{': 19, 'model': 9, 'Model': 8, '': 6, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, '(': 5, 'Empty': 14, 'is': 13, '.': 12, '!': 9, '{': 7, 'Partitions': 4, 'public': 0}
{'}\n': 197, ';': 49, ')': 22, 'i': 52, '(': 7, 'At': 166, 'char': 165, '.': 38, 'str': 15, '': 13, 'if': 24, '{': 23, '++': 66, 'length': 39, '<': 58, 'NUM': 44, '_': 43, '=': 53, 'for': 50, 'String': 14, 'final': 12}
{'}\n': 65, ';': 34, 'SIZEOF_': 62, '': 26, '.': 28, 'Bytes': 30, '+': 45, 'offset': 12, 'return': 55, ')': 16, 'val': 15, ',': 10, 'OFFSET': 50, 'BASE_': 49, 'ARRAY_': 48, 'BYTE_': 47, 'bytes': 9, '(': 5, 'put': 3, 'Unsafe': 37, 'the': 36, '}': 35, 'reverse': 29, '=': 25, '{': 17, 'Endian': 21, 'little': 20, 'if': 18, 'int': 2, ']': 8, '[': 7, 'byte': 6, 'static': 1, 'public': 0}
{'}\n': 112, ';': 72, ')': 16, '(': 68, 'set': 93, '.': 74, 'label': 10, '{': 17, '': 8, 'public': 0}
{')': 6, 'tag': 1, 'String': 4, '': 3, '(': 2}
{'}\n': 887, ';': 885, ')': 742, '(': 737, '.': 879, 'return': 768, '{': 743, 'Delegate': 643, '': 606}
{'}\n': 29, ';': 28, ')': 24, 'Join': 11, 'outer': 10, '(': 5, '.': 18, '': 6}
{'}\n': 115, ';': 40, 'return': 30, ')': 12, '(': 8, 'Token': 106, 'next': 105, '.': 21, 'tokenizer': 45, 'File': 101, '': 3, 'new': 32, '++': 91, 'i': 79, '<': 85, 'NUM': 27, '_': 26, '=': 46, 'int': 78, 'for': 76, 'STR': 55, ',': 53, 'src': 11, 'Tokenizer': 44, 'String': 10, '==': 17, 'length': 22, '||': 19, 'null': 18, 'if': 14, '{': 13, 'encode': 7, 'final': 2, 'static': 1, 'private': 0}
{'}\n': 284, '}': 110, ';': 28, ')': 12, '(': 4, 'unlock': 272, '.': 22, 'lock': 33, 'signal': 266, 'available': 102, '&&': 258, 'null': 86, '==': 85, 'leader': 167, 'if': 82, '{': 17, 'finally': 223, '=': 20, 'Thread': 184, 'this': 35, 'Left': 205, 'time': 204, '-': 218, 'delay': 114, '-=': 216, 'nanos': 19, 'Nanos': 24, 'await': 104, 'long': 5, 'try': 63, 'current': 191, '': 1, 'else': 99, '!=': 168, '||': 166, '<': 164, 'return': 96, 'NUM': 94, '_': 93, '<=': 92, 'poll': 3, 'q': 132, 'for': 65, 'Interruptibly': 42, 'Lock': 32, 'Reentrant': 31, 'final': 29, 'timeout': 6, 'to': 23, 'unit': 11, 'Exception': 16, 'Interrupted': 15, 'throws': 13, 'Unit': 10, 'Time': 9, ',': 7, 'E': 2, 'public': 0}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'size': 2, '.': 8, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 787, '}': 687, ';': 415, ')': 241, 'Item': 57, ',': 148, '(': 59, 'get': 364, '.': 363, 'add': 6, '{': 242, 'else': 688, 'Index': 569, 'Menu': 20, '': 64, 'if': 419, '=': 323, 'private': 0}
{'}\n': 29, ';': 28, ')': 15, 'Value': 14, 'the': 9, '(': 5, 'write': 3, '.': 22, 'Os': 10, '{': 19, 'IOException': 18, '': 6, 'throws': 16, 'int': 12, ',': 11, 'Stream': 8, 'Output': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 17, 'header': 11, '(': 7, 'add': 5, '.': 22, '{': 18, '': 9, 'Header': 6, 'void': 4, 'public': 3}
{'}\n': 109, ';': 107, ')': 48, '(': 43, 'Message': 36, 'get': 57, '.': 56, 'e': 47, '{': 49, 'Exception': 46, '': 30, 'public': 0}
{'}\n': 110, ';': 32, '.': 22, 'type': 11, '=': 99, ')': 31, '_': 29, ',': 12, '(': 26, '': 8, 'STR': 30, 'Argument': 50, 'check': 23, 'Preconditions': 21, 'Null': 25, 'Not': 24, '{': 19, 'final': 7, 'static': 0}
{'}\n': 27, ';': 26, ')': 9, 'NUM': 17, '_': 16, '-': 22, 'length': 21, '.': 20, 'a': 8, ',': 15, '(': 4, 'Sort': 12, 'do': 11, '{': 10, ']': 7, '[': 6, 'sort': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 66, ';': 65, 'STR': 10, '_': 9, '+': 11, ')': 6, '(': 5, 'format': 15, '.': 14, 'return': 8, '{': 7, 'String': 2, 'to': 3, '': 1, 'public': 0}
{'}\n': 55, ';': 28, ')': 9, '.': 32, 'Optional': 2, '': 1, '(': 8, 'next': 42, 'iterator': 17, 'Next': 34, 'has': 33, '=': 18, '>': 6, 'T': 5, '<': 3, 'Iterator': 12, '{': 10, 'public': 0}
{'}\n': 52, '}': 20, ')': 8, 'e': 32, 'Exception': 25, 'Interrupted': 24, '': 12, '(': 5, 'catch': 21, ';': 19, 'millis': 7, 'sleep': 15, '.': 14, 'Thread': 13, '{': 9, 'try': 10, 'long': 6, 'void': 2, 'public': 0}
{'}\n': 23, ';': 22, 'NUM': 21, '_': 20, '==': 19, ')': 9, 'TEST': 17, 'ACCESS_': 16, '': 15, '&': 14, 'modifiers': 8, '(': 5, 'return': 11, '{': 10, 'int': 7, 'Access': 4, 'Package': 3, 'is': 2, 'boolean': 1, 'static': 0}
{'}\n': 28, ';': 19, 'window': 6, '+': 24, 'STR': 23, '_': 22, '=': 17, '.': 15, '{': 13, ')': 12, 'Window': 1, '': 4, '(': 3}
{'}\n': 14, ';': 13, '{': 9, ')': 8, 'Rebalance': 4, 'boolean': 0}
{'}\n': 117, ';': 116, 'sld': 72, '(': 41, '.': 104, '{': 78, ')': 77, '': 27}
{'}\n': 68, ';': 63, 'return': 65, '}': 64, ')': 20, '(': 5, 'Value': 59, 'get': 51, '.': 36, 'entry': 33, ',': 55, 'Key': 52, '{': 21, 'Set': 38, 'properties': 19, ':': 34, '': 1, 'for': 22}
{'}\n': 39, ';': 24, ')': 12, 'style': 11, '(': 5, 'Font': 4, 'derive': 32, '.': 19, 'font': 16, 'set': 27, 'comp': 8, 'get': 20, '=': 17, '': 6, '{': 13, 'int': 10, ',': 9, 'JComponent': 7, 'change': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 12, ',': 8, 'img': 7, '(': 4, '.': 16, '': 5, '{': 13, 'Color': 10, 'draw': 2, 'public': 0}
{'}\n': 94, ';': 80, ')': 16, '(': 6, 'Line': 84, 'new': 83, '.': 73, 'writer': 72, 'write': 74, '{': 20, 'IOException': 19, '': 7, 'throws': 17, ',': 11, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 9, '(': 8, '.': 17, 'Listeners': 16, 'Changed': 6, 'Position': 5, 'Central': 4, 'On': 3, 'm': 11, '{': 10, 'Listener': 7, 'void': 1, 'public': 0}
{'}\n': 118, '}': 68, ';': 45, ')': 15, '(': 6, 'Message': 112, 'get': 31, '.': 30, 'e': 75, 'Error': 107, 'Internal': 106, '': 2, 'new': 79, 'throw': 78, '{': 22, 'Exception': 21, 'Target': 98, 'Invocation': 97, 'catch': 69, 'STR': 90, '_': 89, '+': 88, 'Name': 14, 'method': 13, 'Method': 20, 'Such': 19, 'No': 18, 'Access': 73, 'Illegal': 72, 'result': 48, 'return': 65, ',': 10, 'null': 54, 'invoke': 4, '=': 28, 'Object': 3, 'clazz': 9, 'try': 23, 'throws': 16, 'String': 12, 'Class': 8, 'Static': 5, 'static': 1, 'public': 0}
{'}\n': 53, '}': 52, ';': 28, 'null': 50, 'return': 24, ':': 23, 'default': 47, '': 25, 'NUM': 22, '_': 2, 'case': 20, 'ID': 27, 'NOTE_': 26, '{': 13, ')': 12, 'Id': 7, 'field': 10, '(': 8, 'switch': 14, 'int': 9, 'Thrift': 6, 'By': 5, 'find': 4, 'Fields': 3, 'static': 1, 'public': 0}
{'}\n': 48, ';': 47, 'packet': 8, '_': 30, ')': 9, '(': 5, 'return': 18, '{': 10, 'Packet': 7, '': 6}
{'}\n': 126, ';': 43, ')': 31, ',': 115, 'js': 73, '(': 45, '.': 90, '{': 32, 'if': 44, '=': 36, 'String': 19, '': 18, 'final': 17, 'execute': 5, 'public': 3}
{'}\n': 193, ';': 120, ')': 41, '_': 131, '(': 32, '': 33, '.': 139, '}': 134, 'BOOL': 132, 'return': 130, '{': 129, 'Version': 19, 'if': 121, 'parse': 74, '=': 70, 'parsed': 68}
{'}\n': 100, ';': 80, ')': 21, 'Map': 11, ',': 9, '(': 3, 'Beans': 90, 'destroy': 89, 'view': 19, 'Context': 6, 'faces': 7, 'STR': 51, '_': 50, 'FINEST': 35, '': 4, '.': 27, 'Level': 32, 'log': 42, 'LOGGER': 26, '{': 22, 'Loggable': 29, 'is': 28, 'if': 23, '>': 18, 'Object': 17, 'String': 14, '<': 12, 'Faces': 5, 'clear': 2, 'void': 1, 'public': 0}
{'}\n': 110, 'Table': 51, 'logical': 68, ';': 78, ')': 37, '(': 7, 'get': 74, '.': 43, ',': 13, '': 8}
{'}\n': 48, ';': 47, ')': 9, 'in': 42, '(': 3, 'Process': 2, 'read': 36, '{': 16, '': 5, ',': 13, 'throws': 10, 'final': 4, 'public': 0}
{'}\n': 16, ';': 15, 'URL': 14, 'DEFAULT_': 13, '': 1, 'url': 10, '.': 9, '{': 7, ')': 6, '(': 5, 'public': 0}
{'}\n': 57, ';': 24, ')': 11, '(': 22, 'String': 8, 'to': 52, '.': 26, 'sb': 16, 'return': 49, 'STR': 30, '_': 29, 'append': 27, 'Builder': 15, '': 1, 'new': 18, '=': 17, '{': 12}
{'}\n': 197, ';': 94, ')': 42, '(': 5, 'NUM': 88, '_': 87, ',': 89, '.': 84, '': 73, '=': 71, 'desired': 39, '{': 43, 'int': 15, 'public': 0}
{'}\n': 178, ';': 73, ')': 16, 'b': 105, 'g': 75, 'r': 169, '(': 5, 'return': 164, 'Alpha': 150, 'get': 59, '.': 24, 'round': 53, 'Math': 51, '': 6, '=': 20, 'a': 135, 'int': 74, 'Blue': 120, 'Green': 90, 'Red': 60, '{': 17, ',': 9, 'color2': 12, 'Color': 7, 'color1': 8, 'static': 1}
{'}\n': 114, ';': 112, 'system': 46, '=': 66, '.': 55, 'System': 36, '': 7}
{'}\n': 104, ';': 33, 'bimage': 38, 'return': 26, ')': 15, '(': 8, 'dispose': 97, '.': 46, 'Gr': 68, 'b': 67, 'null': 50, ',': 52, 'NUM': 86, '_': 85, 'img': 11, 'Image': 4, 'draw': 80, 'Graphics': 73, 'create': 72, '=': 39, 'D': 66, 'Graphics2': 65, '': 2, 'Height': 56, 'get': 47, 'Width': 48, 'Buffered': 3, 'new': 40, '}': 34, '{': 16, 'instanceof': 20, 'if': 17, 'to': 5, 'static': 1, 'public': 0}
{'}\n': 1044, ';': 83, ')': 15, '(': 10, 'to': 1038, '.': 422, 'return': 1035, '}': 980, 'else': 981, 'Upper': 861, 'if': 614, '{': 16, 'STR': 669, '_': 456, '=': 375, 'NUM': 457, '': 11, 'str': 13, 'String': 12, 'To': 7, 'static': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 12, 'listener': 11, ',': 25, 'class': 24, '.': 16, 'Listener': 5, 'Selection': 4, 'Sensor': 3, '': 7, '(': 6, 'List': 15, '{': 13, 'void': 1, 'public': 0}
{'}\n': 36, ';': 25, ')': 6, 'c': 5, '(': 3, 'append': 28, '.': 27, '_output': 13, 'STR': 23, '_': 22, 'IOException': 9, '': 8, 'new': 18, 'throw': 17, 'null': 15, '==': 14, 'if': 11, '{': 10, 'throws': 7, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 38, '}': 37, ';': 36, ')': 10, '(': 3, '{': 11, 'mux': 14, 'synchronized': 12, 'mgr': 9, 'Manager': 8, 'Ttl': 7, 'Cache': 6, 'Grid': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 260, ';': 60, ')': 34, 'STR': 90, '_': 89, '(': 14, 'Exception': 241, '': 26, '.': 67, 'log': 32, 'Logger': 30, 'void': 1}
{')': 26, ',': 17, 'height': 22, 'int': 18, 'width': 19, 'image': 5, ']': 14, '[': 13, '(': 11, 'Image': 9}
{'}\n': 72, ';': 40, 'filename': 11, 'return': 50, '}': 67, ')': 12, 'NUM': 56, '_': 55, '(': 8, 'group': 53, '.': 20, 'm': 30, '+': 58, '{': 13, 'matches': 45, 'if': 14, 'matcher': 36, '=': 31, 'Matcher': 29, '': 2, 'Empty': 22, 'is': 21, 'Utils': 19, 'String': 3, '!': 16, 'Markers': 7, 'Stacking': 6, 'clean': 4, 'static': 1, 'public': 0}
{'}\n': 49, '}': 48, ';': 30, ')': 8, ',': 44, 'reg': 7, '(': 3, '{': 9, '': 4, 'void': 1}
{'}\n': 29, ';': 28, 'state': 12, 'return': 10, '{': 9, ')': 8, '(': 5, 'State': 4, 'is': 2, 'boolean': 1}
{'}\n': 185, ';': 174, 'return': 177, '}': 175, ')': 17, '(': 44, 'protein': 78, 'NUM': 113, '_': 112, '>': 111, 'if': 106, '=': 34, '': 2, 'Length': 10, 'int': 8, 'public': 0}
{'}\n': 86, ';': 76, ')': 17, 'STR': 83, '_': 82, '(': 6, '.': 79, 'writer': 55, '{': 43, 'IOException': 20, '': 13, 'throws': 18, 'void': 1, 'public': 0}
{'}\n': 19, ';': 18, '.': 9, '^': 14, ')': 5, '(': 4, 'Code': 3, 'hash': 2, 'return': 7, '{': 6, 'int': 1, 'public': 0}
{'}\n': 105, '}': 66, ';': 37, ')': 26, '(': 7, 'Attrs': 95, 'Declared': 94, 'f': 31, '{': 30, 'null': 46, '!=': 45, 'if': 40, 'e': 72, 'XNIException': 29, '': 1, 'new': 76, 'throw': 75, 'SAXException': 71, 'catch': 68, 'DTD': 33, '.': 52, 'Handler': 44, 'Lexical': 43, 'try': 38, 'BOOL': 36, '_': 35, '=': 34, 'In': 32, 'throws': 27, 'augs': 25, 'Augmentations': 24, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 99, '}': 70, ';': 55, ')': 36, '(': 4, '{': 77, 'SQLException': 74, '': 7, 'catch': 71, 'conn': 23, 'Connection': 12, 'public': 0}
{'}\n': 59, ';': 58, '_': 53, ')': 25, '(': 45, '.': 42, 'Name': 15, 'return': 27, '{': 26, 'Arg': 7}
{'}\n': 84, ';': 82, ')': 13, 'Type': 12, 'mime': 11, '(': 16, '.': 52, 'Map': 51, 'To': 48, '{': 14, 'if': 15, 'String': 10, '': 9}
{'}\n': 54, ';': 30, 'result': 10, 'return': 51, ')': 6, 'STR': 25, '_': 24, ',': 26, '(': 5, 'quote': 41, '.': 14, 'Pattern': 39, '': 1, 'All': 16, 'replace': 15, '=': 11, 'String': 2, '{': 7, 'private': 0}
{'}\n': 229, ';': 18, ')': 10, '(': 5, 'String': 3, 'to': 224, '.': 223, 'return': 221, '}': 220, 'NUM': 34, '_': 33, ']': 8, '+': 32, 'i': 45, '[': 7, 'bytes': 9, '>=': 58, '=': 14, 'Buffer': 22, '': 2, 'new': 25, 'int': 12, '{': 11, 'byte': 6, 'encode': 4}
{'}\n': 85, '}': 56, ';': 16, ')': 7, 'e': 61, ',': 45, '(': 4, 'String': 28, 'to': 76, '.': 14, 'FINE': 72, '': 9, 'Level': 69, 'log': 64, '{': 8, 'IOException': 60, 'catch': 57, 'length': 51, 's': 29, 'NUM': 47, '_': 46, 'write': 42, 'out': 11, 'v': 6, 'Of': 35, 'value': 34, '=': 12, 'try': 25, 'return': 23, 'null': 21, '==': 20, 'if': 17, 'this': 13, 'Writer': 10, 'print': 3, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 52, ';': 26, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 28, 'result': 11, 'return': 44, 'append': 29, 'STR': 32, '_': 31, 'Buffer': 10, '': 1, 'new': 13, '=': 12, '{': 7, 'public': 0}
{'}\n': 22, ';': 21, ')': 10, 'STR': 19, '_': 18, '(': 5, '.': 15, 'Host': 9, 'zk': 8, 'return': 12, '{': 11, 'String': 7, '': 6, 'Chroot': 4, 'boolean': 2, 'static': 1}
{'}\n': 60, ';': 58, ')': 25, '(': 5, ',': 38, '{': 26, 'db': 23, 'Database': 21, '': 19, 'void': 2, 'static': 1}
{'}\n': 42, ';': 24, 'result': 9, 'return': 39, 'NUM': 30, '_': 29, '=': 10, ')': 6, '(': 5, 'Code': 4, 'hash': 13, '.': 12, 'int': 8, '{': 7}
{'}\n': 237, ';': 54, ')': 27, 'return': 228, ',': 188, 'STR': 46, '_': 45, 'SEVERE': 220, '': 1, '.': 38, 'Level': 217, '(': 5, 'log': 55, '{': 84, 'catch': 205, '}': 204, '=': 66, 'file': 31, 'File': 69, 'Name': 60, '+': 44, 'public': 0}
{'}\n': 54, ';': 27, ')': 18, '_': 36, '(': 32, '.': 21, 'exception': 17, 'STR': 37, ',': 14, '': 1, '{': 19}
{'}\n': 20, ';': 19, ')': 10, 'identifier': 9, '(': 6, 'contains': 15, '.': 14, 'blacklist': 13, 'return': 12, '{': 11, 'String': 8, '': 1, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 36, ';': 24, ')': 9, 'Value': 13, 'temp': 12, '(': 8, 'Of': 30, 'value': 29, '.': 17, 'String': 3, '': 2, 'return': 25, 'NUM': 23, '_': 22, '+': 21, 'VALUE': 20, 'MAX_': 19, '=': 14, 'long': 11, '{': 10, 'Plus': 7, 'Max_': 6, 'private': 1, 'static': 0}
{'}\n': 92, ';': 23, 'value': 8, 'return': 89, 'STR': 18, '_': 17, '(': 5, '.': 14, ')': 9, ',': 19, 'replace': 15, '=': 12, '{': 10, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 118, ';': 117, ')': 10, ',': 48, '': 20, '.': 24, 'Test': 23, 'Service': 22, 'Abstract': 21, 'FORMAT_': 79, 'BDEF_': 55, '{': 11, '(': 9, 'Testing': 8, 'For': 5, 'Entities': 4, 'Database': 3, 'create': 2, 'public': 0}
{'}\n': 173, '{': 129, 'IOException': 16, '': 9, 'throws': 14, ')': 13, 'Obj': 12, 'PDFObject': 10, '(': 5, 'private': 0}
{'}\n': 53, ';': 47, 'Map': 2, 'to': 18, 'return': 49, '}': 48, ')': 20, 'values': 14, ',': 11, 'key': 10, '(': 7, 'put': 41, '.': 40, '{': 21, 'null': 27, '!=': 26, '&&': 29, 'if': 22, '': 1, 'Set': 13, 'String': 9, 'To': 5, 'Element': 4, 'static': 0}
{'}\n': 77, '(': 59, '}': 66, ';': 65, ')': 6, '.': 57, 'Prop': 15, '{': 10, 'File': 45, 'Stream': 40, '=': 30, '': 8, 'IOException': 9, 'throws': 7}
{'}\n': 131, ';': 68, ')': 26, '(': 3, 'close': 126, '.': 48, 'reader': 124, '}': 98, 'line': 60, '{': 30, 'STR': 84, '_': 83, 'With': 81, 'starts': 80, 'if': 76, '=': 61, '': 17, 'throws': 27}
{'}\n': 216, ';': 36, 'this': 214, 'return': 213, '}': 212, ')': 21, 'get': 66, '.': 38, '(': 8, 'put': 39, 'buffer': 37, '': 1, 'Calendar': 11, 'calendar': 12, 'byte': 42, 'NUM': 34, '_': 33, 'Capacity': 25, 'Buffer': 24, 'assure': 23, '{': 22, 'Seconds': 20, 'fractional': 19, ',': 13, 'final': 9, 'Length': 7, 'write': 5, 'Stream': 4, 'Output': 3, 'Packet': 2, 'public': 0}
{'}\n': 156, ';': 54, ')': 22, '(': 20, 'String': 3, 'to': 151, '.': 101, 'text': 40, 'return': 144, 'STR': 105, '_': 104, 'append': 102, '': 2, 'new': 48, '=': 47, '{': 23, 'public': 0}
{'}\n': 47, '}': 46, ';': 45, ')': 9, '(': 5, 'Path': 41, 'get': 40, '.': 20, 'file': 8, '+': 37, 'Exception': 14, 'Usage': 13, 'Ade': 12, '': 6, 'new': 27, 'throw': 26, '{': 15, 'if': 16, 'throws': 10, 'File': 4, 'static': 1, 'public': 0}
{'}\n': 161, ';': 45, 'path': 40, 'return': 158, ')': 22, '(': 6, 'Path': 154, 'close': 153, '.': 41, '+': 67, 'y': 13, ',': 10, 'x': 9, 'To': 64, 'line': 83, 'NUM': 124, '_': 123, 'move': 48, 'reset': 42, '{': 23, 'h': 21, 'final': 7, 'w': 17, 'create': 3, 'Shape': 2, '': 1, 'public': 0}
{'}\n': 148, '}': 141, ';': 66, '=': 58, ')': 52, '(': 51, '{': 113, 'if': 102}
{'}\n': 217, ';': 27, ')': 6, 'STR': 16, '_': 15, '(': 5, 'output': 22, '.': 12, 'Debug': 11, '': 10, 'debugging': 13, 'if': 8, '=': 101, 'Bean': 4, 'cut': 180, '}': 96, 'return': 94, 'Selection': 153, 'clear': 152, 'Trace': 148, 'Stack': 147, 'print': 146, 'e': 141, '{': 7, 'Exception': 140, 'catch': 137, 'selected': 30, 'Object': 112, 'write': 129, 'oos': 115, 'ser': 99, 'Stream': 107, 'Output': 106, 'new': 102, 'Array': 105, 'Byte': 104, 'try': 97, 'Location': 37, '+': 60, 'null': 33, '==': 32, '||': 34, 'Selected': 3, 'void': 1, 'protected': 0}
{'}\n': 139, ';': 27, ')': 15, '_': 103, ',': 99, 'source': 19, 'Item': 36, 'JMenu': 35, '': 11, '(': 4, 'return': 39, 'instanceof': 33, '!': 30, 'if': 28, 'Source': 24, 'get': 23, '.': 22, 'e': 14, '=': 20, 'Object': 18, '{': 16, 'Event': 13, 'void': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 13, '(': 4, '.': 17, 'Entry': 3, 'add': 2, 'void': 1}
{'}\n': 65, ';': 51, ')': 5, '(': 8, '.': 56, 'children': 9, '': 39, 'new': 18, '=': 17, '==': 10, 'if': 7, '{': 6, 'void': 1}
{'}\n': 39, ';': 24, ')': 37, '(': 36, 'Bits': 7, 'Sig': 6, 'least': 31, '=': 20, 'most': 17, 'long': 4, 'UUID': 2, '': 1, 'public': 0}
{'}\n': 324, ';': 323, ')': 187, 'handler': 164, '(': 71, 'Handler': 4, '.': 220, '{': 188, '': 74, 'void': 2, 'static': 1}
{'}\n': 59, ';': 24, ')': 7, '(': 6, 'String': 2, 'to': 54, '.': 53, 'sb': 12, 'Builder': 11, '': 1, 'new': 14, '=': 13, '{': 8, 'public': 0}
{'}\n': 340, ';': 242, '.': 59, 'stream': 156, ')': 202, '': 18, '=': 231, '{': 203, ',': 157, 'String': 132, 'type': 100, 'Type': 61, 'Follower': 19, '(': 54, 'Info': 20}
{'}\n': 190, '}': 112, ';': 59, ')': 38, 'stmt': 49, '(': 13, 'Statement': 48, 'close': 183, '.': 65, 'Utils': 94, 'Jdbc': 93, '': 14, '{': 45, 'finally': 166, 'execute': 117, ']': 109, 'index': 77, '[': 107, 'parameters': 37, ',': 17, 'NUM': 80, '_': 79, '+': 102, 'Parameter': 97, 'bind': 96, '++': 89, 'length': 86, '<': 83, '=': 57, 'int': 76, 'for': 74, 'Query': 22, 'Sql': 21, 'raw': 20, 'prepare': 66, 'connection': 16, 'try': 60, 'null': 58, 'Prepared': 47, 'SQLException': 44, 'throws': 39, '...': 36, 'Object': 35, 'String': 19, 'Connection': 15, 'static': 1, 'public': 0}
{'}\n': 148, ';': 29, 'future': 34, 'return': 145, ')': 18, 'request': 17, '(': 10, 'write': 138, '.': 50, 'channel': 136, '}': 110, 'e': 116, ',': 13, 'STR': 127, '_': 126, 'Exception': 23, 'Store': 22, 'Remote': 21, '': 1, 'new': 36, 'throw': 119, '{': 24, 'Interrupted': 114, 'catch': 111, 'wait': 106, 'Notify': 83, 'try': 101, 'REQUESTS': 77, 'PENDING_': 76, 'MAX_': 75, '>': 7, 'size': 70, 'Map': 49, 'while': 86, 'synchronized': 80, 'if': 65, 'xid': 12, 'Of': 57, 'value': 56, 'Integer': 54, 'put': 51, 'Generation': 45, 'connection': 44, 'Future': 2, 'Sync': 5, '=': 35, 'Connected': 26, 'ensure': 25, 'throws': 19, 'Message': 16, 'int': 11, 'Request': 9, 'send': 8, 'Reply': 6, '<': 3, 'public': 0}
{'}\n': 27, ';': 26, ')': 9, '(': 5, 'length': 22, '.': 21, 'str': 8, '||': 16, '==': 14, 'return': 11, '{': 10, 'String': 7, '': 6, 'Empty': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 131, ';': 21, ')': 8, 'c': 7, '(': 4, 'add': 126, '.': 29, 'm_': 123, '}': 22, 'CLASS': 108, 'BINARY_': 42, '': 5, 'Capability': 6, 'enable': 2, '{': 9, 'NOMINAL_': 31, '==': 26, 'if': 10, 'else': 47, 'ATTRIBUTES': 32, 'EMPTY_': 92, 'UNARY_': 67, 'return': 20, 'Capabilities': 15, 'Check': 14, 'Not': 13, 'do': 12, 'void': 1, 'public': 0}
{'}\n': 210, ';': 209, 'return': 188, '{': 124, ')': 120, '(': 112, 'Variables': 111, 'public': 0}
{'}\n': 74, ';': 28, 'this': 72, 'return': 71, ')': 14, 'bool': 18, '(': 6, 'Child': 43, 'append': 42, '.': 21, 'Element': 17, 'resource': 62, 'value': 13, 'Node': 49, 'Text': 48, 'create': 22, 'document': 20, 'name': 9, ',': 10, 'STR': 26, '_': 25, 'Attribute': 32, 'set': 31, '=': 19, '': 1, '{': 15, 'String': 8, 'add': 4, 'Poet': 3, 'Resources': 2, 'public': 0}
{'}\n': 28, ';': 27, ')': 6, '(': 5, 'Process': 19, '': 9, '{': 7, 'public': 0}
{'}\n': 71, ';': 70, ')': 47, '(': 39, 'Millis': 58, 'Time': 57, 'current': 56, '.': 55, 'System': 54, '': 53, '{': 48, 'time': 22, 'long': 21, 'public': 0}
{'}\n': 98, ';': 62, ')': 11, '(': 6, '.': 51, 'return': 63, 'msg': 30, '{': 12, '': 7}
{'}\n': 98, ';': 48, ')': 31, 'Id': 30, 'step': 29, ',': 17, 'URIs': 25, 'volume': 24, 'Params': 16, 'zoning': 15, '(': 6, 'Delete': 86, 'Masks': 85, 'Export': 3, 'Zone': 83, 'do': 82, 'return': 81, 'Display': 67, 'Group': 66, 'get': 43, '.': 42, 'Param': 13, 'STR': 59, '_': 45, 'format': 56, 'String': 28, '': 7, 'info': 51, '_log': 49, 'NUM': 46, '=': 39, 'Zoning': 12, 'Network': 11, '{': 32, '>': 14, 'URI': 22, '<': 9, 'Collection': 19, 'List': 8, 'zone': 2, 'boolean': 1, 'public': 0}
{'}\n': 56, ';': 22, ')': 4, 'alignment': 34, '(': 3, 'if': 6, '.': 16, '{': 5}
{'}\n': 116, '}': 115, ';': 43, ')': 21, 'y': 20, '-': 108, ',': 11, 'x': 17, '(': 7, 'translate': 84, '.': 33, 'gfx': 73, 'height': 101, 'width': 99, 'jc': 53, 'paint': 5, 'painter': 25, 'g': 14, 'D': 72, 'Graphics2': 71, '': 1, '=': 26, 'null': 48, ':': 67, 'c': 10, 'JComponent': 52, '?': 61, 'instanceof': 57, '{': 22, '!=': 47, 'if': 44, 'key': 41, '+': 37, 'STR': 39, '_': 38, 'prefix': 36, 'get': 34, 'UIManager': 32, 'Painter': 24, 'int': 16, 'Graphics': 13, 'Component': 9, 'Icon': 6, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 212, ';': 76, 'return': 207, '}': 206, ')': 19, '(': 15, 'add': 187, '.': 82, 'get': 169, 'rs': 91, ',': 9, '>': 12, '': 1, 'String': 8, '<': 3, 'Map': 5, 'Hash': 111, 'new': 109, '=': 80, '{': 23, 'next': 93, 'while': 89, 'List': 2, 'SQLException': 22, 'throws': 20}
{'}\n': 72, ';': 70, '.': 32, 'STR': 36, '_': 35, '==': 48, ')': 9, 'NUM': 46, '(': 5, 'At': 43, 'char': 42, 'name': 25, '&&': 29, '{': 10, '': 6, 'is': 3, 'public': 0}
{'}\n': 98, '}': 97, ';': 96, ')': 16, '(': 7, '.': 24, 'View': 10, 'Scroll': 46, 'scroll': 11, '{': 17, '': 8}
{'}\n': 288, ';': 19, 'return': 285, ')': 7, '}': 153, '(': 41, '': 1, 'new': 106, '{': 11, 'if': 86, 'null': 24, '!=': 66, '.': 59, 'read': 138, 'zis': 16, '=': 17, 'Stream': 15, 'Manifest': 89, 'name': 77, 'Entry': 62, 'Next': 61, 'get': 60, 'while': 53, 'jar': 42, 'BOOL': 30, '_': 29, 'boolean': 26, 'Input': 14, 'Zip': 13, 'IOException': 10, 'throws': 8, 'Jar': 5}
{'}\n': 35, '}': 34, ';': 33, ')': 6, '(': 5, '.': 27, '{': 7, '': 10, 'new': 14, ':': 13, 'movie': 12, 'Movie': 11, 'for': 8, 'void': 1, 'public': 0}
{'}\n': 52, ';': 27, ')': 11, '(': 14, '.': 44, '}': 28, '{': 12, 'NUM': 18, '_': 17, 'prob': 10, '||': 19, 'if': 13, 'double': 9, 'public': 0}
{'}\n': 147, ';': 63, ')': 20, '(': 9, 'Array': 27, 'Byte': 26, 'to': 141, '.': 140, 'Stream': 29, 'Output': 28, 'byte': 1, 'return': 135, 'content': 19, 'Name': 14, 'Jar': 5, '': 11, 'new': 35, '=': 34, '{': 24, 'IOException': 23, 'throws': 21, 'String': 12, 'final': 10, ',': 15, 'Content': 8, 'From': 6, 'create': 4, ']': 3, '[': 2, 'public': 0}
{'}\n': 267, ';': 243, 'BOOL': 232, '_': 231, 'return': 230, ')': 61, '(': 47, 'set': 249, '}': 244, '.': 159, '||': 176, 'm': 164, '!=': 126, 'if': 91, '{': 80, 'day': 60, 'Day': 58, 'boolean': 15}
{'}\n': 63, ';': 42, '{': 8, ')': 7, 'null': 47, '(': 29, 'if': 43, 'V': 5, '': 4, '>': 26, '<': 23, 'List': 22, 'public': 0}
{'}\n': 119, ';': 64, ')': 38, 'Option': 27, 'default': 36, ',': 13, 'options': 50, 'item': 16, 'description': 20, 'Class': 12, 'str': 11, '(': 8, 'Details': 7, 'Item': 6, 'message': 5, '}': 101, ']': 25, 'i': 68, '[': 24, 'msg': 26, 'Number': 33, 'put': 86, '.': 61, '{': 39, '++': 81, 'length': 62, '<': 43, 'NUM': 71, '_': 70, '=': 51, 'int': 29, 'for': 65, '>': 49, 'Map': 42, 'Hash': 41, '': 9, 'new': 52, 'String': 10, 'Integer': 45, 'void': 4, 'public': 3}
{'}\n': 19, ';': 18, ')': 10, 'listener': 9, '(': 4, 'add': 2, '.': 13, 'listeners': 12, '{': 11, 'Listener': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 240, ';': 62, ')': 27, '(': 4, 'Completed': 234, 'ensure': 233, '.': 37, 'LOG': 36, '': 5, '}': 166, 'Processed': 223, 'increment': 222, ',': 12, 'iditer': 67, 'Double': 23, 'put': 211, 'NUM': 105, '_': 48, 'ks': 109, 'double': 114, 'Value': 174, 'continue': 164, '{': 28, 'neighbor': 126, 'equal': 156, 'DBIDUtil': 154, 'if': 151, 'advance': 84, '<': 7, '&&': 139, 'valid': 78, 'iter': 71, 'neighbors': 92, '=': 34, 'for': 63, 'int': 108, '+': 103, 'DBID': 98, 'KNNFor': 97, 'get': 96, 'knn': 19, 'KNNList': 91, 'final': 89, 'DBIDs': 72, 'relation': 11, 'DBIDIter': 66, 'null': 61, ':': 60, 'size': 53, 'STR': 49, 'Progress': 31, 'Finite': 30, 'new': 43, '?': 42, 'Verbose': 39, 'is': 38, 'pdists': 26, 'Store': 25, 'Data': 24, 'Writable': 22, '>': 10, 'O': 9, 'KNNQuery': 14, 'Relation': 6, 'compute': 2, 'protected': 0}
{'}\n': 47, ';': 26, ')': 6, '(': 2, '.': 11, 'Stream': 14, 'get': 12, 'process': 5, 'Input': 13, '{': 7, 'Process': 4, '': 3}
{'}\n': 155, '}': 47, ';': 21, '_': 19, '{': 13, ')': 12, '(': 6, '.': 25, '': 7, '=': 18, 'BOOL': 96, 'STR': 20, '+': 38, 'Method': 17, 'class': 16, 'debug': 24, 'NUM': 68, 'length': 63, 'null': 55, '==': 54, 'message': 26, 'Enabled': 27, 'if': 22, 'String': 8, 'static': 1}
{'}\n': 23, ';': 22, ')': 13, '(': 4, 'add': 17, '.': 16, 'children': 15, '{': 14, 'Predicate': 10, 'Query': 9, '': 8, 'With': 3, 'and': 2, 'void': 1, 'public': 0}
{'}\n': 115, ';': 39, 'total': 42, '.': 41, 'this': 40, '(': 4, 'all': 75, ')': 21, 'int': 10, 'rng': 7, 'MMRandom': 6, '': 5, 'public': 0}
{'}\n': 217, ';': 117, 'return': 214, '}': 118, '{': 39, ')': 36, '(': 69, '': 17, '=': 176, '.': 126, 'Options': 22, '_': 114, 'if': 60, 'boolean': 9}
{'}\n': 51, '}': 27, '{': 11, ')': 10, 'ignored': 46, 'Exception': 33, '': 7, '(': 5, 'catch': 28, ';': 26, 'rethrown': 34, 'throw': 37, 'Runtime': 32, 'close': 3, '.': 22, 'closeable': 9, 'try': 19, 'null': 16, '!=': 15, 'if': 12, 'Closeable': 8, 'Quietly': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 44, '}': 32, '{': 20, ')': 19, 'e': 39, 'Exception': 38, 'Interrupted': 37, '': 36, '(': 16, 'catch': 33, ';': 31, 'put': 25, '.': 24, 'queue': 23, 'try': 21, 'void': 2, 'public': 0}
{'}\n': 69, ';': 68, 'min': 8, '+': 47, ')': 12, '-': 44, 'max': 11, '(': 6, '.': 36, 'random': 22, 'return': 14, '{': 13, 'int': 2, ',': 9, 'static': 1, 'public': 0}
{'}\n': 95, ';': 22, ')': 6, '(': 5, 'Open': 81, 'is': 80, '.': 17, 'iter': 10, '!': 77, 'True': 61, 'assert': 60, '}': 73, '{': 7, 'iterator': 18, 'm_data': 16, 'Striterator': 9, '': 8, 'new': 12, '=': 11, 'test_simple': 2, 'void': 1, 'public': 0}
{'}\n': 30, '}': 29, ';': 28, ')': 11, 'list': 10, '(': 5, 'add': 24, '.': 23, 'Queue': 17, 'List': 4, 'draw': 15, '{': 12, 'synchronized': 13, 'Ge': 8, 'Psp': 7, '': 6, 'Draw': 3, 'push': 2, 'void': 1, 'public': 0}
{'}\n': 222, '}': 221, ';': 64, ')': 63, 'task': 209, '': 6, '(': 62, '.': 123, 'get': 124, 'mirror': 119, '=': 109, '{': 44, 'Id': 74, 'String': 32, 'Volume': 7, 'List': 4, 'Task': 3}
{'}\n': 14, ';': 13, 'STR': 12, '_': 11, 'return': 10, '{': 9, ')': 8, '(': 7, 'Text': 6, 'Tip': 5, 'String': 2, '': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 9, 'listener': 8, '(': 4, 'add': 2, '.': 12, 'listeners': 11, '{': 10, 'Listener': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 5, '(': 13, 'Streams': 12, 'close': 2, '.': 10, 'Util': 9, 'Carbon': 8, '': 7, '{': 6, 'Stream': 3, 'void': 1, 'public': 0}
{'}\n': 85, ';': 84, ')': 14, '(': 3, '-': 62, 'NUM': 61, '_': 60, 'pow': 48, '.': 47, 'Math': 46, '': 7, '{': 15, 'N': 13, 'int': 11, ',': 10, 'f': 9, 'F': 8, 'double': 1, 'public': 0}
{'}\n': 87, ';': 86, ')': 45, '(': 10, '.': 67, '': 2, 'series': 21, ']': 16, '[': 15, 'public': 0}
{'}\n': 166, ';': 26, 'return': 96, '+=': 160, ')': 17, ',': 11, 'off': 13, 'b': 8, '(': 6, 'arraycopy': 146, '.': 40, 'System': 144, '': 19, '}': 86, 'NUM': 33, '_': 32, '{': 21, 'if': 27, '=': 124, 'len': 16, '==': 91, 'else': 87, 'Exception': 82, 'Bounds': 81, 'Of': 80, 'Out': 79, 'Index': 78, 'new': 76, 'throw': 75, '<': 31, '+': 54, '||': 35, 'length': 41, '>': 38, 'Open': 23, 'ensure': 22, 'IOException': 20, 'throws': 18, 'int': 4, ']': 10, '[': 9, 'read': 5}
{'}\n': 46, ';': 45, ')': 21, 'Relation': 18, 'word': 19, ',': 11, '(': 6, 'length': 37, '.': 28, 'String': 8, 'number': 9, 'Index': 14, 'start': 13, 'substring': 29, 'Number': 4, 'expand': 3, '{': 22, 'Word': 17, '': 7, 'int': 12, 'At': 5, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 156, '}': 114, ')': 20, '(': 19, '.': 56, 'e': 119, 'Exception': 126, '': 24, 'new': 91, 'throw': 122, '{': 32, 'IOException': 118, 'catch': 115, ';': 80, 'BOOL': 100, '_': 68, ',': 98, 'File': 72, 'Writer': 94, 'try': 82, 'STR': 69, '+': 70, 'LOG': 55, 'is': 57, 'if': 45, 'public': 3}
{'}\n': 67, ';': 38, ')': 21, '(': 6, 'is': 62, '.': 51, 'remove': 52, '{': 48, 'get': 32, '>': 12, '': 16}
{'}\n': 81, ';': 71, ')': 20, '(': 55, '.': 48, 'Accept': 16, 'is': 26, 'return': 22, '{': 21, 'public': 0}
{'}\n': 161, ';': 140, ')': 96, 'URI': 32, '(': 9, '.': 131, 'base': 129, '': 2, '{': 100, ',': 14}
{'}\n': 57, ';': 23, 'index': 32, ')': 8, '(': 4, 'NUM': 35, '_': 34, '.': 17, 'msg': 16, 'get': 18, '{': 9, '': 5, 'static': 1, 'public': 0}
{'}\n': 139, ';': 39, 'return': 135, ')': 11, '(': 5, '{': 12, 'i': 66, 'NUM': 71, '_': 21, '=': 47, 'int': 65, 'for': 63, '.': 49, 'if': 13, 'other': 10, 'boolean': 1, 'public': 0}
{'}\n': 71, ';': 29, 'return': 21, '}': 66, ')': 12, '(': 8, 'uuid': 11, 'Uuid': 5, '.': 46, '=': 44, '_': 38, 'if': 14, '{': 20, 'null': 18, '==': 17, '': 2, 'static': 1}
{'}\n': 49, ';': 39, ')': 16, '(': 4, '.': 42, 'vm': 7, '=': 24, '': 5, 'public': 0}
{'}\n': 59, ';': 50, ')': 13, '(': 4, 'visit': 54, '.': 19, 'v': 8, '}': 51, 'String': 34, 'Generic': 44, 'to': 43, ',': 9, 'STR': 39, '_': 38, 'format': 36, '': 5, 'Line': 31, 'log': 30, 'Log': 18, '{': 14, 'On': 22, 'Logging': 21, 'is': 20, 'if': 15, 'Visitor': 7, 'Class': 6, 'To': 3, 'apply': 2, 'void': 1, 'private': 0}
{'}\n': 185, ';': 62, ')': 8, 'Number': 136, 'b': 64, '(': 7, 'To': 4, 'compare': 177, '.': 176, 'a': 11, ',': 19, 'NUM': 18, '_': 17, 'Equals': 169, 'assert': 168, 'Bytes': 12, 'Sign': 118, 'Integer': 134, 'Big': 133, '': 132, 'new': 138, '=': 15, 'int': 116, '}': 61, '-': 26, '{': 9, ']': 14, '[': 13, 'byte': 10, 'Equal': 5, 'Compare': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 240, '}': 239, ';': 147, ')': 84, '(': 87, '.': 184, '{': 103, 'Null': 122, '': 59, 'null': 96, '==': 95, 'observer': 74, 'if': 86, 'Observer': 55, 'void': 1, 'public': 0}
{'}\n': 53, ';': 52, ')': 25, '.': 45, '': 1, ',': 38, 'URI': 16, 'Session': 10, 'snap': 14, '(': 11, 'Snapshot': 9, 'Targets': 22, 'public': 0}
{'}\n': 79, ';': 22, 'return': 75, '}': 74, ')': 8, '(': 4, 'Sym': 69, 'get': 68, '.': 30, 'de': 47, 'next': 56, 'i': 27, 'Edge': 46, 'Directed': 45, '': 1, '=': 15, '{': 43, 'Next': 38, 'has': 37, 'iterator': 31, 'Iterator': 26, 'for': 23, 'List': 2, 'new': 16}
{'}\n': 87, ';': 86, ')': 46, 'chr': 37, '(': 26, '.': 57, '{': 55, 'public': 6, 'Override': 5, '': 4, '@': 3}
{'}\n': 19, ';': 18, ')': 10, 'items': 9, '(': 5, 'add': 2, '.': 13, '{': 11, 'void': 1}
{'}\n': 20, ';': 19, ')': 8, 'STR': 17, '_': 16, '(': 7, 'Property': 14, 'get': 13, '.': 12, 'properties': 11, 'return': 10, '{': 9, 'Url': 6, 'documentation': 3, 'String': 2, '': 1, 'public': 0}
{'}\n': 117, ';': 77, ')': 32, '(': 6, '': 14, 'new': 98, 'File': 15, '}': 78, '.': 45, 'static': 1, 'public': 0}
{'}\n': 50, ';': 17, ')': 11, 'listener': 10, '(': 5, 'remove': 2, '.': 27, 'Listeners': 43, '}': 39, 'ARGUMENT': 36, 'NULL_': 35, 'ERROR_': 34, '': 7, 'SWT': 26, 'error': 28, '{': 12, 'null': 22, '==': 21, 'if': 18, 'Widget': 14, 'check': 13, 'Listener': 4, 'Selection': 3, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 11, 'type': 7, '(': 3, '{': 12, 'Node': 6, 'Class': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 209, ';': 23, ')': 11, '(': 5, 'To': 205, 'forward': 204, 'Message': 183, 'get': 34, '.': 84, 'e': 177, ',': 91, 'STR': 193, '_': 21, 'ERROR': 190, 'TYPE_': 189, '': 6, 'CCAlert': 186, 'Alert': 182, 'Inline': 181, 'set': 180, '{': 17, 'Exception': 16, 'AMConsole': 175, 'catch': 172, '}': 171, 'Entity': 141, 'model': 27, 'REALM': 135, 'CURRENT_': 134, 'Constants': 131, 'AMAdmin': 130, 'Attribute': 69, 'Session': 68, 'Page': 67, 'String': 58, '=': 20, 'Values': 81, 'prop': 42, 'values': 98, 'Map': 79, 'BOOL': 22, 'try': 76, 'ATTRIBUTE': 54, 'PROPERTY_': 53, 'Child': 50, 'Sheet': 41, 'AMProperty': 40, 'Model': 14, 'Entities': 25, 'Cycle': 19, 'submit': 18, 'Control': 15, 'throws': 12, 'event': 10, 'Event': 9, 'Invocation': 8, 'Request': 4, 'Button1': 3, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 450, ';': 160, ')': 125, '(': 7, '.': 197, 'Math': 387, '': 2, '}': 419, 'null': 410, 'return': 409, '{': 126, 'RESOLUTION': 406, 'MINIMUM_': 405, 'Vector': 402, '<': 400, 'if': 384, '*': 200, '-': 184, '=': 131, 'double': 49, 'final': 8, 'Longitude': 77, 'cos': 63, 'sin': 50, 'Latitude': 51, ',': 13, 'point': 12, 'Point': 11, 'Geo': 10, 'static': 1, 'private': 0}
{'}\n': 90, ';': 23, ')': 9, '(': 5, 'right': 15, '.': 14, 'x': 8, 'height': 59, ',': 75, 'left': 22, 'max': 67, 'Math': 65, '': 1, '+': 42, 'NUM': 41, '_': 40, '=': 27, 'size': 38, '{': 10, 'Node': 2, 'private': 0}
{'}\n': 12, '{': 11, ')': 10, '(': 4, 'on': 2, 'void': 1, 'protected': 0}
{'}\n': 43, ';': 28, ')': 19, 'agent': 13, '(': 4, 'add': 37, '.': 22, '{': 20, '': 1}
{'}\n': 31, ';': 30, ')': 7, '(': 3, 'Default': 18, 'get': 17, '.': 16, 'Locale': 23, '': 1, ',': 12, 'Zone': 15, 'Time': 14, 'time': 6, 'this': 9, '{': 8, 'Date': 5, 'public': 0}
{'}\n': 72, ';': 71, ')': 39, 'attr': 54, '(': 6, '.': 46, '{': 40, 'Attribute': 3, '': 15, 'public': 0}
{'}\n': 54, '}': 37, ';': 25, ')': 8, '(': 4, 'Trace': 49, 'Stack': 48, 'print': 47, '.': 46, 'e': 42, '{': 9, 'IOException': 41, '': 1, 'catch': 38, 'os': 15, 'Stream': 14, 'Output': 13, 'Buffered': 30, 'new': 28, '=': 16, 'out': 26, 'try': 10, 'Out': 3, 'Binary': 2, 'public': 0}
{'}\n': 54, '}': 41, ';': 28, 'BOOL': 51, '_': 50, 'return': 31, '{': 12, ')': 11, 'e': 46, 'IOException': 45, '': 7, '(': 6, 'catch': 42, 'File': 5, 'New': 36, 'create': 3, '.': 17, 'target': 9, 'try': 29, 'delete': 25, 'exists': 18, 'if': 13, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 183, ';': 18, ')': 6, '(': 5, 'signum': 178, '.': 98, 'result': 94, ',': 68, 'NUM': 16, '_': 15, 'STR': 171, 'Equals': 168, 'assert': 150, '}': 17, ']': 12, 'i': 134, '[': 11, 'Bytes': 10, 'r': 45, '==': 158, 'res': 106, 'True': 151, '{': 7, '++': 147, 'length': 117, '<': 140, '=': 13, 'int': 30, 'for': 131, 'Array': 127, 'Byte': 126, 'to': 125, 'byte': 8, 'new': 61, 'Number': 59, 'b': 20, 'or': 99, 'a': 9, 'Integer': 57, 'Big': 56, '': 55, 'Sign': 32, 'Zero': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 64, ';': 29, ')': 18, '(': 31, 'Update': 60, 'execute': 2, '.': 58, 'statement': 43, '}': 55, '++': 53, 'No': 25, 'bind': 24, 'c': 34, ',': 13, 'Value': 41, 'Column': 10, 'set': 39, '{': 22, 'columns': 12, ':': 35, '': 6, 'for': 30, 'NUM': 28, '_': 27, '=': 26, 'int': 1, 'SQLException': 21, 'throws': 19, '>': 11, '<': 8, 'List': 7, 'Prepare': 3, 'protected': 0}
{'}\n': 324, ';': 323, ')': 160, '(': 62, '': 4, 'new': 249, ',': 242, 'this': 228, '{': 161, 'Authority': 87, 'Token': 13, 'public': 0}
{'}\n': 32, '}': 31, ';': 30, ')': 10, '(': 6, 'Exception': 27, '': 7, 'new': 23, 'throw': 22, '{': 11, 'Empty': 5, 'is': 16, '.': 15, 'string': 9, 'if': 12, 'String': 8, 'Not': 4, 'check': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 27, '}': 26, ';': 25, ')': 6, '(': 5, 'Now': 22, 'shutdown': 21, '.': 20, 'Executor': 12, 'Task': 11, 'unnamed': 10, '{': 7, 'null': 14, '!=': 13, 'if': 8, 'void': 1, 'public': 0}
{'}\n': 316, '}': 34, ';': 33, 'escaped': 36, 'return': 237, ':': 52, 'STR': 31, '_': 21, 'case': 49, ')': 6, 'NUM': 22, ',': 92, '(': 5, '': 8, '+=': 159, 'pos': 13, '=': 37, 'Error': 28, 'syntax': 27, 'throw': 26, '{': 10, 'Buffer': 19, 'fill': 18, '!': 17, '&&': 16, 'limit': 15, '>': 59, '+': 56, 'if': 11, 'switch': 44, ']': 42, '++': 41, '[': 39, 'buffer': 38, 'char': 1, '==': 14, 'IOException': 9, 'throws': 7, 'Character': 4, 'Escape': 3, 'read': 2, 'private': 0}
{'}\n': 132, ';': 36, ')': 22, 'Duration': 103, 'fix': 2, '+': 127, 'STR': 126, '_': 125, ',': 12, 'TAG': 123, '': 7, '(': 6, 'd': 120, '.': 30, 'Fix': 26, 'start': 25, '-': 113, 'Millis': 33, 'Time': 32, 'current': 31, 'System': 29, '=': 27, 'long': 24, '}': 84, 'Spec': 16, 'Measure': 15, 'height': 19, 'width': 14, 'String': 9, 'To': 88, 'fallback': 87, '{': 23, 'else': 85, 'result': 40, 'builder': 11, 'Spaces': 5, 'Unneeded': 68, 'remove': 67, 'fixed': 64, 'if': 60, 'Fixed': 47, 'Until': 46, 'Spans': 45, 'Around': 44, 'add': 42, 'Result': 39, 'Fixing': 38, 'int': 13, 'Builder': 10, 'Spannable': 8, 'With': 4, 'Spanned': 3, 'void': 1, 'private': 0}
{'}\n': 447, ';': 17, ')': 6, 'Strategy': 414, 'Comparison': 416, 'experiment': 352, '(': 5, 'Serialization': 439, 'set': 8, '.': 37, 'STR': 28, '_': 14, ',': 52, 'Exclusion': 413, 'Name': 397, 'Default': 411, '': 1, 'new': 21, '=': 20, 'UUID': 403, 'random': 405, '+': 401, 'QBO': 400, 'application': 396, 'label': 389, 'NUM': 15, 'Percent': 382, 'sampling': 381, 'Plus3': 191, 'tomorrow': 146, 'Time': 68, 'end': 373, 'yesterday': 58, 'start': 365, 'Experiment': 355, 'create': 358, 'Factory': 356, '+=': 74, 'get': 38, 'cal': 33, 'format': 63, 'Format': 19, 'date': 18, '-': 53, 'DATE': 51, 'Calendar': 32, 'add': 45, 'Instance': 39, 'today': 102, 'Date': 24, 'Simple': 23, 'Limit': 12, 'Length': 11, 'Log': 10, 'Response': 9, '{': 7, 'Test': 4, 'Integration': 3, 'public': 0}
{'}\n': 44, ';': 43, ')': 40, '(': 5, 'Metric': 3, '.': 27, ',': 10, '': 1, '?': 14, '<': 13}
{'}\n': 18, ';': 17, ')': 8, 'point': 7, '(': 4, 'contains': 13, '.': 12, 'return': 10, '{': 9, 'Point': 6, '': 5, 'Inside': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 48, ';': 38, ')': 9, 'Loader': 7, '(': 4, ',': 35, 'load': 27, '.': 26, 'Service': 24, '': 5, '=': 22, 'service': 20, '>': 19, '<': 14, '{': 10, 'Class': 6, 'void': 1, 'private': 0}
{'}\n': 235, ';': 32, 'return': 231, ')': 12, '(': 11, '.': 53, '': 2, '{': 13, 'Exception': 206, 'Socket': 205, 'catch': 202, '}': 198, 'add': 193, '!': 170, '&&': 178, 'Address': 132, 'Loopback': 174, 'is': 121, 'if': 80, '=': 23, 'Addresses': 141, 'Inet': 131, 'get': 54, '>': 20, '<': 4, 'Enumeration': 34, 'Interface': 38, 'Network': 37, 'null': 85, '!=': 84, 'Interfaces': 56, 'List': 15, 'Array': 26, 'new': 24, 'static': 1, 'public': 0}
{'}\n': 149, ';': 34, 'return': 144, '}': 143, 'Ratio': 86, 'width': 107, 'height': 85, '=': 29, 'Size': 47, 'Sample': 46, 'in': 45, ')': 24, '(': 53, 'float': 99, '.': 12, 'Math': 89, '': 9, 'int': 3, '/': 97, '{': 82, 'W': 55, '>': 78, 'NUM': 50, '_': 49, 'H': 61, 'if': 52, 'Width': 42, 'out': 32, 'options': 15, 'Height': 33, 'Options': 14, 'Factory': 11, 'Bitmap': 10}
{'}\n': 20, ';': 19, ')': 10, 'status': 9, '(': 4, '.': 14, 'statuses': 13, 'return': 12, '{': 11, '': 6, 'Status': 3, 'boolean': 1, 'public': 0}
{'}\n': 65, ';': 64, 'STR': 13, '_': 12, '+': 14, 'return': 11, '{': 10, ')': 9, 'String': 7, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 82, '}': 81, ';': 36, ')': 11, '': 6, '.': 19, 'Event': 68, ',': 56, 'Map': 4, 'channel': 9, '(': 5, 'Channel': 3, 'new': 64, 'broadcast': 62, 'index': 57, 'this': 55, 'Interval': 52, 'fire': 51, 'Maps': 18, 'm': 16, '{': 12, 'contains': 20, 'if': 13, 'void': 1, 'public': 0}
{'}\n': 51, ';': 50, ')': 17, 'o': 16, '(': 6, 'offer': 31, '{': 18, 'E': 8, '': 1, 'add': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 28, ';': 27, ')': 13, ',': 9, 'key': 8, '(': 5, '.': 19, 'return': 15, '{': 14, 'value': 12, 'Object': 2, '': 1, 'put': 3, 'public': 0}
{'}\n': 248, ';': 29, ')': 10, ']': 5, '(': 9, 'size': 242, '.': 50, 'merged': 216, '[': 4, 'Range': 3, '': 1, 'new': 21, 'Array': 87, 'to': 232, 'return': 68, 'List': 88, 'range': 94, 'Ranges': 223, 'merge': 222, '=': 20, '>': 93, '<': 89, 'parse': 6, 'add': 155, 'pos': 110, 'substring': 132, 'Word': 33, 'next': 32, 'String': 31, '}': 83, ',': 39, 'STR': 55, '_': 40, 'Of': 52, 'index': 51, 'Pos': 46, 'comma': 45, 'NUM': 65, '+': 164, 'set': 143, '{': 15, '-': 63, '!=': 119, 'while': 115, 'int': 44, '==': 62, 'if': 58, 'BOOL': 41, 'validator': 19, 'consume': 35, 'Validator': 18, 'Char': 25, 'Set': 24, 'Message': 23, 'Character': 17, 'Exception': 14, 'Decoding': 13, 'throws': 11, 'public': 0}
{'}\n': 86, ';': 50, ')': 19, '(': 27, 'to': 12, 'value': 28, '}': 51, 'return': 48, '{': 20, 'null': 44, '==': 43, 'if': 25, '': 10, 'String': 11}
{'}\n': 132, ';': 63, ')': 29, 'Task': 4, '(': 5, '': 6, '.': 40, '_': 35, '{': 30, 'new': 23}
{'}\n': 55, ';': 41, ')': 7, '(': 6, 'mkdir': 51, '.': 21, 'dir': 12, '||': 48, 'exists': 45, 'return': 42, 'NAME': 38, 'COMPANY_': 30, '': 10, 'Constants': 27, 'Directory': 5, 'get': 22, 'Helper': 20, 'Config': 19, 'File': 11, 'new': 14, '=': 13, 'final': 9, '{': 8, 'create': 3, 'boolean': 2, 'static': 1, 'private': 0}
{'}\n': 235, ';': 45, 'BOOL': 84, '_': 83, '=': 82, 'Status1': 230, 'In': 229, 'error': 228, ')': 7, 'Address': 224, 'node': 58, '(': 6, 'String': 208, 'to': 220, '.': 51, 'Integer': 218, '': 217, '+': 213, 'STR': 211, 'get': 52, 'rb': 205, 'Text': 183, 'set': 65, 'Text1': 200, 'status': 179, 'Status3': 196, 'std': 185, 'Text3': 190, 'Status2': 186, 'Text2': 180, 'Visible': 101, 'Static': 170, 'Addr': 158, 'Field': 159, 'Button': 3, 'cancel': 147, 'update': 2, 'done': 127, 'delete': 117, 'edit': 86, 'add': 97, 'null': 95, 'Node': 50, 'cur': 49, 'Mode': 87, 'changed': 80, 'Parameters': 76, '}': 73, 'Type': 54, '{': 8, '!=': 57, 'if': 47, 'Performed': 5, 'Action': 4, 'void': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 10, '(': 9, 'iterator': 16, '.': 15, 'List': 14, 'return': 12, '{': 11, 'Iterator': 2, '>': 6, '': 1, '<': 3, 'public': 0}
{'}\n': 44, ';': 21, ')': 8, '(': 7, 'Size': 3, '{': 9, 'void': 1}
{'}\n': 187, ';': 61, ')': 22, ',': 179, '(': 16, 'i': 96, '': 8, '=': 65, ']': 118, '[': 116, 'indexes': 115, '{': 23, '++': 106, 'len': 64, '<': 102, 'NUM': 99, '_': 98, 'int': 63, 'for': 93, 'new': 83, 'Oid': 79, 'Snmp': 9, 'length': 68, '.': 67, 'final': 62, 'Data': 20}
{'}\n': 41, ';': 35, ')': 8, '(': 4, 'Components': 37, 'init': 36, 'MODAL': 33, 'DOCUMENT_': 32, '': 1, '.': 19, 'Type': 29, 'Modality': 28, ',': 17, 'STR': 24, '_': 23, 'String': 21, 'get': 20, 'res': 18, 'parent': 7, 'super': 14, '{': 13, 'JFrame': 6, 'Strength': 3, 'public': 0}
{'}\n': 63, ';': 62, ')': 39, 'NUM': 56, '_': 55, '(': 15, 'sep': 24, '': 8}
{'}\n': 32, ';': 23, ')': 8, '(': 3, 'Changed': 28, 'Set': 27, 'Data': 26, 'notify': 25, '}': 24, 'object': 7, '.': 18, 'List': 17, 'm': 12, '{': 9, 'Lock': 13, 'synchronized': 10, 'T': 6, '': 5, 'final': 4, 'void': 1, 'public': 0}
{'}\n': 328, ';': 38, 'return': 325, ')': 37, 'block': 123, '(': 6, 'Block': 307, 'clear': 319, '_': 63, ']': 176, '[': 224, 'Len': 33, 'h': 32, ',': 26, 'NUM': 64, '-': 31, 'length': 30, '.': 20, '}': 81, 'i': 207, '{': 17, '++': 220, '!=': 213, '=': 208, 'int': 206, 'for': 204, 'arraycopy': 59, 'System': 57, '': 56, 's': 35, 'Dash': 25, 'm': 24, 'Final': 22, 'do': 21, 'Digest': 19, 'content': 18, 'Signature': 5, 'public': 0}
{'}\n': 388, ';': 236, ')': 40, 'NUM': 65, '_': 64, '+': 165, '(': 10, '/': 140, '.': 213, 'Math': 211, '': 210, '*': 83, ',': 233, 'Util': 212, 'dim': 36, '=': 63, 'double': 2, 'int': 25}
{'}\n': 81, '}': 80, ';': 46, ')': 15, ',': 10, '': 7, '(': 6, '.': 25, '{': 16, 'Intent': 34, '=': 36, 'intent': 35, 'null': 21, 'context': 9, 'if': 17, 'Context': 8, 'open': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 126, '}': 99, ';': 25, ')': 8, 'int': 2, '(': 4, 'return': 100, '{': 9, 'else': 117, 'NUM': 35, '_': 34, '>': 32, '+': 49, 'shift': 42, 'Mantissa': 74, 'extended': 73, '-': 46, '=': 13, '<': 87, 'bits': 12, 'if': 58, '&': 36, '|': 78, '==': 67, 'Exp': 29, 'biased': 28, 'MAX_': 51, '': 14, 'final': 5, 'Bits': 21, 'Int': 20, 'Raw': 19, 'To': 18, 'float': 6, '.': 16, 'Float': 15, 'round': 3, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, 'text': 8, '(': 6, 'String': 18, 'to': 17, '.': 16, 'Integer': 15, '': 2, 'plain': 5, 'return': 11, '{': 10, 'Text': 4, 'Plain': 3, 'static': 1, 'public': 0}
{'}\n': 58, ';': 57, ')': 33, '(': 6, 'append': 37, '.': 36, 'builder': 12, '{': 34, 'Builder': 11, 'String': 10, '': 9}
{'}\n': 27, ';': 26, ')': 14, 'block': 13, ',': 9, '(': 5, 'identity': 20, 'description': 8, '{': 15, 'Block': 12, 'Unsafe': 11, '': 6, 'String': 7, 'void': 3, 'synchronized': 2, 'static': 1, 'public': 0}
{'}\n': 189, ';': 57, 'is': 65, 'return': 185, '}': 184, ')': 15, '(': 5, 'file': 9, '=': 50, '{': 16, '_': 35, 'if': 17, 'exists': 95, '.': 26, 'Dir': 49, 'File': 8, '': 7, 'Parent': 48, 'Empty': 66, 'Utils': 63, 'Text': 62, 'get': 53, 'String': 46, 'final': 6, 'STR': 36, 'Log': 25, 'null': 21, '==': 20, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 6, '(': 5, 'String': 2, 'to': 3, 'return': 8, '{': 7, '': 1, 'public': 0}
{'}\n': 604, '}': 119, ';': 118, ')': 42, ',': 298, '(': 7, 'put': 520, '.': 85, '_': 99, 'add': 474, 'Map': 513, 'Hash': 512, '': 8, 'new': 271, '=': 124, 'Name': 11, '+': 101, 'STR': 100, 'debug': 84, '{': 69, 'Enabled': 87, 'if': 82, 'Config': 225, 'org': 163, 'message': 86, 'String': 9, 'void': 2, 'private': 0}
{'}\n': 236, '}': 235, ';': 76, ')': 9, '(': 3, 'add': 230, '.': 49, '{': 13, 'NUM': 94, '_': 93, 'Short': 84, 'read': 2, 'in': 8, '=': 47, 'int': 14, '++': 102, 'i': 91, 'Count': 79, 'exn': 78, '<': 97, 'for': 88, 'Int': 51, 'length': 15, 'IOException': 12, '': 4, 'throws': 10, 'Parser': 7, 'Code': 6, 'Byte': 5, 'void': 1, 'public': 0}
{'}\n': 69, ';': 32, 'c': 5, ')': 6, 'char': 17, '(': 3, '=': 21, ']': 20, '++': 61, 'strpos': 10, '[': 19, 'str': 12, '}': 57, 'newstr': 18, 'length': 14, '.': 13, ',': 39, 'NUM': 30, '_': 29, 'arraycopy': 36, 'System': 34, '': 33, 'new': 22, '{': 7, '==': 11, 'if': 8, 'int': 4, 'String': 2, 'add': 1, 'void': 0}
{'}\n': 134, ';': 35, '(': 5, '.': 49, ')': 24, 'new': 50, '=': 46, '': 6, 'cover': 45, ',': 60, 'BOOL': 64, '_': 63, 'Covering': 57, 'get': 56, 'List': 17, 'Array': 37, 'Lists': 48, '>': 21, 'Id': 43, 'Cell': 42, 'S2': 41, '<': 18, '{': 25, 'Integer': 20, 'void': 1}
{'}\n': 53, '}': 52, ';': 38, 'null': 50, 'return': 35, ':': 34, 'default': 47, '': 36, 'NUM': 33, '_': 2, 'case': 31, '{': 13, ')': 12, 'Id': 7, 'field': 10, '(': 8, 'switch': 14, 'int': 9, 'Thrift': 6, 'By': 5, 'find': 4, 'Fields': 3, 'static': 1, 'public': 0}
{'}\n': 130, ';': 129, ')': 83, 'Location': 21, '(': 4, '.': 94, '{': 84, 'repository': 31, 'Repository': 20, '': 18, 'public': 0}
{'}\n': 195, '}': 190, ';': 76, 'Delta': 6, '(': 8, '.': 88, '': 145, '{': 47, ')': 46, 'NUM': 121, '_': 120, 'delta': 28, 'if': 48, ',': 13}
{'}\n': 17, ';': 16, 'return': 11, '{': 10, ')': 9, '(': 8, 'String': 5, 'to': 6, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 25, ';': 24, ')': 11, '(': 7, '.': 20, 'hmap': 19, 'return': 18, '{': 12, 'public': 0}
{'}\n': 57, 'coordinate': 31, '(': 5, '{': 20, ')': 19, ',': 15}
{'}\n': 13, ';': 12, 'STR': 11, '_': 10, 'return': 9, '{': 8, ')': 7, '(': 6, 'Text': 5, 'Tip': 4, 'String': 2, '': 1, 'public': 0}
{'}\n': 37, ';': 25, ')': 9, '(': 5, 'close': 33, '.': 32, 'reader': 16, 'Reader': 21, 'Buffered': 20, '': 1, 'new': 18, '=': 17, '{': 13, 'IOException': 12, 'throws': 10}
{'}\n': 52, '}': 25, ';': 24, 'def': 12, '{': 14, ')': 13, 'e': 45, 'Exception': 44, 'Format': 43, 'Number': 42, '': 7, '(': 6, 'catch': 39, 's': 9, 'parse': 3, '.': 31, 'try': 26, 'return': 22, 'null': 19, '==': 18, 'if': 15, ',': 10, 'String': 8, 'Default': 5, 'static': 1, 'public': 0}
{'}\n': 20, '{': 9, ')': 8, 'profile': 7, 'Profile': 6, '': 5, '(': 4}
{'}\n': 15, ';': 14, ')': 6, 'c': 5, '(': 3, 'print': 2, '.': 9, '{': 7, 'void': 1}
{'}\n': 113, '}': 112, ';': 57, ')': 48, ',': 92, 'Manager': 37, 'i': 53, '(': 9, 'get': 88, '.': 62, 'Tree': 83, 'Group': 82, 'Block': 21, 'build': 80, 'Factory': 78, '{': 70, '++': 68, 'size': 63, '<': 19, 'NUM': 56, '_': 55, '=': 54, 'int': 52, 'for': 50, 'Workspace': 42, 'Connection': 36, '': 17, '>': 22, 'List': 18, 'Views': 4, 'public': 0}
{'}\n': 54, '}': 53, ';': 18, ')': 11, 'null': 50, '!=': 49, 'key': 21, '(': 5, 'remove': 45, '.': 25, 'IDs': 35, 'Token': 34, 'map': 33, '=': 15, 'removed': 14, '{': 12, 'synchronized': 31, 'String': 20, 'to': 26, 'ID': 8, 'token': 9, '': 6, 'BOOL': 17, '_': 16, 'boolean': 13, 'SSOToken': 7, 'All': 3, 'clear': 2, 'void': 1, 'protected': 0}
{'}\n': 50, ';': 24, ')': 15, 'value': 14, '(': 6, 'Value': 45, 'With': 44, 'prepopulate': 43, 'Components': 39, 'init': 38, 'STR': 34, '_': 33, 'String': 31, 'get': 30, '.': 29, 'res': 28, 'Title': 26, 'set': 25, 'parent': 9, 'super': 20, '{': 19, 'IOException': 18, '': 1, 'throws': 16, ']': 13, '[': 12, 'byte': 11, ',': 10, 'JDialog': 8, 'Url': 5, 'Revocation': 4, 'DNetscape': 2, 'public': 0}
{'}\n': 34, ';': 33, ')': 16, 'name': 15, ',': 12, 'entity': 11, 'Message': 26, '_error': 25, '(': 8, 'format': 23, '.': 22, 'String': 10, '': 1, 'super': 18, '{': 17, 'Exception': 7, 'File': 4, 'public': 0}
{'}\n': 24, ';': 23, ')': 5, '(': 13, 'Streams': 12, 'close': 2, '.': 10, 'Util': 9, 'Carbon': 8, '': 7, '{': 6, 'Stream': 3, 'void': 1, 'public': 0}
{'}\n': 141, ';': 12, '}': 76, ')': 3, '(': 2, '.': 23, '{': 4, 'NUM': 27, '_': 26, 'i': 48, 'length': 43, 'a': 41, '=': 17, 'int': 19, 'for': 45, ']': 16, '[': 15, 'new': 18}
{'}\n': 322, ';': 21, ')': 10, '(': 6, 'parse': 4, '.': 26, 'hp': 279, 'return': 315, 'NUM': 20, '_': 19, ',': 89, 'STR': 88, 'Exception': 14, 'Parse': 13, '': 2, 'new': 82, 'throw': 81, 'null': 300, '==': 151, 'if': 148, 'String': 8, 'to': 290, 'buffer': 98, 'Parser': 278, 'create': 285, 'Factory': 283, '=': 18, 'Header': 277, 'append': 171, 'i': 112, 'Start': 118, 'line': 117, 'substring': 175, 'header': 9, '}': 68, '++': 50, '{': 15, 'else': 193, '+': 106, 'c': 138, '||': 154, 'BOOL': 128, 'Line': 125, 'Of': 75, 'end': 23, '!': 163, 'At': 41, 'char': 40, '<=': 45, 'while': 36, 'boolean': 122, 'start': 17, 'int': 16, 'e': 78, 'Bounds': 76, 'Out': 74, 'Index': 73, 'Array': 72, 'catch': 69, '--': 66, 'try': 34, '-': 30, 'length': 27, 'throws': 11, 'SIPHeader': 3, 'public': 0}
{'}\n': 79, ';': 16, ')': 10, 'NUM': 22, '_': 21, '*': 74, 'output': 15, '(': 7, 'round': 71, '.': 49, 'Math': 48, '': 47, 'return': 67, '}': 39, '/': 20, 'pow': 50, 'float': 12, '=': 18, '{': 11, 'else': 40, 'input': 13, '<=': 27, 'if': 24, 'color': 9, ',': 14, 'int': 2, 'convert': 3, 'static': 1, 'private': 0}
{'}\n': 59, ';': 25, ')': 5, 'Id': 24, 'Run': 23, 'm': 15, ',': 53, 'Name': 17, 'Module': 16, '(': 4, 'record': 2, '.': 29, 'Client': 45, 'msg': 10, 'Log': 39, 'developer': 38, 'Diagnostic': 36, '': 8, 'add': 30, 'Messages': 28, 'Usage': 27, '+': 14, 'STR': 13, '_': 12, '=': 11, 'String': 9, 'final': 7, '{': 6, 'void': 1, 'public': 0}
{'}\n': 82, ';': 40, ')': 25, 'c': 14, '+': 77, 'Y': 11, '-': 57, 'p': 6, '(': 4, '*': 53, 'angle': 22, '.': 32, 'Math': 31, '': 30, 'X': 7, 'float': 1, 'return': 41, 'Degrees': 24, 'In': 23, 'Radians': 34, 'to': 33, '=': 29, 'double': 27, '{': 26, ',': 8, 'rotate': 2, 'static': 0}
{'}\n': 47, ';': 23, ')': 8, 'Word': 14, 'Case': 13, 'lower': 12, '(': 4, 'accept': 29, '.': 17, 'FSM': 27, 'suffix': 36, '&&': 35, 'prefix': 26, 'return': 24, 'Lower': 19, 'to': 18, 'word': 7, '=': 15, 'String': 6, '': 5, '{': 9, 'Pronounceable': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 98, '}': 97, ';': 16, 'ei': 28, '(': 5, ')': 10, ',': 79, 'create': 73, 'next': 38, '.': 37, 'it': 19, 'Intersection': 27, 'Edge': 26, '': 6, '=': 20, 'Next': 47, 'has': 46, 'Prev': 29, 'iterator': 21, 'Iterator': 18, 'Endpoints': 13, 'add': 12, 'List': 7, 'edge': 8, 'void': 1, 'public': 0}
{'}\n': 55, ';': 26, ')': 12, '(': 44, '>': 43, '': 1, '=': 20, 'Cache': 4, 'public': 0}
{'}\n': 58, ';': 35, 'Width': 9, 'max': 25, ')': 15, ',': 31, '(': 26, '.': 24, 'Math': 23, '': 22, '=': 21, '{': 16, 'Text': 4}
{'}\n': 27, ';': 25, ')': 15, 'b': 6, '(': 4, 'Enabled': 21, 'set': 20, '.': 19, 'Item': 18, '{': 16, 'boolean': 5, 'enable': 2, 'void': 1, 'public': 0}
{'}\n': 52, ';': 36, 'BOOL': 50, '_': 18, '=': 48, 'Zoom': 47, 'auto': 46, ')': 9, 'e': 8, '(': 4, 'mouse': 2, '.': 15, 'super': 38, '}': 37, 'STR': 19, '+': 32, 'ID': 29, 'get': 28, 'output': 26, 'Debug': 14, '': 5, '{': 10, 'debugging': 16, 'if': 11, 'Event': 7, 'Mouse': 6, 'void': 1, 'public': 0}
{'}\n': 153, ';': 152, ')': 20, 'page': 12, '.': 69, 'NUM': 96, '_': 95, '(': 7, '{': 29, 'Page': 9, '': 8}
{'}\n': 32, ';': 28, 'this': 30, 'return': 29, ')': 12, 'ids': 11, '(': 7, 'All': 17, 'add': 5, '.': 15, 'values': 14, '{': 13, 'String': 9, '': 1, 'Ids': 2, 'Builder': 4, 'Query': 3, 'public': 0}
{'}\n': 102, '}': 79, ';': 31, ')': 15, 'mon': 47, '+': 74, 'STR': 42, '_': 41, 'OK': 93, '': 4, '(': 3, 'println': 70, '.': 26, 'out': 23, '{': 19, 'else': 80, 'ERROR': 73, 'null': 54, '==': 64, 'if': 61, 'UNITS': 58, 'DEFAULT_': 57, ',': 9, 'label': 34, 'Mon': 50, 'remove': 49, '=': 24, 'Monitor': 46, 'Parameter': 39, 'get': 27, 'request': 8, 'String': 33, 'Writer': 22, 'response': 14, 'Print': 21, 'IOException': 18, 'throws': 16, 'Response': 13, 'Servlet': 6, 'Http': 5, 'Request': 7, 'void': 1, 'private': 0}
{'}\n': 243, ';': 106, 'STR': 231, '_': 167, ')': 47, '(': 31, 'Of': 199, 'index': 193, '.': 90, 'NUM': 168, 'null': 115, 'get': 91, '=': 88, 'Url': 63, 'request': 62, '': 7, '{': 55, 'String': 8, 'static': 1, 'public': 0}
{'}\n': 343, ';': 245, ')': 159, 'Debug': 93, '': 91, 'new': 263, '=': 210, 'os': 106, '{': 160, ',': 107, 'Stream': 95, 'Output': 94, 'Hessian': 92, 'public': 0}
{'}\n': 116, '}': 22, ';': 21, ')': 6, 'e': 68, '(': 5, 'Exception': 11, '': 8, 'new': 106, 'throw': 105, ',': 47, '_tx': 15, '+': 50, 'STR': 49, '_': 48, 'SEVERE': 82, '.': 26, 'Level': 31, 'log': 40, '_logger': 25, '{': 12, 'Loggable': 28, 'is': 27, 'if': 13, 'catch': 64, 'try': 55, 'Transaction': 4, 'Local': 3, 'commit': 2, 'void': 1}
{'}\n': 68, ';': 67, ')': 11, '.': 40, '(': 7, 'entry': 39, '{': 12, '': 27, 'public': 0}
{'}\n': 160, ';': 66, 'List': 10, 'return': 156, ')': 23, '(': 17, 'String': 151, 'to': 150, '.': 78, '+': 146, 'STR': 145, '_': 144, 'info': 142, 'LOGGER': 140, '': 9, ',': 132, 'final': 18, 'By': 82, 'get': 79, 'Service': 77, 'boundary': 75, '=': 55, '>': 14, 'Boundary': 13, '<': 11, 'Linked': 58, 'new': 56, '{': 24, 'Id': 22, 'Long': 20, 'populate': 15, 'public': 8}
{'}\n': 194, ';': 32, 's': 181, 'return': 95, '}': 106, 't': 171, '+': 59, 'STR': 117, '_': 38, '=': 24, '{': 21, ')': 17, 'NUM': 39, '>': 176, '(': 6, 'length': 173, '.': 89, 'if': 33, ',': 12, 'String': 3, '': 2, 'new': 77, '==': 41, 'c': 23, 'jumps': 88, 'data': 99, 'Name': 5, 'read': 4, 'add': 90, '<<': 55, '&': 37, 'int': 22, 'IOException': 20, 'throws': 18, 'static': 1, 'private': 0}
{'}\n': 97, ';': 26, 'return': 88, ')': 9, 'length': 21, '.': 20, 'bytes': 64, ',': 33, 'NUM': 35, '_': 34, '(': 5, 'arraycopy': 30, 'System': 28, '': 27, ']': 13, '[': 12, 'byte': 11, 'new': 16, '=': 15, '{': 10, 'public': 0}
{'}\n': 33, ';': 32, 'Tree': 9, 'public': 0}
{'}\n': 21, ';': 20, ')': 5, '(': 4, 'size': 17, '.': 16, 'nodes': 15, 'return': 7, '{': 6, 'int': 1, 'public': 0}
{'}\n': 35, ';': 34, ')': 10, '(': 6, 'Blacklist': 5, 'Global': 4, '{': 11, 'host': 9, 'String': 8, '': 7, 'To': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 8, 'node': 7, '(': 4, '.': 24, 'nodes': 23, 'return': 19, '{': 9, '': 5, 'Node': 3, 'boolean': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 8, 'a': 24, '(': 5, '.': 20, 'Math': 19, '': 18, 'NUM': 12, '_': 11, '/': 13, '{': 9, 'double': 6, 'static': 1, 'public': 0}
{'}\n': 253, ';': 34, '}': 242, ')': 12, ',': 227, '(': 5, 'Bucket': 224, 'Main': 223, 'modify': 222, '{': 13, '.': 123, 'if': 184, 'get': 171, 'Ref': 31, 'entries': 30, '=': 32, 'Entry': 9, 'KBucket': 8, '': 7, 'size': 124, '_': 100, 'for': 35, '>': 29, '<': 25, 'List': 24}
{'}\n': 64, ';': 20, ')': 9, 'y': 8, '_': 37, '(': 3, 'Transform': 29, '{': 10, ',': 6, 'x': 5, 'void': 1, 'public': 0}
{'}\n': 594, ';': 71, 'BOOL': 94, '_': 51, 'return': 92, ')': 40, '(': 10, '.': 43, 'Buff': 39, 'Reason': 38, 'Supp': 37, 'not': 36, ',': 14, 'changes': 425, 'Reasons': 468, 'Supported': 4, 'Not': 466, 'In': 465, 'fill': 464, 'STR': 52, 'append': 458, '{': 41, 'Empty': 448, 'is': 3, 'if': 72, 'null': 440, 'Vpool': 19, 'new': 24, 'current': 18, 'Changes': 428, 'analyze': 427, '=': 255, '': 11, 'String': 34, '}': 96, 'TYPE': 291, 'DRIVE_': 303, 'INFO': 300, 'ARRAY_': 299, ']': 253, '[': 252, 'Specifies': 113, 'Pool': 8, 'v': 111, 'Virtual': 7, '!': 139, 'Protection': 114, 'Rp': 103, 'For': 102, 'check': 101, 'volume': 13, 'Same': 75, 'Label': 58, 'get': 57, 'format': 49, 'info': 44, 's_logger': 42, 'Buffer': 35, 'Client': 29, 'db': 30, 'Db': 28, 'Volume': 12, 'Change': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 124, ';': 65, ')': 10, '(': 4, 'get': 86, '.': 54, 'write': 2, 'oos': 9, 'Object': 3, '{': 52, 'IOException': 13, '': 5, 'throws': 11, 'Stream': 8, 'Output': 7, 'void': 1, 'private': 0}
{'}\n': 37, ';': 35, 'amt': 11, '(': 5, '.': 26, '{': 16, ')': 12, '': 6}
{'}\n': 180, ';': 41, 'return': 171, '}': 170, '-': 161, '*=': 153, ')': 15, '(': 5, ',': 10, '.': 81, 'Math': 117, '': 6, '=': 20, 'double': 2, 'final': 17, 'i': 51, 'Min': 95, 'get': 82, 'box2': 14, 'box1': 9, '{': 16, '++': 61, 'dim': 19, '<': 57, 'NUM': 46, '_': 45, 'int': 18, 'for': 48, 'Dimensionality': 23, 'Same': 22, 'assert': 21, 'Comparable': 8, 'Spatial': 7, 'static': 1, 'public': 0}
{'}\n': 34, ';': 32, ')': 31, 'Item': 12, 'Tool': 11, '(': 5, 'void': 1}
{'}\n': 206, '}': 39, ';': 38, 'count': 121, '+=': 202, 'End': 44, '_input': 19, ')': 12, 'STR': 30, '_': 29, '+': 31, 'Available': 11, 'min': 10, '(': 8, 'Error': 27, '_construct': 26, 'throw': 25, 'amount': 41, 'IOException': 15, '': 14, 'new': 165, '{': 16, 'NUM': 61, '==': 21, 'if': 17, 'Input': 152, '_close': 151, '<': 115, '-': 45, 'length': 137, '.': 72, 'Buffer': 76, ',': 77, 'read': 126, 'Stream': 20, '=': 42, 'int': 9, 'while': 111, 'Ptr': 54, 'else': 96, 'arraycopy': 73, 'System': 71, '>': 59, '&&': 62, 'null': 22, 'throws': 13, 'Least': 7, 'At': 6, 'Have': 5, 'To': 4, '_load': 3, 'void': 2, 'final': 1, 'protected': 0}
{'}\n': 33, ';': 25, ')': 12, 'BOOL': 30, '_': 29, '(': 4, 'Binary': 27, 'set': 26, 'a': 8, 'Of': 20, 'value': 19, '.': 18, 'String': 17, '': 1, 'super': 14, '{': 13, 'l': 11, 'int': 10, ',': 9, ']': 7, '[': 6, 'byte': 5, 'Message': 3, 'public': 0}
{'}\n': 39, ';': 38, ')': 17, '(': 9, 'Method': 11, '.': 27, 'method': 15, '{': 18, ']': 5, '[': 4, '': 1, 'private': 0}
{'}\n': 34, ';': 33, ')': 11, ',': 25, '(': 7, 'return': 19, '{': 18, 'String': 9, '': 2, 'static': 1, 'public': 0}
{'}\n': 115, ';': 23, 'BOOL': 112, '_': 111, 'return': 110, ')': 9, '}': 99, 'annotation': 8, '(': 5, 'Has': 3, 'type': 17, '.': 18, 'accessor': 72, 'Failure': 87, 'Annotation': 4, 'ignore': 85, ',': 81, 'Annotations': 80, 'supported': 79, 'Accessor': 71, '': 6, 'new': 74, '=': 16, '{': 10, 'null': 28, 'get': 19, 'boolean': 1, 'public': 0}
{'}\n': 99, ';': 31, 'STR': 29, '_': 28, '+': 95, 'tooltip': 21, 'return': 93, '}': 69, 'BOOL': 36, '=': 22, 'first': 33, ')': 15, '(': 6, 'String': 2, 'Display': 76, 'get': 79, '.': 62, 'CNodes': 75, '': 1, 'append': 63, '{': 16, '!': 57, 'if': 55, 'Node': 13, 'Navi': 42, 'final': 7, 'for': 38, 'boolean': 32, 'Builder': 20, 'new': 23, 'Tip': 5, 'Tool': 4, 'build': 3, 'private': 0}
{'}\n': 361, ';': 24, ')': 9, '(': 34, '.': 59, ']': 72, 'NUM': 151, '_': 79, '': 11, '=': 29, '[': 71, 'strs': 73, 'STR': 80, 'split': 77, 'String': 70, '{': 13, 'null': 66, '!=': 65, 'Line': 61, 'read': 60, 'while': 53, 'Stream': 38, 'Input': 37, 'File': 43, 'new': 30, 'Reader': 27, 'Buffered': 26, 'Exception': 12, 'throws': 10, 'public': 0}
{'}\n': 29, ';': 28, ')': 16, 'Listener': 6, 'Click': 5, 'item': 13, '(': 7, '.': 21, 'Listeners': 20, 'click': 19, 'return': 18, '{': 17, 'Item': 4, 'On': 3, '': 8, 'boolean': 1, 'public': 0}
{'}\n': 193, '}': 46, ';': 26, 'position': 11, 'return': 41, 'POSITION': 44, 'INVALID_': 43, '': 1, '{': 17, ')': 16, 'count': 49, '>=': 128, '||': 32, 'NUM': 82, '_': 81, '<': 90, '(': 9, 'if': 27, 'else': 108, '--': 143, 'Enabled': 97, 'is': 33, '.': 52, 'adapter': 22, '!': 60, '&&': 92, 'while': 87, '-': 120, ',': 12, 'min': 115, 'Math': 77, '=': 23, '++': 104, 'max': 79, 'Down': 15, 'look': 5, 'Selectable': 7, 'Items': 64, 'All': 63, 'Are': 62, 'm': 24, 'Count': 54, 'get': 53, 'int': 4, 'final': 18, 'Mode': 36, 'Touch': 35, 'In': 34, 'null': 31, '==': 30, 'Adapter': 21, 'List': 20, 'boolean': 13, 'Position': 8, 'For': 6, 'Override': 2, '@': 0}
{'}\n': 46, ';': 28, 's': 10, ':': 43, ')': 15, 'pad': 4, '(': 6, 'String': 3, 'Space': 38, 'get': 37, '?': 34, 'NUM': 33, '_': 32, '>': 31, 'return': 29, 'length': 14, '.': 24, '-': 22, '=': 20, 'int': 13, 'final': 7, '{': 16, ',': 11, '': 2, 'static': 1, 'public': 0}
{'}\n': 132, ';': 80, ')': 71, '(': 10, 'String': 16, 'to': 117, '.': 74, 'locale': 58, '{': 72, '': 2, ',': 25}
{'}\n': 111, ';': 32, 'BOOL': 55, '_': 29, 'return': 53, '}': 57, '{': 20, ')': 19, 'target': 36, '==': 49, 'cur': 61, '(': 6, 'if': 46, 'Parent': 90, 'get': 40, '.': 23, '=': 37, 'null': 50, '!=': 81, 'while': 78, 'Loader': 16, 'class': 17, 'Class': 8, '': 7, 'clazz': 12, 'STR': 30, ',': 13, 'Null': 25, 'not': 24, 'Assert': 22, '>': 11, '?': 10, '<': 9, 'Safe': 5, 'Cache': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 17, ';': 16, ')': 8, 'table': 14, ',': 13, 'out': 7, '(': 3, 'write': 2, '{': 9, 'Stream': 6, 'Print': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 277, ';': 60, ')': 31, 'Months': 35, '(': 97, '.': 216, 'Math': 215, '': 23, '}': 188, '{': 32, 'if': 161, 'NUM': 59, '_': 58, 'int': 68, '=': 36}
{'}\n': 99, '}': 98, ';': 82, ')': 12, '(': 15, '': 2, ':': 29, 'default': 83, 'STR': 28, '_': 27, 'case': 26, '{': 13, 'private': 0}
{'}\n': 36, ';': 35, ')': 14, '(': 4, 'Name': 26, 'MBean': 11, '.': 23, ',': 9, '{': 15, '': 1, 'Bean': 8, 'm': 7, 'Object': 6, 'public': 0}
{'}\n': 56, ';': 21, ')': 5, 'NUM': 19, '_': 18, ',': 17, 'Val': 11, 'double': 49, '(': 4, 'Equals': 8, 'assert': 7, 'Arr': 36, 'a': 35, 'Null': 33, 'long': 25, 'Value': 14, 'short': 10, '.': 12, '{': 6, 'Unmarshalled': 3, 'After': 2, 'check': 1, 'void': 0}
{'}\n': 68, ';': 67, ')': 53, 'null': 63, '(': 16, 'Async': 61, 'supply': 60, '.': 59, 'Future': 10, 'Completable': 9, '': 1, 'return': 55, '{': 54, '>': 7, 'R': 6, ',': 40, 'T': 37, 'super': 35, '?': 34, '<': 4, 'final': 26, 'collect': 15, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 145, '}': 121, ';': 30, ')': 7, 'value': 18, '(': 4, 'Type': 13, 'Reflection': 12, 'From': 113, 'singular': 112, 'return': 122, '{': 20, 'else': 126, 'result': 85, 'element': 99, 'add': 110, '.': 34, 'List': 84, '': 1, ':': 100, 'Object': 10, 'final': 15, 'for': 94, 'Array': 89, 'new': 87, '=': 25, 'ENUM': 79, 'Java': 46, 'Descriptor': 23, 'Field': 22, '==': 50, 'get': 26, 'descriptor': 24, '||': 61, 'MESSAGE': 60, 'if': 31, 'Repeated': 36, 'is': 35, 'from': 11, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 145, ';': 58, 'NUM': 140, '_': 139, '(': 41, '.': 126, ')': 31, '=': 36, '>': 91, '': 84, '<': 86, 'List': 85, '}': 69, 'return': 67, '{': 32, '==': 63, 'if': 60, 'Id': 46, 'company': 45, ',': 44}
{'}\n': 166, ';': 44, ')': 43, ',': 13, 'parent': 12, '(': 8, '': 10, 'new': 33, '.': 49, 'STR': 112, '_': 111, 'format': 109, 'String': 96, '=': 32, 'final': 9, 'Environment': 55, 'Standard': 54, 'translate': 50, 'translator': 31, '>': 30, 'Instruction': 29, 'INavi': 16, '<': 26, 'Translator': 25, 'Reil': 24, '{': 21, 'Window': 11, 'static': 1, 'public': 0}
{'}\n': 60, ';': 31, ')': 13, '(': 6, 'String': 3, 'to': 4, '.': 47, 'sw': 21, 'return': 52, 'close': 48, ',': 10, 'reader': 9, 'Reader': 8, 'Buffered': 35, 'copy': 32, 'NUM': 29, '_': 28, 'Writer': 20, '': 2, 'new': 23, '=': 22, '{': 17, 'IOException': 16, 'throws': 14, 'static': 1, 'public': 0}
{'}\n': 205, ';': 56, '.': 33, '': 10, 'else': 174, ')': 44, '(': 35, 'if': 147, 'Character': 129, 'i': 90, 'At': 121, 'char': 104, '=': 30, '{': 103, '++': 101, 'Coordinate': 29, 'last': 58, 'first': 28, 'int': 27, 'for': 87, 'Position': 42, 'Gap': 41, 'Non': 40, 'Last': 69, 'get': 38, ',': 45, 'min': 64, 'Math': 32, 'First': 39, 'max': 34, 'Lane': 11, 'private': 0}
{'}\n': 12, ';': 11, ')': 5, '(': 9, 'force': 2, '{': 6, 'void': 1}
{'}\n': 108, ';': 35, ')': 22, '(': 5, 'String': 2, 'to': 103, '.': 37, 'sb': 27, 'return': 100, 'vt': 18, 'append': 38, 'PREFIX': 52, 'VALUETYPE_': 70, '': 1, 'Lop': 48, 'dt': 13, 'DATATYPE_': 51, 'label': 8, 'Builder': 26, 'new': 29, '=': 28, '{': 23, 'Type': 12, 'Value': 16, ',': 9, 'Data': 11, 'Operand': 4, 'prep': 3, 'public': 0}
{'}\n': 131, ';': 64, 'return': 128, ')': 42, 'rejector': 41, ',': 19, 'depth': 31, 'points': 51, 'NUM': 94, '_': 93, '(': 13, 'Bridge': 12, 'Brownian': 11, 'Conquer': 10, 'divide': 9, 'add': 67, '.': 66, '>': 8, '': 2, '<': 4, 'List': 3, 'Linked': 55, 'new': 53, '=': 52, '{': 43, 'Time': 39, 'Space': 38, 'int': 30, 'static': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 15, '(': 9, 'get': 29, '.': 28, 'Type': 12, 'doc': 13, '{': 21, '': 2, 'public': 0}
{'}\n': 118, ';': 69, 'return': 115, '}': 114, ')': 26, 'i': 73, 'x': 17, '(': 67, 'add': 92, '.': 81, '{': 27, '++': 87, '<': 4, 'NUM': 76, '_': 75, '=': 60, 'int': 72, 'for': 70, '>': 7, 'List': 3, 'Array': 63, '': 2, 'new': 61, 'Double': 6}
{'}\n': 64, ';': 35, ')': 34, '(': 42, '.': 48, 'selected': 14, 'void': 1}
{'}\n': 143, ';': 36, ')': 11, '(': 5, 'To': 139, 'forward': 138, 'Message': 89, 'get': 32, '.': 42, ',': 78, 'STR': 99, '_': 79, 'ERROR': 124, 'TYPE_': 95, '': 6, 'CCAlert': 92, 'Alert': 88, 'Inline': 87, 'set': 86, '{': 19, 'Exception': 16, 'AMConsole': 109, 'catch': 106, '}': 105, 'INFO': 96, 'model': 24, 'BOOL': 80, 'Values': 75, 'Attribute': 74, 'ps': 51, 'ATTRIBUTE': 63, 'PROPERTY_': 62, 'Child': 59, 'Sheet': 50, 'AMProperty': 49, '=': 25, 'Model': 14, 'Control': 15, 'throws': 12, 'event': 10, 'Event': 9, 'Invocation': 8, 'Request': 4, 'Button1': 3, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 80, ';': 79, 'NUM': 73, '_': 69, ',': 71, '.': 42, '(': 5, 'description': 40, ')': 10, '{': 11, '': 7, 'private': 0}
{'}\n': 23, ';': 22, ')': 6, 'NUM': 11, '_': 10, '*': 18, ',': 12, '(': 5, '': 1, 'public': 0}
{'}\n': 127, '}': 67, ';': 28, ')': 21, 'STR': 122, '_': 121, '(': 4, 'Exception': 119, 'Argument': 118, 'Illegal': 117, '': 1, 'new': 115, 'throw': 114, '{': 22, 'else': 68, 'Value': 107, 'int': 106, '.': 24, 'Obj': 73, 'trailer': 61, '=': 26, 'null': 98, '!=': 97, 'if': 56, 'Name': 88, 'Algorithm': 87, 'get': 82, 'digest': 13, 'Map': 80, 'Integer': 71, 'IMPLICIT': 65, 'TRAILER_': 64, 'implicit': 20, 'this': 23, 'cipher': 9, 'boolean': 19, ',': 10, 'Digest': 12, 'Cipher': 8, 'Block': 7, 'Asymmetric': 6, 'ISO9796d2': 2, 'public': 0}
{'}\n': 227, ';': 62, ')': 9, 'return': 214, '}': 182, ',': 199, '!': 160, '(': 64, 'NUM': 32, '_': 31, '{': 13, 'if': 63, 'data': 8, ']': 33, '[': 39, 'length': 22, '.': 21, '=': 17, '': 11, 'throws': 10}
{'}\n': 90, '}': 86, ';': 62, ')': 36, '(': 55, '.': 78, '>': 7, 'T': 6, '': 5, '<': 10, 'Set': 9, 'Hash': 49, 'new': 47, '{': 37}
{'}\n': 20, ';': 19, ')': 6, 'STR': 17, '_': 16, '(': 5, 'With': 14, 'starts': 13, '.': 12, 'Model': 11, 'Build': 10, 's': 9, 'return': 8, '{': 7, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 197, ';': 196, ')': 49, '(': 7, '.': 74, 'orig': 10, ',': 12, '{': 50, 'String': 9, '': 8, 'public': 1}
{'}\n': 76, ';': 35, ')': 20, 'GT': 53, '': 1, ',': 13, 'lo': 17, '(': 19, 'Near': 46, 'find': 31, '.': 7, 'm': 29, 'return': 28, 'else': 36, 'EQ': 58, '|': 54, 'Inclusive': 40, 'if': 22, 'First': 32, 'null': 26, '==': 25, '{': 21, 'Node': 9, '>': 16, 'V': 15, 'K': 12, '<': 10, 'Map': 6, 'List': 5, 'Skip': 4, 'Concurrent': 3, 'private': 0}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'size': 2, '.': 8, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 154, ';': 28, 'return': 151, '}': 150, '_': 26, ']': 12, 'i': 24, '[': 11, '-': 86, 'NUM': 27, 'length': 34, '.': 33, '<': 30, '=': 25, 'int': 23, '(': 5, 'for': 21, 'float': 2, 'static': 1, 'public': 0}
{'}\n': 95, ';': 24, ')': 12, '(': 7, 'Actions': 90, 'Source': 76, 'get': 19, ',': 87, 'mods': 15, 'Action': 84, 'Drop': 83, 'To': 82, 'Modifiers': 6, 'convert': 80, '.': 18, 'Peer': 78, 'Context': 77, 'Drag': 3, 'Sun': 74, '': 8, 'return': 62, '}': 71, 'NONE': 69, 'ACTION_': 68, 'DConstants': 65, 'Dn': 64, '{': 13, 'MASK': 47, 'DOWN_': 46, 'BUTTON2_': 56, 'Event': 10, 'Input': 41, '==': 39, 'btns': 26, '||': 48, 'BUTTON1_': 45, '!': 36, 'if': 34, 'Mask': 32, 'Button': 31, '&': 29, '=': 16, 'int': 1, 'Ex': 21, 'e': 11, 'Mouse': 9, 'From': 5, 'Operation': 4, 'map': 2, 'protected': 0}
{'}\n': 27, ';': 23, 'this': 25, 'return': 24, ')': 10, 'expression': 9, '(': 6, 'Assignment': 5, '': 1, 'new': 16, 'add': 4, '.': 13, 'assignments': 12, '{': 11, 'Expression': 8, 'Clause': 3, 'Update': 2, 'public': 0}
{'}\n': 209, ';': 39, 'icon': 24, ')': 13, '.': 36, 'R': 58, '': 1, '(': 12, ',': 63, 'NUM': 54, '_': 53, 'new': 27, '=': 26, 'Icon': 6, '{': 14}
{'}\n': 42, ';': 40, '{': 32, ')': 28, 'Network': 17, 'Connection': 18, '': 6, 'public': 0}
{'}\n': 102, '}': 78, ';': 77, ')': 14, '(': 6, '.': 22, 'm': 81, '{': 15, 'else': 79, 'Looper': 21, 'Main': 60, 'get': 59, '': 8, 'my': 23, 'Null': 10, 'Non': 9, '@': 7, 'void': 1}
{'}\n': 403, ';': 64, ')': 40, '(': 17, '.': 82, '': 6, ']': 280, '[': 277, 'String': 180, '_': 97, 'Attr': 44, 'STR': 98, '=': 46, 'Set': 9, 'private': 0}
{'}\n': 233, ';': 112, ')': 101, '(': 69, '.': 104, 'w': 99, '_war': 116, 'remove': 119, 'List': 117, 'this': 110, 'Listener': 108, 'Change': 107, 'Property': 106, '{': 102, 'Warrant': 74, '': 73, 'void': 2, 'public': 0}
{'}\n': 24, ';': 23, ')': 11, 'cmd': 7, '(': 4, '.': 15, '{': 12, 'Command': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 201, ';': 34, 'BOOL': 37, '_': 31, 'return': 35, 'CONNECTING': 95, 'STATE_': 94, '': 5, '=': 92, 'State': 91, 'Connection': 90, 'm': 12, 'address': 7, 'Address': 45, 'Device': 44, 'Bluetooth': 13, ')': 8, 'STR': 32, ',': 30, 'TAG': 29, '(': 3, 'd': 69, '.': 25, 'Log': 24, 'Callback': 167, 'Gatt': 61, 'this': 160, 'connect': 2, 'device': 114, '}': 39, '{': 9, 'null': 16, '==': 15, 'if': 10, 'Remote': 121, 'get': 120, 'Adapter': 14, 'final': 4, 'else': 102, '!=': 46, '&&': 48, 'equals': 51, 'w': 26, '||': 17, 'String': 6, 'boolean': 1, 'public': 0}
{'}\n': 61, ';': 22, ')': 14, 'Dev': 13, 'std': 12, '-': 20, '*': 31, '(': 4, '/': 27, 'return': 23, 'mean': 9, 'x': 6, '=': 18, 'diff': 17, 'double': 1, '{': 15, ',': 7, 'Dens': 3, 'private': 0}
{'}\n': 322, '}': 321, ';': 36, ')': 13, '(': 30, '.': 78, ',': 114, ']': 39, 'NUM': 48, '_': 47, '[': 38, 'Float': 233, '': 10, 'D': 230, 'new': 26, ':': 98, 'CUBICTO': 218, 'SEG_': 96, 'Iterator': 93, 'Path': 23, 'case': 90, 'break': 124, '{': 14, 'switch': 85, 'Segment': 80, 'current': 79, '=': 43, 'int': 74, 'float': 37, 'Shape': 4}
{'}\n': 80, '}': 79, ')': 8, ';': 34, '(': 30, 'Object': 63, 'get': 62, '.': 27, 'binding': 47, '': 10, 'next': 51, '=': 25, 'Binding': 46, '{': 44, 'More': 40, 'has': 39, 'STR': 32, '_': 31, 'Bindings': 29, 'list': 28, 'context': 26, 'Enumeration': 19, 'Naming': 11, 'Exception': 12, 'throws': 9}
{'}\n': 100, ';': 41, ')': 14, 'this': 94, ',': 18, 'in': 13, '(': 8, 'parse': 90, '.': 36, 'Parser': 45, 'sax': 44, 'SAXParser': 29, 'new': 37, 'factory': 31, '=': 32, 'Instance': 38, 'Factory': 30, '': 10, 'IOException': 20, 'SAXException': 17, 'throws': 15, 'Stream': 12, 'Input': 11, 'final': 9}
{'}\n': 48, ';': 47, '{': 22, ')': 21, 'null': 27, '==': 26, 'in': 16, '(': 10, 'if': 23, '': 7}
{'}\n': 27, ';': 26, ')': 12, 'base64': 10, '(': 7, '.': 18, '': 8, 'return': 14, '{': 13, 'String': 9, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 50, ';': 47, ')': 7, '.': 17, 'Premove': 4, '(': 6, '': 11, 'to': 18, 'Info': 13, '{': 8, 'void': 1, 'protected': 0}
{'}\n': 506, ';': 505, ')': 321, '(': 269, 'int': 241, '.': 353, 'abs': 244, '': 281, '{': 322, 'Number': 303, 'static': 1, 'public': 0}
{'}\n': 52, ';': 51, ')': 4, '(': 3, 'stop': 2, '{': 5, 'void': 1, 'public': 0}
{'}\n': 34, ';': 24, ')': 5, '(': 4, 'Dirty': 3, '.': 27, '{': 6, 'void': 1, 'public': 0}
{'}\n': 119, ';': 35, ')': 13, '(': 12, 'elements': 115, '.': 38, 'Vector': 16, 'new': 21, 'return': 111, 'STR': 47, '_': 32, ',': 48, 'NUM': 33, 'Option': 8, '': 1, 'Element': 40, 'add': 39, '+': 72, '>': 9, '<': 6, '=': 23, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 237, ';': 45, ')': 12, '(': 8, '.': 64, 'prefix': 11, 'NUM': 135, '_': 43, '}': 115, '+': 190, 'last': 186, 'STR': 89, 'c': 74, 'At': 79, 'char': 73, '=': 75, '{': 13, 'length': 65, 'String': 10, '': 1}
{'}\n': 160, ';': 159, ')': 78, 'NUM': 140, '_': 139, 'i': 76, '(': 42, 'Hex': 40, '{': 79, 'int': 47, 'String': 10, '': 9, 'static': 1, 'public': 0}
{'}\n': 59, ';': 16, ')': 10, 'NUM': 24, '_': 23, '+': 45, 'n': 13, '(': 7, '*': 25, '-': 30, '/': 34, 'sqrt': 21, '.': 20, 'Math': 19, '': 18, 'return': 17, 'size': 9, '=': 14, 'int': 8, '{': 11, 'Error': 6, 'Standard': 5, 'sample': 3, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 135, ';': 70, ')': 15, '(': 34, '}': 127, 'Qualifier': 9, 'Policy': 8, '=': 27, 'Info': 10, 'policy': 12, '': 7, '.': 31, '{': 16, 'public': 0}
{'}\n': 118, '}': 117, ';': 30, '_': 109, 'Commit': 21, 'Auto': 20, ')': 8, '(': 4, 'set': 47, '.': 24, '{': 15, 'if': 33, 'get': 25, '=': 22, 'boolean': 18, 'SQLException': 14, '': 13, 'throws': 9, 'void': 1, 'public': 0}
{'}\n': 1252, ';': 27, '_': 579, '}': 508, ')': 5, ',': 453, '(': 4, 'Rate': 1096, 'Node': 17, 'set': 875, '.': 22, 'tree': 21, 'get': 23, '=': 20, '{': 11, 'Parent': 255, 'Ref': 18, '': 7, 'size': 707, 'Int': 702, 'next': 701, 'Utils': 699, 'Math': 698, 'new': 597, 'NUM': 580, 'add': 498, '&&': 183, '!=': 181, 'if': 176, 'i': 79, 'Root': 24, 'root': 19, 'Exception': 10, 'Failed': 9, 'Operator': 8, 'throws': 6, 'Operation': 3, 'do': 2, 'double': 1, 'public': 0}
{'}\n': 140, ';': 29, 'return': 67, '}': 70, '{': 13, ')': 12, 'seg': 43, '(': 5, 'Instance': 61, 'is': 60, '.': 25, 'cls': 8, 'if': 14, 'previous': 116, 'iter': 21, 'Segment': 4, 'Marker': 3, '': 6, '=': 22, 'Previous': 99, 'has': 34, 'size': 89, 'Sequence': 24, 'marker': 23, 'Iterator': 20, 'list': 83, 'List': 76, 'else': 73, 'next': 52, 'Next': 35, 'first': 11, 'boolean': 10, ',': 9, 'Class': 7, 'find': 2}
{'}\n': 30, ';': 29, ')': 15, 'values': 14, '(': 9, 'of': 24, '.': 23, 'Stream': 22, '': 4, 'All': 8, '{': 16, '...': 13, 'default': 0}
{'}\n': 122, ';': 20, ')': 62, '}': 98, '(': 3, '{': 7, 'if': 59, '_': 11, '=': 10, 'NUM': 50, 'got': 8, 'BOOL': 12, 'public': 0}
{'}\n': 165, '}': 101, ';': 35, 'null': 23, '=': 57, 'timer': 21, ')': 8, '(': 5, '.': 27, 'cancel': 28, '{': 9, '!=': 22, 'if': 19, 'void': 1, 'private': 0}
{'}\n': 83, ';': 82, ')': 35, ',': 11, 'Report': 77, 'delivery': 76, 'date': 26, 'subject': 22, 'body': 18, 'address': 14, 'resolver': 10, '(': 6, 'Uri': 3, 'To': 56, 'Message': 5, 'add': 4, 'return': 53, '{': 36, 'boolean': 28, 'Long': 25, '': 2, 'String': 13, 'Resolver': 9, 'Content': 8, 'static': 1, 'public': 0}
{'}\n': 249, ';': 40, ')': 17, '(': 7, '_': 52, 'NUM': 53, '.': 118, '': 60, ',': 72, 'double': 19, '=': 25, '{': 18, 'calc': 4, 'public': 0}
{'}\n': 652, ';': 32, 'return': 648, '}': 281, 'break': 97, ')': 18, '(': 6, '{': 19, 'if': 100, '.': 106, ',': 10, 'i': 58, 'tab': 46, 'At': 76, 'Tab': 548, 'set': 547, '=': 22, 'null': 95, 'Val': 235, 'old': 234, 'equals': 228, 'cv': 17, '||': 71, '==': 69, '&&': 452, '': 2, 'BOOL': 151, '_': 87, 'validated': 142, 'f': 55, 'else': 99, 'next': 331, 'val': 214, 'boolean': 141, 'MOVED': 111, 'hash': 107, 'fh': 60, '&': 90, 'NUM': 88, '-': 86, 'int': 20, 'Node': 54, 'table': 48, ']': 45, '[': 44, 'spread': 23, 'Object': 16, 'final': 1}
{'}\n': 96, ';': 33, 'BOOL': 88, '_': 39, 'return': 86, '}': 90, ')': 20, 'end': 44, ',': 10, 'NUM': 40, '-': 38, 'start': 23, '(': 6, 'Sequence': 75, 'sub': 74, '.': 27, 'Req': 14, 'from': 13, 'append': 69, 'buf': 19, '{': 21, '!=': 37, 'if': 34, 'STR': 53, 'Of': 29, 'index': 28, '=': 24, 'int': 22, 'name': 9, 'String': 8, '': 7, 'Header': 5, 'copy': 4, 'boolean': 3, 'final': 2, 'static': 1, 'private': 0}
{'}\n': 53, '}': 52, ';': 32, ')': 13, ',': 9, '(': 4, 'track': 44, '.': 16, 'Client': 36, 'telemetry': 35, '{': 14, 'null': 38, '!=': 37, 'if': 33, 'STR': 25, '_': 24, 'format': 22, 'String': 20, '': 6, 'debug': 17, 'logger': 15, 'final': 5, 'send': 2, 'void': 1, 'public': 0}
{'}\n': 75, ';': 69, 'this': 73, 'return': 72, ')': 33, '.': 63, 'field': 30, '(': 27, 'if': 35, '{': 34, '': 9, 'Field': 10}
{'}\n': 43, ';': 31, 'url': 21, ')': 17, '(': 7, 'Resource': 5, '.': 24, 'loader': 23, '=': 22, 'URL': 3, '': 2, '{': 18, 'Loader': 15, 'String': 9, 'find': 4, 'public': 0}
{'}\n': 40, ';': 23, ')': 10, '(': 5, 'String': 2, 'to': 3, '.': 34, 'writer': 15, 'return': 32, ',': 28, 'EPL': 4, 'Writer': 14, '': 1, 'new': 17, '=': 16, '{': 11, 'public': 0}
{'}\n': 85, ';': 84, '(': 4, ')': 7, 'NUM': 52, '_': 51, 'index': 49, '{': 8, 'public': 0}
{'}\n': 38, ')': 36, '(': 26, 'archive': 8, 'public': 0}
{'}\n': 74, ';': 23, ')': 8, 'Addr': 28, '(': 21, 'Socket': 51, '': 24, 'new': 48, '=': 29, 'get': 34, '.': 33, 'Address': 26, 'Inet': 25, '{': 11}
{'}\n': 43, ';': 30, ')': 18, 'length': 17, ',': 7, 'offset': 14, 'buffer': 11, '(': 3, '.': 24, '_file': 23, 'Offset': 6, 'file': 5, 'seek': 25, '{': 22, 'IOException': 21, '': 20, 'throws': 19, 'int': 13, ']': 10, '[': 9, 'byte': 8, 'long': 4, 'public': 0}
{'}\n': 22, ';': 21, ')': 10, 'Name': 9, 'tag': 8, '(': 17, 'return': 12, '{': 11, 'String': 7, '': 6}
{'}\n': 13, ';': 12, ')': 4, '{': 5, '(': 3, 'shutdown': 2, 'void': 1}
{'}\n': 82, '}': 77, ';': 61, ')': 7, '(': 4, '.': 32, 'get': 33, '{': 8, 'row': 40, 'tree': 31}
{'}\n': 70, ';': 23, '_': 20, '}': 61, 'colon': 12, ')': 9, '(': 5, 'if': 37, 'STR': 21, '.': 16, 's': 8, 'String': 7, '': 6}
{'}\n': 81, ';': 43, '.': 39, ')': 65, 'length': 64, 'args': 18, ',': 9, 'Object': 11, '': 6, ']': 17, '[': 16, 'method': 8, '(': 5, 'public': 0}
{'}\n': 270, ';': 41, ')': 20, 'Color': 57, 'old': 266, '(': 4, 'set': 263, '.': 28, 'g': 34, 'NUM': 247, '_': 246, '-': 225, '+': 156, ',': 13, 'draw': 2, '': 22, '{': 21, 'if': 42, 'int': 11, 'void': 1}
{'}\n': 54, '}': 53, ';': 52, ')': 11, '(': 3, '.': 39, 'get': 40, '{': 12, 'Race': 8, 'races': 10, '>': 9, '': 4, '<': 6, 'public': 0}
{'}\n': 19, ';': 18, ')': 4, '(': 3, '.': 9, 'Metadata': 8, '_parameter': 7, 'return': 6, '{': 5, 'public': 0}
{'}\n': 93, ';': 91, ')': 20, '(': 6, '.': 69, 'receiver': 24, '{': 21, 'Receiver': 5}
{'}\n': 694, ';': 693, ')': 42, ',': 114, 'STR': 116, '_': 115, 'scope': 14, '(': 7, '.': 79, 'Object': 78, 'Scriptable': 13, '': 12, '{': 43}
{'}\n': 133, '}': 131, ';': 39, ')': 13, '(': 5, 'remove': 127, '.': 9, ',': 121, 'biome': 120, 'Biomes': 57, 'Biome': 3, '': 6, '{': 14, 'Next': 99, 'has': 98, 'while': 94, 'iterator': 90, '=': 26, '>': 23, '<': 18, 'Iterator': 79, 'List': 17, 'entry': 24, 'Base': 22, 'Gen': 21, 'type': 12, 'Type': 4, 'For': 58, 'get': 56, 'Dictionary': 8, 'as': 49, 'Arrays': 47, 'All': 44, 'add': 43, 'Array': 16, 'new': 27, 'void': 1, 'public': 0}
{'}\n': 310, ';': 24, 'r': 16, 'return': 307, ')': 17, 'int': 51, '(': 7, '=': 21, 'maximum': 282, '.': 111, 'Requirements': 3, 'Size': 2, '': 1, 'new': 218, '{': 18, 'null': 213, '==': 212, 'if': 209, 'get': 126, 'Span': 128, 'max': 112, 'Math': 110, 'i': 64, '++': 74, 'n': 52, '<': 70, 'NUM': 23, '_': 22, 'for': 61, 'Count': 57, 'long': 19, ',': 12, 'calculate': 4}
{'}\n': 203, '}': 50, ';': 49, ')': 16, 'value': 12, '(': 6, 'String': 196, 'to': 195, '.': 61, '': 7, 'write': 3, 'out': 9, 'STR': 90, '_': 56, '{': 20, '--': 122, 'size': 15, 'digits': 147, '>': 117, 'for': 113, 'NUM': 57, '+': 164, 'LOG_10': 162, '/': 160, 'log': 156, 'Math': 154, 'int': 14, '=': 148, '<': 80, 'if': 77, 'else': 51, 'IOException': 19, 'throws': 17, ',': 10, 'Writer': 8, 'Integer': 5, 'Padded': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 98, '}': 87, ';': 86, ')': 12, 'filter': 10, '(': 6, '.': 33, 'filters': 76, '{': 19, '': 7, 'static': 1}
{'}\n': 41, ';': 40, ')': 13, '(': 4, '.': 31, ',': 25, 'STR': 24, '_': 23, 'blob': 12, ']': 11, '[': 10, 'byte': 9, 'void': 1}
{'}\n': 48, ';': 14, ')': 5, '(': 4, 'size': 44, '.': 43, 'labels': 7, '=': 9, 'Labels': 3, 'n': 39, 'Data': 35, 'From': 24, 'get': 22, 'else': 29, 'Values': 8, 'handle': 17, 'if': 15, 'calc': 10, '{': 6, 'define': 2, 'void': 1}
{'}\n': 75, ';': 63, ')': 26, '(': 12, '.': 56, 'intervals': 19, '': 2, 'new': 41, '=': 40, 'Interval': 6, '<': 4, '{': 27, ',': 20, '>': 7, 'public': 0}
{'}\n': 64, ';': 63, ')': 44, 'condition': 47, ',': 10, '(': 6, 'String': 3, 'to': 56, '.': 21, 'self': 9, 'While': 5, 'return': 50, '{': 37, 'Closure': 13, '': 2, '}': 43, 'STR': 39, '_': 38, '=': 17, 'options': 35, 'class': 22, 'Resolver': 31, 'First': 30, 'Pick': 29, 'Strategy': 26, 'Resolution': 25, 'conflict': 24, 'From': 19, 'value': 16, 'Params': 14, '@': 11, 'GString': 8, 'static': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 9, 'node': 8, '(': 4, 'add': 14, '.': 13, '{': 10, 'Node': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 49, '}': 48, ';': 25, ')': 8, 'this': 45, '(': 4, 'Output': 43, 'Console': 42, 'on': 41, '.': 11, 'Delegate': 30, 'action': 31, '{': 9, 'Delegates': 35, ':': 33, 'Action': 29, '': 5, 'for': 26, 'STR': 22, '_': 21, 'With': 19, 'ends': 18, 'text': 7, ',': 15, 'print': 2, 'view': 10, 'String': 6, 'Text': 3, 'void': 1, 'public': 0}
{'}\n': 58, ';': 28, 'counter': 11, '(': 10, '.': 31, '': 29, 'if': 9, '{': 8, ')': 7}
{'}\n': 292, ';': 162, ')': 112, 'start': 56, '-': 250, 'end': 83, 'NUM': 186, '_': 185, ',': 29, '(': 171, '.': 168, '': 166, ']': 11, 'int': 4, '=': 132, '[': 10, '{': 113, 'final': 79, 'Array': 15}
{'}\n': 58, '}': 41, ';': 21, ')': 13, 'STR': 54, '_': 53, '(': 5, 'Fail': 51, 'thread': 33, '{': 14, 'fail': 47, 'Exception': 46, 'Interrupted': 45, '': 44, 'catch': 42, 'Alive': 4, 'is': 35, '.': 34, 'True': 31, 'assert': 1, 'millis': 19, 'delay': 17, 'try': 15, 'void': 0}
{'}\n': 43, ';': 42, ')': 9, '': 1, '(': 5, '{': 10, 'id': 8, 'String': 7, 'Manager': 4, 'public': 0}
{'}\n': 365, ';': 22, '++': 353, '(': 7, ')': 18, '=': 28, ']': 291, 'NUM': 77, '_': 51, 'len': 37, 'if': 35, ',': 78, '.': 71, '}': 55, 'new': 45, '{': 19}
{'}\n': 139, ';': 47, 'BOOL': 81, '_': 80, 'return': 79, ')': 42, '(': 4, '': 5, '.': 56, 'NUM': 92, '<=': 90, '=': 54, '!': 76, 'if': 74, ',': 10, 'int': 23, 'p_net_no_arr': 21, 'List': 20, 'Nos': 19, 'Net': 18, 'boolean': 2, 'public': 0}
{'}\n': 170, ';': 64, 'return': 167, ')': 37, 'i': 128, 'NUM': 148, '_': 147, ',': 146, '(': 8, '.': 68, '': 9, 'new': 28, '=': 27, ']': 4, '[': 3, '}': 93, 'Token': 86, 'next': 85, 'st': 51, '{': 75, 'Tokens': 71, 'More': 70, 'has': 69, 'while': 65, 'String': 10, 'static': 1, 'public': 0}
{'}\n': 1837, ';': 16, 'ca6': 1677, 'return': 1834, '}': 94, ']': 3, 'i': 18, '[': 2, 'ca5': 535, '=': 36, 'k': 22, '{': 12, ')': 11, '++': 317, ',': 19, 'length': 211, '.': 59, '<': 71, '(': 7, 'for': 315, 'else': 67, 'NUM': 38, '_': 37, '+=': 1784, '+': 292, 'Separator': 1669, 'Grouping': 1765, 'get': 1667, 'dfs': 1665, '==': 118, '%': 1749, '-': 84, 'dp': 1605, '&&': 1157, '>': 50, 'if': 47, 'lead': 1563, 'Thousands': 1226, 'n': 1208, 'char': 1, 'new': 509, 'thousands': 1233, 'Decimal': 1668, '/': 1319, 'int': 17, 'break': 346, 'STR': 120, '||': 837, 'ca4': 529, 'j': 20, 'Zeros': 1209, 'Space': 1354, 'leading': 1220, 'Sign': 42, 'minus': 41, '!': 807, 'x': 10, '-=': 1369, '--': 1364, 'Width': 1327, 'field': 1326, 'Set': 470, 'xlead': 1237, 'xdp': 1279, 'Justify': 1218, 'left': 1217, 'ca3': 523, 'p': 465, '!=': 173, 'precision': 469, 'Form': 836, 'alternate': 835, 'expon': 35, 'In': 27, 'n1': 26, 'min': 874, 'Math': 872, '': 13, 'carry': 709, '<=': 610, 'Carry': 752, 'Symbolic': 767, 'start': 766, 'For': 751, 'check': 750, 'n2': 31, 'BOOL': 45, 'boolean': 40, 'ca2': 507, 'ca1': 493, 'Array': 499, 'Char': 498, 'to': 60, 'sx': 15, 'Digits': 6, 'default': 482, 'ie': 288, 'substring': 133, 'Int': 368, 'parse': 367, 'Integer': 365, 'At': 113, 'Pos': 144, 'e': 143, 'r': 157, 'Of': 149, 'index': 148, 'String': 14, 'Double': 58, 'double': 9, 'Format': 5, 'f': 4, 'private': 0}
{'}\n': 91, ';': 20, ')': 4, '(': 3, '.': 56, 'NUM': 42, '_': 41, '=': 10, 'int': 0, 'Font': 7, 'get': 15, 'fm': 9, 'Metrics': 8, '': 6, '{': 5}
{'}\n': 155, ';': 24, ')': 11, 'rounded_y': 85, ',': 151, 'rounded_x': 26, '(': 6, 'Int': 4, 'Point': 3, 'Pla': 2, '': 1, 'new': 144, 'return': 143, '}': 48, 'v_y': 32, 'round': 78, '.': 20, 'Math': 41, '=': 18, '{': 12, 'else': 49, 'NUM': 35, '_': 34, '<': 55, 'v_x': 45, 'dir': 17, 'if': 28, '>': 33, 'double': 25, 'to_float': 21, 'p_dir': 10, 'Float': 16, 'Direction': 9, 'public': 0}
{'}\n': 232, '}': 194, ';': 86, ')': 17, '(': 7, 'close': 212, '.': 211, '{': 27, 'finally': 195, ',': 12, '': 8, '=': 55, 'fos': 106, 'Stream': 40, 'Output': 92, 'File': 9, 'in': 79, 'Input': 66, 'new': 63, 'IOException': 26, 'throws': 18, 'static': 1, 'public': 0}
{'}\n': 52, ';': 51, ')': 31, ',': 44, '(': 40, 'return': 33, '{': 32, 'username': 29, 'String': 14, '': 13, 'boolean': 1, 'public': 0}
{'}\n': 126, ';': 74, ')': 65, '(': 48, 'append': 110, '.': 78, '_': 72, 'i': 70, '{': 84, '++': 82, 'length': 79, 'columns': 77, '<': 76, 'NUM': 73, '=': 71, 'int': 69, 'for': 67, 'String': 54, '': 53, 'Builder': 55}
{'}\n': 97, ';': 51, ')': 25, 'Interface': 61, 'mbean': 60, 'Class': 11, '(': 34, '.': 76, 'MBean': 4, '': 10, 'if': 33, '{': 32, ',': 17, '>': 14, '?': 13, '<': 12, 'static': 1, 'public': 0}
{'}\n': 95, ';': 43, 'set': 31, 'return': 92, '}': 91, ')': 18, '(': 11, '.': 56, 'Model': 15, 'Scalar': 78, 'Template': 13, '': 2, 'Escaping': 73, 'Non': 72, 'String': 6, 'As': 70, 'get': 69, 'add': 67, '{': 24, '>': 7, '<': 4, 'Set': 3, 'Hash': 35, 'new': 33, '=': 32, 'Exception': 23, 'throws': 19, 'to': 8, 'static': 1, 'public': 0}
{'}\n': 132, '}': 107, ';': 39, ')': 38, '(': 4, '.': 62, '{': 99, 'ks': 51, 'try': 98, '': 1, 'new': 80, 'Store': 61, 'public': 0}
{'}\n': 31, ';': 30, ')': 8, 'loc': 7, '(': 16, '.': 24, '': 5, 'Location': 3}
{'}\n': 45, ';': 20, 'NUM': 43, '_': 42, ':': 41, ')': 6, '(': 3, 'get': 15, '.': 14, 'bb': 13, '?': 31, 'Int': 16, '=': 10, '{': 7, 'int': 1}
{'}\n': 58, '}': 38, ';': 37, ')': 15, 'e': 45, '(': 6, 'Exception': 44, 'Xml': 51, '': 2, 'new': 49, 'throw': 48, '{': 16, 'Expression': 43, 'XPath': 8, 'catch': 39, '.': 25, 'return': 19, 'try': 17, ',': 11, 'static': 1, 'public': 0}
{'}\n': 81, ';': 68, 'return': 78, ')': 33, '(': 7, '.': 29, 'Headers': 4, 'Http': 48, '': 2, 'to': 5, 'static': 1, 'public': 0}
{'}\n': 160, ';': 159, ')': 14, '.': 145, 'Data': 10, 'audio': 9, 'NUM': 78, '_': 77, '(': 5, '{': 15, ']': 8, '[': 7, 'public': 0}
{'}\n': 57, ';': 15, ')': 5, 'NUM': 54, '_': 29, '(': 4, 'Program': 3, 'Use': 8, 'gl': 7, 'STR': 30, ',': 28, 'program': 13, '.': 12, 'this': 11, 'Location': 23, 'Uniform': 18, 'Get': 21, '=': 19, '{': 6, 'init': 2, 'void': 1}
{'}\n': 54, ';': 15, ')': 7, 'result': 31, '==': 50, '(': 6, 'Value': 4, 'float': 30, '.': 45, 'Number': 20, 'a': 11, ',': 42, 'STR': 14, '_': 13, 'True': 38, 'assert': 37, 'NUM': 35, '=': 12, 'Decimal': 18, 'Big': 17, '': 9, 'new': 22, 'String': 10, '{': 8, 'Float': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 25, ';': 24, 'Store': 4, 'key': 11, '.': 17, '{': 15, ')': 14, 'Key': 3, '': 7, '(': 5, 'public': 0}
{'}\n': 293, ';': 68, '}': 266, '{': 72, ')': 51, '(': 25, 'if': 241, ',': 234, '': 14, 'i': 56, 'get': 79, '.': 64, 'connections': 63, '=': 57, 'Connection': 15, '++': 70, 'size': 65, 'NUM': 59, '_': 58, 'int': 55, 'for': 53, 'Connections': 24, 'protected': 0}
{'}\n': 68, ';': 67, ')': 10, '(': 5, 'get': 32, '.': 15, 'handle': 9, '{': 11, 'Handle': 8, 'Instruction': 7, '': 6, 'boolean': 2}
{'}\n': 137, ';': 88, '.': 92, ')': 75, '(': 38, 'get': 103, 'Manager': 19, 'Trust': 18, 'default': 65, 'X509': 60, '': 11}
{'}\n': 59, ';': 21, ')': 57, '=': 26, 'pool': 10, '.': 23, 'this': 22, '': 1, '(': 4, 'public': 0}
{'}\n': 46, '}': 45, ';': 38, ')': 15, '(': 7, 'Strength': 41, 'Password': 40, 'verify': 39, '.': 23, 'Colors': 22, 'Text': 5, 'helper': 20, '{': 16, 'color': 14, 'int': 13, 'final': 1, 'Int': 11, 'Color': 6, '': 9, '@': 8, 'Helper': 4, 'void': 2, 'public': 0}
{'}\n': 9, '{': 8, ')': 7, '(': 6, 'Minute': 5, 'public': 0}
{'}\n': 46, ';': 32, ')': 19, '(': 4, 'tokens': 18, '=': 36, '.': 25, '{': 20, '>': 17, 'Source': 16, 'Attribute': 15, '': 11, '<': 13, 'List': 0, 'Stream': 3, 'Token': 2, 'Based': 1}
{'}\n': 58, ';': 42, ',': 52, '(': 4, 'Class': 10, ')': 7, '.': 37, 'Desc': 19, 'class': 18, '=': 34, '': 1, 'Stream': 16, 'Object': 15}
{'}\n': 192, ';': 30, 'result': 25, 'return': 189, '}': 170, '=': 26, '{': 23, ')': 22, '==': 160, ']': 7, '[': 6, 'a': 8, '(': 4, 'if': 135, '++': 132, '<': 105, 'NUM': 29, '_': 28, 'Index': 12, 'from': 11, 'for': 65, 'length': 60, '.': 52, ',': 9, 'to': 15, 'min': 53, 'Math': 51, '': 50, '-': 27, 'int': 2, 'key': 21, 'byte': 5, 'find': 3, 'static': 1, 'public': 0}
{'}\n': 53, ';': 52, ')': 29, '(': 5, 'get': 46, '.': 32, ',': 43, 'Graph': 10, '': 6, 'new': 35, 'result': 31, 'void': 1, 'private': 0}
{'}\n': 40, ';': 19, ')': 10, ']': 8, 'i': 15, '[': 7, 's': 9, '(': 4, 'Element': 32, 'add': 31, '.': 23, 'states': 29, '++': 27, 'length': 24, '<': 21, 'NUM': 18, '_': 17, '=': 16, 'int': 14, 'for': 12, '{': 11, 'State': 6, '': 5, 'public': 0}
{'}\n': 158, ';': 60, 'result': 30, 'return': 58, '}': 61, '{': 26, ')': 25, 'Key': 9, 'sub': 42, ',': 15, 'h': 13, '(': 11, 'Ex': 37, 'Reg': 7, 'Windows': 6, '': 5, '=': 31, 'NUM': 79, '_': 78, '*=': 117, 'Time': 66, 'sleep': 65, 'e': 108, 'Exception': 107, 'Interrupted': 106, 'catch': 103, '.': 95, 'Thread': 94, 'try': 91, '++': 88, 'i': 76, 'ATTEMPTS': 85, 'MAX_': 84, '<': 82, 'int': 12, 'for': 73, 'TIME': 71, 'SLEEP_': 70, 'INIT_': 69, 'long': 64, 'else': 62, ']': 4, '[': 3, 'Ex1': 10, 'static': 1, 'private': 0}
{'}\n': 27, ';': 17, 'this': 25, 'return': 24, 'task': 8, '=': 21, 'Task': 7, 'Added': 19, 'last': 18, ')': 9, '(': 5, 'add': 3, '.': 12, 'tasks': 11, '{': 10, '': 1, 'Tasker': 2, 'public': 0}
{'}\n': 273, ';': 15, ')': 6, 'NUM': 32, '_': 31, '(': 5, 'Program': 4, 'Use': 9, 'gl': 8, 'get': 63, '.': 26, 'params': 134, '=': 22, 'Binding': 177, 'Image': 176, 'Normal': 253, 'world': 213, ',': 41, 'loc': 149, 'compute': 12, 'Uniformiv': 165, 'Get': 36, 'STR': 96, 'Location': 90, 'Uniform': 85, 'Position': 214, 'framebuffer': 175, 'int': 148, 'Buffer': 18, 'Int': 17, 'create': 27, 'Utils': 25, '': 16, 'Count': 116, 'bounce': 115, 'Factor': 100, 'blend': 99, 'time': 84, 'Size': 21, 'Group': 20, 'work': 19, 'Y': 72, 'X': 57, 'SIZE': 47, 'GROUP_': 46, 'WORK_': 45, 'COMPUTE_': 44, 'GL_': 43, 'Programiv': 37, '{': 7, 'Compute': 3, 'init': 2, 'void': 1, 'private': 0}
{'}\n': 37, '}': 36, ';': 30, 'BOOL': 34, '_': 33, '=': 32, 'sorted': 15, ')': 4, '(': 3, 'sort': 2, '.': 20, '': 18, '{': 5, '!': 14, 'if': 12, 'void': 1, 'public': 0}
{'}\n': 82, ';': 26, 'retval': 64, 'return': 24, ')': 13, '(': 8, 'close': 75, '.': 67, 'in': 32, 'Object': 3, 'read': 68, '=': 34, '': 2, 'Stream': 31, 'Input': 30, 'new': 35, 'buffer': 12, 'Array': 29, 'Byte': 6, 'null': 22, '==': 21, 'if': 18, '{': 17, 'Exception': 16, 'throws': 14, ']': 11, '[': 10, 'byte': 9, 'Buffer': 7, 'From': 5, 'object': 4, 'static': 1, 'public': 0}
{'}\n': 196, ';': 75, ',': 21, '.': 48, 'STR': 169, '_': 56, '(': 6, 'format': 166, 'String': 2, '': 1, '}': 155, 'contains': 138, 'Names': 20, 'Group': 4, 'existing': 18, '!': 133, 'if': 131, ')': 27, 'Name': 5, '=': 31, '{': 28, '>': 17, '<': 14, 'Set': 13, 'generate': 3, 'public': 0}
{'}\n': 29, ';': 28, ')': 15, 'actions': 14, '(': 5, 'this': 17, '{': 16, '...': 13, 'Action': 12, '': 1, 'Group': 4, 'public': 0}
{'}\n': 34, ';': 20, ')': 10, 'row': 9, ',': 27, '(': 15, 'Rows': 23, 'Table': 22, 'fire': 21, '.': 13, '{': 11, 'int': 8, 'public': 0}
{'}\n': 850, ';': 42, ')': 25, 'Spec': 19, 'Measure': 14, 'height': 22, '(': 15, '+': 638, '=': 30, 'Height': 749, '.': 34, 'if': 645, '}': 613, '{': 26, 'else': 614, 'max': 238, 'Width': 247, 'Measured': 528, 'get': 35, '': 9, ',': 20, 'measure': 314, 'At': 307, 'Child': 306, 'child': 303, 'View': 302, '++': 297, '<': 292, 'NUM': 259, '_': 258, 'int': 16, 'for': 283, 'Mode': 45, 'Size': 84, 'width': 17, 'on': 13, 'void': 12, 'protected': 11, 'Override': 10, '@': 8}
{'}\n': 53, ']': 50, 'capacity': 27, '[': 48, 'new': 46, ')': 9, '(': 5, '{': 10, 'int': 6, 'Buffer': 3}
{'}\n': 48, ';': 47, ')': 46, 'Map': 33, '>': 8, 'V': 7, '': 3, ',': 5, 'K': 4, '<': 2, 'static': 1, 'public': 0}
{'}\n': 40, ';': 34, 'BOOL': 33, '_': 26, 'return': 31, '}': 35, '{': 13, ')': 12, 'STR': 27, '(': 7, 'equals': 24, '.': 23, 'Name': 11, 'event': 10, '!': 20, 'if': 14, 'String': 9, '': 1, 'Allowed': 6, 'connection': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 55, ';': 51, 'return': 52, ')': 9, 'NUM': 49, '_': 48, '-': 47, 'char': 45, '(': 5, 'c': 19, 'Whitespace': 37, 'is': 36, '.': 35, 'Character': 34, '': 6, '=': 20, '{': 13, 'IOException': 12, 'throws': 10, 'r': 8, 'Reader': 7, 'protected': 0}
{'}\n': 53, ';': 37, ')': 19, 'separator': 18, ',': 6, '(': 11, 'Array': 46, 'Char': 45, 'to': 44, '.': 43, 'str': 15, 'parse': 10, 'return': 28, '}': 38, '>': 9, '<': 3, 'Map': 2, 'Hash': 31, '': 1, 'new': 29, '{': 20, 'null': 25, '==': 24, 'if': 21, 'char': 17, 'String': 5, 'final': 12, 'public': 0}
{'}\n': 27, ';': 26, ')': 6, '(': 5, '.': 12, 'Schema': 10, 'sub': 9, '{': 7, 'String': 2, '': 1}
{'}\n': 771, '}': 141, ';': 19, ')': 10, 'BOOL': 644, '_': 26, ',': 7, 'node': 14, '(': 4, 'Waiter': 637, 'cancel': 636, 'return': 635, 'interrupted': 752, '.': 62, 'Thread': 433, '': 12, '&&': 409, 'interruptible': 6, 'if': 39, 'null': 16, 'PARKBLOCKER': 668, 'wt': 649, 'Object': 176, 'put': 662, 'U': 61, '=': 15, 'thread': 476, 'time': 601, 'park': 717, 'p': 18, '==': 150, 'prev': 217, 'h': 273, 'whead': 287, 'ABITS': 51, '&': 49, 'state': 47, '||': 692, '!=': 218, 'NUM': 27, '<': 296, 'status': 536, 'this': 68, 'current': 654, '<=': 412, 'Time': 627, 'nano': 626, 'System': 624, '-': 25, 'deadline': 9, 'else': 142, 'long': 1, '{': 11, 'next': 129, 'pp': 277, 'CANCELLED': 568, 'ps': 280, 'WAITING': 559, 'WSTATUS': 553, 'Int': 548, 'Swap': 65, 'And': 64, 'compare': 63, 'np': 275, 'w': 434, 'unpark': 484, 'c': 430, 'cowait': 443, 'WCOWAIT': 462, 'while': 436, 'WNode': 13, 'break': 255, 'k': 324, '--': 138, '>=': 134, 'Seed': 131, 'Secondary': 130, 'Support': 127, 'Lock': 126, 'WBIT': 375, '+': 78, 's': 35, 'ns': 37, 'STATE': 71, 'Long': 66, 'spins': 23, 'int': 22, 'for': 20, '<<=': 317, 'SPINS': 304, 'HEAD_': 303, 'MAX_': 312, 'WTAIL': 241, 'new': 158, 'hd': 156, 'wtail': 188, 'WHEAD': 181, 'WMODE': 163, '>': 118, 'm': 33, 'boolean': 5, 'acquire': 2, 'private': 0}
{'}\n': 13, '{': 9, ')': 8, '(': 7, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 267, '}': 229, ';': 145, ')': 134, '(': 5, '.': 197, 'line': 200, '{': 37, ':': 164, 'String': 29, '': 7, 'new': 44, 'Writer': 41, 'Buffered': 40, '=': 43, 'bw': 42, 'final': 6, 'static': 1, 'public': 0}
{'}\n': 90, '}': 73, ';': 50, ')': 25, '(': 6, '{': 26, 'Exception': 77, '': 7, 'catch': 74, 'Name': 12, 'File': 11, 'Prefix': 10, 'schema': 9, ',': 13, '.': 61, 'file': 57, 'Path': 18, 'Schema': 38, '=': 35, 'container': 23, 'Container': 21, 'String': 8, 'static': 1, 'public': 0}
{'}\n': 15, ';': 14, ')': 5, '(': 4, '.': 10, 'Aborted': 3, 'return': 7, '{': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 195, ';': 39, 'NUM': 18, '_': 17, '+': 87, 'pos': 63, '=': 64, 'Size': 15, 'm': 14, 'value': 9, ']': 30, '[': 24, 'Values': 144, 'key': 5, 'Keys': 23, '}': 42, 'nvalues': 107, 'nkeys': 95, ')': 10, 'length': 54, '.': 53, ',': 6, '(': 3, 'arraycopy': 119, 'System': 117, '': 7, 'n': 79, 'new': 97, 'int': 4, 'Array': 83, 'Int': 82, 'ideal': 81, '{': 11, '>=': 50, 'if': 12, 'gc': 57, '&&': 19, 'Garbage': 46, 'return': 40, 'put': 33, '-': 27, '<=': 21, '!=': 16, 'append': 2, 'void': 1, 'public': 0}
{'}\n': 186, ';': 46, ')': 31, '+': 182, 'STR': 181, '_': 180, '(': 6, 'debug': 178, '.': 76, 'log': 168, 'Enabled': 172, 'Debug': 171, 'is': 170, '=': 118, ',': 86, 'Memory': 4, 'Shared': 3, 'Ipc': 2, '': 1, 'Exception': 36, 'Checked': 35, 'Ignite': 34}
{'}\n': 42, '}': 41, ';': 40, ')': 7, '(': 6, 'close': 5, '.': 19, 'connection': 13, '{': 10, 'null': 15, '!=': 14, 'if': 11, 'void': 4}
{'}\n': 71, ';': 31, ')': 9, ']': 67, '(': 5, 'size': 64, '.': 28, 'Qualifiers': 18, 'new': 17, '[': 60, 'String': 7, '': 1, 'Array': 22, 'to': 54, ',': 46, 'patch': 49, 'minor': 47, 'major': 45, 'Version': 2, 'return': 40, 'qualifier': 8, 'qualifiers': 29, 'this': 27, '>': 16, '<': 13, 'List': 12, '=': 19, '{': 10, 'Qualifier': 4, 'public': 0}
{'}\n': 23, ';': 22, ')': 7, 'addr': 6, '(': 4, 'load': 2, 'return': 9, '{': 8, 'int': 1, 'Signed16': 3, 'public': 0}
{'}\n': 31, ';': 30, ')': 13, 'length': 28, '.': 27, 'array': 12, ',': 22, 'NUM': 24, '_': 23, '(': 8, 'String': 3, 'Hex': 6, 'return': 15, '{': 14, ']': 11, '[': 10, 'byte': 9, '': 2, 'static': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 11, 'handler': 10, '(': 6, '.': 14, 'handlers': 13, '{': 12, 'Handler': 5, 'Baggage': 4, '': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 313, '}': 145, ';': 144, 'x': 8, '{': 61, 'X': 17, 'max': 20, ')': 60, '(': 6, 'min': 16, 'if': 74, 'STR': 142, '_': 141, 'Exception': 139, 'Argument': 138, 'Illegal': 137, '': 136, 'new': 135, 'throw': 134, 'double': 15, ',': 14}
{'}\n': 226, '}': 209, ';': 81, ')': 37, '(': 7, '.': 59, 'expected': 15, '+': 168, 'STR': 167, '_': 87, 'Equals': 116, '{': 38, '++': 97, 'i': 85, 'length': 94, '<': 91, 'NUM': 88, '=': 86, 'int': 84, 'for': 82, 'actual': 35, ']': 14, '[': 13, '': 17, ',': 16, 'Order': 6, 'void': 2}
{'}\n': 41, ';': 40, '=': 37, 'text': 34, '.': 26, '{': 16, ')': 15, '(': 8, 'Text': 3}
{'}\n': 61, ';': 60, ')': 29, 'annotation': 28, '(': 4, 'Type': 43, '.': 41, '{': 30, 'Annotation': 20, '': 16}
{'}\n': 48, ';': 47, ')': 46, 'text': 39, '(': 10, 'parse': 8, 'return': 30, '{': 29, '': 5, ',': 24, 'Node': 6, 'public': 0}
{'}\n': 59, ';': 22, ')': 12, 'EVENT': 56, 'REDRAW_': 55, '': 8, '(': 6, 'Event': 52, 'Update': 51, 'fire': 50, 'Comparator': 45, 'Section': 5, 'new': 42, ',': 41, 'Sections': 25, 'Mark': 4, 'tick': 23, 'sort': 36, '.': 26, 'Collections': 34, 'SECTION': 11, 'return': 21, '==': 17, 'null': 16, 'if': 14, '{': 13, 'final': 7, 'Tick': 3, 'void': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 11, '*': 15, 'lambda': 10, '-': 21, '(': 5, 'exp': 19, '.': 18, 'Math': 17, '': 16, 'return': 13, '{': 12, 'double': 2, ',': 8, 'static': 1}
{'}\n': 12, ';': 11, ')': 3, '{': 4, '(': 2, 'flush': 1, 'void': 0}
{'}\n': 120, ';': 19, 'this': 118, 'return': 117, ')': 11, 'start': 7, '-': 63, 'end': 10, '(': 5, 'length': 14, '}': 105, ']': 68, 'i': 78, '+': 94, '[': 67, '=': 15, 'NUM': 25, '_': 24, 'int': 6, 'for': 75, 'tail': 60, 'Exception': 43, 'Bounds': 42, 'Of': 41, 'Out': 40, 'Index': 39, 'String': 38, '': 1, 'new': 36, 'throw': 35, '<': 23, '||': 26, 'if': 20, '{': 12, ',': 8, 'Buffer': 3, 'Char': 2, 'public': 0}
{'}\n': 19, ';': 18, ')': 10, 'listener': 9, '(': 4, 'add': 2, '.': 13, 'listeners': 12, '{': 11, 'Listener': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 151, ';': 21, ')': 11, '(': 3, '.': 57, 'action': 41, '=': 67, 'if': 50, '': 4, '{': 12, 'public': 0}
{'}\n': 66, ';': 65, ')': 24, '.': 58, '': 3, '(': 11, 'Array': 41, 'Byte': 40, '{': 29, 'Exception': 28, 'Coder': 13, 'throws': 25, ',': 19, 'coder': 18, '>': 5, 'T': 4, '<': 2, 'Base64': 10, 'static': 1, 'public': 0}
{'}\n': 51, '}': 50, ';': 26, ')': 8, '(': 3, 'next': 45, '.': 22, 'iter': 18, '': 4, '{': 13, 'Next': 30, 'has': 29, 'iterator': 23, '=': 19, 'Iterator': 17, 'for': 14, 'void': 1, 'public': 0}
{'}\n': 61, ';': 16, ')': 9, 'result': 12, '(': 4, 'String': 2, 'to': 55, '.': 28, 'Double': 42, '': 1, 'return': 51, '}': 50, ']': 47, 'i': 20, '[': 45, 'values': 8, 'get': 41, 'Handler': 39, 'Function': 38, '{': 10, '++': 32, 'length': 29, '<': 26, 'NUM': 15, '_': 14, '=': 13, 'int': 19, 'for': 17, 'double': 11, '...': 7, 'Object': 6, 'public': 0}
{'}\n': 85, ';': 24, 'null': 23, 'return': 34, '}': 46, ')': 17, 'conn': 21, '(': 31, 'close': 76, '.': 55, 'DBUtils': 74, '': 1, '{': 18, 'finally': 71, 'ex': 51, ',': 40, 'STR': 65, '_': 64, 'SEVERE': 62, 'Level': 59, 'log': 56, 'logger': 54, 'Exception': 50, 'catch': 47, 'Connection': 20, '=': 22, 'try': 25, 'String': 5, 'public': 0}
{'}\n': 100, ';': 32, ')': 22, 'i': 36, '(': 34, 'input': 11, '+': 66, 'output': 57, '{': 23, '++': 50, '<': 42, 'NUM': 39, '_': 38, '=': 37, 'int': 35, 'for': 33}
{'}\n': 23, ';': 22, ')': 11, 'o2': 10, 'compare': 2, '.': 15, 'return': 13, '{': 12, '': 4, ',': 7, 'o1': 6, '(': 3, 'int': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 12, 'al': 11, '(': 7, 'Listener': 6, 'Action': 5, 'add': 2, '.': 17, '{': 13, '': 8, 'void': 1, 'public': 0}
{'}\n': 227, ';': 109, ')': 57, 'Coefficients': 67, '(': 18, 'add': 194, '.': 70, '{': 58, '++': 182, 'length': 162, '<': 175, '=': 68, 'int': 168, 'for': 166, '': 6}
{'}\n': 169, ';': 37, ')': 9, '(': 8, 'String': 5, 'to': 6, '.': 39, 'sb': 14, 'STR': 35, '_': 34, 'append': 40, 'value': 140, 'Buffer': 13, '': 1, 'new': 16, '=': 15, '{': 10, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 115, '}': 98, ';': 26, ')': 10, '(': 6, 'Superclass': 106, 'get': 45, '.': 33, 'clazz': 29, '=': 15, 'offset': 74, '{': 11, 'if': 52, 'f': 41, 'Offset': 80, 'Field': 4, 'object': 78, 'unsafe': 76, 'long': 73, 'NUM': 70, '_': 69, '==': 68, 'STATIC': 66, '': 7, 'Modifier': 63, '&': 61, 'Modifiers': 58, 'Fields': 47, 'Declared': 46, ':': 42, 'for': 37, 'class': 34, 'Object': 32, '!=': 30, 'while': 27, 'static': 1, 'public': 0}
{'}\n': 73, '}': 55, ';': 42, ')': 17, '(': 12, 'remove': 46, '.': 23, 'Array': 35, 'java': 59, 'return': 52, '{': 18, 'else': 56, 'ret': 32, 'js': 34, 'get': 37, '=': 33, 'V': 3, '': 2, 'Script': 25, 'is': 24, 'GWT': 22, 'if': 19, 'final': 1, 'public': 0}
{'}\n': 86, '}': 44, ';': 25, ')': 12, '(': 7, 'Selection': 40, 'attempt': 37, '{': 13, 'STR': 33, '_': 32, 'equals': 30, '.': 19, 'command': 16, 'if': 26, 'else': 45, 'Paint': 60, 'Command': 22, 'Action': 9, 'get': 20, 'event': 11, '=': 17, 'String': 15, '': 1, 'Event': 10, 'Performed': 6, 'action': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 144, '}': 127, ';': 63, ')': 33, '_': 139, '(': 6, '': 7, '.': 76, 'sc': 51, ',': 11, 'CONFIG': 113, 'SERVER_': 112, 'ATTR_': 87, 'put': 108, 'Values': 103, 'Set': 94, '=': 52, 'Map': 72, '{': 47, 'Name': 15, 'instance': 14, 'Token': 10, 'sso': 9, 'Config': 50, 'Server': 4, 'get': 53, 'Service': 49, 'Exception': 43, 'Configuration': 42, 'SSOException': 39, 'SMSException': 36, 'throws': 34, 'String': 13, 'Id': 20, 'SSOToken': 8, 'Instance': 5, 'static': 1, 'public': 0}
{'}\n': 54, '}': 29, ';': 28, ')': 27, '(': 9, 'Exception': 34, '': 3, 'new': 24, 'throw': 43, '{': 18, 'e': 40, 'Access': 38, 'Illegal': 37, 'Instantiation': 33, 'catch': 30, 'Instance': 25, '.': 23, 'clazz': 22, 'return': 21, 'try': 19, 'Class': 11, 'static': 1, 'public': 0}
{'}\n': 99, ';': 57, ')': 34, ',': 14, 'Manager': 89, 'Contact': 11, 'm': 74, '(': 9, 'Millis': 83, 'Time': 82, 'current': 81, '.': 40, 'System': 79, '': 1, 'Settings': 76, 'Rcs': 75, 'Tag': 18, 'feature': 17, 'contact': 13, 'this': 67, 'Session': 5, 'Sip': 3, 'Originating': 62, 'new': 60, 'return': 59, '}': 58, '+': 54, 'STR': 53, '_': 52, 'info': 50, 'Logger': 39, 's': 38, '{': 35, 'Activated': 42, 'is': 41, 'if': 36, 'String': 16, 'Id': 12, 'create': 6, 'Generic': 2, 'public': 0}
{'}\n': 210, ';': 33, ')': 19, ',': 15, '': 5, 'new': 185, '(': 31, '.': 27, '=': 25, 'w': 65, 'get': 28, 'bounds': 24, 'float': 34, 'D': 23, 'Bounds2': 29, 'Rectangle2': 22, '{': 20, 'protected': 0}
{'}\n': 76, ';': 46, ')': 9, '(': 4, 'set': 61, '.': 14, 'get': 33, 'STR': 31, '_': 30, '+': 32, 'fine': 28, 'logger': 13, '{': 10, 'FINE': 22, '': 5, 'Level': 19, 'Loggable': 16, 'is': 15, 'if': 11, 'e': 8, 'Event': 7, 'Component': 6, 'component': 2, 'void': 1, 'public': 0}
{'}\n': 117, ';': 33, ')': 20, '(': 9, 'String': 3, 'to': 112, '.': 38, 'buf': 25, 'return': 109, '}': 107, 'STR': 104, '_': 66, 'append': 101, '{': 21, 'NUM': 67, '-': 94, '<': 72, 'i': 64, 'if': 89, ',': 85, ']': 12, '[': 11, 'block': 13, '++': 76, '=': 26, 'int': 34, 'for': 61, 'length': 56, 'len': 35, 'Buffer': 24, '': 2, 'new': 27, 'byte': 10, 'Hex': 7, 'public': 0}
{'}\n': 115, ';': 70, ')': 59, '(': 49, '.': 74, 'label': 56, '{': 60, 'Label': 8, '': 50, 'void': 1}
{'}\n': 109, ';': 92, 'length': 13, '+=': 94, 'written': 93, ')': 14, ',': 8, 'offset': 10, 'b': 7, '(': 3, 'write': 2, '.': 22, '{': 49, 'throws': 15, 'int': 9, ']': 6, '[': 5, 'byte': 4, 'void': 1, 'public': 0}
{'}\n': 56, ';': 54, ')': 10, 'y': 23, '*': 20, '+': 22, 'x': 19, '(': 4, 'sqrt': 17, '.': 16, 'Math': 15, '': 14, '{': 11, 'public': 0}
{'}\n': 102, ';': 80, ')': 19, 'Bound': 38, 'right': 98, ',': 13, 'left': 15, '(': 9, 'max': 90, '.': 84, 'Math': 83, '': 1, 'min': 85, 'return': 81, 'int': 4, 'NUM': 32, '_': 31, '=': 39, '{': 20, 'dx': 18, 'child': 12, 'View': 6, 'Horizontal': 8, 'Position': 7, 'clamp': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 16, ')': 14, 'request': 8, 'Request': 7, 'Servlet': 6, 'Http': 5, '': 4, '(': 3}
{'}\n': 37, ';': 23, 'temp': 12, 'return': 31, '=': 25, ')': 9, '-': 16, '(': 6, '{': 10, 'To': 3, 'convert': 2}
{'}\n': 18, ';': 17, ')': 9, ',': 14, 'request': 8, '(': 3, '{': 10, 'Request': 7, '': 4, 'public': 0}
{'}\n': 113, ';': 44, '}': 108, ')': 43, '(': 9, '.': 46, 'stmt': 13, ',': 14, 'NUM': 51, '_': 50, 'String': 59, 'set': 47, '': 4, 'Statement': 12, 'Prepared': 11, 'Set': 2}
{'}\n': 57, ';': 20, 'result': 16, 'return': 54, '}': 53, 'i': 24, '<<': 50, ')': 10, '(': 5, 'read': 3, '.': 46, 'stream': 9, 'long': 2, '|=': 41, '{': 14, 'NUM': 19, '_': 18, '+=': 35, '<=': 30, '=': 17, 'int': 23, 'for': 21, 'IOException': 13, '': 6, 'throws': 11, 'Stream': 8, 'Input': 7, 'static': 1, 'public': 0}
{'}\n': 116, ';': 24, ')': 11, '(': 6, 'get': 31, '.': 30, '': 1, 'new': 94, '=': 28, 'Token': 82, 'lexer': 15}
{'}\n': 24, ';': 23, ')': 7, 'record': 6, '(': 3, 'Null': 18, 'Non': 17, 'require': 16, '.': 10, 'Objects': 14, '': 4, '{': 8}
{'}\n': 34, ';': 17, ')': 6, '(': 5, 'BOOL': 23, '_': 22, '.': 19, 'scheduled': 18, 'Size': 10, '{': 7, 'void': 1, 'private': 0}
{'}\n': 90, ';': 27, ')': 14, '(': 5, 'String': 3, 'to': 85, '.': 67, 'buffer': 19, 'return': 82, '}': 63, 'next': 48, 'append': 68, 'separator': 13, '{': 15, 'else': 64, 'BOOL': 32, '_': 31, '=': 20, 'first': 29, 'if': 34, 'self': 9, ':': 49, 'for': 45, 'STR': 43, 'null': 38, '==': 37, 'boolean': 28, 'Builder': 18, '': 2, 'new': 21, ',': 10, ']': 8, '[': 7, 'join': 4, 'static': 1, 'public': 0}
{'}\n': 90, ';': 89, '(': 15, '.': 42, 'Amp': 7, 'Binding': 6, '': 2, '{': 24, ')': 23, 'key': 22, '>': 4, 'T': 3, '<': 1, 'Key': 17, 'find': 12, 'private': 0}
{'}\n': 425, ';': 15, ')': 6, 'NUM': 32, '_': 31, '(': 5, 'Program': 4, 'Use': 9, 'gl': 8, 'get': 63, '.': 26, 'params': 285, '=': 22, 'Binding': 290, 'Image': 328, 'Normal': 405, 'world': 365, ',': 41, 'loc': 301, 'compute': 12, 'Uniformiv': 317, 'Get': 36, 'STR': 96, 'Location': 90, 'Uniform': 85, 'Position': 366, 'framebuffer': 327, 'int': 178, 'Ssbo': 289, 'null': 283, 'props': 281, 'Index': 181, 'Resource': 180, 'BLOCK': 196, 'STORAGE_': 195, 'SHADER_': 194, 'GL_': 43, '': 16, 'Resourceiv': 266, 'Factor': 100, 'blend': 99, 'time': 84, 'Size': 21, 'Group': 20, 'work': 19, 'Y': 72, 'X': 57, 'SIZE': 47, 'GROUP_': 46, 'WORK_': 45, 'COMPUTE_': 44, 'Programiv': 37, 'Buffer': 18, 'Int': 17, 'create': 27, 'Utils': 25, '{': 7, 'Compute': 3, 'init': 2, 'void': 1, 'private': 0}
{'}\n': 117, ';': 116, ')': 45, 'response': 54, '(': 10, '.': 59, '{': 46, 'Response': 9, '': 11, 'public': 0}
{'}\n': 203, '}': 36, ';': 35, ')': 13, 'NUM': 44, '_': 43, '/': 197, 'Y': 40, 'Max': 48, 'n': 38, '+': 192, 'Min': 39, '(': 4, ',': 187, 'Node': 59, 'set': 183, '.': 68, 'Position': 83, 'm_n': 179, 'i': 58, 'get': 82, 'nodes': 12, '=': 41, 'int': 37, '{': 14, '++': 75, 'size': 69, '<': 8, 'for': 55, '==': 106, '||': 103, '>': 11, 'if': 15, '-': 42, 'Action': 20, 'new': 27, 'Undo': 19, 'add': 23, 'Needs': 18, 'm_b': 17, 'Integer': 10, '': 5, 'List': 7, 'Array': 6, 'void': 1, 'public': 0}
{'}\n': 27, ';': 25, 'text': 13, '.': 20, '{': 17, ')': 16, 'String': 7, '': 6, 'Text': 3}
{'}\n': 51, ';': 34, ')': 12, '(': 6, '.': 17, 'State': 11, 'Instance': 10, 'saved': 9, '{': 13, 'Bundle': 8, '': 7, 'on': 2, 'void': 1, 'public': 0}
{'}\n': 52, ';': 25, ')': 10, '(': 3, 'Instance': 47, 'get': 46, '.': 15, 'Calendar': 44, '': 1, 'peg': 41, '=': 29, 'day': 37, 'this': 26, 'hour': 28, 'byte': 31, 'STR': 23, '_': 22, ',': 6, 'Permitted': 18, 'Not': 17, 'null': 16, 'Checks': 14, 'Param': 13, '{': 11, 'int': 4, 'public': 0}
{'}\n': 221, ';': 69, ')': 15, 'NUM': 182, '_': 149, '.': 104, '(': 7, 'm_temp': 37, '=': 50, '': 45, '{': 16, 'null': 42, '!=': 41, 'if': 31, 'void': 1, 'public': 0}
{'}\n': 92, ';': 47, ')': 8, '(': 29, 'Connected': 4, 'is': 3, '.': 35, '&&': 66, 'null': 65, '!=': 64, 'return': 62, 'Info': 50, 'Network': 49, 'Active': 56, 'get': 36, 'cm': 27, '=': 28, '': 24, 'SERVICE': 45, 'CONNECTIVITY_': 44, 'Context': 41, 'Service': 38, 'System': 37, 'context': 12, 'Manager': 26, 'Connectivity': 25, '{': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 4, '(': 3, 'flush': 17, '.': 16, 'writer': 11, 'null': 13, '!=': 12, 'if': 9, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'void': 1, 'public': 0}
{'}\n': 109, '}': 91, ';': 90, ')': 15, '(': 63, 'close': 103, '.': 102, 'in': 74, '{': 22, 'finally': 92, 'read': 71, 'file': 64, 'Stream': 55, 'Input': 54, 'File': 30, '': 5, 'new': 58, 'IOException': 18, 'throws': 16, 'public': 0}
{'}\n': 58, ';': 33, 'null': 56, 'return': 42, '}': 54, ')': 18, 'NUM': 39, '_': 38, '+': 49, 'pos': 21, '(': 9, 'substring': 46, '.': 25, 'ID': 8, 'media': 16, '{': 19, '>=': 37, 'if': 34, 'SEPARATOR': 31, 'LEAF_': 30, '': 2, 'Of': 27, 'index': 26, '=': 22, 'int': 20, 'String': 3, 'Media': 7, 'IDFrom': 6, 'Music': 5, 'extract': 4, 'static': 1, 'public': 0}
{'}\n': 78, ';': 26, 'dest': 17, 'return': 75, '}': 73, ')': 12, '(': 6, 'Value': 69, '.': 23, 'v': 47, '=': 18, ']': 4, 'i': 30, '[': 3, '{': 13, 'null': 58, '!=': 57, 'if': 54, 'array': 11, '': 7, '++': 42, 'length': 24, '<': 36, 'NUM': 33, '_': 32, 'int': 29, 'for': 27, 'new': 19, 'values': 5, 'static': 1, 'public': 0}
{'}\n': 283, ';': 77, ')': 14, '(': 8, '.': 131, '}': 228, 'continue': 208, 'STR': 194, '_': 193, 'if': 166, '=': 128, 'line': 68, 'String': 63, '': 9, '{': 50, 'void': 4, 'public': 3}
{'}\n': 292, ';': 38, 'return': 289, '}': 162, '(': 56, 'if': 86, ')': 6, '_': 36, '.': 54, '=': 42, '++': 167, 'constraint': 72, 'NUM': 44, 'str': 122, '{': 7, 'ONE': 99, 'EXACTLY_': 98, 'COUNT_': 97, '': 48, 'Constraint': 71, 'Format': 70, '==': 91, 'count': 90, 'Element': 82, 'next': 81, 'e': 50, 'Elements': 63, 'More': 62, 'has': 61, 'elements': 55, 'Constraints': 53, 'format': 52, 'Enumeration': 49, 'String': 2}
{'}\n': 77, ';': 30, ')': 9, '(': 4, 'Short': 27, 'read': 2, '.': 24, 'din': 8, '=': 22, 'Unsigned': 26, '{': 13, 'IOException': 12, '': 5, 'throws': 10, 'Input': 7, 'Data': 3, 'void': 1, 'public': 0}
{'}\n': 43, '}': 34, ';': 33, '{': 16, ')': 7, '+': 30, '_': 13, '(': 4, '.': 22, '': 20, 'indentation': 17, 'NUM': 14, 'int': 5}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'get': 9, '.': 8, 'capacity': 2, 'return': 6, '{': 5, 'public': 0}
{'}\n': 114, ';': 25, ')': 5, ',': 105, '': 11, '.': 8, 'sym': 100, '(': 4, 'str_token': 98, 'new': 19, 'return': 96, 'result': 17, '}': 67, '_': 45, 'next_char': 38, 'while': 34, 'advance': 30, 'Buffer': 16, 'String': 15, '=': 18, '{': 13, 'IOException': 12, 'io': 9, 'java': 7, 'throws': 6, 'token': 2, 'static': 1, 'protected': 0}
{'}\n': 72, ';': 71, '+': 63, 'min': 61, '-': 60, 'max': 42, '(': 23, 'Int': 57, 'next': 56, '.': 55, 'return': 47, '{': 46, ')': 45, 'int': 14, '': 17, 'public': 0}
{'}\n': 172, ';': 20, ')': 4, '(': 3, 'assert': 69, 'STR': 108, '_': 52, '.': 39, '': 7, 'btree': 24, ',': 64, 'NUM': 53, 'new': 12, '=': 11, '{': 5, 'Store': 17, 'Raw': 16, 'Memory': 15, 'Simple': 14, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 63, ';': 62, 'return': 55, ')': 21, '(': 6, ',': 16, 'path': 27, 'File': 13, '': 2, 'paths': 15, '{': 22, 'String': 18, '>': 14, 'extends': 11, '?': 10, '<': 9, 'Iterable': 8, 'static': 1, 'public': 0}
{'}\n': 287, ';': 88, ')': 32, '(': 20, 'repository': 30, '.': 44, '{': 33, '': 21, 'void': 1}
{'}\n': 149, ';': 82, 'Id': 38, 'session': 37, '.': 129, '': 19, '=': 109, 'id': 96, '}': 84, ')': 33, 'STR': 65, '_': 64, '(': 23, '{': 42, 'null': 40, 'if': 35, 'public': 0}
{'}\n': 181, ';': 20, ')': 9, 'STR': 48, '_': 47, '(': 27, '.': 37, 'execute': 45, 'stat': 34, 'Statement': 39, 'create': 38, 'conn': 36, '=': 35, 'Connection': 26, 'get': 25, '': 11, '{': 13, 'throws': 10}
{'}\n': 234, ';': 233, ')': 42, '(': 37, '.': 221, 'count': 203, 'return': 44, '{': 43, 'size': 31, 'int': 26}
{'}\n': 68, ';': 53, ')': 23, 'Name': 28, ',': 63, '(': 30, 'STR': 50, '_': 41, '.': 36, 'prefix': 22, '=': 29, 'String': 12, '': 7, 'URI': 18, 'ns': 17, 'doc': 9, 'Document': 8, 'Element': 3, 'public': 0}
{'}\n': 83, ';': 50, ')': 20, 'UTF_8': 77, '': 6, '.': 35, 'Charsets': 74, 'Standard': 73, '(': 39, 'file': 40, 'Files': 34, '{': 24, 'IOException': 23, 'throws': 21, 'String': 14, 'static': 1, 'public': 0}
{'}\n': 253, ';': 38, 'return': 250, ')': 18, ',': 10, '(': 7, 'Location': 243, 'set': 242, '.': 31, '-': 227, 'Math': 30, '': 2, '=': 27, 'double': 8, 'Rad': 34, 'To': 33, 'deg': 32, 'Proj': 29, 'lon': 12, '{': 19, 'D': 16, 'Point2': 15, 'lat': 9}
{'}\n': 327, ';': 118, ')': 9, '': 23, '.': 26, '==': 172, 'Value': 21, 'selected': 20, '(': 4, 'return': 128, 'STR': 39, '_': 38, 'Message': 46, 'get': 35, 'Bundle': 43, ',': 32, '}': 106, '{': 10, ']': 76, '[': 75, 'Object': 74, 'new': 72, 'null': 70, 'MESSAGE': 68, 'QUESTION_': 67, 'Pane': 25, 'JOption': 24, 'OPTION': 60, 'NO_': 58, 'YES_': 57, 'Dialog': 29, 'Option': 28, 'show': 27, '=': 22, 'int': 19, 'boolean': 1}
{'}\n': 140, ';': 75, ')': 25, 'image': 45, '(': 13, '_': 97, '=': 54, '.': 68, '': 62, '{': 29, 'public': 0}
{'}\n': 17, ';': 16, ')': 6, '(': 5, 'get': 13, '.': 12, 'Size': 4, 'return': 8, '{': 7, 'Queue': 3, 'int': 1}
{'}\n': 43, ';': 35, ')': 19, '(': 5, 'Components': 37, 'init': 36, 'MODAL': 33, 'DOCUMENT_': 32, '': 1, '.': 30, 'Type': 29, 'Modality': 28, ',': 9, 'title': 12, 'parent': 8, 'super': 21, '{': 20, 'String': 11, 'JFrame': 7, 'public': 0}
{'}\n': 367, '}': 341, ';': 33, ')': 23, '(': 6, '{': 24, 'else': 342, 'Pt': 43, 'add': 2, '.': 55, 'List': 320, 'seg': 319, 'if': 308, '_': 97, '=': 52, ',': 11, 'NUM': 98, 'Coordinate': 264, '': 7, 'new': 250, 'mitre': 149, 'double': 17, 'p1': 86, 'p0': 79, 'distance': 18, 'offset1': 15, 'Segment': 9, 'Line': 8, 'offset0': 10, 'Join': 5, 'Mitre': 4, 'void': 1, 'private': 0}
{'}\n': 146, ';': 17, ')': 9, '(': 8, 'scale': 141, '.': 107, 'result': 103, ',': 72, 'Scale': 5, 'c': 42, 'STR': 16, '_': 15, 'Equals': 115, 'assert': 114, 'String': 12, 'to': 124, 'Number': 58, 'b': 27, 'multiply': 108, 'a': 13, '=': 14, 'Decimal': 56, 'Big': 55, '': 11, 'Integer': 68, 'new': 60, 'NUM': 23, 'int': 18, '{': 10, 'Diff': 4, 'Multiply': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 10, 'd': 9, '(': 7, 'format': 4, '.': 15, 'Format': 14, 'simple': 13, 'return': 12, '{': 11, 'double': 8, 'Decimal': 6, 'Simple': 5, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 94, ';': 93, ')': 17, '(': 7, 'Instance': 74, 'Percent': 73, 'get': 72, '.': 71, 'Format': 11, 'Number': 69, '': 1, ',': 12, 'formatter': 16, 'label': 10, '{': 18, 'String': 9, 'Generator': 6, 'Label': 5, 'Item': 4, 'Category': 3, 'Abstract': 2, 'protected': 0}
{'}\n': 664, ';': 19, ')': 10, 'options': 382, ',': 7, 'Last': 658, '(': 4, 'repaint': 642, '}': 123, 'Vis': 18, 'hsb': 13, '^': 635, 'Was': 14, '_': 62, '+': 519, 'get': 529, 'STR': 518, 'finest': 515, '.': 52, 'log': 496, '{': 11, 'FINEST': 509, '': 298, 'Level': 506, 'Logger': 503, 'Platform': 502, 'Loggable': 499, 'is': 498, 'if': 39, 'NUM': 194, 'PAINT_': 385, '=': 16, 'int': 8, '<': 163, 'items': 116, 'size': 118, 'vsb': 21, 'boolean': 12, 'void': 1, 'public': 0}
{'}\n': 119, ';': 30, 'id': 12, 'NUM': 15, '_': 14, ')': 9, '(': 4, '{': 10, '': 5}
{'}\n': 42, ';': 30, 'cache': 36, '=': 22, '(': 4, 'void': 1}
{'}\n': 334, '}': 37, ';': 36, ')': 6, 'STR': 61, '_': 60, '(': 2, '.': 49, 'Exception': 10, 'Parsing': 9, '': 3, 'new': 29, 'throw': 307, '{': 14, 'else': 305, 'Entries': 296, 'null': 243, '!=': 292, 'if': 15, 'Entry': 278, 'parse': 281, '=': 28, 'peek': 269, 'st': 38, 'BOOL': 188, 'Comments': 204, 'Star': 213, 'slash': 202, 'Slash': 203, 'Char': 157, 'ordinary': 193, 'Mode': 185, 'Case': 184, 'lower': 183, 'quote': 165, 'comment': 156, ',': 11, 'NUM': 133, 'Chars': 58, 'whitespace': 144, '+': 134, 'word': 57, 'Syntax': 51, 'reset': 50, 'policy': 5, 'Tokenizer': 43, 'Stream': 42, 'Reader': 4, 'Buffered': 22, 'instanceof': 20, '!': 17, 'IOException': 13, 'throws': 7, 'read': 1, 'void': 0}
{'}\n': 185, '}': 72, ';': 51, ')': 35, '(': 7, 'String': 12, 'to': 131, '.': 82, 'value': 39, '{': 36, 'Name': 76, 'characterstic': 75, '!=': 94, 'null': 54, '&&': 96, 'if': 52, 'Key': 24, 'Volume': 4, 'get': 41, 'Supported': 79, '': 8, '=': 40, 'alt': 28, ',': 13, 'Instance': 34, 'volume': 18, 'Value': 43, 'CIMProperty': 42, '==': 55, 'Object': 38, 'CIMInstance': 32, '>': 17, '<': 10, 'Map': 9, 'Container': 6, 'Into': 3, 'inject': 2, 'void': 1, 'protected': 0}
{'}\n': 42, ';': 29, ')': 16, 'View': 9, 'recycler': 14, '(': 10, 'remove': 36, '.': 19, 'Pool': 34, 'Recycler': 8, 'Attached': 31, 'm': 30, 'From': 7, 'Detached': 6, 'on': 5, 'super': 18, '{': 17, '': 1, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 106, ';': 23, ')': 15, '(': 4, 'Name': 102, 'create': 31, 'BOOL': 98, '_': 42, 'Changed': 95, 'set': 70, 'model': 22, 'Model': 21, '.': 25, 'Table': 20, 'm_': 26, '}': 51, 'Index': 73, 'Attribute': 72, 'Show': 71, 'get': 75, 'loaders': 14, ',': 8, 'filename': 7, 'Sorted': 19, '': 5, 'new': 56, '=': 28, '{': 16, 'else': 52, 'null': 49, 'STR': 43, 'equals': 40, 'if': 36, 'Title': 32, 'Filename': 27, 'this': 24, '...': 13, 'Loader': 12, 'File': 3, 'Abstract': 10, 'String': 6, 'load': 2, 'void': 1, 'private': 0}
{'}\n': 623, ';': 228, ')': 142, '(': 136, '.': 235, 'Text': 363, 'set': 362, 'Results': 105, 'm_': 231, 'if': 229, 'Selected': 237, 'get': 236, 'Result': 441, '}': 425, 'STR': 366, '_': 324, '{': 143, 'NUM': 325, '-': 323, '==': 299, 'Index': 254, '': 176, 'void': 1}
{'}\n': 171, '}': 167, ';': 46, ')': 13, '(': 8, 'in': 12, '{': 17, '.': 22, 'NUM': 44, '_': 43, ']': 53, '[': 52, 'magic': 80, 'read': 66, '=': 55, 'byte': 51, '': 9, 'Supported': 24, 'mark': 23, '!': 20, 'if': 18, 'IOException': 16, 'throws': 14, 'Stream': 11, 'Input': 10, 'Gzip': 6, 'static': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 8, '(': 7, 'Code': 6, 'hash': 5, '.': 18, 'return': 16, '{': 9, 'int': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 222, ';': 81, ')': 27, '(': 23, '.': 193, '': 31, 'return': 172, '-': 137, 'NUM': 47, '_': 46, '<<': 133, '=': 130, 'int': 17, '}': 82, 'STR': 79, 'Exception': 34, 'Argument': 33, 'Illegal': 32, 'new': 66, 'throw': 65, '{': 64, '>': 51, 'Length': 19, 'prefix': 18, '||': 48, '<': 45, 'if': 41, 'static': 1, 'public': 0}
{'}\n': 93, ';': 92, ')': 35, 'subject': 82, '(': 7, 'add': 71, '': 8, 'Subject': 6, ',': 12, 'public': 0}
{'}\n': 114, ';': 19, 't': 61, '=': 23, 'vector': 28, ')': 10, 'd': 9, ',': 7, 'size': 16, 'Size': 22, 'old': 21, '(': 4, 'fill': 98, '.': 29, 'Arrays': 96, '': 69, 'NUM': 37, '_': 36, '!=': 91, 'if': 12, 'arraycopy': 72, 'System': 70, ']': 60, 'capacity': 26, '[': 59, 'new': 63, '*=': 54, '<': 15, 'while': 47, 'return': 18, '>=': 42, '+': 35, 'index': 6, 'length': 30, 'int': 5, '{': 11, 'For': 3, 'expand': 2, 'void': 1, 'protected': 0}
{'}\n': 252, ';': 41, 'Line': 15, 'command': 42, ')': 40, '(': 52, 'add': 46, '.': 45, '}': 144, 'Class': 221, '{': 124, 'null': 89, 'if': 84, 'STR': 132, '_': 131, 'Path': 112, '!=': 88, 'All': 77, 'List': 9, '>': 13, 'String': 12, '': 8, '<': 10, 'private': 0}
{'}\n': 35, ';': 34, ')': 10, ',': 31, 'hex': 9, '(': 6, '.': 25, 'Tileset': 24, '{': 11, 'IHex': 8, '': 7}
{'}\n': 72, ';': 52, '(': 6, ')': 36, 'STR': 50, '_': 49, 'encoded': 15, 'String': 14, '': 13, 'public': 0}
{'}\n': 96, ';': 35, ')': 21, '(': 6, 'get': 55, '.': 28, 'spec': 11, ',': 12, 'STR': 33, '_': 32, 'Attribute': 48, 'set': 47, 'parameter': 25, 'Name': 57, 'Class': 73, 'Package': 56, 'Child': 39, 'append': 38, 'Element': 18, 'create': 29, 'document': 15, '=': 26, '': 7, '{': 22, 'parent': 19, 'Document': 14, 'Spec': 5, 'Java': 3, 'write': 2, 'void': 1, 'private': 0}
{'}\n': 38, ';': 28, ')': 10, 'actions': 34, '(': 4, 'Mask': 32, 'get': 31, 'init': 29, 'Object': 3, 'Read': 24, 'default': 23, '.': 22, 's': 9, '{': 20, 'Exception': 19, 'Found': 18, 'Not': 17, 'Class': 16, '': 5, ',': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'read': 2, 'void': 1, 'private': 0}
{'}\n': 99, ';': 46, ')': 16, 'Source': 70, 'input': 71, '(': 7, 'parse': 6, 'URI': 15, 'base': 14, 'Id': 87, 'System': 86, 'set': 85, '.': 84, 'Input': 69, '': 1, 'new': 37, '=': 73, '}': 47, 'STR': 44, '_': 43, 'Exception': 23, 'Argument': 40, 'Illegal': 39, 'throw': 36, '{': 28, 'null': 33, '==': 32, 'if': 29, 'RDFHandler': 26, ',': 11, 'RDFParse': 22, 'IOException': 19, 'throws': 17, 'String': 13, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 55, ';': 54, 'NUM': 36, '_': 35, '(': 6, '.': 25, 'text': 9, ')': 32, '-': 34, 'idx': 13, 'int': 12, 'String': 8, '': 7}
{'}\n': 31, ';': 24, 'f': 16, ')': 9, 's': 8, '(': 5, 'File': 15, '': 6, 'new': 18, '=': 17, '{': 13, 'String': 7, 'static': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 18, '(': 8, '.': 27, '': 13, 'Index': 11, 'row': 10, '{': 19, ',': 12, 'int': 9, 'insert': 7, 'void': 6, 'public': 4}
{'}\n': 57, ';': 45, 'max': 46, ':': 43, 'val': 42, '?': 41, '>': 49, '=': 28, 'min': 36, '<': 39, '.': 30, '{': 24, ')': 23, '': 18, '(': 17, 'put': 5, 'void': 4, 'public': 3}
{'}\n': 59, ';': 21, 'ib': 37, 'return': 56, ')': 8, 'NUM': 19, '_': 18, '(': 7, 'limit': 50, '.': 42, 'holder': 13, 'wrap': 43, 'Buffer': 3, 'Int': 2, '': 1, '=': 14, 'Version': 5, 'get': 28, ']': 12, '[': 11, 'int': 10, 'new': 15, '{': 9, 'public': 0}
{'}\n': 23, ';': 22, ')': 11, 'source': 5, '(': 6, 'return': 13, '{': 12, 'Request': 4, 'Create': 2, '': 1, 'public': 0}
{'}\n': 94, ';': 46, ')': 27, 'digest': 26, 'length': 65, ',': 59, '(': 9, '.': 39, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 26, ';': 22, 'return': 23, ')': 11, 'Modified': 5, '.': 14, 'long': 9, '(': 7}
{'}\n': 40, ';': 22, ')': 38, '(': 6, 'Path': 36, 'Absolute': 35, 'get': 34, '.': 16, 'file': 12, 'File': 11, '': 2, 'public': 0}
{'}\n': 54, ';': 40, ')': 28, 'dims': 17, ',': 13, '(': 6, 'Instance': 47, 'new': 46, '.': 23, 'Array': 44, '': 2, 'NUM': 27, '_': 26, ']': 16, 'length': 24, '[': 15, 'int': 14, '>': 11, '?': 10, '<': 9, 'Class': 8, 'Object': 3, 'static': 1, 'public': 0}
{'}\n': 109, ';': 72, ')': 33, 'e': 65, '(': 13, '.': 41, 'LOG': 36, '': 16, 'Message': 68, 'get': 67, 'Exception': 8, 'void': 2, 'protected': 0}
{'}\n': 32, ';': 16, ')': 6, '(': 5, 'String': 2, 'to': 27, '.': 9, 'sb': 8, 'return': 24, 'Buffer': 19, 'make': 17, 'NUM': 14, '_': 13, 'Length': 11, 'set': 10, '{': 7, 'Statistics': 4, 'request': 3, '': 1, 'public': 0}
{'}\n': 201, ';': 197, ')': 46, 'NUM': 159, '_': 158, ']': 69, '[': 67, 'x': 12, 'k': 44, '{': 47, 'int': 32, 'final': 6, '(': 5, 'private': 0}
{'}\n': 35, '}': 34, ';': 33, ')': 12, '(': 7, 'Code': 29, 'Key': 9, 'get': 27, '.': 22, 'e': 11, 'add': 23, 'Down': 21, 'keys': 20, '{': 13, 'Lock': 17, 'key': 5, 'synchronized': 14, 'Event': 10, '': 1, 'Pressed': 6, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 48, '}': 28, ';': 27, 'null': 45, 'return': 19, ')': 15, '(': 7, 'Trace': 40, 'Stack': 39, 'print': 38, '.': 37, 'e': 33, '{': 16, 'Exception': 32, '': 2, 'catch': 29, 'u': 10, 'URL': 9, 'slurp': 4, 'try': 17, 'Exceptions': 6, 'URLNo': 5, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 119, ';': 78, 'result': 84, 'return': 116, ')': 47, 'length': 93, '.': 59, 'participants': 54, ',': 15, 'NUM': 104, '_': 103, '(': 10, 'arraycopy': 99, 'System': 97, '': 2, ']': 6, '[': 5, 'Participant': 4, 'new': 86, '=': 55, 'shared': 46, 'Natures': 74, 'affected': 73, 'filter': 34, 'arguments': 28, 'element': 23, 'processor': 19, 'status': 14, 'Participants': 9, 'get': 60, 'fg': 56, 'Refactoring': 12, '{': 48, 'Sharable': 44, 'String': 37, 'Filter': 33, 'Descriptor': 32, 'IParticipant': 31, 'Arguments': 27, 'Object': 22, 'Processor': 18, 'Status': 13, 'load': 7, 'static': 1, 'public': 0}
{'}\n': 105, ';': 103, ')': 42, 'neighbor': 21, '(': 7, '.': 69, '{': 43, '': 16}
{'}\n': 47, ';': 30, ')': 16, 's': 20, '(': 5, 'fill': 42, '.': 32, 'g': 9, 'Color': 37, 'Paint': 34, 'set': 33, 'height': 15, ',': 10, 'width': 12, 'Path': 24, 'Arrow': 23, 'decode': 22, '=': 21, 'Shape': 19, '': 6, '{': 17, 'int': 11, 'D': 8, 'Graphics2': 7, 'Foreground': 3, 'paint': 2, 'void': 1, 'private': 0}
{'}\n': 321, '}': 150, ';': 99, ')': 36, '(': 30, '.': 80, '{': 37, 'user': 187, 'get': 81, '!': 212, 'if': 51, 'User': 19, '': 117, 'void': 1, 'private': 0}
{'}\n': 53, ';': 33, ')': 8, '(': 7, '.': 11, 'STR': 21, '_': 20, ',': 19, 'FINE': 18, '': 1, 'Level': 15, 'log': 10, '{': 9, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 42, '}': 41, ';': 40, ')': 7, '(': 6, 'close': 5, '.': 19, 'connection': 13, '{': 10, 'null': 15, '!=': 14, 'if': 11, 'void': 4}
{'}\n': 44, ';': 27, ')': 12, '(': 3, '.': 29, 'validator': 7, 'null': 18, '==': 17, 'if': 14, 'Validator': 6, '': 4, 'void': 1}
{'}\n': 159, ';': 23, ')': 9, '(': 3, 'Score': 155, 'calc': 153, 'Cycles': 148, 'has': 147, 'while': 145, '}': 52, ']': 13, 'i': 27, '[': 12, 'm_bits': 19, '.': 20, 'other': 8, '=': 15, '{': 10, '++': 39, 'length': 21, '<': 33, 'Point': 57, 'Over': 2, 'Cross': 55, 'int': 26, 'for': 24, 'Int': 104, 'next': 103, 'm_random': 101, 'bits': 14, 'do': 63, 'NUM': 30, '_': 29, 'boolean': 11, 'new': 16, 'Representation': 7, 'Net': 6, 'Bayes': 5, '': 4, 'cross': 1, 'void': 0}
{'}\n': 16, ';': 10, 'INITIAL': 14, '': 13, '=': 12, 'state': 11, ')': 4, '(': 3, 'engine': 6, '{': 5, 'public': 0}
{'}\n': 54, ';': 53, ')': 15, 'perspective': 32, '(': 6, 'Perspective': 5, '.': 22, 'model': 21, '{': 16, 'String': 9, '': 8, 'final': 7, 'public': 0}
{'}\n': 22, ';': 21, ')': 7, 'NUM': 12, '_': 11, 'return': 9, '{': 8, 'double': 2, '(': 4, 'phred': 3, 'static': 1, 'public': 0}
{'}\n': 70, ';': 37, ')': 20, '(': 14, 'expected': 19, '.': 54, '': 1, 'return': 35, 'Type': 11, 'if': 27, '{': 26, '@': 0}
{'}\n': 131, '}': 121, ';': 24, ')': 6, '(': 5, 'close': 126, '.': 17, 'stmt': 14, '{': 10, 'finally': 122, 'Update': 53, 'execute': 52, ',': 34, 'NUM': 33, '_': 21, 'String': 106, 'set': 29, 'Int': 30, 'try': 25, 'STR': 22, 'Statement': 13, 'prepare': 18, 'connection': 16, '=': 15, 'Prepared': 12, '': 8, 'Exception': 9, 'throws': 7, 'Set': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 209, ';': 28, 'Detail': 25, 'demand': 24, 'return': 205, '}': 204, ')': 18, 'ZERO': 49, '': 7, '.': 40, 'Decimal': 9, 'Big': 8, ',': 13, '(': 5, 'Details': 2, 'Demand': 1, '=': 26, 'STR': 118, '_': 52, 'Exception': 115, 'Runtime': 114, 'Application': 113, 'new': 111, 'throw': 110, 'null': 27, '==': 107, 'Reason': 73, 'eg': 75, 'if': 29, 'module': 153, 'Master': 74, 'Mod': 143, 'And': 142, 'Install': 141, 'Mster': 140, 'Dmd': 135, 'By': 88, 'get': 84, 'Generic': 81, 'Eg': 0, 'final': 6, 'CODE_': 93, 'DEMANDRSN_': 92, 'Code': 89, '{': 19, 'NUM': 53, '>': 51, 'To': 42, 'compare': 41, '&&': 36, '!=': 34, 'insert': 3}
{'}\n': 75, ';': 24, ')': 9, '(': 4, 'get': 20, '.': 19, 'bb': 8, '=': 37, 'Float': 61, 'Int': 21, '{': 13, 'IOException': 12, '': 5, 'throws': 10, 'Buffer': 7, 'Byte': 6}
{'}\n': 42, ';': 41, ')': 9, '(': 4, 'complete': 38, '.': 37, '{': 10, 'Operation': 6, '': 5, 'Maintenance': 3, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 57, '}': 41, ';': 31, ')': 16, 'Time': 24, 'start': 23, '-': 51, '(': 8, '.': 27, 'clock': 26, 'update': 44, '{': 20, 'finally': 42, 'call': 37, 'event': 15, 'return': 34, 'try': 32, '=': 25, 'long': 22, 'final': 21, 'Exception': 19, '': 2, 'throws': 17, '>': 4, 'T': 3, '<': 1, 'Callable': 10, 'time': 7, 'public': 0}
{'}\n': 32, ';': 31, ')': 11, 'Version': 10, 'bytecode': 9, '(': 6, 'equals': 17, '.': 16, 'JDK8': 24, '': 7, '||': 22, 'JDK7': 15, 'return': 13, '{': 12, 'String': 8, 'Post': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 41, ';': 37, 'this': 39, 'return': 38, ')': 16, 'source': 15, ',': 11, 'type': 10, '(': 7, 'Def': 30, 'Simplified': 29, 'From': 28, 'build': 27, '.': 26, 'Request': 5, 'Mapping': 24, 'Put': 23, '': 1, 'mapping': 6, '{': 17, '...': 14, 'Object': 13, 'String': 9, 'Index': 3, 'public': 0}
{'}\n': 86, ';': 84, ')': 62, 'file': 20, '(': 47, 'Stream': 46, 'Input': 45, 'File': 19, '': 7, 'new': 42, 'Buffered': 44, 'return': 41, '{': 40}
{'}\n': 26, ';': 25, ')': 11, 'listener': 10, '(': 4, '.': 20, 'listeners': 19, '{': 12, 'Listener': 3, 'View': 8, 'Progress': 7, 'Circular': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, '{': 9, ')': 8, '(': 7, 'Check': 4, 'Status': 3, 'public': 0}
{'}\n': 150, ';': 43, ')': 26, '(': 34, '.': 88, ',': 100, 'get': 89, 'glyph': 50, '=': 73, '': 12, '{': 27, 'int': 8, 'public': 3}
{'}\n': 80, ';': 43, ')': 16, '(': 8, 'All': 71, 'add': 70, '.': 38, 'retained': 67, '<': 11, 'List': 10, 'Array': 29, '': 1, 'new': 27, '=': 26, '>': 14, 'public': 0}
{'}\n': 90, ';': 76, ')': 53, 'Context': 11, 'App': 50, 'null': 64, '!=': 63, '(': 39}
{'}\n': 53, '}': 52, ';': 51, ')': 7, '(': 6, 'Table': 47, 'Names': 16, 'table': 15, '>': 14, 'String': 13, '': 9, '<': 11, 'List': 10, 'Array': 20, 'new': 18, '=': 17, '{': 8}
{'}\n': 49, ';': 21, '': 1, '(': 34, '.': 31, ')': 10, '{': 11, 'String': 8, 'Category': 3, 'public': 0}
{'}\n': 102, ';': 39, ')': 15, 'token': 14, '(': 7, '.': 53, 'removed': 19, 'null': 23, '==': 22, 'if': 17, 'site': 10, 'get': 54, 'Tokens': 21, 'Default': 4, '=': 49, '>': 46, 'String': 9, '': 8, '<': 43, 'Set': 42, 'Hash': 41, '{': 16, ',': 11, 'Token': 6, 'Session': 5, 'Removed': 3, 'void': 1, 'private': 0}
{'}\n': 716, ';': 142, 'return': 711, '}': 627, ')': 54, '(': 140, 'To': 696, '.': 136, '': 7, '{': 55, 'null': 483, ',': 18, 'put': 616, 'get': 407, '=': 86, '>': 27, 'URI': 11, '<': 9, 'List': 20, 'Group': 544, 'Consistency': 543, 'CG': 274, '==': 482, 'if': 475, ':': 421, 'for': 415, 'Map': 8, 'Hash': 198, 'new': 196, 'Volume': 49, 'add': 42}
{'}\n': 41, ';': 40, ')': 39, 'this': 28, 'Request': 6, '': 1, 'public': 0}
{'}\n': 33, ';': 32, ')': 14, '': 25, 'Time': 5, ',': 24, '(': 11, '{': 15, 'public': 0}
{'}\n': 18, ';': 17, ')': 9, 'address': 8, '(': 4, '.': 12, 'addresses': 11, '{': 10, 'Entity': 7, 'Address': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 240, ';': 53, ')': 52, '': 16, '(': 21, '{': 171, 'get': 149, '.': 44, 'Home': 13, 'STR': 51, '_': 50}
{'}\n': 29, ';': 28, ')': 15, 'arguments': 14, 'message': 24, '(': 5, '.': 21, 'Format': 20, 'Message': 19, '': 2, '{': 16, ']': 13, '[': 12, 'Object': 11, ',': 9, 'String': 3, 'format': 4}
{'}\n': 191, '}': 96, ';': 39, ')': 13, ',': 31, '(': 5, 'set': 181, '.': 26, '{': 14, 'STR': 175, '_': 174, 'equals': 172, '!': 169, 'if': 40, '=': 18, '': 6, 'return': 94, 'is': 85, '!=': 78, 'get': 27, 'null': 44, 'prosody': 17, 'PROSODY': 37, 'XML': 34, 'Mary': 33, 'Ancestor': 28, 'Utils': 25, 'Dom': 24, 'Element': 11, 'private': 0}
{'}\n': 71, ';': 44, 'return': 67, '}': 66, ')': 13, '(': 10, '.': 51, 'Root': 60, '{': 56, 'if': 45, 'folder': 25, 'File': 37, '': 7, 'new': 35, '=': 34, ',': 18, 'String': 20, 'STR': 12, '_': 11, 'Warnings': 9, 'Suppress': 8, '@': 6}
{'}\n': 43, '}': 42, ';': 41, ')': 20, 'Type': 19, 'protocol': 18, '(': 7, 'add': 36, '.': 26, 'protocols': 14, '{': 21, 'contains': 27, '!': 24, 'if': 22, 'String': 12, '': 8, ',': 15, '>': 13, '<': 10, 'Set': 9, 'Exists': 6, 'Protocol': 3, 'void': 1, 'private': 0}
{'}\n': 17, ';': 16, ')': 6, 'key': 5, '(': 2, '.': 9, '{': 7, '': 3, 'void': 0}
{'}\n': 104, '}': 103, ';': 24, ')': 11, 'e': 100, '(': 22, 'Exception': 48, 'Configuration': 2, '': 1, 'Stream': 35, 'get': 33, '.': 32, 'resource': 10, 'public': 0}
{'}\n': 204, ';': 100, '(': 39, 'add': 111, '.': 94, 'null': 155, '!=': 154, ')': 75, 'Message': 32, 'Log': 31, '': 30, '{': 83, ',': 48, 'public': 0}
{'}\n': 368, ';': 22, ')': 17, 'Space': 25, 'bottom': 31, '+': 158, 'top': 24, 'h': 60, ',': 11, 'right': 45, 'left': 38, '(': 6, 'Width': 55, 'get': 54, '.': 88, 'Area': 16, 'chart': 15, 'D': 3, 'Size2': 2, '': 1, 'new': 340, 'return': 339, 'null': 336, 'int': 315, 'w': 52, 'Y': 324, 'start': 20, 'X': 318, 'image': 312, 'this': 310, 'Image': 308, 'draw': 4, 'g2': 10, '}': 162, '-': 176, '=': 53, '{': 18, 'Alignment': 185, '==': 139, 'if': 133, 'else': 163, 'NUM': 199, '_': 198, '/': 235, 'CENTER': 210, 'double': 19, 'Edge': 142, 'Rectangle': 68, 'Position': 136, 'Outset': 91, 'Right': 126, 'calculate': 89, 'padding': 70, 'Left': 114, 'Bottom': 102, 'Top': 90, 'Padding': 73, 'Insets': 69, 'Height': 63, 'Rectangle2': 13, 'Graphics2': 8, 'protected': 0}
{'}\n': 277, ';': 40, 'key': 37, 'return': 274, '}': 101, '{': 33, ')': 21, 'ikse': 243, 'Exception': 26, 'Spec': 74, 'Key': 5, 'Invalid': 24, '': 3, '(': 9, 'catch': 102, 'ikse2': 204, 'STR': 183, '_': 182, '+': 184, 'Algorithm': 20, 'encoded': 13, 'Such': 30, 'No': 29, 'new': 78, 'throw': 174, 'nsae2': 171, 'Public': 4, 'generate': 94, '.': 52, 'Factory': 45, '=': 38, 'Encoded': 72, 'X509': 71, 'Instance': 54, 'get': 53, 'try': 41, 'nsae': 109, 'JCE': 62, 'Sun': 61, ',': 15, 'null': 39, 'throws': 22, 'String': 17, ']': 12, '[': 11, 'byte': 10, 'construct': 6, 'final': 2, 'private': 0}
{'}\n': 47, ';': 46, ')': 18, '.': 29, 'Side': 9, '{': 19, '(': 6, 'boolean': 2, 'public': 0}
{'}\n': 42, ';': 41, ')': 27, 'exec': 39, ',': 38, 'null': 37, '(': 16, 'Async': 35, 'supply': 34, '.': 33, 'Future': 6, 'Completable': 5, '': 1, 'return': 29, '{': 28, 'comparator': 26, '>': 13, 'T': 12, 'super': 22, '?': 21, '<': 7, 'Comparator': 19, 'final': 17, 'Optional': 9, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 77, '}': 48, ';': 16, ')': 7, 'e': 53, ',': 39, '(': 4, 'String': 69, 'to': 68, '.': 14, 'FINE': 64, '': 9, 'Level': 61, 'log': 56, '{': 8, 'IOException': 52, 'catch': 49, 'length': 45, '_newline': 38, 'NUM': 41, '_': 40, 'write': 36, 'out': 11, 'v': 6, 'return': 23, 'null': 21, '==': 20, 'if': 17, 'this': 13, '=': 12, 'Writer': 10, 'println': 3, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 180, ';': 107, ')': 17, '(': 5, '.': 113, '': 9, 'write': 121, 'store': 12, '_': 44, '{': 22, 'Exception': 61, 'Illegal': 59, 'Store': 11, 'IRaw': 10, 'final': 8, 'void': 1, 'public': 0}
{'}\n': 96, ';': 94, ')': 48, '(': 46, '>': 24, '': 12, '<': 14, 'Map': 13, 'Hash': 65, 'Linked': 64, 'new': 62, '.': 58, 'Collections': 57, ',': 17}
{'}\n': 246, ';': 77, ')': 38, '(': 7, '.': 98, 'line': 10, 'return': 228, '}': 149, '{': 39, 'if': 203, 'NUM': 84, '_': 83, 'Width': 30, 'i': 81, 'At': 100, 'char': 99, '=': 74, 'int': 16, ',': 15, 'String': 9, '': 8, 'static': 1}
{'}\n': 524, ';': 511, ')': 419, 'Distance': 284, ',': 175, '(': 117, 'Entry': 82, '.': 425, 'Mk': 125, '': 73, '>': 359, '<': 354, 'ID': 250, 'Object': 249, 'DBID': 243}
{'}\n': 82, ';': 53, '_': 50, 'return': 73, '}': 72, ')': 25, '(': 6, '.': 66, '{': 26, 'if': 27, 'NUM': 51, '=': 44, '': 41, ',': 14, 'char': 20, '<': 9, 'boolean': 2, 'static': 1, 'private': 0}
{'}\n': 38, ';': 37, ')': 15, 'charset': 14, '(': 7, 'Bytes': 32, 'get': 31, '.': 30, 'encode': 4, 'return': 26, '{': 25, 'Exception': 19, '': 2, 'throws': 16, 'String': 3, ',': 11, 'public': 0}
{'}\n': 73, ';': 35, ')': 28, 'position': 31, '(': 26, 'slide': 11, '}': 54, 'NUM': 34, '_': 33, '/': 50, 'size': 47, '.': 46, 'items': 38, '=': 32, '{': 29, 'null': 40, '!=': 39, 'if': 36, 'int': 30, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 6, '': 14, '.': 10, 'Level': 15, '(': 5, 'Loggable': 12, 'is': 2, 'logger': 9, 'return': 8, '{': 7, 'Debugging': 3, 'boolean': 1, 'public': 0}
{'}\n': 453, ';': 31, ')': 15, 's': 128, ',': 9, '-': 55, 'n': 110, 'x': 8, '(': 4, 'sort1': 3, 'NUM': 22, '_': 21, '>': 49, 'c': 224, 'd': 233, '=': 29, 'if': 17, 'off': 11, 'a': 216, 'b': 220, 'vecswap': 362, 'min': 351, '.': 350, 'Math': 349, '': 348, 'len': 14, '+': 35, 'int': 10, '}': 82, '--': 66, '++': 39, 'swap': 68, 'break': 323, 'v': 208, '==': 263, ']': 7, '[': 6, '{': 16, '>=': 283, '&&': 51, 'while': 237, '<=': 246, 'BOOL': 240, 'm': 84, 'l': 105, 'med3': 137, '*': 151, '/': 131, 'return': 80, 'j': 44, 'i': 28, 'for': 25, '<': 20, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 33, ';': 13, ')': 4, '(': 3, '.': 15, '=': 24, '_': 19, 'ns': 6, '{': 5}
{'}\n': 24, ';': 23, ')': 10, 'angle': 9, '(': 7, '.': 18, 'Math': 17, '': 1, 'float': 5, 'return': 12, '{': 11, 'static': 4, 'Delegate': 3, 'Layoutlib': 2, '@': 0}
{'}\n': 875, ';': 109, ')': 51, '(': 101, '': 8, '.': 97, 'Dictionary': 104, 'Pdf': 103, 'form': 43, 'Highlight': 679, ':': 308, 'case': 189, '{': 52, 'switch': 181, '==': 125, 'if': 110, 'get': 98, '=': 95, 'int': 79, 'final': 30}
{'}\n': 35, ';': 34, 'return': 32, '': 27, ')': 25, ']': 3, '[': 2, 'byte': 1, ',': 12, '(': 6}
{'}\n': 52, ';': 51, ')': 18, ',': 46, 'prototype': 17, '(': 8, '{': 23, '': 2, 'public': 0}
{'}\n': 861, ';': 46, 'result': 842, 'return': 26, ')': 14, '(': 5, 'finish': 846, '.': 19, '}': 47, 'NUM': 173, '_': 172, 'Set': 507, 'next': 650, '=': 54, 'Accept': 170, '': 2, 's': 270, 'add': 342, 't': 222, 'Transition': 221, 'Next': 334, 'get': 297, 'a': 8, '{': 15, '++': 277, 'Transitions': 293, 'num': 292, '<': 120, 'int': 262, 'for': 260, ',': 9, 'init': 306, 'Num': 298, 'new': 75, 'set': 161, 'State': 96, 'create': 95, 'is': 20, 'if': 16, 'States': 13, 'Automaton': 3, 'static': 1}
{'}\n': 759, ';': 392, 'return': 754, ')': 115, '(': 159, '=': 255, 'NUM': 343, '_': 342, 'get': 538, '.': 385, '': 66, '{': 116, '}': 393, 'double': 24, 'new': 256, '==': 166, 'if': 158, ',': 84}
{'}\n': 83, ';': 50, ')': 23, 'c2': 22, '(': 4, '.': 76, 'c1': 7, 'return': 74, '_': 47, 'null': 35, '==': 34, 'if': 31, '{': 24, '': 5, ',': 8}
{'}\n': 49, ';': 24, 'BOOL': 42, '_': 41, 'return': 40, '}': 44, ')': 9, '(': 8, '.': 34, 'Apk': 7, 'su': 13, 'if': 25, 'APK': 22, 'SU_': 21, '': 11, 'File': 12, 'new': 16, '=': 15, '{': 10, 'User': 6, 'Super': 5, 'By': 4, 'Root': 3, 'check': 2, 'boolean': 1, 'public': 0}
{')': 7, 'expression': 6, 'Expression': 2, '': 4, '(': 3}
{'}\n': 75, ';': 62, ')': 61, '(': 10, '.': 69, 'return': 67, '': 3, '>': 28, 'E': 7, '<': 25, 'public': 0}
{'}\n': 151, ';': 80, ')': 16, 'component': 14, '(': 7, '.': 45, 'get': 46, 'if': 18, '{': 17, '': 8, 'Component': 3}
{'}\n': 28, ';': 27, ')': 10, 'Template': 19, 'return': 12, '{': 11, '': 5, '(': 4, 'public': 0}
{'}\n': 37, ';': 36, ')': 13, 'value': 12, '(': 4, 'String': 7, 'to': 30, '.': 16, '': 6, ',': 9, 'name': 8, 'Field': 3, 'write': 2, '{': 21, 'IOException': 20, 'io': 17, 'java': 15, 'throws': 14, 'final': 5, 'void': 1, 'public': 0}
{'}\n': 156, ';': 26, ')': 54, '(': 6, 'add': 143, '.': 51, 'length': 52, 'line': 9, ',': 94, 'start': 35, 'substring': 91, 'String': 8, '': 7, '}': 110, '++': 57, 'Index': 29, 'field': 28, 'NUM': 32, '_': 31, '+': 114, 'i': 43, '=': 30, 'Delimiters': 104, 'remove': 102, 'key': 87, '{': 59, 'if': 60, 'Delimiter': 73, 'this': 70, '==': 69, 'At': 65, 'char': 64, '<': 49, 'int': 27, 'for': 40, 'private': 0}
{'}\n': 137, ';': 44, ')': 34, 'shadow': 33, ',': 7, 'Color': 18, 'pen': 29, 'Paint': 23, 'fill': 19, '(': 4, 'draw': 2, '+': 70, 'y': 9, 'x': 6, '.': 65, 'h': 15, 'w': 12, '=': 39, 'NUM': 43, '_': 42, '/': 41, '{': 35, 'boolean': 32, '': 17, 'int': 5, 'void': 1, 'protected': 0}
{'}\n': 74, ';': 65, 'cls': 51, 'return': 66, ')': 64, 'cl': 63, ',': 62, 'Name': 15, 'class': 14, '(': 59, '.': 56, 'Class': 6, '': 12, '=': 52, '>': 9, '?': 8, '<': 7, '{': 32, 'Exception': 31, 'Found': 30, 'Not': 29, 'String': 13}
{'}\n': 175, ';': 30, ')': 14, '(': 11, '.': 75, 'set': 117, '_': 23, '+': 108, 'void': 2}
{'}\n': 32, ';': 31, ')': 15, ',': 11, '(': 24, 'Width': 23, 'string': 22, '.': 21, 'str': 14, 'fm': 10, 'Metrics': 9, 'Font': 8, '': 7, 'String': 4, 'static': 1, 'public': 0}
{'}\n': 140, ')': 10, '(': 5, '.': 34, ';': 40, 'get': 112, 'event': 23, '=': 32, '{': 91, 'Text': 66, 'if': 41, 'Event': 20, '': 6, 'private': 0}
{'}\n': 141, ';': 139, ')': 87, '(': 83, '.': 132, 'Palette': 73, '{': 88, 'void': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 11, 'STR': 28, '_': 27, '(': 6, 'formatter': 25, 'data': 10, 'return': 13, '{': 12, '': 2, 'to': 4, 'static': 1, 'public': 0}
{'}\n': 91, ';': 90, ')': 17, '{': 58, '': 1, '<': 51, 'STR': 16, '_': 15, '(': 9, 'Property': 13, 'Json': 2, '@': 0, ',': 21, 'String': 19, 'name': 20, 'public': 4, 'Creator': 3}
{'}\n': 57, ';': 56, 'email': 26, '(': 49, '.': 45, '{': 43, ')': 42, 'Email': 12, '': 18, 'public': 0}
{'}\n': 55, ';': 31, '=': 36, ')': 18, '(': 4, '.': 27, 'server': 25, '{': 19, 'public': 0}
{'}\n': 189, ';': 126, ')': 45, '': 4, 'server': 122, '.': 98, '}': 127, '(': 3, '{': 46, 'STR': 102, '_': 101, 'equals': 99, 'world': 93, '&&': 96, 'null': 95, '!=': 94, 'if': 91, 'permission': 38, ',': 17, 'String': 5}
{'}\n': 41, ';': 40, ')': 9, ',': 36, 'max': 18, '.': 12, 'this': 11, '(': 19, 'Math': 16, '': 15, '=': 14, '{': 10, 'public': 0}
{'}\n': 534, ';': 531, ')': 86, 'Site': 24, '(': 31, 'is': 179, '.': 147, '': 44, '{': 87}
{'}\n': 56, ';': 34, 'Element': 6, 'new': 16, '=': 18, 'current': 35, ')': 12, '(': 7, 'Child': 38, '.': 27, 'Name': 11, 'tag': 10, '': 1, '{': 13, 'String': 9, 'open': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 45, ';': 27, ')': 9, ']': 16, 'NUM': 41, '_': 24, '[': 15, 'Vars': 14, '(': 3, 'Int': 35, 'parse': 34, '.': 21, 'Integer': 32, '': 1, '=': 17, 'Id': 29, 'm': 28, 'STR': 25, 'split': 22, 'String': 5, 'Format': 2, 'p': 6, '{': 10, 'public': 0}
{'}\n': 29, ';': 19, ')': 7, 'interval': 6, '(': 3, '.': 23, 'intervals': 11, '}': 20, '{': 8, 'null': 13, '==': 12, 'if': 9, '': 4}
{'}\n': 86, '}': 53, ';': 52, ')': 17, '(': 45, 'URL': 11, 'return': 32, '{': 18, 'String': 14, '': 8, 'static': 1, 'public': 0}
{'}\n': 102, ';': 55, ')': 39, '(': 52, '.': 61, '{': 40, 'Task': 25, '': 28, 'public': 0}
{'}\n': 40, ';': 39, ')': 26, 'Only': 25, 'read': 24, ',': 10, 'metadata': 20, 'checkpoint': 14, 'store': 9, '(': 4, 'super': 28, '{': 27, 'boolean': 23, 'Metadata': 19, 'Index': 3, '': 1, 'final': 5, 'Checkpoint': 13, 'Store': 8, 'IRaw': 7, 'public': 0}
{'}\n': 504, 'return': 499, '}': 273, ';': 171, ')': 46, ',': 14, '(': 69, 'ID': 235, 'Instruction': 4, 'update': 349, '.': 194, '{': 67, '': 10, 'instanceof': 72, 'if': 68, 'else': 274, 'inst': 134, 'MRJob': 74, '=': 83}
{'}\n': 67, '}': 65, ';': 23, 'plog': 53, '{': 6, ')': 5, '(': 4, '.': 47, '': 41, 'if': 7, 'void': 1}
{'}\n': 95, ';': 19, 'ZERO': 93, '': 8, '=': 11, 'Consonant': 4, 'str': 48, '}': 86, 'return': 84, ')': 6, '(': 5, 'length': 80, '.': 15, '+=': 75, 'Pos': 74, 'Cur': 73, 'i': 72, 'Con': 34, '{': 7, 'if': 46, 'next': 42, 'iter': 10, 'String': 31, 'Next': 25, 'has': 24, 'while': 20, 'iterator': 16, 'Consonants': 14, 'al': 12, 'Iterator': 9, 'parse': 2, 'void': 1, 'private': 0}
{'}\n': 78, ';': 16, ')': 6, '(': 5, 'add': 66, '.': 19, 'Panel': 9, '': 12, '=': 10, 'Layout': 21, 'new': 11, 'set': 20, 'JPanel': 13, '{': 7, 'private': 0}
{'}\n': 1029, '}': 855, ';': 42, ']': 12, 'i': 62, '[': 11, 'n': 46, 'Matrix': 28, 'graph': 27, '*': 845, 'NUM': 31, '_': 30, '-': 375, '=': 18, '{': 14, 'else': 1001, 'temp': 17, ')': 13, 'len': 608, '>': 182, '(': 7, 'if': 172, '+': 368, 'temp3': 468, 'level': 411, 'Levels': 476, 'node': 475, 'size': 21, '.': 20, 'm_nodes': 19, 'length': 34, ',': 427, 'arraycopy': 490, 'System': 488, '': 432, 'int': 8, 'new': 361, 'DUMMY': 463, 'SINGULAR_': 462, 's2': 638, 'Node': 455, 'Graph': 454, 'add': 450, 'Cnt': 38, 'STR': 441, 'String': 433, '++': 56, 'Level': 10, 'nodes': 9, '<': 52, 'for': 43, 's1': 434, 'copy': 422, 'temp2': 25, 'Gaps': 3, 'remove': 2, 'void': 1, 'private': 0}
{'}\n': 294, '}': 280, ';': 69, ')': 22, '.': 135, '{': 23, 'finally': 281, '(': 7, '': 8, 'new': 28, 'get': 150, 'STR': 116, '_': 115, ',': 12, '=': 27, 'String': 9}
{'}\n': 96, ';': 44, ')': 10, '(': 9, '.': 41, '[': 87, '': 2, 'new': 84, 'if': 54, '{': 53, 'platforms': 40, 'public': 0}
{'}\n': 26, ';': 22, 'this': 24, 'return': 23, ')': 13, 'dependency': 12, '(': 7, 'add': 18, '.': 17, 'Dependencies': 16, 'm': 15, '{': 14, 'Helper': 4, 'Request': 3, 'Action': 2, '': 1, 'On': 6, 'depends': 5, 'public': 0}
{'}\n': 28, ';': 27, '.': 17, '': 5, '==': 22, ')': 8, '(': 20, 'Class': 19, 'get': 18, 'obj': 7, '&&': 15, 'return': 10, '{': 9, 'Object': 6, 'boolean': 1}
{'}\n': 75, ';': 59, '(': 6, '.': 64, ')': 17, 'Xml': 5, 'pretty': 15, '=': 39, '': 8, '{': 24, 'JAXBException': 20, 'throws': 18, 'Boolean': 14, ',': 12, 'Convert': 11, 'to': 4, 'Config': 9, 'final': 7, 'static': 1, 'public': 0}
{'}\n': 74, ';': 40, 'return': 71, '}': 69, ')': 18, '(': 11, 'add': 64, '.': 55, '{': 50, '!': 53, 'if': 51, 'points': 17, ':': 47, 'Vector2': 6, '': 2, 'for': 41, '>': 8, '<': 4, 'List': 3, 'Array': 31, 'new': 29, '=': 28, 'static': 1}
{'}\n': 90, ';': 40, 'cur': 14, '=': 28, ']': 52, 'twopos': 6, '[': 50, 'twoheap': 49, '}': 70, 'parent': 27, 'par': 47, 'break': 68, '{': 16, ')': 15, 'NUM': 22, '_': 21, '(': 4, 'To': 59, 'compare': 58, '.': 57, 'if': 54, '>': 13, 'Object': 12, '': 8, '<': 10, 'Comparable': 9, '-': 31, 'int': 5, 'final': 25, 'while': 17, ',': 7, 'Up': 3, 'heapify': 2, 'void': 1, 'private': 0}
{'}\n': 99, ';': 23, ')': 10, 'val': 9, ',': 7, 'NUM': 22, '_': 21, 'strkey': 71, 'root': 85, '(': 3, 'insert': 2, '=': 14, ']': 52, 'len': 13, '[': 51, 'Chars': 64, 'get': 63, '.': 16, 'key': 6, '--': 58, 'char': 8, 'new': 54, '}': 48, 'SIZE': 45, 'BLOCK_': 44, '': 4, '+': 20, 'length': 17, 'eq': 30, 'Arrays': 37, 'Node': 36, 'redim': 35, '{': 11, '>': 29, 'freenode': 26, 'if': 24, 'int': 12, 'String': 5, 'void': 1, 'public': 0}
{'}\n': 58, ';': 31, ')': 17, 'name': 41, '(': 2, 'index': 39, '.': 23, 'tab': 16, 'Short': 35, 'write': 1, 'out': 11, 'CONSTANT_': 28, '': 3, 'Byte': 25, '{': 21, 'IOException': 20, 'throws': 18, 'Pool': 15, 'Constant': 14, ',': 6, 'Stream': 10, 'Output': 9, 'Data': 8, 'env': 5, 'Environment': 4, 'void': 0}
{'}\n': 187, ';': 104, 'Props': 84, 'new': 78, ')': 29, 'properties': 8, '(': 5, 'All': 116, 'put': 115, '.': 114, 'Properties': 4, '': 6, '=': 98, '{': 30, 'initialize': 3, 'void': 2, 'public': 0}
{'}\n': 21, ';': 20, ')': 11, 'listener': 10, '(': 5, 'add': 2, '.': 15, 'Listeners': 14, '{': 12, 'Listener': 4, 'void': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 17, ',': 12, 'Buffer': 16, 'url': 15, 'request': 11, '(': 6, 'Prefix': 5, 'Content': 4, 'append': 3, '{': 21, '': 7, 'Request': 10, 'Servlet': 9, 'Http': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 47, ';': 46, ')': 12, 'Listener': 4, 'error': 10, '(': 5, '.': 40, 'Listeners': 17, '{': 13, 'null': 19, 'if': 14, 'Error': 3, '': 7, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 53, '}': 52, ';': 22, ')': 10, '(': 5, 'if': 23, '.': 18, 'Name': 9, 'class': 8, '=': 15, '{': 11, 'String': 7, '': 6}
{'}\n': 134, ';': 74, ')': 22, 'BOOL': 131, '_': 32, ',': 11, 'query': 30, '(': 6, 'Update': 78, 'execute': 77, '.': 38, 'connection': 10, 'Id': 16, 'Module': 15, 'raw': 14, 'RAW_': 66, '': 8, 'Names': 37, 'CTable': 36, 'format': 59, 'String': 29, '+': 34, 'STR': 33, 'module': 20, 'TABLE': 42, 'TYPES_': 41, '=': 31, 'final': 7, '{': 26, 'SQLException': 25, 'throws': 23, 'int': 13, 'CConnection': 9, 'Types': 5, 'import': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 116, ';': 30, 'matrix': 29, 'return': 113, ')': 18, '.': 24, '(': 14, 'Matrix': 12, '': 9, 'weka': 23, 'new': 50, '=': 71, 'node': 17, 'read': 11, 'core': 33, 'New': 40, 'Node': 70, 'Current': 69, 'm_': 68, '}': 67, 'NAME': 63, 'ATT_': 62, 'Attribute': 59, 'get': 58, ',': 55, 'Throwable': 52, 'trace': 48, '{': 22, 'DEBUG': 45, 'if': 42, 'Exception': 21, 'throws': 19, 'Element': 16, 'Old': 13, 'Object': 10, 'public': 8}
{'}\n': 219, '}': 192, ';': 57, ')': 32, 'e': 197, ',': 12, '(': 6, 'String': 59, 'to': 114, '.': 22, 'Type': 15, 'op': 17, 'STR': 109, '_': 52, 'error': 202, '_logger': 104, '{': 33, 'Exception': 196, '': 7, 'catch': 193, 'Stage': 93, 'Status': 24, 'Client': 9, 'db': 10, 'audit': 169, 'uri': 136, 'Desc': 80, 'ev': 60, 'status': 25, 'Event': 153, 'Bourne': 150, 'record': 2, ']': 147, 'NUM': 146, '[': 144, 'Param': 31, 'ext': 30, 'URI': 135, '=': 39, '+': 126, 'info': 106, 'END': 102, 'AUDITOP_': 101, 'Manager': 98, 'Log': 97, 'Audit': 96, 'Description': 86, 'get': 69, 'Ev': 70, 'BOOL': 53, ':': 54, '?': 51, '==': 48, 'ready': 47, 'Operation': 5, 'boolean': 36, 'try': 34, '...': 29, 'Object': 28, 'Enum': 16, 'Db': 8, 'void': 1, 'public': 0}
{'}\n': 36, ';': 18, ')': 9, '(': 5, 'Default': 31, 'get': 23, '.': 12, 'Locale': 28, '': 1, 'Message': 25, 'Localized': 24, '=': 15, 'message': 21, 'this': 11, 'Code': 8, 'error': 7, '{': 10, 'int': 6, 'Exception': 4, 'public': 0}
{'}\n': 54, ';': 40, ')': 39, '(': 4, 'Components': 50, 'init': 49, 'Frame': 11, 'kse': 12, '=': 45, '.': 31, 'this': 41, 'MODAL': 38, 'DOCUMENT_': 37, '': 1, 'Type': 34, 'Modality': 33, 'Dialog': 30, ',': 8, 'Kse': 10, 'parent': 7, 'public': 0}
{'}\n': 88, ';': 38, ')': 17, '(': 11, 'add': 71, '.': 60, 'Path': 59, 'Jar': 58, 'Project': 16, '>': 7, '': 2, '<': 4, 'List': 3, 'Array': 30, 'new': 28, '=': 27, 'java': 15}
{'}\n': 42, ';': 24, ')': 8, ',': 37, 'number': 17, '(': 3, '.': 18, '=': 14, 'String': 5, '{': 9, '': 4, 'static': 0}
{'}\n': 170, ';': 36, ')': 10, '(': 6, '=': 43, '}': 37, ']': 3, 'j': 67, '[': 2, 'k': 89, '*': 141, 'NUM': 23, '_': 22, '{': 17, '++': 77, '': 26, '<=': 95, 'int': 8, 'for': 64, '<': 73, 'i': 42, '-': 45, 'else': 38, ',': 32, '.': 28, '==': 21, 'if': 18}
{'}\n': 252, ';': 137, 'Name': 14, '=': 111, 'group': 13, '.': 84, '{': 47, ')': 46, '': 6, ',': 24, 'String': 12, 'public': 0}
{'}\n': 21, ';': 20, ')': 11, 'listener': 10, '(': 5, '.': 15, 'Listeners': 14, 'group': 13, '{': 12, 'Listener': 4, 'Group': 3, '': 7, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 61, ';': 60, ')': 19, '(': 5, '.': 51, 'task': 12, '{': 20, '': 10, 'public': 0}
{'}\n': 53, ';': 52, 'key': 18, ':': 50, ')': 13, '(': 8, '.': 30, '_': 35, '{': 14, 'String': 5, '': 4, 'Key': 7}
{'}\n': 394, '}': 242, ';': 94, ')': 7, 'STR': 6, '_': 5, '+': 270, '(': 4, 'Name': 275, 'get': 216, '.': 173, 'Class': 54, 'Exception': 65, 'Preference': 64, '': 1, 'new': 252, 'throw': 251, '{': 66, 'else': 345, 'e': 248, ',': 43, 'catch': 244, 'transformed': 167, 'From': 211, 'Assignable': 210, 'is': 209, 'if': 95, 'Transform': 129, 'to': 128, 'null': 106, 'invoke': 174, 'Method': 82, 'parse': 83, '=': 86, 'Object': 166, 'try': 140, 'original': 31, ':': 131, 'String': 19, 'for': 114, '!=': 107, 'Parse': 88, 'find': 87, 'throws': 62, '>': 16, '<': 10, 'transform': 18, 'void': 17, 'static': 9, 'public': 8, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 528, ';': 86, 'BOOL': 468, '_': 79, 'return': 466, ')': 25, '': 51, '(': 14, '{': 26, '}': 470, 'Grab': 56, '.': 76, 'get': 206, 'if': 270, '=': 167, 'try': 47, 'boolean': 1}
{'}\n': 77, ';': 49, ')': 13, 'Sequence': 70, '': 1, '(': 4, 'Set': 59, 'unmodifiable': 58, '.': 57, 'Collections': 56, '=': 23, 'Seeds': 53, 'gral': 52, 'new': 24, '{': 14, 'Manager': 3, 'Component': 2, 'public': 0}
{'}\n': 317, ';': 238, ')': 237, '(': 232, 'Array': 34, 'Byte': 33, 'to': 311, '.': 310, 'output': 37, 'return': 308, 'input': 19, 'Stream': 18, 'Output': 35, '': 14, 'new': 39, '=': 38, 'Input': 17, ']': 9, '[': 8, 'byte': 7, 'static': 1, 'public': 0}
{'}\n': 356, ';': 97, ')': 44, ',': 14, '(': 8, '_': 170, 'new': 277, 'NUM': 171, '.': 226, '=': 212, '{': 207, '>=': 199, 'revision': 29, 'if': 196, '}': 195, 'Value': 21, 'byte': 1, 'Password': 13, '': 46, 'Exception': 49, 'Security': 48, 'General': 47, 'throws': 45, 'Metadata': 43, 'encrypt': 42, 'boolean': 41, 'p': 38, 'int': 23, 'o': 34, ']': 3, '[': 2, 'Length': 26, 'Bit': 25, 'key': 24, 'Id': 20, 'Doc': 19, 'first': 18, 'private': 0}
{'}\n': 27, ';': 26, 'logger': 8, '{': 15, ')': 14, 'Logger': 7, '': 6, 'public': 0}
{'}\n': 134, ';': 41, ')': 12, '(': 7, 'Array': 19, 'Byte': 18, 'to': 128, '.': 38, 'Stream': 21, 'out': 22, 'return': 124, 'close': 120, '}': 116, 'size': 84, ',': 109, 'NUM': 99, '_': 79, 'buf': 67, 'write': 106, 'break': 101, '<=': 97, 'if': 94, 'read': 89, 'in': 11, '=': 24, 'int': 83, '{': 16, 'BOOL': 80, 'while': 77, ']': 5, 'SIZE': 74, 'BUF_': 73, '': 14, '[': 4, 'byte': 3, 'new': 25, 'Input': 57, 'length': 39, '*': 36, 'RATIO': 35, 'COMPRESSION_': 34, 'EXPECTED_': 33, 'Output': 20, 'IOException': 15, 'throws': 13, 'final': 2, 'static': 1, 'public': 0}
{'}\n': 123, ';': 37, ')': 15, '(': 6, 'set': 115, '.': 52, 'Element': 54, 'model': 22, '{': 16, '_': 59, 'Model': 21, 'Box': 20, 'Combo': 5, '': 17, '=': 23, 'void': 2}
{'}\n': 88, ';': 32, ')': 9, '(': 5, '=': 50, '{': 10, '': 6, 'STR': 30, '_': 29, '.': 26, 'output': 8, 'String': 7}
{'}\n': 115, '}': 114, ';': 47, ')': 27, 'NUM': 54, '_': 53, '.': 36, '{': 28, '++': 61, '<': 57, '=': 34, 'int': 17, '(': 49, 'for': 48, '': 6, 'Stress': 3, 'void': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 10, '(': 9, 'Set': 2, 'key': 7, '.': 20, 'map': 19, 'return': 12, '{': 11, '': 1, 'public': 0}
{'}\n': 64, ';': 28, ')': 15, '(': 4, '.': 40, 'Streamer': 50, 'new': 22, '=': 21, '{': 16}
{'}\n': 54, ';': 32, '=': 30, ')': 7, '(': 4, 'clone': 46, '.': 45, 'lineage': 20, '>': 19, 'Transaction': 18, 'Composite': 17, '': 1, '<': 15, 'Stack': 14, '{': 28, ',': 21, 'serial': 23, 'boolean': 22, 'public': 8, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 24, ';': 23, ')': 8, '(': 4, 'Null': 19, 'Non': 18, 'require': 17, '.': 11, 'Objects': 15, '': 1, '{': 9, 'public': 0}
{'}\n': 22, ';': 21, ')': 9, '(': 5, '.': 16, '{': 10, 'indent': 4}
{'}\n': 87, ';': 39, 'calendar': 9, 'return': 84, ')': 10, 'NUM': 37, '_': 36, ',': 35, '': 2, '.': 13, 'Calendar': 3, '(': 6, 'set': 14, 'MINUTE': 48, '{': 11}
{'}\n': 62, ';': 57, 'string': 8, 'return': 59, '}': 58, ')': 17, '(': 5, '.': 22, '=': 34, '{': 18, 'With': 24, 'if': 19, 'suffix': 16, 'String': 3, '': 2, ',': 13, 'static': 1, 'public': 0}
{'}\n': 74, ';': 30, 'return': 71, '}': 70, ')': 21, ',': 62, '(': 8, 'In': 57, 'is': 56, '!': 55, 'if': 53, ']': 12, 'i': 26, '[': 11, 'Pts': 14, '{': 41, '++': 39, 'length': 36, '.': 35, '<': 32, 'NUM': 29, '_': 28, '=': 27, 'int': 25, 'for': 23, 'Coordinate': 3, '': 2}
{'}\n': 87, ';': 23, 'result': 22, 'return': 84, '}': 36, ')': 18, '(': 25, 'length': 71, '.': 57, ',': 62, 'NUM': 61, '_': 33, 'substring': 58, '{': 19, 'STR': 34, 'String': 3, '': 2, 'int': 12, 'static': 1, 'public': 0}
{'}\n': 198, ';': 52, ')': 19, '(': 5, 'get': 169, '.': 27, 'session': 10, 'Session': 131, 'NUM': 101, '_': 45, '*': 99, 'Time': 68, 'Max': 89, '{': 20, 'void': 0}
{'}\n': 32, ';': 31, ')': 14, 'Len': 13, 'key': 12, ',': 10, 'NUM': 22, '_': 21, '(': 5, 'return': 16, '{': 15, 'int': 11, ']': 8, '[': 7, 'byte': 6, 'Parameters': 3, 'Cipher': 2, '': 1, 'public': 0}
{'}\n': 125, ';': 124, ')': 61, 'STR': 122, '_': 121, '(': 59, 'Property': 76, 'get': 75, '.': 74, 'Os': 56, '': 46}
{'}\n': 91, ';': 42, ')': 10, ',': 67, '(': 6, 'Bytes': 32, 'get': 36, '.': 18, 'input': 9, '=': 33, ']': 30, '[': 29, 'byte': 28, '{': 11, 'if': 12, 'String': 8, '': 7, 'public': 0}
{'}\n': 52, ';': 51, ')': 24, ',': 34, 'device': 17, '(': 9, 'get': 42, '.': 29, 'Type': 36, 'STR': 33, '_': 32, 'format': 30, 'String': 3, '': 2, 'return': 26, '{': 25, 'Guid': 8, 'Native': 7, 'generate': 4, 'static': 1, 'public': 0}
{'}\n': 108, ';': 30, ')': 11, '_': 25, ',': 62, '(': 10, '.': 41, 'assert': 89, 'STR': 26, 'Xml': 33, 'web': 34, 'File': 9, 'Jsp': 8, 'Utils': 73, 'Web': 32, '': 13, 'Resolver': 65, 'Entity': 64, 'get': 55, 'Bytes': 56, 'xml': 18, 'Stream': 51, 'Input': 50, 'Array': 49, 'Byte': 48, 'new': 46, 'parse': 42, 'Io': 40, '=': 19, '+': 24, 'HEADER': 23, 'TEST_': 22, 'WEBAPP_': 21, 'String': 17, '{': 15, 'Exception': 14, 'throws': 12, 'Servlet': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 12, 'equals': 5, 'return': 14, '{': 13, 'other': 11, 'Object': 10, '': 1, '(': 7, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 30, ';': 29, ')': 12, 'msg': 7, '(': 4, '.': 16, '{': 13, '': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 12, 'Listener': 4, 'old': 10, '(': 5, 'remove': 2, '.': 16, 'Listeners': 15, 'event': 14, '{': 13, 'Event': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 37, 'env': 21, ',': 33, '(': 31, 'String': 17, '': 2}
{'}\n': 47, ';': 46, 'type': 38, 'return': 12, '{': 11, ')': 10, '': 6, 'public': 0}
{'}\n': 17, ';': 16, ')': 8, 'report': 7, '(': 3, '.': 11, 'Report': 6, '': 4, 'public': 0}
{'}\n': 94, ';': 39, 'BOOL': 81, '_': 37, 'return': 79, ')': 57, 'prefix': 50, '(': 41, 'if': 59, 'Len': 51, 'for': 40}
{'}\n': 94, '}': 93, ';': 92, ')': 32, 'type': 25, '+': 78, 'STR': 77, '_': 76, '(': 6, '.': 55, '{': 33, 'int': 12, 'void': 1}
{'}\n': 256, ';': 26, 'consumed': 85, 'return': 253, '}': 27, 'BOOL': 88, '_': 23, '=': 86, ')': 11, 'evt': 10, '(': 6, 'mouse': 169, '.': 20, 'proxy': 98, '{': 12, 'Down': 106, 'Shift': 105, 'is': 104, '!': 229, '&&': 228, 'null': 100, '!=': 223, 'if': 13, 'Listener': 156, 'Mouse': 4, 'Map': 3, '': 7, 'NUM': 123, '>': 121, 'MOUSE_': 118, 'DISTRIB_': 117, 'PROXY_': 116, '&': 114, 'Mask': 113, 'Distribution': 112, '||': 101, '==': 99, 'boolean': 1, 'STR': 24, 'fine': 21, 'logger': 19, 'DEBUG': 16, 'Event': 9, 'fire': 2, 'public': 0}
{'}\n': 111, ';': 27, ')': 12, '(': 23, '.': 39, '}': 62, 'STR': 25, '_': 24, ']': 82, 'i': 31, '[': 80, 'builder': 17, 'append': 56, '{': 13, '++': 43, 'length': 40, '<': 37, 'NUM': 34, '=': 18, 'int': 30, 'for': 28, 'Builder': 16, 'String': 15, '': 8, 'new': 19, 'public': 0}
{'}\n': 574, ';': 337, ')': 290, 'STR': 350, '_': 349, '(': 183, 'append': 347, '.': 346, 'xml': 216, '': 94, 'NUM': 359, 'if': 387, ']': 378, 'i': 356, '[': 376, '=': 357, '{': 295, '++': 368, 'length': 365, '<': 362, 'int': 226, 'for': 353, 'String': 195}
{'}\n': 76, '}': 75, ';': 56, ')': 38, 'NUM': 69, '_': 68, ',': 11, '-': 67, 'w': 19, 'x': 13, '(': 7, 'Rect': 31, 'fill': 59, '.': 49, 'g': 10, 'Color': 51, 'set': 50, '{': 39, 'Painted': 37, 'Border': 4, 'Content': 3, 'is': 34, 'if': 40, 'boolean': 24, 'sel': 30, 'Rectangle': 29, '': 8, 'Broken': 26, 'draw': 25, 'h': 22, 'int': 12, 'y': 16, 'Graphics': 9, 'Edge': 6, 'paint': 2, 'void': 1, 'protected': 0}
{'}\n': 383, ';': 34, ')': 28, '+': 134, '(': 43, 'info': 130, '.': 68, 'log': 128, 'close': 368, 'stream': 33, 'String': 79, 'to': 359, 'println': 355, 'STR': 83, '_': 82, 'int': 113, 'Route': 236, 'route': 249, 'TTs': 237, 'avg': 235, '=': 38, '{': 36, '++': 125, 'NUM': 117, 'for': 111, 'header': 80, '': 30, '}': 56, 'return': 75, 'Trace': 71, 'Stack': 70, 'print': 69, 'e': 64, 'Exception': 63, 'Found': 62, 'Not': 61, 'File': 46, 'catch': 57, 'new': 39, 'Stream': 32, 'Print': 31, 'try': 35, ',': 26, 'void': 1}
{'}\n': 31, ';': 30, ')': 8, 'return': 13, '{': 12, 'sql': 7, 'String': 6, '': 5, '(': 4, 'Update': 3, 'execute': 2, 'int': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 11, '(': 10, 'Millis': 19, 'Time': 8, 'current': 6, '.': 16, 'System': 15, '': 1, 'return': 13, '{': 12, 'Thread': 7, 'long': 5, 'static': 4, 'Delegate': 3, 'Layoutlib': 2, '@': 0}
{'}\n': 41, ';': 40, ')': 15, ']': 37, '(': 6, 'size': 34, '.': 23, 'Lines': 14, 'ldif': 13, '[': 30, 'String': 11, '': 2, 'new': 27, 'Array': 25, 'to': 24, 'make': 4, 'return': 17, '{': 16, '>': 12, '<': 9, 'List': 8, 'Entry': 3, 'static': 1, 'public': 0}
{'}\n': 261, ';': 56, 'off': 13, 'return': 44, '}': 57, 'STR': 48, '_': 47, ')': 17, 'byte': 7, '(': 3, '=': 79, ']': 9, 'xoff': 184, '[': 8, 'buf': 10, '{': 18, 'NUM': 92, '<': 108, 'val': 5, 'if': 19, 'BASE': 103, 'NUMBER_': 102, '': 23, '.': 25, 'Formatter': 99, 'Byte': 98, '/=': 220, '--': 217, '%': 206, 'DIGITS': 203, '-': 159, 'int': 1, 'ndig': 89, '+=': 180, 'len': 16, '+': 72, ',': 6, 'Filler': 61, 'truncation': 60, 'length': 158, '>': 34, '||': 153, '++': 123, '*=': 126, 'dmax': 95, '>=': 118, 'pos': 78, '&&': 116, 'while': 105, 'abs': 83, 'Math': 81, 'else': 58, 'format': 2, 'VALUE': 28, 'MIN_': 27, '==': 22, 'public': 0}
{'}\n': 172, ';': 169, ')': 26, 'c': 21, 'char': 99, '(': 3, '.': 58, 'buffer': 38, '{': 27, 'int': 10, 'void': 1, 'public': 0}
{'}\n': 17, ';': 16, ')': 5, '(': 4, '.': 10, 'Interfaces': 9, 'return': 7, '{': 6, 'private': 0}
{'}\n': 123, '}': 118, ';': 56, ')': 12, '(': 15, '.': 20, 'Element': 95, 'next': 94, '{': 13, 'Elements': 63, 'More': 62, 'has': 61, 'while': 57, 'get': 51, '=': 48, '>': 46, 'Block': 30, 'Basic': 44, '': 40, '<': 42, 'Enumeration': 41, 'Handlers': 36, 'Exception': 35, 'if': 14, 'Handler': 5}
{'}\n': 18, ';': 17, ')': 4, '(': 3, 'String': 13, 'to': 12, '.': 11, 'compile_checksum': 10, 'Checksum': 8, 'calculate': 7, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 14, ';': 13, '.': 10, 'return': 7, '{': 6, ')': 5, '(': 4, 'Label': 3, 'boolean': 1, 'public': 0}
{'}\n': 112, ';': 111, ')': 99, 'hit': 67, ',': 12, '': 9, 'y': 22, 'x': 18, 'int': 13, 'public': 0}
{'}\n': 592, ';': 183, 'return': 588, 'BOOL': 561, '_': 156, ')': 46, '(': 32, '.': 13, '=': 533, '}': 511, 'NUM': 471, '{': 97, '>=': 469, 'if': 121, '+': 377, 'STR': 157, ',': 171, 'Exception': 60, 'Protocol': 59, 'Ftp': 19, '': 18, 'ftp': 16, 'net': 14, 'sun': 12, 'new': 144, 'throw': 143}
{'}\n': 126, ';': 31, 'BOOL': 73, '_': 67, 'return': 71, ')': 14, 'i': 18, '(': 5, 'Activity': 117, 'start': 116, '.': 26, 'context': 8, 'TASK': 111, 'NEW_': 110, 'ACTIVITY_': 109, 'FLAG_': 108, '': 6, 'Intent': 17, 'Flags': 102, 'add': 101, 'STR': 89, ',': 9, 'Path': 13, 'file': 12, '+': 90, 'parse': 86, 'Uri': 84, 'Type': 81, 'And': 80, 'Data': 79, 'set': 78, '}': 75, '{': 15, 'NUM': 68, '<=': 66, 'length': 63, '||': 52, 'File': 33, 'is': 56, '!': 46, 'exists': 49, 'if': 44, 'new': 20, '=': 19, 'VIEW': 29, 'ACTION_': 28, 'String': 11, 'Context': 7, 'Normal': 4, 'install': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 136, ';': 55, '(': 52, '.': 126, 'List': 12, '}': 119, ')': 54, 'removed': 116, ',': 107, 'depth': 114, 'insert': 64, 'temp': 39, 'Insert': 103, 'create': 102, '{': 101, 'item': 94, ':': 93, 'IItem': 15, '': 11, 'for': 88, '>': 16, '<': 13, 'private': 0}
{'}\n': 155, ',': 22, 'Obj': 21, 'File': 30, 'Pdf': 17, 'current': 28, 'root': 121, '(': 14, 'read': 10, ';': 51, ')': 31, '.': 40, 'STR': 110, '_': 109, '': 16, 'if': 87, '=': 36, 'get': 41, 'int': 34, 'final': 15, '{': 32, 'Reader': 27, 'Object': 18}
{'}\n': 69, '}': 41, ';': 40, ')': 8, '(': 5, 'k': 7, '.': 47, '': 45, '{': 9, 'else': 42, 'NUM': 20, '_': 19, '==': 18, 'if': 10, 'int': 6}
{'}\n': 33, ';': 32, ')': 18, '(': 7, 'List': 28, 'as': 27, '.': 26, 'Arrays': 25, '': 1, '=': 23, 'parameters': 22, '{': 19, '...': 16, '>': 15, '?': 14, '<': 11, 'Parameter': 10, 'Constraint': 6, 'Global': 5, 'public': 0}
{'}\n': 65, ';': 45, ')': 19, 'NUM': 62, '_': 41, ',': 53, 'Strings': 28, 'config': 27, '(': 4, 'Internal': 49, 'Overlay': 48, 'inflate': 47, 'return': 46, 'STR': 42, 'split': 39, '.': 32, 'String': 16, 'List': 22, 'as': 33, 'Arrays': 31, '': 1, '=': 29, '>': 26, '<': 23, '{': 20}
{'}\n': 201, ';': 109, ')': 92, '(': 33, 'get': 190, '.': 189, 'file': 106, 'File': 62, ',': 105, 'path': 137, '=': 98, '': 29, 'String': 30, 'paths': 68, 'public': 0}
{'}\n': 89, '}': 74, ';': 32, ')': 13, '(': 3, '{': 14, 'Height': 64, 'get': 54, '.': 7, 'Buffer': 5, 'back': 24, ',': 47, 'Width': 55, 'NUM': 46, '_': 45, 'if': 15, 'Image': 23, 'peer': 17, 'Action': 12, 'flip': 2, 'Contents': 10, 'Flip': 9, '': 4, 'Capabilities': 6, 'void': 1}
{'}\n': 46, '}': 29, ';': 28, ')': 9, '(': 4, 'Default': 41, 'To': 40, 'revert': 39, '{': 10, 'nfe': 36, 'Exception': 35, 'Format': 34, 'Number': 33, '': 5, 'catch': 30, 'trim': 24, '.': 17, 'Value': 3, 's': 7, 'parse': 18, '=': 14, 'value': 13, 'try': 11, 'String': 6, 'load': 2, 'void': 1, 'protected': 0}
{'}\n': 85, ';': 44, 'return': 81, ')': 17, '+': 51, 'STR': 50, '_': 49, '(': 13, 'trace': 47, '.': 46, 'log': 45, ',': 65, 'ele': 16, 'Name': 56, 'Node': 55, 'get': 54, '>': 10, '': 2, '<': 4, 'new': 31, '=': 30, '{': 18, 'SOAPElement': 15, 'static': 1, 'public': 0}
{'}\n': 336, ';': 36, '.': 27, ')': 8, ',': 212, '(': 4, '-': 209, '+': 193, 'NUM': 32, '_': 31, '/': 101, '': 25, 'cos': 80, 'Math': 26, 'float': 37, '=': 39, '{': 9}
{'}\n': 62, '}': 61, ';': 33, ')': 38, 'BOOL': 57, '_': 31, '(': 6, 'Visible': 54, 'set': 43, '.': 10, 'status': 40, 'STR': 47, 'Text': 44, 'void': 1}
{'}\n': 44, ';': 43, 'NUM': 7, '_': 6, 'return': 40, '{': 39, ')': 13, 'STR': 28, '(': 3, 'Adhoc': 18, 'Net': 17, 'sce': 16, 'int': 15, 'public': 14, '=': 5, 'version': 9, ',': 8, 'nid': 4, 'HLEFunction': 2, '': 1, '@': 0}
{'}\n': 20, ';': 19, ')': 11, '(': 10, 'clear': 16, '.': 15, 'cached': 13, 'Cache': 7, 'public': 0}
{'}\n': 109, ')': 12, 'File': 6, 'dest': 11, 'source': 7, '(': 4, ';': 68, 'get': 63, '.': 62, '': 5, 'new': 36, '{': 16, 'IOException': 15, 'throws': 13, ',': 8, 'copy': 2, 'void': 1}
{'}\n': 278, ';': 27, ')': 6, 'SIZE': 52, 'BUFFER_': 51, 'IO_': 50, '': 8, ',': 48, 'BOOL': 269, '_': 67, 'File': 40, '(': 5, 'Writer': 15, 'new': 33, 'Buffered': 35, '=': 32, 'To': 243, 'rename': 242, '.': 23, 'Tmp': 46, 'close': 24, 'writer': 31, '}': 28, 'STR': 68, '+': 171, 'get': 220, 'CLEAN': 200, 'write': 57, '{': 10, 'else': 188, 'Version': 99, 'String': 95, 'to': 94, 'Integer': 92, 'VERSION_1': 76, 'MAGIC': 60, 'null': 17, '!=': 16, 'if': 11, 'IOException': 9, 'throws': 7, 'Journal': 4, 'rebuild': 3, 'void': 2, 'synchronized': 1, 'private': 0}
{'}\n': 204, ';': 20, 'e': 180, '{': 28, ')': 19, '': 35, '(': 5, 'catch': 176, '}': 31, 'close': 171, '.': 129, 'Writer': 96, 'Data': 133, 'BOOL': 107, '_': 106, ',': 85, 'File': 53, 'new': 79, '=': 40, 'return': 29, '==': 24, 'if': 21}
{'}\n': 65, ';': 64, 'commands': 27, '{': 52, ')': 51, '(': 47, '>': 26, 'Command': 25, '': 2, '<': 4, 'List': 3}
{'}\n': 139, ';': 137, ')': 66, '(': 64, 'get': 90, '.': 89, '_sequence': 87, '{': 67, 'public': 3}
{'}\n': 541, ';': 73, 'return': 538, '}': 537, ')': 72, 'node': 182, '(': 12, '.': 138, '>': 10, '<': 3, '': 1, 'new': 60, '=': 59, '{': 43, 'if': 270, '_': 160, 'for': 163, 'NUM': 161, ',': 6, 'Collection': 14, 'Split': 34, 'Input': 33, 'Hadoop': 32, 'UUID': 5, 'top': 20, 'Node': 18, 'Cluster': 17, 'Map': 2, 'private': 0}
{'}\n': 264, '}': 180, ';': 105, ')': 10, '+': 195, 'STR': 154, '_': 153, '(': 4, 'Exception': 211, 'Format': 210, 'Request': 3, 'Map': 208, '': 5, 'request': 50, ',': 155, 'message': 151, '.': 98, 'Debug': 149, '{': 41, 'if': 106, '=': 91, 'IOException': 17, 'throws': 11, 'public': 0}
{'}\n': 46, ';': 19, ')': 7, 'val': 6, '(': 4, 'String': 2, 'to': 40, '.': 29, '': 1, 'return': 27, '}': 35, 'format': 3, 'df': 12, '{': 8, 'null': 24, '!=': 23, 'if': 20, 'Format': 11, 'get': 14, '=': 13, 'Decimal': 10, 'public': 0}
{'}\n': 79, ';': 35, ')': 12, '(': 4, '}': 71, '.': 38, '{': 62, 'for': 54, 'positions': 33, '>': 20, '': 5, '<': 17, 'List': 16, 'Array': 26, 'new': 24, '=': 23, 'void': 1}
{'}\n': 67, ';': 27, ')': 65, 'NUM': 35, '_': 34, ',': 36, '-': 46, 'height': 55, 'width': 45, '(': 33, 'Rect': 32, 'Round': 31, '.': 22, 'D': 11, '': 8, 'void': 1, 'private': 0}
{'}\n': 52, ';': 20, 'return': 49, '}': 40, '{': 14, ')': 13, '': 2, '(': 36, '.': 27, 'Colour': 3, '=': 18, 'public': 0}
{'}\n': 408, ';': 48, 'return': 386, ')': 26, '.': 334, '(': 12, 'add': 358, ':': 312, '': 2, 'for': 98, '>': 8, 'Move': 7, '<': 5, 'List': 4, 'Array': 3, 'new': 59, '=': 58, '{': 27, 'final': 1, 'public': 0}
{'}\n': 40, ';': 39, ')': 14, ',': 36, '(': 8, 'Modification': 7, 'Variable': 6, 'Modifiable': 5, 'get': 22, '.': 21, 'Field': 17, '': 9, '{': 15, 'object': 13, 'Holder': 12, 'static': 1, 'public': 0}
{'}\n': 115, '}': 101, '{': 13, ')': 12, 'e': 106, 'Exception': 105, '': 9, '(': 4, 'catch': 102, ';': 21, 'close': 97, '.': 52, 'writer': 20, 'Writer': 19, 'File': 37, 'new': 30, 'Buffered': 18, '=': 29, 'try': 26, 'null': 24, 'String': 10}
{'}\n': 180, '}': 116, '{': 11, ')': 10, 'e': 148, '': 6, '(': 5, 'catch': 170, ';': 18, 'close': 165, '.': 56, 'reader': 15, 'null': 17, '!=': 62, 'if': 154, 'finally': 152, 'Line': 47, 'read': 57, '=': 16, 'String': 45, 'file': 8, 'Reader': 14, 'File': 7, 'new': 29, 'Buffered': 13, 'try': 19}
{'}\n': 678, ';': 49, '(': 4, '.': 43, 'tree': 42, ')': 5, ',': 376, 'Node': 13, 'set': 563, 'get': 44, '=': 41, 'Math': 299, '': 7, 'Ref': 14, 'STR': 255, '_': 254, 'Exception': 10, 'Failed': 9, 'Operator': 8, 'new': 248, 'throw': 247, '==': 239, 'if': 231, '}': 230, 'node': 181, '&&': 140, '!=': 138, 'i': 88, '{': 11, 'throws': 6, 'public': 0}
{'}\n': 38, '}': 37, ';': 20, ')': 4, '(': 3, '{': 5, 'null': 25, '!=': 24, 'cxn': 12, 'if': 21, 'get': 17, '.': 16, 'Tx': 15, 'tl': 14, '=': 13, 'Connection': 11, 'Repository': 10, 'Sail': 9, 'Bigdata': 8, '': 7, 'final': 6, 'void': 1}
{'}\n': 149, ';': 42, '}': 145, ')': 34, '(': 10, '.': 49, ',': 74, '=': 40, 'ras': 68, '': 1, 'int': 18, '{': 35, 'if': 61, 'final': 17}
{'}\n': 18, ';': 17, ')': 8, '_': 14, ',': 13, 'object': 7, '(': 3, '{': 9, 'Object': 6, '': 4}
{'}\n': 222, '}': 220, ';': 47, ')': 7, 'STR': 6, '_': 5, '+': 191, '(': 4, 'Id': 212, 'get': 110, '.': 43, 'Project': 12, 'a': 22, 'Name': 80, 'filename': 104, 'info': 187, 'LOG': 185, '': 1, ',': 19, '=': 41, 'entry': 62, 'Utils': 108, 'Filename': 107, 'String': 78, '{': 34, 'With': 95, 'starts': 94, 'if': 89, 'Entry': 61, 'normalize': 82, 'Element': 73, 'next': 72, 'Enumerate': 40, 'zip': 18, 'Zip': 16, 'Elements': 53, 'More': 52, 'has': 51, 'entries': 44, 'Enumeration': 38, 'for': 35, 'IOException': 33, 'throws': 31, 'Repository': 26, 'Service': 27, 'File': 17, 'create': 11, 'void': 10, 'static': 9, 'public': 8, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 86, ';': 74, ')': 56, '(': 5, '.': 29, '': 1, 'new': 43, '=': 42, 'Block': 12, 'transform': 25, 'extent': 15, 'Extent': 7, 'public': 0}
{'}\n': 106, ';': 60, ')': 43, 'cl': 80, '.': 54, '': 33, '(': 32, 'get': 55, 'if': 61, 'Class': 46, '=': 51, '{': 44, '<': 7, 'public': 4}
{'}\n': 249, ';': 217, ')': 13, '(': 5, '.': 232, '}': 229, 'NUM': 194, '_': 193, 'return': 46, '{': 14, 'null': 19, '==': 18, 'style': 17, 'if': 15, '': 6, 'private': 0}
{'}\n': 196, ';': 82, ')': 15, '(': 7, '}': 139, ',': 130, 'Size': 2, 'Bounded': 119, 'return': 116, '{': 16, 'STR': 27, '_': 26, 'parse': 3, '.': 22, 'token': 10, 'String': 9, '': 1, 'private': 0}
{'}\n': 124, ';': 34, 'this': 122, 'return': 121, ')': 15, 'null': 22, ':': 117, 'BOOL': 80, '_': 31, ',': 10, 'SET': 77, 'ENCODE_': 76, 'COMPONENT_': 75, 'QUERY_': 74, '': 6, '(': 5, 'canonicalize': 68, '?': 99, '!=': 97, 'add': 1, '.': 65, 'Values': 41, 'And': 40, 'Names': 39, 'Query': 3, 'encoded': 37, '>': 56, '<': 55, 'List': 54, 'Array': 53, 'new': 25, '=': 50, '==': 21, 'if': 17, 'STR': 32, 'Exception': 29, 'Argument': 28, 'Illegal': 27, 'throw': 24, '{': 16, 'String': 7, 'Parameter': 4, 'Builder': 0}
{'}\n': 191, ';': 47, 'img': 29, 'return': 188, ')': 26, '(': 6, 'set': 123, '.': 89, '_': 61, 'STR': 62, 'enabled': 22, 'pressed': 25, 'if': 48, 'new': 31, '=': 30, '{': 27, 'boolean': 21, ',': 12, 'js_command': 19, 'String': 8, '': 7, 'name': 15, 'Language': 11, 'AD_': 10, 'Image': 4, 'create': 3, 'static': 1, 'private': 0}
{'}\n': 73, ';': 32, ')': 31, '(': 3, 'users': 25, '>': 24, 'User': 23, '': 1, '<': 20, 'Set': 19, ',': 8, 'public': 0}
{'}\n': 30, ';': 29, 'NUM': 24, '_': 23, '-': 22, ')': 7, ',': 18, 'Offset': 20, 'value': 19, 'this': 17, '(': 6, 'Add': 14, 'And': 4, 'get': 12, '.': 11, 'unsafe': 10, 'return': 9, '{': 8, 'Get': 5, 'decrement': 3, 'final': 1, 'public': 0}
{'}\n': 301, ';': 189, ')': 103, 'Y': 77, '*': 228, '.': 132, 'Math': 222, '': 130, '-': 269, 'X': 43, '(': 56, 'float': 38, 'to': 142, '=': 108, 'public': 0}
{'}\n': 36, '}': 25, ';': 24, ')': 5, '(': 4, '.': 11, 'Array': 19, 'java': 28, '{': 6, 'else': 26, 'js': 18, 'Script': 13, 'is': 12, 'GWT': 10, '': 9, 'if': 7, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 66, ';': 24, ')': 8, 'STR': 63, '_': 62, '(': 7, 'd': 60, '.': 19, 'Log': 58, 'Volley': 57, '': 1, 'clear': 6, 'Entries': 50, 'm': 16, '}': 47, 'delete': 43, 'file': 36, '{': 9, 'files': 14, ':': 37, 'File': 11, 'for': 32, 'null': 29, '!=': 28, 'if': 25, 'Files': 21, 'list': 20, 'Directory': 18, 'Root': 17, '=': 15, ']': 13, '[': 12, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 118, ';': 116, ')': 83, '(': 76, 'get': 93, '.': 92, '{': 84, 'Date': 69, 'Publication': 68, '': 20}
{'}\n': 33, '}': 32, ';': 31, ')': 6, '+': 27, 'Name': 13, 'ui': 12, '(': 5, '.': 22, 'Defaults': 21, '{': 7, 'LIST': 17, 'UI_': 16, '': 10, ':': 14, 'String': 11, 'for': 8, 'UIs': 4, 'Our': 3, 'void': 1, 'private': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'Immutable': 3, 'make': 2, 'void': 1, 'public': 0}
{'}\n': 144, ';': 84, ')': 38, 'k': 55, ',': 18, '(': 14, 'return': 133, '.': 49, 'get': 50, '=': 47, '': 9, 'KNNQuery': 41, 'database': 17, '>': 24, 'O': 23, '<': 21, 'Query': 29, 'Distance': 28, 'relation': 25, 'Relation': 20, 'Database': 16, 'public': 0}
{'}\n': 158, ';': 51, 'Positions': 41, 'new': 40, 'return': 154, '}': 87, ')': 31, 'By': 30, 'adjust': 9, '+': 104, 'position': 62, '(': 11, '.': 81, '{': 32, 'else': 88, 'Position': 10, 'start': 21, '<=': 131, '&&': 129, '>': 74, 'if': 66, 'NUM': 95, '_': 94, '<': 69, 'end': 25, '||': 72, '=': 42, 'int': 20, 'positions': 18, 'for': 52, '': 2, ',': 19, 'static': 1, 'public': 0}
{'}\n': 81, ';': 23, 'migration': 15, 'return': 78, ')': 10, 'CQL': 75, '': 1, '.': 25, 'Type': 68, 'Migration': 3, '(': 7, 'set': 26, 'STR': 53, '_': 52, 'Script': 59, 'Description': 50, 'version': 9, 'Version': 27, 'from': 33, 'Resolved': 2, 'new': 17, '=': 16, '{': 11, 'Available': 5, 'create': 4, 'private': 0}
{'}\n': 244, '}': 31, ';': 30, ')': 18, '(': 4, 'Dirty': 239, 'mark': 238, '.': 79, 'Data': 236, 'surface': 235, '{': 19, 'finally': 233, 'BOOL': 29, '_': 28, 'return': 27, 'e2': 224, 'Exception': 191, 'Pipe': 190, 'Invalid': 189, '': 5, 'catch': 186, 'observer': 17, ',': 8, 'img': 7, 'this': 176, 'Image': 3, 'imagepipe': 171, 'All': 198, 'revalidate': 197, 'try': 168, 'e': 192, 'NUM': 53, 'DPIImage': 122, 'Hi': 121, 'draw': 2, 'null': 24, 'Height': 93, 'get': 80, '=': 77, 'int': 75, 'final': 74, 'Width': 81, 'if': 20, '==': 23, 'Observer': 16, 'boolean': 1, 'public': 0}
{'}\n': 340, ';': 26, ')': 9, 'param': 224, ',': 223, 'STR': 221, '_': 220, '(': 4, 'String': 53, 'Localized': 217, 'get': 47, '.': 17, 'model': 40, 'format': 212, 'Format': 210, 'Message': 209, '': 5, 'set': 178, 'Model': 12, '=': 41, 'event': 8, 'Display': 3, 'begin': 2, 'super': 16, '{': 15, 'Exception': 14, 'Control': 13, 'throws': 10, 'Event': 7, 'void': 1, 'public': 0}
{'}\n': 17, ';': 16, ')': 4, '_': 13, ',': 12, '(': 3, 'fill': 9, '.': 8, 'Arrays': 7, '': 6, '{': 5}
{'}\n': 30, ';': 26, 'return': 27, ')': 16, 'value': 15, ',': 11, 'name': 10, '(': 6, '{': 17, 'String': 9, '': 1, 'add': 4, 'Builder': 3, 'public': 0}
{'}\n': 16, ';': 15, ')': 7, '(': 6, 'size': 12, '.': 11, 'set': 10, 'return': 9, '{': 8, 'int': 4, 'public': 3}
{'}\n': 76, ';': 58, ')': 29, '.': 43, 'Country': 5, '': 1, '(': 12, 'List': 2, '{': 30, ',': 18, '>': 7, '<': 3}
{'}\n': 49, 'Listeners': 17, 'Pause': 3, 'm': 15, ')': 11, '(': 5, '{': 12, 'null': 19, '==': 18, 'if': 13, 'listener': 10, 'Listener': 4, 'Animator': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 104, ';': 31, '_': 100, '}': 63, '(': 11, '.': 27, '{': 9, ')': 8, 'null': 81, '!=': 80, '': 1, 'attr': 44, 'has': 36, 'attrs': 26, '=': 25, 'if': 10}
{'}\n': 428, ';': 427, ')': 81, 'file': 74, '(': 67, 'Stream': 104, 'Input': 16, 'File': 73, '': 10, 'new': 25, '{': 93, 'public': 3}
{'}\n': 17, ';': 16, ')': 8, 'component': 7, '(': 4, 'add': 2, '.': 11, 'components': 10, '{': 9, '': 5, 'void': 1}
{'}\n': 25, ';': 24, ')': 11, '(': 7, 'to': 19, '.': 18, 'uri': 10, 'open': 5, 'return': 13, '{': 12, 'URI': 9, '': 2, 'static': 1, 'public': 0}
{'}\n': 65, ';': 64, ')': 15, 'null': 62, ',': 11, 'origin': 14, '(': 5, 'Height': 55, 'get': 46, '.': 24, 'Model': 8, 'sample': 9, 'Width': 47, 'y': 41, 'x': 37, 'Rectangle': 33, '': 1, 'new': 31, 'Buffer': 27, 'Data': 26, 'create': 25, 'this': 17, '{': 16, 'Point': 13, 'Sample': 7, 'Raster': 4, 'Banded': 3, 'public': 0}
{'}\n': 112, '}': 106, ';': 40, ')': 17, '(': 6, '.': 64, 'notifications': 84, '{': 18, 'get': 65, 'Notification': 14, '': 12}
{'}\n': 91, ';': 44, ')': 41, '(': 10, 'Line': 74, 'read': 73, '.': 36, '=': 23, '': 1, 'Stream': 32, 'Input': 31, 'get': 37, 'proc': 13, 'Reader': 21, 'new': 24, 'Buffered': 20, 'Process': 12, 'String': 5}
{'}\n': 56, ';': 55, ')': 54, 'response': 19, ',': 13, 'request': 12, '(': 6, '{': 37, '': 8, 'Response': 18, 'Servlet': 10, 'Http': 9, 'Request': 11, 'void': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 9, 'operand': 8, '.': 35, '': 5, '==': 15, '(': 4, 'if': 11, '{': 10, 'Operand': 3, 'public': 0}
{'}\n': 227, '}': 53, ';': 52, ')': 13, 's': 8, '(': 5, 'return': 206, 'STR': 89, '_': 46, 'Exception': 123, 'Argument': 122, 'Illegal': 121, '': 2, 'new': 119, 'throw': 118, '{': 14, 'NUM': 115, '-': 138, '.': 57, 'if': 15, 'Of': 86, 'index': 85, 'null': 19, '==': 18, 'String': 7, 'static': 1, 'public': 0}
{'}\n': 45, ';': 44, ')': 28, '(': 8, '.': 38, 'return': 36, 'List': 27, '>': 24, '': 1, '<': 19, 'final': 16, ',': 15, 'Info': 13, 'Receipt': 12, 'Bill': 11, 'public': 0}
{'}\n': 72, 'skip': 2, ';': 26, ')': 6, '(': 3, '{': 10, '_': 29, 'while': 27, 'count': 5, '=': 14, 'IOException': 9, '': 8, 'throws': 7, 'public': 0}
{'}\n': 491, '}': 93, ';': 10, ')': 4, '(': 3, 'tuple': 159, '.': 24, 'cursor': 102, ',': 56, 'STR': 68, '_': 37, 'NUM': 38, '>': 101, 'String': 100, '': 7, '<': 98, 'Tuple': 116, 'Test': 115, 'new': 17, 'Equals': 111, 'assert': 110, 'next': 342, 'null': 429, 'Key': 180, 'current': 193, 'Sort': 184, 'as': 183, 'Builder': 181, 'insert': 62, 'btree': 9, 'remove': 279, 'prior': 246, 'seek': 131, 'Cursor': 105, '=': 16, 'Cursor2': 97, 'ITuple': 96, '{': 5, 'md': 15, 'Store': 53, 'Raw': 52, 'Memory': 51, 'Simple': 50, 'create': 46, 'BTree': 8, 'Factor': 35, 'Branching': 34, 'set': 33, 'UUID': 23, 'random': 25, 'Metadata': 14, 'Index': 13, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 14, ';': 13, ')': 6, '(': 5, '.': 9, '{': 7, 'Ims': 4, 'void': 1}
{'}\n': 46, ';': 35, ')': 12, 'encoding': 7, '(': 4, 'Bytes': 41, 'get': 40, '.': 18, 's': 38, '=': 37, 'content': 36, 'Encoding': 21, 'Content': 20, 'set': 19, 'super': 17, '{': 16, '': 5, 'throws': 13, ',': 8, 'String': 6, 'copy': 2, 'void': 1, 'public': 0}
{'}\n': 94, '}': 93, ';': 53, ')': 52, '(': 45, '.': 48, '{': 74, 'size': 67, 'dictionary': 46, '>': 35, '<': 32, 'List': 31, 'Array': 41, '': 30, 'new': 39, '=': 38, 'Dictionary': 34, 'private': 0}
{'}\n': 150, ';': 149, ')': 102, 'arg': 82, '(': 20, 'arguments': 119, '{': 103, 'String': 39, '': 38, 'public': 0}
{'}\n': 51, '}': 45, ';': 40, 'BOOL': 43, '_': 42, 'return': 41, ')': 14, '(': 4, 'File': 3, '{': 15, 'new': 30, '.': 26, 'if': 22, '': 5, ',': 9, 'rename': 2, 'boolean': 1, 'public': 0}
{'}\n': 81, '}': 80, ';': 29, ')': 12, '(': 7, '.': 68, 'Executor': 49, 'm': 16, 'if': 37, 'null': 27, '{': 13, 'public': 0}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'length': 9, '.': 8, 'text': 7, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 133, ';': 41, ')': 19, '(': 7, 'String': 3, 'to': 128, '.': 46, 'sb': 24, 'return': 125, '}': 91, 'Value': 119, 'get': 98, 'entry': 56, 'append': 85, 'STR': 88, '_': 77, 'Key': 99, '{': 20, 'if': 67, 'Set': 62, ':': 57, '>': 16, '': 2, ',': 13, '<': 10, 'Entry': 48, 'Map': 9, 'for': 42, 'Builder': 23, 'new': 26, '=': 25, 'static': 1}
{'}\n': 35, ';': 34, '': 1, '.': 31, 'Encoding': 3, '{': 26, ')': 25, ',': 12, 'String': 18, '(': 6}
{'}\n': 188, ';': 95, 'return': 184, ')': 21, 'image': 35, '(': 14, 'Image': 5, '.': 48, '': 1, 'INT_': 91, 'TYPE_': 90, 'Buffered': 2, ',': 77, '{': 22}
{'}\n': 22, ';': 21, ')': 4, '(': 3, 'Millis': 14, 'Time': 7, 'current': 12, '.': 11, 'System': 10, '': 9, '=': 8, 'start': 2, '{': 5, 'public': 0}
{'}\n': 274, '}': 179, ';': 26, ')': 4, 'animator': 114, '(': 3, 'Animation': 138, 'start': 137, '.': 9, 'View': 17, 'current': 18, 'next': 2, 'New': 127, 'set': 39, 'Old': 117, 'listener': 99, 'Listener': 32, 'Click': 41, 'On': 40, 'Default': 31, 'Use': 215, 'm': 56, 'if': 6, 'NUM': 160, '_': 159, 'get': 72, 'Views': 57, '=': 20, '': 16, 'Iterator': 194, 'list': 193, 'iterator': 8, '{': 5, 'Loop': 185, 'else': 180, 'Reached': 175, 'End': 174, 'on': 173, 'Controller': 165, 'has': 10, '-': 158, 'size': 59, '==': 151, 'Index': 52, 'Using': 30, 'is': 29, '<': 55, 'null': 44, 'Next': 11, 'void': 1, 'public': 0}
{'}\n': 106, ';': 44, 'method': 57, '(': 5, '.': 25, '': 6, 'if': 21, ')': 19, ',': 9, '=': 49, '+': 36, 'STR': 35, '_': 34, 'debug': 32, 'Interpreter': 24, 'DEBUG': 27, '{': 20, 'types': 14, ']': 13, '[': 12, 'Class': 7, 'Method': 4}
{'}\n': 244, ';': 118, '}': 235, ')': 31, '(': 62, '.': 142, 'String': 9, '': 5, 'get': 181, '=': 94, '>': 13, 'Object': 27, ',': 10, '<': 7, 'Map': 6, '{': 32}
{'}\n': 46, '}': 27, '{': 16, ')': 15, '(': 4, ';': 26, 'close': 3, '.': 32, 'Stream': 20, 'output': 30, 'null': 22, 'if': 17, '': 6, 'void': 2}
{'}\n': 42, ')': 10, 'index': 9, '(': 7, '.': 21, 'nodes': 14, 'size': 22, '<': 19, '&&': 17, 'null': 16, '!=': 15, '{': 11, 'int': 8}
{'}\n': 83, ';': 65, ')': 25, 'c': 8, '(': 6, '.': 71, '': 68, 'return': 48, '}': 66, '{': 26, '_': 31, 'STR': 32, 'if': 27, 'char': 2, 'To': 3}
{'}\n': 37, ';': 16, 'null': 35, '=': 13, 'Key': 33, 'wrapping': 32, '.': 10, 'this': 9, ')': 7, '(': 3, 'Stream': 26, 'Output': 25, 'Array': 24, 'Byte': 23, '': 1, 'new': 21, 'stream': 19, 'Timestamp': 6, 'base': 5, '{': 8, 'long': 4, 'GTSEncoder': 2, 'public': 0}
{'}\n': 136, ';': 135, ')': 49, '.': 130, ',': 113, '(': 42, 'Lng': 23, 'Lat': 16, '{': 50, '': 7, 'static': 1, 'public': 0}
{'}\n': 180, '{': 163, ')': 146, '(': 141, 'Weights': 102, '': 31}
{'}\n': 89, ';': 42, ')': 7, '(': 6, 'Timer': 85, 'Buffer': 84, 'stop': 83, '}': 59, ',': 77, 'STR': 76, '_': 75, '+': 74, 'Name': 73, 'error': 70, '.': 54, 'Debug': 68, '': 62, '{': 10, 'catch': 60, 'close': 5, 'try': 51, 'null': 48, '!=': 47, 'if': 44, 'flush': 11, 'void': 4, 'public': 3}
{'}\n': 87, ';': 26, 'BOOL': 79, '_': 78, 'return': 77, '}': 81, '{': 43, ')': 25, '%': 64, '(': 3, '.': 56, '!': 46, 'if': 44, 'hash': 37, 'int': 29, 'for': 27, 'hashes': 10, 'contains': 2, 'boolean': 1, 'public': 0}
{'}\n': 164, ';': 113, '=': 159, '.': 25, 'this': 93, 'Buffer': 96, 'byte': 95, 'length': 26, 'NUM': 45, '_': 44, ')': 8, '(': 4, '+': 60, '*': 43, '{': 9, 'void': 1}
{'}\n': 39, ';': 38, ')': 10, 'Code': 19, 'region': 14, '(': 5, '{': 11, '': 6, 'Valid': 3, 'is': 2, 'boolean': 1}
{'}\n': 54, ';': 53, 'uri': 8, 'return': 51, '_': 28, ')': 9, 'STR': 29, '(': 5, 'With': 26, 'ends': 25, '.': 24, 'null': 15, 'if': 11, '{': 10, 'String': 2, '': 1}
{'}\n': 152, '}': 151, ';': 33, '=': 27, ')': 16, '(': 31, '.': 40, '': 7, ',': 6, 'class': 60, 'Sum': 55, 'get': 41, 'Block': 38, 'classification': 37, 'int': 47, 'Integer': 25, '{': 17, 'public': 0}
{'}\n': 92, ';': 30, 'alpha': 49, '+': 65, 'STR': 64, '_': 56, '(': 6, '.': 22, '=': 19, '}': 69, '{': 59, ')': 14, 'NUM': 57, '==': 55, 'length': 52, 'if': 47, 'String': 3, 'Hex': 34, 'to': 39, '': 2, 'Color': 10, 'static': 1, 'public': 0}
{'}\n': 14, ';': 13, ')': 4, '_': 10, '(': 3, 'stop': 2, '{': 5, 'void': 1, 'public': 0}
{'}\n': 693, ';': 47, 'date': 35, 'return': 690, '}': 163, ')': 14, '{': 21, 'STR': 114, '_': 106, '.': 58, 'NUM': 107, '(': 6, 'if': 204, 'len': 453, ',': 44, 'str': 9, 'Exception': 20, 'Time': 3, 'Date': 2, 'Schema': 17, '': 1, 'new': 37, 'throw': 129, '+': 366, 'start': 233, 'Int': 354, 'parse': 5, '=': 36, '!=': 124, 'At': 119, 'char': 118, 'int': 48, 'this': 45, 'Data': 4, 'throws': 15, 'String': 8, 'protected': 0}
{'}\n': 57, ';': 50, ')': 13, 'State': 5, ',': 38, '(': 6, '.': 30, '': 28, 'new': 18, '=': 17, '{': 14, 'void': 1}
{'}\n': 511, ';': 242, ')': 26, '(': 21, 'String': 490, 'to': 489, '.': 324, 'object': 24, '}': 406, '{': 27, 'Class': 343, 'get': 308, 'null': 254, 'if': 249, '_': 189, 'this': 64, '': 22}
{'}\n': 164, '}': 96, ';': 75, ')': 30, 'cnx': 141, '(': 6, '.': 38, '{': 14, 'null': 29, '!=': 28, '': 7}
{'}\n': 151, '}': 46, '{': 13, ')': 36, '(': 4, ';': 45, 'Queue': 112, 'm': 16, 'Abort': 66, '.': 64, 'State': 63, 'Program': 62, '': 42, 'Exception': 51, 'Interrupted': 50, 'catch': 47, 'wait': 40, '!': 28, 'public': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'Component': 3, '': 1, 'public': 0}
{'}\n': 180, ';': 18, 'this': 178, 'return': 177, '}': 94, 'NUM': 30, '_': 29, '+=': 90, 'size': 27, 'STR': 61, '=': 59, ']': 58, 'index': 7, '[': 55, 'buffer': 38, '++': 57, ')': 11, '-': 50, ',': 8, '+': 28, '(': 5, 'arraycopy': 36, '.': 35, 'System': 34, '': 1, 'Capacity': 25, 'ensure': 24, '{': 12, 'else': 95, 'value': 10, 'if': 19, 'Index': 14, 'validate': 13, 'boolean': 9, 'int': 6, 'insert': 4, 'Builder': 3, 'Str': 2, 'public': 0}
{'}\n': 52, ';': 51, ')': 14, 'weapon': 41, '(': 6, '.': 30, 'return': 16, '{': 15, '': 7, ',': 10, 'public': 0}
{'}\n': 299, ';': 101, ')': 52, '(': 51, 'String': 5, 'to': 293, '.': 103, 'buf': 58, '}': 286, 'get': 108, 'append': 104, 'STR': 121, '_': 120, '{': 211, '': 4, 'Builder': 57, 'new': 60, '=': 59, 'public': 0}
{'}\n': 210, ';': 32, 'null': 22, 'return': 207, '}': 149, '=': 42, 'n': 74, 'b': 64, 'outer': 45, 'break': 96, ')': 16, 'NUM': 182, '_': 181, 'c': 88, '(': 19, 'if': 18, 'key': 20, '.': 77, ',': 60, 'cmp': 41, 'cpr': 169, '==': 21, 'v': 85, '||': 157, 'value': 131, 'f': 108, 'Delete': 140, 'help': 139, '{': 17, 'next': 78, '!=': 117, '>': 40, 'V': 62, '': 1, 'K': 39, '<': 35, 'Node': 56, 'int': 87, 'Object': 14, 'Predecessor': 67, 'find': 66, 'for': 47, ':': 46, 'comparator': 43, 'super': 37, '?': 36, 'Comparator': 34, 'Exception': 29, 'Pointer': 28, 'Null': 27, 'new': 25, 'throw': 24}
{'}\n': 1555, ';': 106, 'return': 1529, ')': 76, '_': 98, '(': 70, '.': 119, 'set': 1417, 'LONG': 1366, '': 10, 'Type': 326, 'Field': 64, 'STR': 99, 'new': 639, 'TIME': 1033, 'DATE_': 1032, ',': 387, '=': 81, '{': 77, 'Index': 11}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'open': 3, 'void': 2, 'public': 0}
{'}\n': 204, ';': 131, ')': 44, '(': 17, 'Conversion': 53, '': 8, 'Array': 110, '.': 73}
{'}\n': 139, ';': 40, 'BOOL': 77, '_': 76, 'return': 135, ')': 28, 'api': 24, '(': 6, 'add': 130, '.': 36, 'Tree': 8, 'Api': 3, 'sorted': 16, ',': 19, 'tt': 58, 'Tt': 45, 'set': 113, 'if': 80, '||': 85, 'null': 84, '==': 83, 'Time': 42, 'Before': 71, 'Max': 68, 'Or': 67, 'Encompassig': 64, 'get': 49, 'root': 44, '=': 34, '': 7, 'ap': 33, 'Panel': 13, 'Area': 12, '{': 29, 'int': 26, 'Info': 14, '>': 15, '<': 10, 'Set': 9, 'advance': 2, 'boolean': 1, 'private': 0}
{'}\n': 330, ';': 69, 'Wrapper': 31, 'rest': 65, 'return': 97, '}': 13, ')': 23, 'ERROR': 322, '': 1, '.': 20, 'Rest': 30, ',': 10, '(': 4, 'Message': 103, 'get': 166, 'e': 291, 'new': 89, '=': 6, 'error': 102, 'LOGGER': 255, '{': 7, 'Exception': 290, 'catch': 287, '+': 261, 'Name': 278, 'principal': 59, 'STR': 9, '_': 8, 'Id': 161, 'info': 257, 'OK': 251, 'jpa': 124, 'update': 32, 'DAO': 226, 'set': 158, 'dao': 122, 'md': 120, 'bdre': 118, 'ats': 116, 'wipro': 114, 'com': 112, 'try': 110, 'Result': 53, 'binding': 54, 'Error': 84, 'Binding': 52, 'Errors': 76, 'has': 75, 'if': 70, 'null': 68, 'Principal': 58, 'Valid': 44, '@': 0, 'Attribute': 37, 'Model': 36, 'public': 28, 'Body': 27, 'Response': 26, 'POST': 22, 'Method': 19, 'Request': 2, 'method': 15, 'value': 5, 'Mapping': 3}
{'}\n': 97, ';': 43, ')': 6, 'Reader': 94, 'Buffered': 93, 'm': 18, '(': 5, 'Response': 87, 'parse': 89, '.': 20, '': 8, 'STR': 16, '_': 15, 'Bytes': 79, 'get': 78, 'request': 13, 'write': 74, 'Stream': 72, 'Output': 71, 'Of': 62, 'index': 61, ',': 51, 'NUM': 57, 'substring': 54, 'TAG': 50, 'i': 47, 'Log': 45, 'Headers': 40, 'add': 39, '+': 17, 'path': 34, 'Parameters': 19, 'port': 29, 'host': 21, '=': 14, 'String': 12, '{': 10, 'IOException': 9, 'throws': 7, 'Option': 4, 'Request': 3, 'send': 2, 'void': 1, 'private': 0}
{'}\n': 253, ';': 92, 'result': 220, 'return': 250, ')': 14, 'Rate': 195, ',': 228, 'nops': 170, 'Len': 146, 'key': 145, 'ntrials': 121, 'timeout': 21, 'journal': 227, '(': 9, 'Test': 8, 'Client': 224, 'Concurrent': 223, 'do': 6, '=': 22, 'Result': 5, '': 1, 'RATE': 214, '.': 25, 'Options': 36, 'Property': 32, 'get': 31, 'properties': 13, 'Double': 198, 'parse': 26, 'double': 193, 'final': 10, 'NOPS': 188, 'Int': 102, 'Integer': 99, 'int': 94, 'KEYLEN': 164, 'NTRIALS': 139, 'TIMEOUT': 39, 'Long': 24, 'long': 20, '{': 18, 'Exception': 17, 'throws': 15, 'Properties': 12, 'Comparison': 7, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 394, '}': 345, ')': 15, '(': 37, '.': 31, ';': 39, 'println': 127, '+': 131, 'STR': 130, '_': 118, 'Waited': 245, 'get': 49, 'Thread': 33, '=': 45, '': 19, '{': 87, 'Ids': 44, 'All': 50, 'thread': 43, ']': 42, '[': 41, 'long': 40, 'final': 17, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 64, '}': 63, ';': 32, ')': 8, 'delete': 7, '(': 4, 'Description': 57, 'Delete': 3, '': 5, 'new': 20, 'Add': 52, 'internal': 51, '{': 9, 'NUM': 30, '_': 29, '==': 14, 'Count': 45, 'Ignore': 44, 'f': 12, 'if': 10, 'add': 2, '.': 35, 'List': 23, 'Array': 22, '=': 19, 'null': 15, 'IResource': 6, 'void': 1, 'public': 0}
{'}\n': 82, ';': 23, 'return': 21, '}': 24, '{': 13, ')': 12, 'NUM': 72, '_': 71, '==': 70, 'bits': 53, '(': 4, 'if': 14, 'a': 7, 'Bits': 62, 'Long': 61, 'Raw': 60, 'To': 59, 'double': 2, '.': 46, 'Double': 45, '': 44, '=': 54, 'long': 52, 'N': 49, 'Na': 48, 'b': 11, '!=': 39, '<': 28, '>': 17, 'final': 5, ',': 8, 'static': 1, 'public': 0}
{'}\n': 33, ';': 24, ')': 12, '(': 7, 'Object': 9, 'write': 5, '.': 18, 'out': 11, 'External': 6, 'super': 17, '{': 16, 'IOException': 15, '': 1, 'throws': 13, 'Output': 10, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 38, ';': 37, ')': 16, ',': 8, 'parameters': 15, 'Name': 7, 'method': 6, '(': 3, 'Item': 26, 'Expression': 13, 'Dot': 24, '': 4, 'new': 22, 'add': 2, '.': 19, 'chain': 18, '{': 17, '>': 14, '<': 11, 'List': 10, 'String': 5, 'void': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 6, '(': 5, '.': 11, 'Local': 10, 'thread': 9, '{': 7, 'static': 1, 'public': 0}
{'}\n': 76, '}': 44, ';': 21, ')': 7, '(': 4, '=': 12, 'Commercial': 30, 'scheduled': 47, '{': 28, 'else': 45, '_': 33, 'if': 22, 'get': 16, '.': 15, 'commercial': 13, '': 9, 'length': 6, 'int': 5, 'void': 1, 'private': 0}
{'}\n': 134, ';': 110, ')': 73, 'NUM': 129, '_': 128, '>': 126, '(': 53, '^': 119, 'int': 1, 'return': 111, 'Bits': 106, 'Long': 105, 'To': 104, 'double': 67, '.': 102, 'Double': 101, '': 100, '=': 94, 'bits': 93, 'hash': 2, 'public': 0}
{'}\n': 104, '}': 22, ';': 21, ')': 8, 'e': 30, '(': 3, 'Exception': 12, 'AWSIot': 5, '': 4, 'new': 94, 'throw': 93, 'Topic': 17, 'get': 37, '.': 36, 'message': 7, '+': 84, 'STR': 83, '_': 45, 'info': 80, 'LOGGER': 78, '{': 13, 'else': 75, 'add': 69, 'Queue': 40, 'Size': 41, 'Offline': 39, 'Max': 38, 'client': 35, '<': 54, 'size': 51, '&&': 47, 'NUM': 46, '>': 44, 'if': 33, 'Retryable': 28, 'Iot': 27, 'Aws': 26, 'catch': 23, 'try': 14, 'throws': 9, 'Message': 6, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, 'NUM': 22, '_': 16, '-': 20, '>': 19, ')': 7, 'STR': 17, '(': 6, 'Of': 14, 'index': 13, '.': 12, 'Name': 11, 'os': 10, 'return': 9, '{': 8, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 96, '}': 35, '{': 26, ')': 25, 'e': 40, '': 9, '(': 4, 'catch': 36, ';': 33, 'close': 30, '.': 29, 'null': 24, '!=': 23, 'if': 19, 'void': 1, 'public': 0}
{'}\n': 49, '}': 41, ';': 40, 'BOOL': 46, '_': 45, 'return': 19, '{': 9, 'else': 42, ')': 8, '(': 4, 'All': 35, 'get': 34, '.': 22, 'n': 7, ',': 31, 'size': 28, 'With': 3, 'ends': 2, 'impl': 21, 'Name': 6, '': 5, 'instanceof': 13, 'if': 10, 'boolean': 1, 'public': 0}
{'}\n': 52, ';': 51, ')': 21, 'NUM': 49, '_': 48, ':': 47, '(': 5, 'Padding': 37, 'get': 36, '+': 32, '?': 35, 'padding': 20, 'Size': 8, 'star': 7, 'round': 27, '.': 26, 'Math': 25, '': 24, 'return': 23, '{': 22, 'boolean': 19, ',': 9, 'Separation': 17, 'stars': 16, 'float': 6, 'Stars': 13, 'Of': 12, 'number': 11, 'int': 1, 'Total': 3, 'calculate': 2, 'private': 0}
{'}\n': 48, ';': 28, 'return': 39, '}': 29, 'BOOL': 41, '_': 5, '{': 18, ')': 7, 'e': 36, 'Exception': 35, 'Syntax': 34, 'Pattern': 22, '': 1, '(': 4, 'catch': 30, 's': 16, 'compile': 24, '.': 23, 'try': 19, 'String': 15, 'Regex': 12, 'is': 11, 'boolean': 10, 'static': 9, 'STR': 6, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 37, '}': 20, ';': 11, ')': 5, '(': 4, 'Trace': 32, 'Stack': 31, 'print': 30, '.': 15, 'e': 25, '{': 6, 'IOException': 24, '': 23, 'catch': 21, 'flush': 3, 'out': 14, 'try': 12, 'Buffer': 8, 'clear': 7, 'void': 2, 'public': 0}
{'}\n': 62, ';': 61, ')': 41, '(': 46, 'get': 47, 'append': 45, '.': 44, 'builder': 40, 'Builder': 28, 'String': 21, '': 26}
{'}\n': 33, ';': 32, ')': 30, '(': 5, 'List': 27, ',': 22, 'Sentence': 13, '': 2, 'final': 6, 'static': 1, 'public': 0}
{'}\n': 127, '}': 68, ';': 59, ')': 25, '(': 4, '.': 20, 'key': 93, '=': 51, 'transaction': 105, '': 14, '_': 36, '{': 27, 'Map': 22, 'remove': 62, 'store': 19, 'Name': 17, 'map': 16, '>': 49, ',': 46, '<': 43, 'MVMap': 42, 'STR': 37, 'With': 34, 'starts': 33, 'if': 28, 'Names': 23, 'get': 21, ':': 18, 'String': 15, 'for': 12, 'public': 0}
{'}\n': 79, ';': 43, 'return': 76, '}': 75, ')': 17, '(': 10, '.': 56, '{': 18, ':': 48, 'double': 46, 'for': 44, '': 2, 'histogram': 24, 'public': 0}
{'}\n': 156, ';': 34, 'date': 22, 'return': 153, '}': 152, ')': 10, '(': 6, 'normalize': 147, '{': 17, 'STR': 144, '_': 70, '!=': 135, 'utc': 134, '.': 39, '&&': 138, 'NUM': 71, 'if': 130, 'Unnormalized': 125, 'save': 124, 'Time': 3, 'Date': 2, 'validate': 117, ',': 31, 'len': 36, 'end': 45, 'str': 9, 'get': 65, '=': 23, 'int': 35, 'length': 40, 'this': 32, 'Data': 4, '': 1, 'new': 24, 'Exception': 16, 'Schema': 13, 'throws': 11, 'String': 8, 'parse': 5, 'protected': 0}
{'}\n': 137, ';': 63, ')': 35, ',': 9, '(': 4, 'put': 120, '.': 31, 'Map': 113, '}': 104, 'All': 98, 'add': 97, 'Values': 50, '{': 17, 'Empty': 33, 'is': 32, '!': 29, '&&': 24, 'null': 23, '!=': 22, 'get': 58, 'Set': 11, '': 5, '=': 51, 'values': 12, 'if': 18, 'String': 6}
{'}\n': 32, ';': 28, 'return': 29, ')': 8, 'commit': 2, ',': 24, '.': 11, '(': 19, '': 15, '=': 14, 'Index': 13, '{': 9, 'long': 5}
{'}\n': 31, ';': 22, ')': 5, '(': 4, '.': 26, 'Fragments': 14, 'closing': 24, '}': 23, '{': 6, ':': 12, 'comment': 11, 'Fragment': 10, '': 9, 'for': 7, 'void': 1, 'public': 0}
{'}\n': 76, ';': 45, ')': 18, 'NUM': 73, '_': 72, '>': 71, 'Len': 17, 'total': 16, '(': 6, 'while': 67, '}': 66, 'len': 31, '-=': 63, '+=': 58, 'offset': 13, ',': 11, 'Segment': 48, '_write': 3, 'Contiguous': 40, 'Max': 39, '_output': 38, 'min': 36, '.': 35, 'Math': 34, '': 20, '=': 32, 'int': 12, '{': 27, 'do': 28, 'Exception': 26, 'Generation': 25, 'Json': 24, 'IOException': 21, 'throws': 19, ']': 9, '[': 8, 'Segments': 5, 'void': 2, 'final': 1, 'private': 0}
{'}\n': 184, ';': 183, ')': 149, '(': 137, '.': 169, 'Tags': 159, 'all': 158, '{': 153, '': 138, 'Tag': 90, 'final': 72, 'public': 0}
{'}\n': 711, ';': 39, 'return': 708, '(': 37, '.': 34, 'NUM': 673, '_': 326, ')': 38, 'get': 35, '}': 72, '{': 426, 'if': 345, 'tree': 114, '=': 32, 'Ref': 42, 'Node': 41, '': 8, 'final': 87, 'node': 82}
{'}\n': 151, ';': 52, 'result': 27, 'return': 148, '}': 53, ')': 62, 'NUM': 84, '_': 50, '-': 108, '(': 14, '.': 58, '=': 28, '{': 42, 'is': 59, 'if': 54, 'public': 0}
{'}\n': 20, ';': 19, ')': 7, 'ID': 17, 'ISSET_': 16, '__': 14, '(': 6, 'get': 12, '.': 11, '__isset_bit_vector': 10, 'return': 9, '{': 8, 'Set': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 146, '}': 54, ';': 53, ')': 41, 'e': 119, '(': 5, 'Exception': 28, 'Generic': 32, 'Rcs': 24, '': 6, 'new': 44, 'throw': 43, 'assert': 129, '.': 62, '{': 34, '>': 12, '<': 8, 'm': 37, 'try': 82, 'STR': 78, '_': 77, 'Argument': 74, 'Illegal': 73, 'Empty': 64, 'is': 63, 'contacts': 13, '||': 60, 'null': 40, '==': 39, 'if': 35, 'Available': 27, 'Not': 26, 'Service': 25, 'Api': 38, ',': 29, 'Id': 11, 'Contact': 10, 'Set': 7, 'void': 1, 'public': 0}
{'}\n': 62, 'c': 27, '(': 6, 'return': 37, '{': 10, ')': 9, '_': 32, 'String': 5}
{'}\n': 81, ';': 68, 'Return': 24, 'to': 23, 'return': 77, ')': 17, '(': 16, 'Values': 73, 'calculate': 72, '.': 34, 'NUM': 63, '_': 62, ',': 39, 'Index': 4, 'Test': 8, 'create': 7, 'Date': 42, '': 3, 'new': 26, 'UUID': 33, 'random': 35, 'Event': 6, 'Created': 5, '=': 25, '{': 18, 'Status': 11, 'Creation': 10, 'final': 2, 'static': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 11, 'rule': 10, '(': 3, '.': 16, '{': 12, '': 8, 'public': 0}
{'}\n': 91, ';': 84, 'BOOL': 83, '_': 82, 'return': 81, '}': 85, ')': 50, '(': 45, '.': 64, 'if': 52, '{': 51, 'event': 29, '': 13}
{'}\n': 60, ';': 24, 'return': 50, ')': 10, '(': 22, 'Bytes': 45, 'next': 44, '.': 43, ']': 28, '[': 27, 'byte': 26, 'new': 18, '=': 17, 'Random': 15, 'Secure': 14, '': 13, '{': 11}
{'}\n': 452, ';': 367, ')': 65, '.': 145, '(': 52, 'Offset': 382, 'NUM': 125, '_': 124, ':': 294, '?': 232, '==': 229, '<<': 156, 'time': 117, 'Day': 106, 'Of': 93, '=': 73, 'int': 45, '': 32}
{'}\n': 386, '}': 384, ';': 60, ')': 42, '.': 49, 'this': 48, ',': 11, 'graph': 50, '(': 6, 'g2d': 10, 'Value': 74, 'y': 39, 'Bottom': 267, '+': 212, 'Width': 46, 'section': 45, '*': 219, 'Left': 211, 'Mark': 41, 'Max': 40, 'float': 197, '/': 52, '=': 47, 'Perc': 190, 'Offset': 63, 'get': 161, 'Set': 22, 'Date': 21, 'ordered': 20, 'Points': 36, '{': 43, '++': 121, 'size': 57, '<': 15, 'NUM': 69, '_': 68, 'int': 44, 'for': 102, 'x': 62, 'long': 38, '>': 19, 'Integer': 33, '': 7, 'Label': 18, 'Comparable': 17, 'Map': 26, 'Hash': 25, 'List': 14, 'Array': 13, 'D': 9, 'Graphics2': 8, 'draw': 2, 'void': 1, 'public': 0}
{'}\n': 110, '}': 81, ';': 17, ')': 8, 'e': 86, ',': 40, '(': 4, 'String': 102, 'to': 101, '.': 15, 'FINE': 97, '': 5, 'Level': 94, 'log': 89, '{': 9, 'IOException': 85, 'catch': 82, 'length': 47, '_newline': 71, 'NUM': 42, '_': 41, 'write': 36, 'out': 12, 's': 55, 'else': 50, 'Chars': 39, '_null': 38, 'null': 22, '==': 21, 'if': 18, 'try': 26, 'return': 24, 'this': 14, '=': 13, 'Writer': 11, 'println': 3, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 44, ';': 43, ')': 14, '(': 6, 'Part': 37, 'Specific': 36, 'Scheme': 28, 'get': 27, '.': 26, 'uri': 9, 'URI': 3, '': 2, 'new': 21, 'return': 20, '{': 19, 'String': 12, 'private': 0}
{'}\n': 230, ';': 43, ')': 29, '(': 6, '.': 82, '-': 181, 'int': 92, ',': 103, 'NUM': 115, '_': 114, 'bounds': 81, 'get': 49, '=': 36, '': 1, '{': 30, 'paint': 26, 'Paint': 20}
{'}\n': 140, ')': 10, '.': 56, '(': 51, ';': 28, 'dos': 44, '': 12, 'write': 57, 'Stream': 16, 'Output': 15, 'Data': 22, '=': 18, 'public': 0}
{'}\n': 56, ';': 55, ')': 32, ',': 13, 'file': 21, 'importable': 12, '(': 4, 'Holder': 43, 'Candidate': 42, 'Import': 3, '': 6, 'new': 39, 'add': 2, '.': 36, 'Imports': 35, 'my': 34, '{': 33, 'Nullable': 25, '@': 5, 'File': 20, 'Psi': 10, 'Null': 8, 'Not': 7, 'Element': 11, 'void': 1, 'public': 0}
{'}\n': 231, ';': 116, ')': 20, ',': 11, 'size': 46, 'y': 16, 'int': 18, 'x': 13, '+': 107, '(': 6, '.': 23, '{': 21, '': 7, 'draw': 3, 'void': 2}
{'}\n': 41, ';': 40, ')': 24, '(': 37, 'listener': 17, 'Listener': 16, 'Loader': 9, 'Env': 14, '': 6, 'public': 0}
{'}\n': 180, ';': 95, 'return': 164, '}': 154, ')': 23, 'in': 22, ',': 17, ']': 4, 'i': 114, '[': 3, 'types': 86, '(': 8, 'Value': 144, 'unmarshal': 5, '=': 87, '{': 78, '++': 126, 'length': 108, '.': 89, '<': 81, 'NUM': 117, '_': 116, 'int': 113, 'for': 111, 'Object': 2, '': 1, 'new': 102, 'Types': 92, 'Parameter': 91, 'get': 90, 'method': 16, '>': 83, '?': 82, 'Class': 29, 'Exception': 32, 'Found': 31, 'Not': 30, 'IOException': 26, 'throws': 24, 'Input': 20, 'Method': 15, 'Parameters': 6, 'private': 0}
{'}\n': 117, '}': 65, ';': 64, ')': 7, 'Data': 3, '(': 6, 'All': 110, 'add': 109, '.': 45, '{': 8, 'if': 22, 'clear': 93, 'Comparator': 62, 'result': 61, ',': 52, 'limit': 53, 'template': 51, 'Overview': 49, 'get': 46, 'Service': 5, 'Access': 43, 'data': 42, '=': 41, 'else': 66, 'Date': 35, 'to': 34, 'from': 55, '!=': 26, '>': 16, '': 9, '<': 11, 'List': 10, 'From': 4, 'load': 2, 'void': 1, 'private': 0}
{'}\n': 106, ';': 54, ')': 44, 'y': 63, ',': 7, 'x': 56, 'g': 6, '(': 3, '.': 39, '*': 79, 'int': 8, '+': 45, 'ay': 12, 'max': 68, 'Math': 66, '': 4, '=': 30, 'gap': 60, 'ax': 9, 'bulletgap': 46, 'aw': 15, ':': 48, 'Width': 42, 'get': 40, '?': 35, 'Right': 34, 'To': 33, 'Left': 32, 'is': 31, 'align': 21, 'float': 20, 'ah': 18, 'Graphics': 5, 'draw': 1, 'void': 0}
{'}\n': 62, ';': 21, 'modified': 23, 'return': 59, ')': 8, ',': 29, 'start': 11, '-': 53, '(': 19, 'Millis': 18, 'Time': 17, 'current': 16, '.': 15, 'System': 14, '': 5, 'STR': 28, '_': 27, 'debug': 40, 'log': 38, 'RESPONSE': 33, 'COUNT_': 32, 'UPDATE_': 31, 'execute': 25, '=': 12, 'int': 1, 'long': 10, '{': 9, 'String': 6, 'sync': 2, 'public': 0}
{'}\n': 27, ')': 11, '(': 23, 'Properties': 16, 'read': 15, 'static': 1, 'public': 0}
{'}\n': 181, ';': 80, 'return': 177, ')': 12, '(': 7, 'dispose': 173, '.': 57, 'null': 168, ',': 132, 'NUM': 163, '_': 162, 'image': 11, 'Image': 3, 'graphics': 84, 'Graphics': 98, '=': 86, '': 1, 'Buffered': 2, '{': 13}
{'}\n': 34, ';': 33, 'cancelled': 32, 'return': 31, '{': 23, ')': 19, '(': 14, 'Cancelled': 4, 'is': 3, 'boolean': 2, 'final': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 8, 'de': 7, '(': 3, '.': 12, 'Edges': 11, 'out': 10, '{': 9, 'Edge': 6, 'Directed': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 65, '}': 47, ';': 46, ')': 14, 'msg': 13, '(': 10, 'add': 50, '.': 35, '_pending': 48, 'Unit': 44, '_time': 43, ',': 40, '_interval': 41, 'Runnable': 39, '_flush': 38, 'schedule': 36, '_queue': 34, '{': 15, '_lock': 16, 'T': 12, '': 1, 'Thread': 9, 'Producer': 8, 'On': 7, 'Message': 6, 'on': 5, 'void': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 26, ';': 25, ')': 9, 'date': 8, '(': 5, 'format': 18, '.': 17, '{': 10, 'Date': 4, '': 1, 'public': 0}
{'}\n': 41, ';': 40, 'Width': 39, 'Half': 38, '<=': 35, ')': 15, 'Value': 14, 'Thumb': 4, 'normalized': 12, '(': 6, 'Screen': 28, 'To': 27, '-': 25, 'X': 9, 'touch': 8, 'abs': 21, '.': 20, 'Math': 19, '': 18, 'return': 17, '{': 16, 'double': 11, ',': 10, 'float': 7, 'Range': 5, 'In': 3, 'is': 2, 'boolean': 1, 'private': 0}
{'}\n': 110, ';': 46, '}': 92, ')': 18, 'BOOL': 87, '_': 86, ',': 85, 'file': 27, '(': 6, 'delete': 77, '.': 76, 'System': 28, '{': 22, 'files': 71, ':': 70, '': 20, 'for': 64, '=': 53, 'IOException': 21, 'throws': 19, 'cleanup': 3, 'public': 0}
{'}\n': 16, ';': 15, 'BOOL': 14, '_': 13, '{': 11, ')': 10, '(': 9, 'Be': 6, 'can': 5, 'boolean': 4, 'public': 3}
{'}\n': 106, '}': 90, ';': 39, 'Task': 27, 'dispatcher': 100, ')': 14, '(': 17, '.': 33, 'queue': 36, 'Dispatcher': 55, '': 9, '{': 15, 'null': 46, '==': 45, 'if': 40, 'Name': 37, 'get': 34, 'Map': 32, '=': 29, 'Root': 19, 'sync': 18, 'synchronized': 16}
{'}\n': 157, ';': 27, ')': 7, '(': 3, 'flush': 153, '.': 29, 'pw': 12, '}': 150, 'NUM': 108, '_': 32, '+': 50, 'i': 116, '[': 135, ']': 137, '{': 8, 'length': 114, '<': 111, '=': 13, 'int': 104, 'for': 102, 'get': 57, 'Format': 87, 'STR': 33, 'println': 30, 'Rate': 59, 'writer': 6, 'Writer': 5, 'Buffered': 21, '': 4, 'new': 14, 'Print': 10, 'dump': 2, 'void': 1, 'public': 0}
{'}\n': 70, ';': 36, ')': 15, 'Field': 3, '(': 5, '.': 27, '{': 16, '': 10, 'public': 0}
{')': 48, 'p_shape': 36, 'Tile': 10, 'Shape': 9, '': 8, 'public': 0}
{'}\n': 69, ';': 68, ')': 25, 'CSquared': 66, 'inverse': 54, '.': 33, 'Model': 10, 'planet': 11, '*': 50, 'z': 24, '+': 57, 'Squared': 56, 'Ab': 55, '(': 6, 'sqrt': 34, 'Math': 32, '': 8, '/': 30, 'NUM': 29, '_': 28, 'return': 27, '{': 26, 'double': 1, 'final': 7, ',': 21, 'Planet': 9, 'Magnitude': 5, 'Ellipsoid': 4, 'Desired': 3, 'compute': 2, 'static': 0}
{'}\n': 130, ';': 108, 'STR': 35, '_': 34, 'param': 13, ')': 14, '(': 7, '': 8, '.': 26, '{': 15, 'private': 0}
{'}\n': 521, ';': 143, ')': 92, 'amount': 476, ',': 17, 'Date': 63, 'transaction': 58, 'Id': 47, 'loan': 45, 'Credit': 397, 'account': 27, 'Code': 22, 'currency': 21, 'office': 16, '(': 12, 'Loan': 10, 'For': 9, 'Journal': 5, 'create': 2, '=': 182, 'Credited': 40, '{': 93, 'if': 220, 'Be': 30, 'To': 29, 'Type': 28, 'Debited': 31, 'Reversal': 78, 'is': 77, 'Boolean': 76, '': 14, 'final': 13, 'Decimal': 70, 'Big': 69, 'String': 20, 'Long': 44, 'Product': 46, 'Integer': 26, 'Office': 15, 'Reversals': 8, 'And': 7, 'Entries': 6, 'Based': 4, 'Accrual': 3, 'void': 1, 'public': 0}
{'}\n': 345, ';': 36, ')': 12, '(': 6, 'Int': 289, 'Point': 69, 'Pla': 68, '': 67, '=': 121, '.': 38, 'if': 229, '[': 223, 'NUM': 123, '_': 122, '{': 13, '<': 126, 'int': 119, 'for': 117, 'corner_list': 37, 'private': 0}
{'}\n': 390, ';': 53, 's': 52, 'return': 94, ')': 30, '_': 78, 'bit': 193, ',': 14, '(': 9, 'Sensor': 5, 'register': 346, '.': 62, 'node': 303, '}': 97, 'STR': 79, '+': 89, 'Name': 13, 'warn': 328, 'log': 83, '{': 31, 'null': 95, '==': 267, 'if': 71, 'System': 64, 'From': 201, 'Node': 302, 'get': 100, 'Address': 61, 'Serial': 60, '': 4, '=': 58, 'user': 17, 'new': 273, 'else': 283, 'NUM': 215, '-': 253, 'SENSORSPERNODE': 222, 'String': 11, 'to': 236, 'Integer': 234, 'error': 85, '>=': 220, '||': 217, '<=': 213, 'Bit': 200, 'int': 192, 'alt': 133, 'system': 12, '!=': 112, 'By': 101, 'Alternate': 144, 'To': 143, 'convert': 140, 'equals': 76, 'normalize': 63, 'New': 7, 'create': 6}
{'}\n': 95, ';': 37, 'result': 42, 'return': 92, '}': 91, ']': 8, 'i': 55, '[': 7, '(': 53, '.': 48, 'Math': 76, '': 75, '=': 43, '{': 16, ')': 15, '++': 67, 'length': 49, '<': 61, 'NUM': 58, '_': 34, 'int': 54, 'for': 52, 'double': 6, 'new': 44}
{'}\n': 172, ';': 31, ')': 22, '(': 3, '.': 65, 'g2': 35, ',': 11, ']': 9, '[': 8, 'p_points': 10, '{': 23, '++': 69, 'length': 66, '<': 63, 'NUM': 60, '_': 59, '=': 36, 'int': 56, 'for': 54, '': 4, 'new': 48, 'p_g': 42, 'D': 34, 'Graphics2': 33, 'return': 30, 'null': 28, '==': 27, 'p_color': 26, 'if': 24, 'p_translucency_factor': 21, 'double': 20, 'Float': 7, 'Point': 6, 'Pla': 5, 'void': 1, 'public': 0}
{'}\n': 239, '}': 238, ';': 40, ')': 7, '(': 6, '.': 35, 'Adapter': 204, 'Pager': 203, 'View': 202, 'month': 201, 'Calendar': 30, '': 29, 'Date': 63, 'set': 45, 'Item': 64, 'selected': 62, 'get': 36, 'cal': 31, 'Instance': 37, '=': 32, '{': 8, 'To': 3, 'void': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 6, 'Valid': 3, 'is': 2, 'return': 8, '{': 7, '(': 5, 'boolean': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 5, '(': 4, 'Exception': 21, 'Operation': 20, 'Unsupported': 19, '': 18, 'new': 17, 'throw': 16, '{': 15, 'public': 0}
{'}\n': 264, ';': 262, ')': 61, 'z': 33, '*': 99, '+': 145, 'x': 86, '(': 15, '.': 83, 'Math': 82, '': 81, '{': 70, ',': 22, 'double': 12, 'static': 11, 'public': 10}
{'}\n': 94, ';': 56, ')': 19, 'e': 62, ',': 74, '(': 12, 'String': 78, 'to': 77, '.': 66, '': 60, 'Level': 70, 'log': 65, '{': 20, 'catch': 58, '}': 57, 'try': 32, 'is': 10}
{'}\n': 354, ';': 24, ')': 3, '.': 16, '}': 115, '(': 2, 'Error': 226, '{': 8, 'NUM': 325, '_': 21, 'if': 319, 'idx': 37, 'STR': 127, 'syntax': 225, 'At': 60, 'char': 59, 'pattern': 57, 'len': 26, '<': 50, 'Exception': 7, 'RESyntax': 6, '': 5, 'throws': 4}
{'}\n': 588, '}': 83, ';': 71, ')': 56, ',': 12, 'column': 52, 'row': 49, 'dataset': 46, 'entities': 571, '(': 7, 'Entity': 569, 'Item': 6, 'add': 567, 'bar': 134, '.': 63, '=': 61, 'NUM': 78, '_': 77, '<': 76, 'value': 111, 'g2': 11, 'Label': 433, 'draw': 5, '{': 57, 'Visible': 65, 'is': 207, '&&': 452, 'null': 104, '!=': 450, 'generator': 435, 'if': 72, 'Generator': 434, 'get': 64, 'Category': 14, '': 1, 'Group': 424, 'Element': 416, 'end': 422, 'Hinting': 417, 'state': 18, 'Paint': 375, 'Stroke': 361, 'new': 236, '+': 272, 'Double': 242, 'D': 10, 'Width': 227, 'Bar': 138, 'Horizontal': 208, 'orientation': 124, 'double': 110, 'edge': 162, 'Java2': 182, 'To': 181, 'Axis': 33, 'range': 40, 'Edge': 161, 'Range': 167, 'plot': 29, 'Rectangle': 160, 'Row': 60, 'visible': 59, 'domain': 34, 'W0': 135, 'calculate': 137, 'Orientation': 123, 'Plot': 28, 'Value': 38, 'data': 23, 'return': 81, '==': 103, 'Number': 85, 'Index': 67, 'Series': 66, 'int': 48, 'pass': 55, 'Dataset': 45, 'Area': 24, 'Rectangle2': 21, 'State': 17, 'Renderer': 16, 'Graphics2': 9, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 116, ';': 115, ')': 66, 'Line': 70, 'command': 69, '(': 81, '{': 67, '>': 5, 'String': 23, '': 3, '<': 2, 'List': 11}
{'}\n': 60, ';': 27, ')': 6, 'Connected': 4, 'is': 2, '.': 36, 'Info': 30, 'network': 31, '&&': 49, 'null': 48, '!=': 47, 'return': 44, '(': 5, 'Network': 3, 'Active': 38, 'get': 19, '=': 13, '': 8, 'SERVICE': 25, 'CONNECTIVITY_': 24, 'Service': 21, 'System': 20, 'Manager': 10, 'Connectivity': 9, '{': 7, 'boolean': 1, 'public': 0}
{'}\n': 155, ';': 39, ')': 38, ',': 151, '(': 37, 'put': 148, '.': 47, '_': 80, 'NUM': 96, 'auth': 54, '=': 43, 'if': 52, '': 8, 'new': 32, 'String': 9, 'void': 1}
{'}\n': 85, ';': 31, ')': 19, '(': 4, 'Interest': 80, 'Write': 24, 'enable': 78, 'Packet': 8, 'close': 3, 'Last': 72, 'add': 71, '.': 34, 'Queue': 61, 'Msg': 60, 'send': 59, 'clear': 63, 'forced': 13, '=': 49, 'Closing': 55, 'Forced': 54, 'is': 23, 'BOOL': 51, '_': 37, 'Close': 48, 'pending': 47, 'STR': 38, '+': 39, 'log': 33, '}': 32, 'return': 30, '{': 20, 'Disabled': 25, 'if': 21, 'boolean': 12, ',': 11, 'Server': 7, '': 5, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 98, ';': 55, ')': 6, 'Edges': 11, '.': 28, 'edge': 88, '}': 86, '(': 17, 'Edge': 48, '=': 25, '': 8, 'List': 16, '{': 7, 'replace': 2, 'void': 1}
{'}\n': 61, ';': 37, ')': 20, 'Pane': 9, 'root': 10, '{': 21, 'JRoot': 8, '': 7, '(': 6, 'public': 0}
{'}\n': 28, ';': 18, ')': 7, 'value': 6, '(': 4, 'write': 2, '.': 21, 'Types': 15, 'primitive': 19, 'Primitive': 14, 'Write': 13, 'check': 12, '{': 11, 'IOException': 10, '': 9, 'throws': 8, 'void': 1, 'public': 0}
{'}\n': 109, ';': 21, '}': 103, ')': 12, '(': 7, '.': 31, '{': 13, '': 8, 'Name': 44, '_container': 16, 'File': 59, '=': 52, 'STR': 41, '_': 40, '+': 39, 'null': 20, 'XML': 6, 'Container': 5}
{'}\n': 83, ';': 56, ')': 31, 'Backend': 28, 'for': 29, ',': 18, 'dirs': 71, '(': 10, 'expand': 8, '>': 7, '': 2, '<': 4, 'List': 3, 'Array': 43, 'new': 41, '=': 40, '{': 32, 'String': 6, 'File': 15, 'Wildcards': 9, 'static': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 11, 'Name': 10, 'charset': 9, '(': 16, 'for': 14, '{': 12, 'String': 8, '': 2, 'public': 0}
{'}\n': 21, ';': 15, '': 1, 'Value': 9, 'long': 11, 'double': 8, '{': 7, ')': 6, '(': 3}
{'}\n': 34, ';': 33, ')': 17, 'Trace': 11, '(': 4, '.': 25, '': 5, ',': 22, '{': 18, 'stack': 15, ']': 14, '[': 13, 'Element': 12, 'Stack': 10, 'static': 1, 'public': 0}
{'}\n': 78, ';': 50, ')': 12, 'ID': 11, 'feature': 10, '(': 8, 'Set': 7, 'Is': 6, 'e': 5, '.': 24, 'super': 68, 'return': 30, '}': 66, 'null': 35, '!=': 38, ':': 29, '': 1, 'Package': 23, 'Eip': 22, 'case': 20, 'equals': 46, 'EDEFAULT': 33, '!': 41, '?': 36, '==': 34, '{': 13, 'switch': 14, 'int': 9, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{')': 12, '': 3, '(': 8, 'String': 4, 'static': 1, 'public': 0}
{'}\n': 100, ';': 99, ')': 29, '(': 15, '.': 37, 'matcher': 34, '=': 35, 'Matcher': 33, '': 7}
{'}\n': 105, ';': 31, ')': 43, '(': 42, '}': 95, 'dimension': 23, 'get': 78, '.': 56, '=': 24, ',': 69, '{': 64, '!=': 61, 'Dimension': 22}
{'}\n': 37, ';': 36, ')': 19, '': 1, '.': 32, 'Modifier': 31, 'Class': 9, 'type': 13, '(': 7, 'Field': 2, '{': 20, 'name': 18, 'String': 17, ',': 15, '>': 12, '?': 11, '<': 10}
{'}\n': 175, ';': 36, ')': 27, '.': 44, ']': 15, '[': 14, 'Index': 115, 'New': 113, '': 1, 'NUM': 79, '_': 78, '(': 5, 'LSubrs': 114, 'Private': 71, ',': 100, 'Subrs': 26, '{': 53, '>=': 77, 'Offset': 73, 'Font': 8, 'fonts': 39, '++': 51, 'length': 48, 'fdprivate': 45, 'int': 6, 'void': 0}
{'}\n': 94, ';': 93, ')': 5, '(': 4, 'Egl': 27, 'm': 45, 'Surface': 56, ',': 48, '.': 29, '{': 6, 'public': 0}
{'}\n': 15, ')': 13, 'Parameters': 5, '(': 6}
{'}\n': 102, '}': 58, ';': 23, ')': 7, 'line': 6, ',': 19, 'STR': 18, '_': 17, '(': 3, 'Lenient': 35, 'add': 1, '{': 8, 'else': 59, 'NUM': 21, 'substring': 39, '.': 13, 'With': 65, 'starts': 64, 'if': 24, '+': 52, 'index': 10, '-': 28, '!=': 27, 'Of': 15, '=': 11, 'int': 9, 'String': 5, '': 4}
{'}\n': 107, '}': 105, ';': 29, ')': 11, ',': 101, 'TYPE': 100, 'MERGE_': 99, 'DEFAULT_': 98, '': 7, '(': 21, 'Children': 95, 'Node': 4, 'merge': 3, '.': 42, 'Utilities': 91, 'Help': 90, 'Merge': 89, '{': 12, 'if': 77, 'At': 72, 'Child': 44, 'get': 43, 'master': 18, 'Tree': 8, 'Mutable': 15, 'Default': 14, '=': 20, '++': 50, 'Count': 45, 'int': 32, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 99, ';': 14, ')': 6, '(': 5, 'negate': 94, '.': 93, 'Number': 40, 'a': 10, ',': 54, 'c': 24, 'STR': 13, '_': 12, 'Equals': 83, 'assert': 82, 'Scale': 17, 'Integer': 50, 'Big': 37, '': 8, 'new': 42, 'Decimal': 38, '=': 11, 'NUM': 20, 'int': 15, 'String': 9, '{': 7, 'Negate': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 77, '}': 47, ';': 36, ')': 21, 'e': 58, ',': 40, 'STR': 68, '_': 67, '(': 34, '': 2, '{': 60, 'Exception': 57, 'Instance': 33, 'new': 32, '.': 31, 'Type': 20, 'item': 29, '=': 28, '>': 18, '?': 17, '<': 16, 'Class': 15, 'parameters': 12, 'Access': 11, 'Parameter': 10, 'Object': 3, 'static': 1, 'private': 0}
{'}\n': 21, ';': 14, ')': 9, 'exp': 8, '(': 5, 'Experiment': 7, 'set': 15, 'this': 11, '{': 10, '': 1, 'Panel': 4, 'public': 0}
{'}\n': 163, ';': 20, ')': 11, '(': 5, '}': 60, '{': 12, 'else': 61, ']': 9, 'i': 16, '[': 8, 'args': 10, '=': 17, 'STR': 47, '_': 18, 'equals': 44, '.': 24, 'arg': 33, 'if': 40, 'String': 7, '': 6, '++': 28, 'length': 25, '<': 22, 'NUM': 19, 'int': 15, 'for': 13, 'void': 2, 'private': 0}
{'}\n': 68, ';': 67, '.': 22, '_': 50, ')': 17, '(': 6, '{': 18, '': 7, ',': 12, 'Client': 9, 'db': 10, 'Db': 8, 'static': 1, 'public': 0}
{'}\n': 70, ';': 69, ')': 5, '(': 13, '.': 34, 'Element': 55, '': 45, '{': 42, 'elements': 19, '=': 20, 'void': 1}
{'}\n': 28, ';': 27, ')': 9, '(': 5, 'Case': 23, 'Lower': 22, 'to': 21, '.': 15, 'name': 8, 'Key': 17, 'contains': 16, 'return': 11, '{': 10, 'String': 7, '': 6, 'Value': 4, 'Name': 3, 'has': 2, 'boolean': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 9, 'prefix': 8, '(': 4, 'With': 3, 'starts': 2, 'return': 11, '{': 10, 'boolean': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 12, 'null': 23, '!=': 22, 'window': 10, 'Window': 3, '(': 4, 'return': 14, '{': 13, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 49, ';': 48, ')': 19, 'Value': 14, 'new': 17, '(': 6, 'Of': 32, 'value': 31, '.': 30, 'Long': 29, '': 7, ',': 11, 'old': 13, 'Name': 10, 'property': 9, 'Change': 5, 'Property': 4, 'fire': 3, '{': 20, 'long': 12, 'String': 8, 'void': 2}
{'}\n': 64, ';': 25, '=': 21, 'Picking': 56, 'Batch': 55, 'enable': 54, '.': 19, 'this': 18, ')': 11, '(': 5, 'Millis': 48, 'Time': 41, 'current': 46, 'System': 44, '': 1, 'Modified': 40, 'last': 39, 'Id': 29, 'Unique': 32, 'next': 31, 'unique': 28, 'visible': 20, '{': 12, 'Object': 4, 'Surface': 3, 'Abstract': 2, 'public': 0}
{'}\n': 338, ';': 337, ')': 40, '_': 301, '(': 36, 'parse': 31, 'return': 159, '{': 158, 'Exception': 47, '': 11, 'String': 21, 'public': 0}
{'}\n': 493, '}': 161, ';': 107, ')': 70, 'e': 457, ',': 324, 'STR': 486, '_': 485, 'ID': 483, 'PLUGIN_': 482, '': 12, '.': 92, 'Plugin': 43, 'Connector': 478, 'Appraise': 42, 'ERROR': 474, 'IStatus': 471, '(': 6, 'Status': 137, 'new': 130, 'Exception': 76, 'Core': 75, 'throw': 129, '{': 128, 'null': 335, '==': 334, 'if': 330, 'Commit': 266, 'Review': 4, 'get': 275, '=': 272, 'review': 265, 'set': 245, 'Data': 14, 'task': 15, 'client': 50, 'Client': 45, 'Task': 13, 'New': 3, 'create': 2, 'private': 0}
{'}\n': 177, ')': 175, '(': 166, 'Voice': 118, '': 110, 'public': 3}
{'}\n': 292, ';': 66, '}': 226, ')': 9, '(': 6, '{': 10, '_': 209, 'Char': 34, 'if': 173, 'else': 227, 'Index': 63, 'Point': 83, 'code': 82, '': 71, ',': 96, '.': 73, 'Character': 72, '=': 36, 'int': 81, 'Surrogate': 76, 'High': 75, 'is': 74, 'char': 55}
{'}\n': 526, ';': 159, 'schedule': 18, 'return': 523, '}': 522, ')': 13, '(': 7, '.': 186, '': 1, ',': 217, '=': 19, '{': 14, '==': 107, 'if': 85, 'Schedule': 3}
{'}\n': 77, ';': 26, 'return': 68, '}': 27, 'Color': 3, '{': 22, ')': 21, 'Exception': 64, 'Format': 63, 'Number': 62, '': 2, '(': 5, 'catch': 59, 'color': 8, '=': 49, 'try': 46, 'null': 20, '==': 19, 'if': 16, 'get': 32, 'c': 30, ',': 9, 'String': 7, 'static': 1, 'public': 0}
{'}\n': 145, ';': 54, ')': 36, 'Types': 101, 'seen': 100, ',': 21, 'voice': 35, 'locale': 31, 'Type': 18, 'target': 26, '(': 14, 'Processing': 13, 'For': 12, 'Required': 11, 'modules': 10, '.': 118, 'Mary': 7, '': 2, 'Data': 17, 'null': 60, '==': 59, 'if': 38, 'source': 19, 'STR': 52, '_': 51, '{': 37, 'Voice': 34, 'Locale': 30, '>': 9, 'Module': 8, '<': 5, 'List': 4, 'Linked': 3, 'static': 1}
{'}\n': 55, ';': 54, ')': 7, 'z': 51, '(': 3, 'square': 19, '.': 12, 'Conversions': 17, 'Number': 16, '': 10, '+': 27, 'y': 38, 'x': 25, 'sqrt': 13, 'Math': 11, 'return': 9, '{': 8, 'double': 1, 'public': 0}
{'}\n': 43, ';': 42, ')': 25, '(': 17, '.': 31, '{': 26, 'time': 10, 'long': 9, 'public': 0}
{'}\n': 65, ';': 13, '=': 27, '_': 45, 'NUM': 51, 'vtable_in_use': 34, ')': 7, '.': 21, '(': 4, '{': 8, 'public': 0}
{'}\n': 176, ';': 45, 'Map': 2, 'Val': 56, 'key': 55, 'return': 171, ')': 16, 'messages': 32, '(': 12, 'Messages': 166, 'send': 165, '.': 91, 'Broker': 163, '}': 161, 'msg': 118, ',': 6, 'put': 154, 'topic': 15, '>': 9, '<': 3, 'Record': 23, 'Producer': 22, '': 1, 'new': 34, 'add': 133, '+': 106, 'runtime': 87, '=': 33, 'String': 5, 'evt': 71, 'Millis': 94, 'Time': 93, 'current': 92, 'System': 90, 'long': 86, '{': 17, '++': 83, 'CNT': 43, 'NUM': 74, '_': 73, 'int': 70, 'for': 68, 'Hash': 61, 'List': 19, 'Array': 36, 'Stream': 11, 'produce': 10, 'private': 0}
{'}\n': 59, ';': 26, ')': 13, '(': 7, 'String': 3, 'to': 54, '.': 44, 'buf': 18, 'return': 51, '}': 50, 'ch': 9, 'append': 45, '{': 14, '++': 40, 'i': 30, '<': 36, 'NUM': 33, '_': 32, '=': 19, 'int': 11, 'for': 27, 'Buffer': 17, '': 2, 'new': 20, ',': 10, 'char': 8, 'Char': 6, 'Of': 5, 'string': 4, 'static': 1}
{'}\n': 22, ';': 21, ')': 9, '.': 14, '{': 10, 'connection': 8, 'Connection': 7, '': 6, '(': 5}
{'}\n': 130, ';': 27, 'end': 29, '=': 20, ']': 13, 'NUM': 25, '_': 24, '[': 12, 'Span': 15, 'a': 8, 'begin': 19, '++': 80, '}': 82, '--': 106, '{': 17, ')': 16, '(': 4, 'At': 72, 'char': 71, '.': 56, 'data': 44, 'Char': 67, 'trim': 3, '&&': 65, '>': 87, 'while': 49, '-': 37, 'length': 57, '<': 53, 'Text': 9, '': 5, 'int': 11, ',': 10, 'void': 2, 'public': 0}
{'}\n': 23, ';': 22, ')': 12, 'l': 11, '(': 6, '.': 17, 'Listeners': 16, 'Finished': 4, 'm_': 14, '{': 13, 'Listener': 5, 'Execution': 9, 'Script': 3, '': 7, 'void': 1, 'public': 0}
{'}\n': 256, ';': 15, ')': 7, 'NUM': 14, '_': 13, '-': 66, '+': 248, 'pos': 74, '(': 6, 'Byte': 4, 'get': 43, '.': 42, 'buf': 20, ',': 40, 'byte': 36, 'Equals': 33, 'assert': 32, '}': 213, 'actual': 178, 'expected': 100, 'Util': 142, 'Bytes': 120, '': 17, ']': 99, 'length': 185, '[': 98, 'new': 22, '=': 12, 'final': 9, 'array': 168, 'Offset': 149, 'And': 148, 'Len': 147, 'With': 146, 'compare': 144, 'put': 127, 'next': 107, 'r': 105, 'Int': 108, '{': 8, '++': 93, 'i': 82, 'LIMIT': 90, '<': 88, 'int': 10, 'for': 79, 'Buffer': 27, 'Array': 5, 'Put': 3, 'test_get': 2, 'void': 1, 'public': 0}
{'}\n': 150, ';': 29, 'tmp': 15, 'return': 147, '}': 146, 'Array': 125, 'new': 24, '=': 26, ']': 4, 'Size': 25, '[': 3, 'Object': 135, '': 1, ')': 11, 'NUM': 38, '_': 37, '>': 35, 'length': 17, '.': 16, 'a': 110, ',': 109, '(': 7, 'min': 9, 'Math': 103, 'else': 98, 'Capacity': 6, '<': 18, 'if': 13, '++': 82, '|=': 32, 'int': 8, '{': 12, 'ensure': 5, 'private': 0}
{'}\n': 49, ';': 33, ')': 32, 'Number': 7, 'session': 6, '(': 4, '': 2, 'new': 39, 'add': 37, '.': 14, 'Elements': 35, 'test': 34, ',': 29, 'Session': 16, 'max': 15, 'this': 13, 'Math': 20, '=': 18, '{': 12, 'int': 5, 'void': 1, 'public': 0}
{'}\n': 80, ';': 50, 'return': 77, '}': 76, '(': 29, ')': 49, '.': 27, 'Pt': 36, 'x': 43, 'Point': 16, '': 9, 'center': 12}
{'}\n': 59, ';': 16, 'count': 2, 'return': 56, '}': 55, '++': 34, ')': 9, 'i': 20, '(': 4, 'At': 44, 'char': 43, '.': 28, 'sequence': 8, '{': 10, 'length': 29, '<': 26, 'NUM': 15, '_': 14, '=': 13, 'int': 1, 'for': 17, '': 5}
{'}\n': 45, ';': 44, ')': 9, 'LABEL': 42, '': 1, ',': 23, 'NAME': 39, 'Num': 8, 'crl': 7, '(': 5, 'Of': 32, 'value': 31, '.': 18, 'Integer': 29, 'Big': 28, 'BOOL': 25, '_': 24, 'Id': 22, 'PKIXExtensions': 17, '{': 13, 'IOException': 12, 'throws': 10, 'int': 6, 'Extension': 4, 'public': 0}
{'}\n': 113, ';': 61, ')': 13, 'sigma': 17, '(': 51, 'log': 97, '.': 96, 'Math': 95, '': 94, '-': 88, 'Pi': 92, 'Two': 91, 'Sqrt': 90, 's_log': 89, 'mu': 12, 'Mu': 45, 'From': 21, 'Sigma': 20, 'calc': 3, '=': 18, 'double': 2, 'final': 15, '{': 14, 'Prob': 5, 'Log': 4, 'private': 1, 'static': 0}
{'}\n': 33, ';': 32, ')': 12, '(': 25, 'abs': 24, '.': 23, 'Math': 22, '': 21, '{': 13, 'tolerance': 11}
{'}\n': 127, ';': 55, ')': 22, '(': 6, 'Loop': 104, 'Event': 27, 'Secondary': 102, 'start': 101, 'dispatcher': 59, ',': 18, 'Component': 93, 'get': 37, 'Context': 40, 'App': 80, 'To': 88, 'target': 87, '.': 76, 'Toolkit': 75, 'Sun': 74, '': 24, 'On': 79, 'Later': 78, 'invoke': 77, 'event': 28, 'DISPATCH_': 67, 'Dispatcher': 58, 'new': 30, '=': 29, 'y': 21, 'x': 17, 'Source': 26, 'Drag': 25, '{': 23, 'int': 16, 'final': 1, 'drag': 3, 'void': 2, 'protected': 0}
{'}\n': 53, ';': 52, ')': 12, 'STR': 25, '_': 24, '(': 8, 'Of': 22, 'index': 21, '.': 16, 's3uri': 11, ',': 26, 'substring': 17, 'return': 14, '{': 13, 'String': 3, '': 2, 'extract': 4, 'static': 1, 'protected': 0}
{'}\n': 211, ';': 191, '}': 192, ')': 99, '(': 45, '.': 177, '{': 104, 'null': 135, 'if': 130, 'String': 49, '': 37, 'Recipient': 43}
{'}\n': 25, ';': 24, ')': 10, '(': 5, 'Name': 20, 'get': 19, '.': 14, 'clz': 9, 'Classes': 13, 'safe': 12, '{': 11, 'Class': 4, 'Soot': 7, '': 6, 'Safe': 3, 'public': 0}
{'}\n': 28, ';': 15, ')': 7, '(': 6, 'm': 17, '{': 8, 'List': 3}
{'}\n': 12, ';': 11, 'running': 10, 'return': 7, '{': 6, ')': 5, '(': 4, 'Running': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 165, '}': 164, ';': 74, ')': 27, '(': 12, '{': 113, 'return': 144, '.': 69, 'null': 111, '!=': 110, 'Line': 47, 'read': 104, '=': 51, 'while': 99, 'String': 6, '': 5, 'new': 52, 'Reader': 49, 'Stream': 61, 'Input': 60, 'Number': 48, 'r': 50, 'static': 1}
{'}\n': 68, ';': 21, ')': 7, '(': 6, 'String': 2, 'to': 63, '.': 23, 'sb': 13, 'return': 60, 'append': 24, 'STR': 34, '_': 33, 'Builder': 12, '': 1, 'new': 15, '=': 14, 'final': 9, '{': 8, 'public': 0}
{'}\n': 275, '}': 212, ';': 42, ')': 6, '(': 5, 'delete': 270, '.': 26, 'out': 22, '{': 18, 'finally': 213, 'destroy': 208, 'src': 48, 'ex': 241, '+': 250, 'STR': 249, '_': 248, 'info': 246, 'log': 244, 'Exception': 13, 'Argument': 239, 'Illegal': 238, '': 8, 'catch': 235, 'Journal': 4, 'try': 43, 'get': 31, 'f': 133, '=': 23, 'final': 19, '>': 132, '<': 128, 'Future': 127, 'Properties': 54, 'Store': 51, 'JNL': 40, 'Options': 37, ',': 10, 'Name': 32, 'File': 21, 'Temp': 28, 'create': 27, 'Execution': 16, 'Interrupted': 12, 'IOException': 9, 'throws': 7, 'void': 1, 'public': 0}
{'}\n': 224, ';': 134, 'return': 220, '}': 135, ')': 32, 'NUM': 60, '_': 59, '(': 36, 'val': 27, ',': 89, 'substring': 84, '.': 42, '=': 75, '{': 73, 'STR': 70, 'String': 10, '': 9, 'private': 0}
{'}\n': 68, ';': 46, ')': 11, 'value': 7, '(': 5, 'log': 61, '.': 29, 'Math': 28, 'Fast': 50, '': 15, '*': 56, 'power': 10, 'exp': 53, 'return': 21, '}': 47, ',': 8, 'pow': 3, ':': 36, 'Strict': 27, '?': 25, 'MATH': 18, 'STRICT_': 23, '{': 12, 'JDK_': 17, 'USE_': 16, 'if': 13, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 85, ';': 84, ')': 45, 'get': 76, '.': 36, 'class': 68, 'clazz': 52, '(': 40, '>': 12, '?': 11, '<': 10, 'Class': 9, '': 8}
{'}\n': 23, ';': 22, ')': 10, '(': 19, '.': 17, 'Counter': 16, 'Line': 15, 'POSBase': 14, '': 2, '{': 11, 'String': 3, 'public': 0}
{'}\n': 46, ';': 45, ')': 20, '(': 14, 'Elements': 40, 'Enclosed': 39, 'get': 38, '.': 31, 'Element': 17, 'In': 12, 'types': 32, 'Filter': 30, '': 1, 'Map': 2, 'Annotations': 25, 'Imported': 24, 'create': 23, 'return': 22, '{': 21, 'annos': 11, '>': 10, 'Mirror': 9, 'Annotation': 8, ',': 6, 'String': 5, '<': 3, 'private': 0}
{'}\n': 247, '}': 242, ';': 53, ')': 7, '(': 40, '{': 8, 'ways': 15, '_': 66, '=': 16, '.': 33, ',': 112, 'Node': 94, '': 9, 'NUM': 67, 'size': 62, 'if': 54, 'get': 34, '>': 14, 'Way': 13, '<': 11, 'List': 10, 'public': 0}
{'}\n': 23, ';': 16, ')': 6, '(': 5, 'Cursor': 4, 'set': 11, '.': 10, '{': 7, 'update': 3, 'void': 2}
{'}\n': 56, ';': 55, 'NUM': 38, '_': 37, ')': 13, 'MASK': 34, 'DOWN_': 33, 'BUTTON2_': 32, '': 8, '.': 20, 'Event': 10, 'Input': 28, '&': 26, '(': 7, 'Ex': 23, 'Modifiers': 22, 'get': 21, 'an': 11, 'return': 15, '{': 14, 'Mouse': 5, 'Button': 6, 'Middle': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 23, '{': 12, ')': 11, '(': 5, 'Message': 4}
{'}\n': 30, ';': 29, '.': 18, '{': 7, ')': 6, '(': 5, 'Stopped': 3}
{'}\n': 81, ';': 43, '=': 78, 'Stream': 53, 'input': 52, '}': 75, ')': 4, '(': 3, 'close': 55, '.': 27, '_': 30, 'STR': 31, 'Debug': 26, '': 6, '{': 10, 'IOException': 7, 'throws': 5, 'void': 1}
{'}\n': 390, ';': 62, '}': 262, '=': 52, ']': 49, '[': 48, 'NUM': 76, '_': 75, '++': 173, ')': 138, '<': 272, 'int': 36, '(': 224, 'for': 263, '.': 133, '{': 158, 'length': 134, 'new': 53, '': 15, 'private': 0}
{'}\n': 50, '}': 49, ';': 48, 'STR': 40, '_': 30, '(': 6, '{': 15, ')': 11, 'NUM': 31, '==': 20, 'length': 26, '.': 25, '||': 22, 'null': 21, 'Lang': 5, 'if': 16, 'String': 8, '': 7}
{'}\n': 33, ';': 32, 'Time': 14, 'fuse': 13, '(': 9, '.': 21, 'Math': 20, '': 19, ')': 11, 'int': 10, 'public': 0}
{'}\n': 22, ';': 21, ')': 10, '(': 9, '{': 11, 'Threads': 8, '': 1}
{'}\n': 22, ';': 21, ')': 6, '(': 5, 'Millis': 14, 'Time': 3, 'current': 12, '.': 11, 'System': 10, '': 9, 'return': 8, '{': 7, 'long': 1}
{'}\n': 328, ';': 327, ')': 222, '(': 65, '.': 250, 'a': 71, 'cos': 60, '': 53, '{': 223, 'public': 0}
{'}\n': 239, ';': 28, 'result': 60, 'return': 236, '}': 166, 'String': 41, 'Value': 48, 'field': 42, '=': 19, 'description': 227, '.': 22, '{': 14, ')': 13, 'DESC': 221, 'QUALITY_': 187, 'ELEMENT_': 112, 'XML_': 185, '': 2, '(': 8, 'equals': 182, 'Name': 43, 'if': 97, 'else': 167, 'Short': 198, 'parse': 200, 'CODE': 188, 'STR': 174, '_': 75, 'Node': 16, 'get': 23, 'null': 149, '!=': 79, 'Child': 24, 'First': 138, 'NODE': 113, '==': 107, 'Type': 104, 'i': 73, 'item': 92, 'fields': 18, '++': 84, 'Count': 31, 'NUM': 76, 'int': 29, 'for': 70, 'Quality': 5, 'Data': 4, 'Source': 3, 'new': 62, 'Length': 36, 'Nodes': 25, 'Element': 10, 'dom': 11, 'List': 17, 'XML': 7, 'from': 6, 'static': 1, 'public': 0}
{'}\n': 300, ';': 299, ')': 204, 'Class': 84, 'annotation': 128, '(': 52, 'Present': 30, 'Annotation': 29, 'is': 28, '.': 231, '{': 205, '': 53}
{'}\n': 87, '}': 58, ';': 57, ')': 34, ',': 10, 'STR': 81, '_': 80, '(': 6, 'Exception': 78, 'Hmac': 77, '': 2, 'new': 75, 'throw': 74, 'catch': 59, 'secret': 46, 'String': 8, 'JWT': 5, 'static': 1}
{'}\n': 87, '}': 86, ';': 85, ')': 17, '(': 4, '.': 65, 'Symbols': 22, 'exported': 21, '{': 18, 'null': 24, 'if': 19, 'void': 1, 'public': 0}
{'}\n': 62, ';': 60, ')': 16, 'dsl': 15, '(': 10, 'Element': 23, 'add': 6, '.': 21, 'Listeners': 20, 'm_data': 18, '{': 17, 'Listener': 9, 'Source': 8, 'Data': 7, '': 1, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 52, ';': 51, ')': 31, ',': 42, 'Hierarchy': 14, '(': 39, 'In': 37, 'Annotation': 3, '{': 32, 'top': 30, 'Mirror': 4, '': 2, 'final': 26, 'qualifier': 15, 'Qualifier': 13, 'static': 1}
{'}\n': 99, ';': 11, 'BOOL': 34, '_': 33, 'return': 32, ')': 5, '': 7, ',': 75, 'state': 10, '(': 4, 'Listeners': 83, 'notify': 82, '_name': 79, '+': 78, 'STR': 77, '_level': 67, 'log': 72, '.': 24, '_log': 58, 'Loggable': 65, 'is': 25, '&&': 61, 'null': 60, '!=': 59, 'if': 21, '}': 36, 'Time': 44, 'current': 50, 'Current': 47, '=': 18, 'Change': 43, '_last': 42, '_state': 19, '{': 6, 'After': 26, 'this': 14, 'synchronized': 12, 'State': 9, 'Lifecycle': 8, 'to': 2, 'boolean': 1, 'public': 0}
{'}\n': 94, ';': 30, 'read': 3, '}': 73, '+=': 70, '{': 24, ')': 20, 'NUM': 29, '_': 28, '>': 64, '-': 57, ',': 9, '+': 53, 'buf': 13, '(': 4, '.': 47, '=': 27, '<': 40, 'while': 37, 'int': 15, 'IOException': 23, '': 5, 'throws': 21, ']': 12, '[': 11, 'byte': 10, 'Stream': 7, 'Input': 6, 'static': 1}
{'}\n': 53, ';': 29, ')': 13, '(': 3, 'exp': 48, '.': 24, 'Math': 46, '': 4, '*': 35, 'm_gamma': 34, '=': 22, 'double': 1, 'y': 12, 'x': 7, '{': 17, 'Exception': 16, 'throws': 14, 'Instance': 6, 'Vector': 5, ',': 8, 'evaluate': 2, 'public': 0}
{'}\n': 61, '}': 60, ';': 59, ')': 31, '(': 26, 'Click': 56, 'do': 55, '.': 54, 'Button': 53, '{': 32, 'All': 47, '!': 45, 'if': 43, 'Only': 3, 'Included': 2, 'cancel': 1, 'void': 0}
{'}\n': 127, ';': 50, '}': 122, ')': 35, 'entry': 94, '(': 7, '.': 32, '_': 43, 'if': 92, 'get': 87, '{': 82, 'i': 54, 'size': 58, 'entries': 37, '=': 20, 'int': 53, 'for': 51, '': 2, 'NUM': 44, '>': 18, '<': 15, 'List': 14, 'Array': 23, 'new': 21, 'Entry': 17}
{'}\n': 131, ';': 36, 'suffix': 46, 'return': 128, '}': 127, ')': 18, 'STR': 114, '_': 78, '(': 8, '{': 22, 'NUM': 79, '.': 28, '=': 26, 'int': 23, 'String': 3, '': 2}
{'}\n': 40, ';': 19, ']': 23, 'NUM': 37, '_': 17, '[': 22, 'tokens': 34, ')': 11, '(': 7, '.': 27, '=': 16, '': 2, 'STR': 18, 'String': 9, '{': 12}
{'}\n': 541, ';': 47, ')': 34, 'shadow': 33, ',': 7, 'Color': 18, 'pen': 29, 'Paint': 23, 'fill': 19, 'path': 39, '(': 4, 'Path': 38, 'draw': 2, 'close': 519, '.': 49, 'h': 15, '+': 70, 'y': 9, 'w': 12, 'x': 6, '*': 103, 'NUM': 102, '_': 101, 'To': 51, 'curve': 80, 'move': 50, 'General': 37, '': 17, 'new': 41, '=': 40, '{': 35, 'boolean': 32, 'int': 5, 'void': 1, 'protected': 0}
{'}\n': 63, ';': 61, ')': 31, '.': 56, 'obj': 8, 'return': 42, '{': 34, 'Object': 7, '': 6, '(': 5}
{'}\n': 74, ';': 49, ')': 34, 'Types': 33, '(': 9, '.': 38, '': 2, ',': 14, 'ECs': 23, 'return': 22, 'Only': 18, 'changes': 17, 'Critical': 13, 'is': 12, 'Control': 6, 'new': 7, 'change': 32, 'Null': 40, 'if': 39, 'Reject': 37, '{': 35, 'Type': 30, 'Change': 29, 'Search': 4, 'Persistent': 3, 'final': 10, 'boolean': 11, 'Request': 5, 'static': 1, 'public': 0}
{'}\n': 231, ';': 110, 'i': 126, 'Neurons': 20, 'target': 90, ')': 50, '(': 4, 'source': 19, '{': 51, '++': 143, '.': 67, 'NUM': 129, '_': 128, '=': 127, 'int': 125, 'for': 123, '': 5}
{'}\n': 30, ';': 29, ')': 13, 'right': 12, ',': 9, 'left': 8, '(': 5, 'Of': 22, 'value': 21, '.': 20, 'Integer': 19, '': 2, 'multiply': 4, 'return': 15, '{': 14, 'Character': 7, 'Number': 3, 'static': 1, 'public': 0}
{'}\n': 180, ';': 47, ')': 11, '(': 32, 'String': 3, 'to': 175, '.': 82, 'sb': 81, 'return': 172, 'append': 83, '_': 76, '=': 27, 'STR': 97, '{': 12, 'NUM': 77, 'int': 50, 's': 16, '': 2, 'static': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 12, 'listener': 11, '(': 6, 'add': 2, '.': 17, 'Listeners': 16, 'Change': 4, '{': 13, 'Listener': 5, '': 7, 'void': 1, 'public': 0}
{'}\n': 137, ';': 31, '=': 75, '}': 32, ')': 7, 'm_context': 104, ',': 101, '(': 3, 'alloc': 98, '.': 97, 'm_store': 96, 'int': 94, 'final': 88, '<': 80, 'Array': 78, '': 21, 'new': 20, 'Header': 68, 'm_blob': 57, '{': 11, 'Hdr': 62, 'm_writing': 61, 'm_count': 55, 'if': 12, 'ERR_': 27, 'Exception': 24, 'State': 23, 'Illegal': 22, 'throw': 19, 'public': 0}
{'}\n': 14, ';': 13, 'resource': 7, '=': 11, '_resource': 10, '{': 9, ')': 8, 'Object': 6, '': 1, '(': 4, 'Listener': 3, 'public': 0}
{'}\n': 92, '}': 88, ';': 39, ')': 50, 'j': 55, ',': 82, 'i': 40, '(': 10, '=': 36, '{': 51, '++': 49, 'NUM': 38, '_': 37, 'list': 19, '>': 6, 'T': 5, '': 4, '<': 3, 'List': 14}
{'}\n': 174, ';': 57, ')': 46, ',': 157, 'NUM': 139, '_': 75, 'long': 7, '}': 113, ']': 104, '[': 101, '(': 21, '=': 63, '{': 47, '==': 42, 'if': 38, 'cur': 32, 'public': 0}
{'}\n': 142, '}': 114, ';': 27, 'afe': 87, 'throw': 42, ')': 9, 't': 16, '(': 8, 'Cause': 106, 'init': 105, '.': 20, 'String': 98, 'to': 97, 'Error': 40, 'Failed': 85, 'Assertion': 84, '': 11, 'new': 89, '=': 17, '{': 13, 'else': 49, 'Exception': 12, 'instanceof': 38, 'if': 28, 'Runtime': 55, 'null': 25, '!=': 31, 'Set': 23, 'And': 22, 'get': 21, 'Failure': 19, 'thread': 18, 'Throwable': 15, 'throws': 10, 'Down': 7, 'tear': 6, 'void': 5, 'public': 4}
{'}\n': 18, ';': 17, ')': 6, '(': 13, 'sqrt': 12, '.': 11, 'Math': 10, '': 9, 'return': 8, '{': 7, 'double': 1}
{'}\n': 45, ';': 21, 'Value': 14, 'new': 13, ')': 8, 'count': 19, ',': 28, 'NUM': 30, '_': 29, '(': 7, 'arraycopy': 25, '.': 24, 'System': 23, '': 22, ']': 12, '[': 11, 'char': 10, '=': 15, '{': 9, 'public': 0}
{'}\n': 117, '}': 31, ';': 30, ')': 10, 'temp': 47, '(': 3, 'add': 78, '{': 11, 'Items': 48, 'for': 60, 'index': 14, 'remove': 88, 'get': 35, 'Element': 79, '.': 77, '++': 72, 'i': 63, 'nitems': 33, '<': 15, '=': 34, 'int': 32, '>': 46, 'Vector': 42, '': 22, 'new': 21, 'Count': 37, 'STR': 28, '_': 16, 'Exception': 25, 'Argument': 24, 'Illegal': 23, 'throw': 20, 'NUM': 17, 'if': 12, 'insert': 2, 'void': 1, 'public': 0}
{'}\n': 351, ';': 49, 'String': 11, '.': 83, 'result': 39, '}': 149, ')': 31, '(': 9, 'b': 120, 'NUM': 300, '_': 208, '{': 32, 'else': 150, 'Char': 16, '==': 224, 'if': 95, '+': 207, '=': 40, 'char': 14, '>': 38, '<': 35, 'List': 34, '': 2, 'new': 41, ',': 13, 'static': 1, 'public': 0}
{'}\n': 368, ';': 40, ')': 16, '(': 7, '_': 121, '.': 82, '+': 293, 'STR': 292, ',': 290, '': 29, 'null': 196, '!=': 195, 'if': 191, '=': 44, 'get': 163, 'conn': 78, 'set': 116, 'Connection': 84, 'open': 83, 'URL': 81, 'String': 30, '{': 28}
{'}\n': 87, ';': 80, ')': 34, 'm': 20, '(': 6, 'All': 82, 'put': 81, 'LEVEL': 76, 'CONCURRENCY_': 75, 'DEFAULT_': 54, '': 1, ',': 14, 'FACTOR': 56, 'LOAD_': 55, 'CAPACITY': 65, 'INITIAL_': 64, 'NUM': 60, '_': 59, '+': 58, '/': 52, 'size': 49, '.': 40, 'int': 44, 'max': 41, 'Math': 39, 'this': 36, '{': 35, '>': 19, 'V': 18, 'extends': 11, '?': 10, 'K': 13, '<': 9, 'Map': 5, 'Hash': 4, 'Concurrent': 3, 'public': 0}
{'}\n': 259, ';': 96, ')': 18, '(': 3, 'add': 253, '.': 67, 'if': 108, '}': 233, '_': 55, '=': 89, '{': 19, 'NUM': 159, 'to': 92, 'selector': 8, 'STR': 71, 'String': 5, '': 4, 'void': 0}
{'}\n': 48, ';': 30, 'data': 10, ')': 11, 'length': 25, '.': 15, '(': 6, '{': 12, ']': 9, '[': 8, 'byte': 7, 'public': 0}
{'}\n': 48, ';': 35, ')': 12, '(': 33, 'Information': 22, '.': 27, '': 7, '{': 13}
{'}\n': 41, ';': 14, ')': 7, 'TOP': 38, 'ON_': 37, 'ADDED_': 36, 'LAST_': 35, '': 1, '.': 25, 'List': 20, 'OMGraphic': 19, '(': 6, 'Mode': 28, 'Traverse': 27, 'set': 26, 'graphics': 15, 'new': 17, '=': 16, '{': 8}
{'}\n': 20, ';': 19, ')': 6, '(': 5, 'matches': 2, '.': 11, 'return': 8, '{': 7, 'boolean': 1, 'public': 0}
{'}\n': 83, ';': 81, ')': 18, '(': 26, '.': 42, 'host': 22, 'NUM': 59, '_': 46, '{': 19, 'String': 5, '': 4}
{'}\n': 205, '}': 111, ';': 34, ')': 18, ',': 9, 'key': 199, '.': 3, 'n': 70, '(': 17, '>': 12, 'V': 11, '': 4, 'K': 8, '<': 6, 'Entry': 5, 'Immutable': 187, 'Simple': 186, 'Map': 2, 'Abstract': 182, 'new': 180, 'return': 56, 'First': 15, 'To': 156, 'Index': 155, 'clear': 154, 'find': 149, 'f': 68, 'Next': 142, 'cas': 117, 'b': 31, '!': 114, '||': 137, 'Marker': 133, 'append': 132, 'if': 74, 'continue': 82, 'null': 54, 'v': 86, 'Value': 118, 'Delete': 102, 'help': 101, '{': 19, '==': 53, 'value': 90, '=': 45, 'Object': 85, 'next': 72, '!=': 77, 'Node': 23, 'for': 20, 'Remove': 14, 'do': 13}
{'}\n': 24, ';': 23, ')': 10, 'cause': 9, ',': 20, '(': 6, 'Message': 17, 'get': 16, '.': 15, 'this': 12, '{': 11, 'Throwable': 8, '': 1, 'Exception': 5, 'Cancelled': 4, 'Task': 3, 'Compute': 2, 'public': 0}
{'}\n': 104, '}': 81, ';': 64, 'return': 78, '{': 38, ')': 37, 'dest': 21, '(': 4, 'if': 65, 'Limit': 16, 'Start': 12, 'src': 8, 'int': 2, '': 31, ',': 9, ']': 7, '[': 6, 'char': 5, 'normalize': 3}
{'}\n': 86, ';': 83, 'Remove': 34, 'To': 33, 'elements': 32, '(': 44, ')': 45, 'size': 43, '.': 42, '>': 11, 'String': 10, '': 6, '<': 8, 'List': 7}
{'}\n': 16, ';': 15, 'return': 10, ')': 8, '(': 7, 'Invisible': 5, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 40, '}': 39, ';': 19, ')': 10, 'action': 9, '(': 4, 'Removed': 34, '.': 14, 'listener': 26, '{': 11, 'listeners': 28, ':': 27, 'Listener': 25, 'Manager': 24, 'Update': 7, '': 5, 'for': 20, 'remove': 2, 'List': 13, 'Action': 3, 'void': 1, 'public': 0}
{'}\n': 42, ';': 26, 'NUM': 29, '_': 28, 'alpha': 13, '-': 30, 'return': 27, '': 18, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 202, ';': 23, 'return': 199, '}': 157, ')': 12, '(': 11, 'caught': 193, '.': 69, 'Basic': 191, '': 1, '{': 15, 'IOException': 186, 'catch': 183, '=': 19, 'next': 10, 'Bytes': 115, 'Line': 71, 'Of': 113, 'end': 112, '+': 111, 'length': 108, '+=': 105, 'Position': 18, 'Header': 17, 'read': 70, 'r': 68, 'String': 5, 'current': 16, '>': 9, ',': 6, '<': 3, 'Pair': 2, 'public': 0}
{'}\n': 33, ';': 32, ')': 7, '(': 3, '.': 20, '==': 14, 'character': 6, '{': 8, '': 4, 'void': 1}
{'}\n': 20, ')': 18, '(': 15, 'Group': 8, '': 5, 'public': 0}
{'}\n': 92, ';': 25, 'port': 22, 'return': 89, '}': 88, ')': 14, 'NUM': 85, '_': 84, '(': 9, 'get': 42, '.': 41, 'DB': 8, 'In': 7, '=': 23, '{': 18, 'Empty': 71, 'is': 70, '!': 65, '&&': 64, 'null': 24, '!=': 62, 'if': 57, 'Guid': 13, 'native': 12, ',': 52, 'Client': 51, '_db': 50, 'Native': 47, 'By': 46, 'Port': 3, 'Storage': 2, 'Active': 43, 'Utility': 40, 'Query': 39, 'Custom': 38, '': 1, '>': 32, '<': 28, 'List': 27, 'String': 11, 'Exists': 6, 'check': 4, 'protected': 0}
{'}\n': 20, ';': 19, ')': 10, 'Split': 3, 'a': 8, '(': 5, 'add': 14, '.': 13, 'splits': 12, '{': 11, 'Fragment': 7, '': 6, 'Element': 4, 'void': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 10, 'me': 8, '(': 4, '': 1, 'Map': 6, 'public': 0}
{'}\n': 20, ';': 19, ')': 4, '(': 3, 'close': 2, '.': 15, 'out': 14, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'void': 1, 'public': 0}
{'}\n': 35, ';': 33, '(': 11, 'return': 19, '{': 18, ')': 17, 'Connection': 4, '': 1}
{'}\n': 105, '}': 92, ';': 28, 'Number': 5, 'National': 4, 'Before': 97, 'prefix': 96, 'return': 72, '{': 12, 'else': 93, ')': 11, 'NUM': 45, '_': 44, '(': 6, 'if': 29, 'length': 25, '.': 24, '=': 19, 'int': 13, 'String': 2, '': 1, 'private': 0}
{'}\n': 16, ';': 9, ')': 4, '(': 3, '{': 5, 'cut': 2, 'public': 0}
{'}\n': 49, ';': 30, ')': 4, '(': 3, '.': 24, '_': 27, '{': 5, 'public': 0}
{'}\n': 13, '{': 6, ')': 5, '(': 4, 'release': 3, 'void': 2, 'public': 0}
{'}\n': 26, ')': 23, 'STR': 22, '_': 21, '(': 3, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 20, '(': 18, '.': 16, '': 5, 't': 8, 'Transform': 3, 'Affine': 6, 'void': 1}
{'}\n': 62, ';': 14, ')': 6, '(': 5, 'signum': 57, '.': 56, 'Number': 26, 'a': 10, ',': 40, 'NUM': 20, '_': 12, 'STR': 13, 'Equals': 46, 'assert': 45, 'Scale': 17, 'Integer': 36, 'Big': 23, '': 8, 'new': 28, 'Decimal': 24, '=': 11, 'int': 15, 'String': 9, '{': 7, 'Signum': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 71, ';': 30, ')': 10, 'Chain': 3, 'new': 16, '(': 6, 'Painter': 2, '': 1, 'return': 61, 'p': 9, '=': 18, ']': 15, '[': 14, 'length': 25, '.': 24, 'chain': 23, ',': 37, 'NUM': 28, '_': 27, 'arraycopy': 34, 'System': 32, '+': 26, '{': 11, 'public': 0}
{'}\n': 208, ';': 164, ')': 117, '(': 74, '.': 143, 'tokens': 110, '{': 118, '': 83, 'Stream': 14, 'Token': 13}
{'}\n': 57, ';': 56, ')': 19, 'steps': 18, ',': 11, '(': 7, 'Selector': 9, 'Ui': 22, 'to': 44, '.': 38, 'obj': 10, 'Object': 23, 'find': 39, 'device': 37, 'return': 33, '{': 32, 'Exception': 26, 'Found': 25, 'Not': 24, '': 1, 'throws': 20, 'int': 17, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 207, '}': 206, ';': 92, ')': 32, '(': 23, '.': 26, '{': 33, 'if': 34, '': 123, 'Cursor': 10, 'null': 39, '==': 38, 'void': 1}
{'}\n': 63, ';': 62, ')': 41, '(': 7, '.': 46, 'Writer': 22, 'Print': 21, '': 8, 'new': 25, '=': 24, 'String': 13, 'static': 1, 'public': 0}
{'}\n': 6, '{': 5, ')': 4, '(': 3, '': 1, 'private': 0}
{'}\n': 213, ';': 107, ')': 106, '.': 165, 'sb': 35, 'STR': 169, '_': 114, '(': 5, 'append': 166, ',': 157, 'NUM': 115, '=': 41, 'Builder': 34, 'String': 33, '': 6, 'tree': 8, 'Tree': 7, 'static': 1}
{'}\n': 133, ';': 47, ')': 25, '(': 7, '.': 54, 'm': 64, ',': 16, 'Replacement': 103, 'append': 102, '{': 26, 'find': 91, 'Buffer': 75, 'String': 14, '': 2, 'new': 79, '=': 51, 'matcher': 68, 'p': 50, 'Matcher': 63, 'regex': 15, 'compile': 55, 'Pattern': 49, 'replace': 5, 'public': 0}
{'}\n': 82, ';': 34, 'return': 77, '}': 76, ')': 22, 'cb': 36, '(': 4, 'Case': 59, 'to': 57, '.': 39, 'Character': 55, '': 5, 'ca': 25, 'if': 46, 'At': 41, 'char': 24, '=': 26, '{': 23, 'int': 9, 'String': 6, 'boolean': 1, 'public': 0}
{'}\n': 98, '}': 42, ';': 41, ')': 14, '(': 6, 'CHUNK_': 58, '': 16, 'SIZE': 60, 'ENC_': 59, 'Size': 50, 'header': 49, '.': 26, 'Header': 47, 'f': 46, '=': 45, 'long': 43, 'length': 27, 'if': 19, '{': 18, 'IOException': 17, 'throws': 15}
{'}\n': 178, '}': 174, ';': 70, ')': 25, '(': 15, 'next': 118, '.': 61, 'it': 80, '=': 40, '{': 26, 'iterator': 84, '>': 23, 'Dsn': 9, '': 8, '<': 18, 'Iterator': 73, 'new': 41, 'Collection': 17}
{'}\n': 746, ';': 744, ')': 473, 'ID': 453, 'server': 440, '(': 149, 'equals': 535, '.': 534, 'Server': 135, '{': 474, 'String': 159, '': 158, 'public': 3}
{'}\n': 682, ';': 45, '}': 233, ')': 27, '_': 51, 'char': 244, '(': 7, '+': 224, 'NUM': 222, 'read': 41, '=': 40, 'else': 402, 'ch': 39, 'STR': 59, 'if': 73, '{': 32, '-': 226, '<=': 166, '&&': 54, '>=': 50, 'int': 33, '': 10, 'parse': 4}
{'}\n': 140, ';': 59, ')': 24, '(': 9, 'String': 3, 'to': 135, '.': 104, 'sb': 29, 'return': 132, 'STR': 108, '_': 81, 'append': 105, '{': 25, '++': 92, 'i': 79, 'length': 89, 'NUM': 82, '=': 30, 'int': 78, 'for': 76, '': 2, 'new': 31}
{'}\n': 19, ';': 18, ')': 7, '(': 6, 'Graph': 12, '': 2, 'new': 10, 'return': 9, '{': 8, 'Instance': 5, 'serializable': 4, 'static': 1, 'public': 0}
{')': 111, '(': 105, 'drop': 93, 'void': 1}
{'}\n': 156, ';': 46, 'segment': 15, 'return': 153, ')': 11, ',': 27, 'STR': 148, '_': 147, '(': 6, 'debug': 145, '.': 21, 'LOGGER': 143, '': 1, 'this': 139, 'clone': 135, 'serializer': 133, 'Predicate': 129, 'Offset': 128, 'new': 99, 'descriptor': 10, 'Index': 121, 'create': 3, 'slice': 114, 'buffer': 49, 'File': 14, 'Segment': 2, '=': 17, 'To': 90, 'copy': 89, 'VALUE': 84, 'MAX_': 83, 'Integer': 80, 'Size': 74, 'max': 72, 'SIZE': 68, 'BUFFER_': 67, 'DEFAULT_': 66, 'min': 63, 'Math': 61, 'allocate': 55, 'Buffer': 48, 'version': 42, 'id': 36, 'directory': 30, 'storage': 28, 'name': 26, '{': 12, 'Descriptor': 9, 'private': 0}
{'}\n': 44, ';': 37, '}': 38, '{': 9, ')': 8, '(': 4, '.': 22, 'person': 25, 'if': 19, '': 5, 'public': 0}
{'}\n': 140, ';': 21, 'BOOL': 132, '_': 33, 'return': 130, '}': 99, ')': 9, 'class': 126, '.': 26, ']': 14, '[': 13, 'Object': 12, '': 6, ',': 115, 'newlen': 38, 'NUM': 34, 'temp': 47, '(': 5, 'Range': 112, 'Of': 111, 'copy': 110, 'Array': 18, 'set': 107, '{': 10, 'len': 23, '!=': 32, 'if': 29, 'element': 74, '=': 16, '++': 68, 'contains': 86, 'c': 8, 'i': 59, 'elements': 15, '<': 65, 'int': 22, 'for': 56, 'new': 49, 'length': 27, 'get': 17, 'Collection': 7, 'All': 4, 'boolean': 2, 'synchronized': 1, 'public': 0}
{'}\n': 62, ';': 29, ')': 12, 'b': 11, ',': 9, 'a': 8, '(': 6, 'max': 2, '.': 18, 'Math': 52, '': 16, 'return': 27, '}': 30, '{': 13, 'N': 5, 'Na': 4, 'is': 19, 'Double': 17, 'if': 14, 'double': 1, 'Ignore': 3, 'private': 0}
{'}\n': 36, ';': 26, ')': 13, 'blk': 12, '(': 8, 'add': 31, '.': 17, 'Blks': 29, 'Index': 28, 'Num': 24, 'tx': 23, ',': 22, 'Lock': 19, 'Tbl': 16, 'lock': 15, '{': 14, 'Id': 11, 'Block': 5, '': 9, 'For': 6, 'Dir': 4, 'Down': 3, 'crab': 2, 'void': 1, 'public': 0}
{'}\n': 40, ';': 38, ')': 15, '(': 7, '{': 16, 'connection': 14, 'Connection': 6, '': 9}
{'}\n': 31, ';': 30, ')': 29, '(': 26, 'Digit': 20, 'Or': 19, 'Letter': 18, 'is': 17, '.': 16, 'Character': 15, '': 14, 'public': 0}
{'}\n': 79, ';': 16, ')': 5, '.': 30, 'State': 18, 'next': 57, '_': 34, '(': 4, '': 1, 'new': 11, '=': 19, '{': 6, 'public': 0}
{'}\n': 106, ';': 37, ')': 18, '(': 3, '.': 29, '}': 99, 'return': 45, ',': 8, 'STR': 90, '_': 86, 'env': 7, '{': 19, 'version': 69, 'Dir': 17, 'dest': 16, '': 4, 'new': 55, '=': 25, 'try': 51, 'null': 43, '==': 42, 'Class': 10, 'remote': 23, 'if': 38, 'for': 30, 'Remote': 21, 'File': 15, 'Environment': 6, 'Batch': 5, 'generate': 2, 'void': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 10, 'point': 9, '(': 3, '.': 14, '{': 11, '': 5, 'final': 4, 'void': 1, 'public': 0}
{'}\n': 355, ';': 353, 'exif': 163, '=': 310, 'Exif': 101, '{': 196, ')': 195, 'Interface': 149, '': 100, '(': 146, 'public': 0}
{'}\n': 57, ';': 29, ')': 12, '(': 6, 'get': 52, '.': 23, 'buffer': 18, 'return': 49, 'flip': 45, 'NUM': 27, '_': 26, ',': 35, 'bytes': 3, 'put': 32, 'allocate': 24, 'Buffer': 17, 'Byte': 16, '': 15, '=': 19, 'final': 7, '{': 13, ']': 10, '[': 9, 'byte': 8, 'To': 4, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 12, 'evt': 11, '(': 7, 'Moved': 17, 'mouse': 5, '.': 15, 'delegate': 14, '{': 13, 'Event': 10, 'Mouse': 9, '': 1, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 98, ';': 20, ')': 10, '(': 6, 'String': 3, 'to': 93, '.': 16, 'buffer': 24, 'return': 90, '}': 89, 'ch': 50, 'append': 84, 'STR': 65, '_': 38, 'if': 60, 'i': 36, 'At': 55, 'char': 49, 'line': 9, '=': 14, '{': 11, '++': 46, 'length': 13, '<': 42, 'NUM': 39, 'int': 12, 'for': 33, '': 2, 'new': 26, 'Formatting': 5, 'remove': 4, 'static': 1, 'public': 0}
{'}\n': 78, '}': 77, ';': 69, 'Charging': 11, '=': 57, ')': 50, '(': 26}
{'}\n': 15, ';': 14, ')': 5, '(': 4, 'Empty': 3, 'is': 2, '.': 9, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 153, '}': 152, ';': 45, ')': 17, '.': 39, '': 6, '(': 5, '{': 18, 'Recent': 24, 'most': 23, 'Context': 15, 'void': 1}
{'}\n': 373, ';': 28, ')': 16, 'null': 52, '(': 7, 'Config': 3, 'get': 37, 'return': 360, '}': 64, '{': 23, 'slee': 356, 'Exception': 355, 'Exists': 354, 'Already': 353, 'Service': 2, '': 1, 'catch': 349, 'DN': 128, '.': 36, ',': 20, 'attrs': 15, 'ss': 33, 'org': 127, 'token': 218, 'Entry': 216, 'Sub': 214, 'create': 4, 'Create': 144, 'try': 156, 'NODE': 151, 'CONFIG_': 150, 'DEFAULT': 141, 'SMSUtils': 138, 'construct': 132, 'scm': 130, '=': 34, 'String': 56, 'args': 59, 'STR': 81, '_': 80, 'NAME': 78, 'BUNDLE_': 77, 'UMS_': 76, 'IUMSConstants': 73, 'SMSException': 19, 'new': 68, 'throw': 66, 'Name': 63, 'service': 62, ']': 58, '[': 57, '==': 51, 'if': 48, 'Type': 42, 'Schema': 31, 'ssm': 35, 'Impl': 32, 'SSM': 25, 'validate': 24, 'SSOException': 22, 'throws': 17, 'Map': 14, 'public': 0}
{'}\n': 139, '}': 81, ';': 32, ')': 14, '(': 5, '': 6, 'new': 129, 'throw': 128, ',': 9, 'Name': 13, 'cot': 12, '{': 19, '=': 25, ']': 23, '[': 22, 'String': 7, 'e': 98, 'COTException': 85, 'STR': 76, '_': 75, 'realm': 8, '.': 60, 'Trust': 47, 'Of': 46, 'Circle': 45, 'throws': 15, 'delete': 2, 'void': 1, 'public': 0}
{'}\n': 115, '}': 114, ';': 56, ')': 27, 'Code': 4, 'message': 19, ',': 12, 'element': 15, 'Solution': 9, 'test': 10, '(': 6, 'Element': 14, 'On': 102, 'Remark': 5, 'Source': 3, 'add': 2, '.': 70, 'Service': 96, 'process': 94, 'List': 46, 'evidence': 44, '>': 43, '<': 39, 'Array': 50, '': 7, 'new': 48, '=': 47, 'Evidence': 41, 'Collection': 38, '{': 28, 'null': 34, '!=': 33, 'if': 29, 'String': 18, 'Test': 8, 'void': 1, 'protected': 0}
{'}\n': 159, ';': 145, ')': 70, 'Type': 51, '(': 36, 'Action': 23, '.': 79, 'action': 66, '': 5}
{'': 4, ')': 18, 'Entity': 6, ',': 8, '(': 3, 'Async': 2}
{'}\n': 31, ';': 30, 'Name': 6, 'parent': 10, ')': 25, '': 1, ',': 12, 'String': 2, '(': 7}
{'}\n': 63, ';': 48, 'select': 21, ')': 14, '(': 6, '': 7, '{': 15, 'Select': 5, 'public': 0}
{'}\n': 28, ';': 27, ')': 10, '_': 24, 'rate': 9, '(': 7, '.': 16, 'return': 12, '{': 11, 'String': 3, '': 2, 'private': 0}
{'}\n': 46, ';': 11, ')': 3, '(': 2, 'start': 1, '.': 6, 'thread': 14, 'set': 33, '_': 9, 'this': 5, 'Thread': 13, '': 12, 'new': 16, '=': 8, 'BOOL': 10, '{': 4, 'void': 0}
{'}\n': 159, ';': 121, 'return': 156, ')': 54, 'temp': 142, '(': 48, ']': 17, '[': 16, 'byte': 15, 'new': 130, '=': 73, '}': 123, '': 74, '{': 46, '==': 50, 'if': 47, 'int': 31, 'static': 1, 'public': 0}
{')': 7, '(': 6, '': 3, 'native': 2, 'public': 0}
{'}\n': 213, ';': 42, ')': 11, 'e': 186, '(': 6, '{': 15, '': 2, 'catch': 181, '}': 180, 'String': 3, 'to': 175, '.': 65, 'return': 172, ',': 94, 'INDENT': 131, 'Keys': 90, 'Output': 85, 'Property': 86, 'set': 84, 'ENCODING': 93, 'Transformer': 58, 'new': 23, 'tf': 60, '=': 22, 'Instance': 67, 'Factory': 59, 'Result': 45, 'Stream': 44, 'Writer': 20, 'try': 16, 'static': 1}
{'}\n': 68, ';': 67, 'addresses': 22, 'return': 60, '{': 43, ')': 42, '(': 34, '>': 21, 'Address': 20, 'Server': 19, '': 15, '<': 17, 'List': 16, 'public': 0}
{'}\n': 94, ';': 93, ')': 11, 'STR': 41, '_': 40, '(': 7, 'equals': 38, '.': 37, 'str': 10, '||': 43, '{': 16, 'String': 9, '': 8, 'Boolean': 5, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 78, '}': 57, ';': 31, ')': 10, 'e': 62, ',': 73, 'STR': 72, '_': 71, '': 6, '{': 11, '(': 22, 'catch': 58, 'Array': 52, 'Byte': 51, 'to': 50, '.': 26, 'cw': 15, '=': 16, 'FRAMES': 29, 'COMPUTE_': 28, 'Writer': 14, 'Class': 3, 'new': 17, 'public': 0}
{'}\n': 93, ';': 39, 'use': 3, 'return': 89, '}': 88, ')': 22, '.': 33, 'null': 69, '!=': 68, 'value': 67, '(': 28, '=': 27, 'BOOL': 45, '_': 44, 'String': 12, '': 11, 'boolean': 2}
{'}\n': 20, ';': 19, ')': 10, 'args': 9, '{': 11, ']': 8, '[': 7, 'String': 6, '': 5, '(': 4, 'main': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 54, ';': 49, 'return': 51, '}': 50, ')': 8, '(': 4, '.': 21, 'feature': 7, 'STR': 35, '_': 34, '{': 9, 'String': 6, '': 1}
{'}\n': 30, ';': 28, ')': 10, '(': 8, '{': 11, 'Shutdown': 3}
{'}\n': 127, ';': 33, ')': 13, '(': 31, '.': 55, 'pg': 54, '': 15, 'if': 51, '{': 14, 'static': 1}
{'}\n': 153, '}': 115, ';': 44, 'NUM': 150, '_': 41, 'return': 74, ')': 25, 'unexpected': 120, '(': 8, 'Exception': 28, 'record': 142, '.': 37, 'env': 11, 'err': 137, 'System': 135, '': 3, 'Trace': 132, 'Stack': 131, 'print': 130, 'JNI': 33, 'trace': 32, 'if': 30, '{': 29, 'Throwable': 119, 'catch': 116, 'Obj': 75, 'Short': 5, 'unwrap': 108, 'Reflection': 106, 'BOOL': 101, ',': 12, 'Reference': 95, 'Type': 94, 'Address': 22, 'arg': 23, 'ID': 19, 'method': 18, 'obj': 14, 'Arg': 83, 'Var': 82, 'With': 81, 'invoke': 80, 'JNIHelpers': 78, '=': 62, 'Object': 60, 'JREF': 15, 'JNIRef': 66, 'get': 65, 'try': 57, 'GC': 53, 'To': 52, 'Down': 51, 'JNICount': 50, 'check': 49, 'Entrypoints': 47, 'Runtime': 46, 'STR': 42, 'Write': 39, 'sys': 38, 'VM': 36, 'throws': 26, 'int': 13, 'JNIEnvironment': 10, 'V': 7, 'Method': 6, 'Call': 4, 'short': 2, 'static': 1, 'private': 0}
{'}\n': 536, ';': 201, ')': 32, ',': 22, '(': 7, '.': 94, '': 87, 'y1': 109, 'y2': 24, 'else': 374, '}': 373, 'NUM': 206, '_': 205, '=': 44, 'int': 17, '{': 33, 'static': 1, 'public': 0}
{'}\n': 105, '}': 92, ';': 91, ')': 17, '_': 40, '(': 8, '.': 64, 'NUM': 41, 'marker': 12, '=': 32, '{': 27, 'int': 9}
{'}\n': 271, ';': 36, 'return': 263, ')': 17, 'current': 107, '(': 44, '}': 172, '{': 113, 'if': 127, '++': 204, '==': 135, 'Char': 116, 'Escaped': 131, 'is': 130, 'Quote': 74, 'close': 84, '&&': 132, 'NUM': 99, '_': 98, 'quotes': 95, '!': 129, 'At': 121, 'char': 114, '.': 119, 'buffer': 38, '=': 40, 'End': 39, '<': 109, 'while': 105, 'int': 19, '!=': 83, 'open': 81, 'Buffer': 42, 'get': 41}
{'}\n': 22, ';': 21, ')': 10, 'value': 9, '(': 7, '': 2, 'return': 12, '{': 11, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 284, ';': 122, '}': 270, ')': 81, 'NUM': 212, '_': 119, '(': 51, '.': 163, ',': 196, 'split': 39, '': 9, 'new': 112}
{'}\n': 661, ';': 50, 'BOOL': 477, '_': 47, '=': 58, 'Initialized': 36, 'Time': 35, 'm': 34, ')': 30, ',': 7, 'Degrees': 554, 'minute': 612, 'Pm': 75, 'Am': 74, 'Hide': 73, 'context': 6, '(': 3, 'initialize': 2, '.': 41, 'View': 98, 'Selector': 577, 'Radial': 448, 'Minute': 491, 'SIZE': 572, 'STEP_': 571, 'DEGREES_': 570, 'TO_': 569, 'VALUE_': 568, 'MINUTE_': 545, '': 4, '*': 565, 'Minutes': 24, 'initial': 17, 'int': 16, 'Day': 20, 'Of': 19, 'Hours': 18, 'Circle': 97, 'Inner': 601, 'Hour': 28, 'is': 81, 'hour': 553, 'Mode': 29, 'is24': 27, 'HOUR_': 530, 'NUM': 143, '%': 561, 'INDEX': 531, 'Item': 527, 'For': 526, 'Value': 525, 'set': 524, 'invalidate': 114, 'Texts': 308, 'null': 468, 'minutes': 263, 'res': 165, ':': 147, 'inner': 322, '?': 144, 'hours': 177, '}': 53, ']': 176, 'i': 352, '[': 175, 'STR': 48, 'format': 379, 'String': 304, 'hours_24': 220, '{': 31, '++': 363, '<': 141, 'for': 349, 'new': 310, 'Resources': 164, 'get': 169, 'Circles': 130, 'PM': 149, 'AM': 146, '!': 120, 'if': 32, 'Is24': 64, 'Enabled': 84, 'Exploration': 83, 'Touch': 82, 'Manager': 79, 'Accessibility': 78, 'Controller': 11, 'Feedback': 10, 'haptic': 12, 'Haptic': 9, 'return': 51, 'TAG': 45, 'e': 42, 'Log': 40, 'boolean': 26, 'Context': 5, 'void': 1, 'public': 0}
{'}\n': 475, '}': 215, ';': 21, ')': 9, 'b': 14, ',': 76, 'x': 176, 'item': 145, '(': 4, 'set': 206, 'breadth': 23, '*': 203, 'f': 401, 'BOOL': 346, '_': 74, 'Visible': 343, 'Start': 445, '.': 71, 'NUM': 75, '>=': 322, '||': 435, '<=': 267, 'if': 242, '/': 200, '-': 35, 'v': 164, ':': 185, '?': 182, '==': 179, '=': 15, 'double': 22, 'VALUE': 172, '': 5, 'Double': 169, 'format': 383, 'm_nf': 381, 'LABEL': 379, 'Item': 144, 'add': 369, 'labels': 8, 'Visual': 6, '{': 10, 'else': 309, 'End': 352, 'r': 255, 'get': 16, 'index': 218, 'continue': 306, '<': 300, 'step': 229, '+=': 271, 'm_hi': 34, 'vlo': 67, 'for': 257, 'int': 254, 'span': 32, 'Step': 233, 'Linear': 232, 'Index': 217, 'reset': 158, 'next': 154, 'iter': 124, 'Next': 137, 'has': 136, 'while': 132, 'tuples': 128, 'Iterator': 123, 'Lib': 84, 'Math': 70, 'm_lo': 36, 'floor': 80, 'pow': 72, 'm_prevlo': 48, 'Breadth': 26, 'Bounds': 18, 'Layout': 3, 'D': 13, 'Rectangle2': 12, 'Table': 7, 'void': 1, 'protected': 0}
{'}\n': 184, ';': 182, ')': 146, '(': 67, 'Template': 27, 'return': 161, '{': 147, 'String': 80, '': 25, 'public': 0}
{'}\n': 58, ';': 57, '.': 36, '{': 31, ')': 30, 'custom': 25, '': 14, '(': 10}
{'}\n': 235, ';': 91, 'return': 231, '}': 220, ')': 56, '(': 89, '.': 118, ',': 6, 'put': 212, 'Map': 2, '>': 38, '<': 3, '': 1, 'new': 74, '=': 73, '{': 57, 'null': 96, '==': 194, 'if': 173, 'get': 166, 'String': 5, 'Hash': 76}
{'}\n': 93, ';': 28, 'BOOL': 27, '_': 26, 'return': 25, '}': 88, ')': 17, 'extension': 69, '(': 5, 'equals': 79, '.': 36, 'Ext': 57, 'file': 56, 'if': 19, '{': 18, 'extensions': 16, ':': 70, 'String': 7, '': 6, 'for': 65, 'filename': 8, 'Extension': 4, 'get': 59, '=': 58, 'NUM': 52, '-': 50, '==': 22, 'Of': 44, 'index': 43, 'Empty': 38, 'is': 3, '||': 34, 'null': 23, '>': 15, '<': 12, 'Collection': 11, ',': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 56, ';': 55, ')': 16, ',': 27, 'path': 15, '(': 40, 'post': 9, '': 13, 'String': 14, 'void': 1}
{'}\n': 20, ';': 15, ')': 5, '(': 4, 'close': 2, '.': 11, 'file': 10, '{': 9, 'void': 1, 'public': 0}
{'}\n': 42, ';': 33, 'wrapped': 13, '.': 27, 'Class': 17, '=': 30, '>': 12, '': 1, '(': 5}
{'}\n': 61, ';': 39, 'return': 55, ')': 10, 'job': 14, '(': 5, '.': 21, '{': 11, '': 6}
{'}\n': 425, ';': 140, ')': 89, '(': 22, '.': 117, '}': 312, 'codes': 277, '=': 106, ']': 33, 'i': 302, '[': 29, '{': 90, 'length': 279, 'if': 141, 'glyph': 249, '<': 220, 'NUM': 211, '_': 210, 'null': 145, 'get': 122, 'int': 28, 'void': 2}
{'}\n': 51, ';': 16, ')': 9, '(': 34, 'counts': 28, '_': 14, 'NUM': 15, '=': 13, 'int': 5, '{': 10, 'public': 0}
{'}\n': 138, ';': 17, ')': 9, 'BOOL': 126, '_': 33, '(': 4, 'Declared': 23, 'set': 122, '.': 21, 'm': 8, 'List': 113, 'method': 112, ',': 108, 'Signature': 58, 'Sub': 57, 'Numbered': 56, 'get': 38, 'put': 98, 'Methods': 49, 'To': 48, 'Sig': 47, 'sub': 46, '}': 92, 'this': 86, '+': 35, 'STR': 34, 'Exception': 31, 'Runtime': 30, '': 5, 'new': 28, 'throw': 27, '{': 10, 'null': 63, 'if': 18, 'Name': 39, 'is': 22, 'SIGNATURES': 15, 'Level': 12, 'check': 11, 'Method': 3, 'Soot': 6, 'void': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 34, '.': 12, '': 6, '(': 16, 'op': 8, 'Operation': 7, 'void': 1}
{'}\n': 99, ';': 16, 'return': 95, '}': 57, ')': 8, 'image': 19, '(': 7, '.': 50, '': 2, '{': 9, 'e': 62, 'catch': 58, 'URL': 24, 'Image': 48, '=': 14, 'null': 40, '!=': 39, 'if': 35, 'get': 28}
{'}\n': 118, '}': 58, ';': 25, ')': 18, '(': 5, '{': 22, 'c': 24, '_': 28, '=': 33, 'STR': 75, '==': 62, 'if': 41, 'Exhausted': 54, 'CEStream': 53, '': 6, 'new': 51, 'throw': 50, 'NUM': 47, '-': 45, 'read': 37, '.': 36, 'Stream': 9, 'in': 10, 'int': 23, 'IOException': 21, 'throws': 19, 'out': 16, 'Output': 14, ',': 12, 'Input': 8, 'Pushback': 7, 'Line': 3, 'decode': 2, 'protected': 0}
{'}\n': 51, ';': 35, ')': 10, 'Transaction': 3, '(': 4, '.': 38, 'server': 32, '{': 14, 'SIPServer': 6, '': 5, 'public': 0}
{'}\n': 20, ';': 19, ')': 9, 'method': 8, '(': 4, '{': 10, 'Method': 7, 'Soot': 6, '': 5, 'public': 0}
{'}\n': 72, ';': 71, '.': 29, 'QName': 49, ')': 21, '(': 31, '': 1, 'public': 0}
{'}\n': 219, ';': 37, ')': 7, '(': 6, 'Value': 205, '.': 44, '}': 195, '': 42, 'ID': 139, 'if': 130, ',': 120, 'MProduct': 82, 'product': 76, 'get': 62, '=': 41, '{': 8}
{'}\n': 217, '}': 191, ';': 70, ')': 58, 'e': 203, ',': 100, 'STR': 211, '_': 210, '(': 97, 'Broken': 208, 'Saving': 207, 'mark': 206, '{': 61, 'Exception': 202, '': 39, 'catch': 199, '.': 93, 'Output': 64, 'file': 66, 'Stream': 65, 'Buffered': 119, 'new': 111, 'Data': 72, '=': 68, 'out': 75, 'MODE_': 105, 'Context': 102, 'SAVEFILE': 99, 'File': 32, 'open': 94, 'ctx': 92, 'null': 69, 'void': 1, 'private': 0}
{'}\n': 256, ';': 50, ')': 37, '(': 21, '}': 246, '+': 240, '.': 82, 'commit': 78, '_': 201, '=': 43, '!=': 149, '': 8, 'get': 83, 'long': 54, 'public': 0}
{'}\n': 22, '{': 11, ')': 10, '(': 6, 'stop': 5, 'void': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 95, ';': 27, 'index': 23, 'return': 67, ')': 17, 'length': 89, '.': 43, 'buffer': 13, '<': 86, '(': 3, 'while': 83, '}': 70, '++': 80, 'Byte': 32, 'read': 2, '=': 24, ']': 12, '[': 11, '{': 21, 'divider': 16, '==': 53, 'NUM': 26, '_': 25, '-': 54, 'if': 49, 'Stream': 6, 'input': 7, '&': 40, 'byte': 10, 'do': 28, 'int': 1, 'IOException': 20, '': 4, 'throws': 18, 'char': 15, ',': 9, 'Input': 5, 'protected': 0}
{'}\n': 218, '}': 90, ';': 31, ')': 17, '(': 6, 'Message': 211, 'get': 41, '.': 40, 'e': 122, '{': 23, 'IOException': 165, '': 7, 'catch': 91, 'close': 196, 'dos': 28, 'try': 32, 'null': 30, '!=': 188, 'if': 185, 'finally': 183, 'ioe': 166, ',': 12, 'STR': 108, '_': 107, 'Exception': 22, 'Generator': 21, 'Graph': 4, 'new': 48, 'throw': 100, 'ue': 145, 'Encoding': 143, 'Unsupported': 142, 'Found': 120, 'Not': 119, 'File': 5, 'kettel': 96, 'Kettle': 94, 'Bytes': 77, 'xml': 36, 'write': 72, 'graph': 15, 'Stream': 27, 'Output': 26, 'Data': 25, '=': 29, 'XML': 42, 'Meta': 9, 'trans': 10, 'String': 14, 'throws': 18, 'Trans': 8, 'generate': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 616, ';': 507, 'BOOL': 523, '_': 522, ')': 164, 'tx': 100, '(': 36, 'null': 305, 'Transaction': 44, '': 43}
{'}\n': 550, ';': 34, ')': 15, ',': 9, '(': 5, '': 6, '.': 44, 'new': 94, 'null': 179, 'if': 174, '}': 119, 'realm': 8, 'SPSSOConfig': 343, 'get': 165, '=': 26, 'Element': 344, 'STR': 101, '_': 100, 'Exception': 20, 'Meta': 19, 'WSFederation': 18, 'throw': 93, '==': 178, '{': 21, 'throws': 16, 'String': 7, 'void': 1, 'public': 0}
{'}\n': 64, ';': 62, ')': 26, 'Image': 24, '(': 20, '{': 27, '': 14}
{'}\n': 68, ')': 13, '(': 8, ';': 56, '.': 28, 'VK_': 44, '': 9, 'Event': 11, 'Key': 7, 'Code': 35, 'get': 33, 'e': 12, '{': 14}
{'}\n': 46, ';': 45, ')': 12, '(': 4, 'spans': 16, '{': 13, '': 8, 'public': 0}
{'}\n': 158, '}': 129, ';': 92, 'null': 138, 'return': 137, '{': 41, ')': 40, '(': 10, '.': 3, 'Str': 14, 'day': 18, 'month': 13, '=': 58, 'second': 38, 'String': 12, '': 6, ',': 15, 'minute': 33, 'hour': 28, 'year': 23, 'to': 8, 'java': 2, 'static': 1, 'public': 0}
{'}\n': 145, ';': 54, '_': 138, ')': 10, ',': 114, '(': 5, '.': 42, '': 6, 'Id': 9, 'task': 8, 'Task': 40, 'For': 46, 'Index': 45, 'Container': 44, 'get': 43, 'Utils': 41, 'container': 32, '{': 11, 'String': 7, 'protected': 0}
{'}\n': 509, '}': 435, ';': 30, ']': 35, 'i': 173, 'NUM': 89, '_': 88, '+': 411, '[': 34, '=': 17, 'int': 172, '(': 4, 'for': 170, ')': 10, '.': 19, '{': 11, '<': 179, ',': 247, '': 5, '-': 211, '++': 184, 'SEQUENCE': 95, 'SHORT_': 94, 'EIGHT_': 93, 'Sequence': 86, 'window': 85, 'ics': 20, 'sce': 9, 'Element': 8, 'Channel': 7, 'Single': 6, 'Ltp': 3, 'void': 1, 'private': 0}
{'}\n': 69, ';': 68, '{': 11, 'File': 3, 'config': 51, '(': 13, ')': 21, 'get': 36, '.': 35, '': 2, 'public': 0}
{'}\n': 1565, '}': 91, ';': 55, ')': 33, '(': 8, 'draw': 5, '.': 60, 'g2': 12, '': 9, 'null': 1052, '!=': 1051, 'Stroke': 1263, 'set': 1018, 'Plot': 1060, 'Paint': 294, 'get': 61, 'marker': 26, '=': 48, ',': 13, 'X': 211, 'Max': 221, 'Area': 32, 'data': 31, 'Min': 210, 'Double': 204, 'D': 11, 'Line2': 153, 'new': 198, 'line': 196, 'value': 57, 'Java2': 100, 'To': 99, 'Axis': 20, 'range': 21, 'double': 56, 'return': 89, '{': 34, 'contains': 83, '!': 80, 'if': 35, 'Range': 6, 'Value': 19, 'vm': 47, 'Marker': 7, 'instanceof': 38, 'Rectangle2': 29, 'plot': 16, 'Graphics2': 10, 'void': 4, 'public': 3}
{'}\n': 87, '}': 79, ';': 23, 'BOOL': 77, '_': 38, 'return': 82, '{': 11, 'else': 80, ')': 10, '(': 6, 'NUM': 39, '==': 55, '||': 52, 'if': 41, '.': 17, '=': 15, 'Length': 14, 'boolean': 1}
{'}\n': 38, ';': 28, 'return': 29, '}': 33, 'BOOL': 31, '_': 30, ')': 12, '(': 8, '{': 13, 'm': 18, '==': 17, 'preference': 11, 'if': 14, 'Preference': 6, '': 1, 'Click': 7, 'on': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 136, '}': 135, ';': 40, ')': 10, 'value': 75, '(': 6, '.': 25, 'header': 9, 'STR': 103, '_': 102, '=': 23, '!': 43, 'if': 41, '{': 11, 'String': 8, '': 7, 'Header': 5, 'void': 1}
{'}\n': 28, ';': 27, 'null': 15, ':': 25, ')': 10, 'value': 4, '(': 6, 'Of': 5, '.': 19, '': 2, '?': 16, '!=': 14, 'return': 12, '{': 11, 'static': 1, 'public': 0}
{'}\n': 157, ';': 113, ')': 81, '.': 97, '(': 18, 'message': 51, '}': 114, '+': 102, 'STR': 101, '_': 100, 'LOG': 96, '': 35, '{': 82, 'if': 83, ',': 59, 'Message': 43, 'void': 1}
{'}\n': 47, ';': 26, '=': 20, '.': 18, '}': 34, ')': 10, '(': 4, '{': 11, 'sites': 14, '': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 18, 'obs': 17, ',': 8, 'xform': 12, 'img': 7, '(': 4, 'Image': 3, 'draw': 2, '.': 23, 'Graphics': 22, 'm': 21, 'return': 20, '{': 19, 'Observer': 16, '': 5, 'Transform': 11, 'Affine': 10, 'boolean': 1, 'public': 0}
{'}\n': 271, ';': 91, ')': 18, 'len': 17, 'NUM': 50, '_': 49, 'offset': 14, '(': 6, '{': 19, '<': 124, 'if': 36, 'int': 13, ',': 12, ']': 9, '[': 8, 'public': 0}
{'}\n': 88, ';': 45, ')': 11, '(': 30, '.': 82, 'public': 0}
{'}\n': 197, ';': 196, ')': 98, '(': 67, 'tan': 108, '.': 105, 'Math': 104, '': 103, 'radians': 77, 'double': 60, 'static': 1, 'public': 0}
{'}\n': 34, ';': 25, ')': 16, '(': 4, '.': 19, 'checkbox': 9, '{': 17}
{'}\n': 60, ';': 42, ')': 19, 's': 23, '(': 8, 'fill': 55, '.': 27, 'g': 12, 'Selected': 7, 'icon': 48, 'Paint': 46, 'set': 45, 'height': 18, ',': 13, 'width': 15, 'NUM': 33, '_': 32, 'Mark': 30, 'Check': 3, 'create': 28, 'Generator': 26, 'shape': 25, '=': 24, 'Shape': 22, '': 9, '{': 20, 'int': 14, 'D': 11, 'Graphics2': 10, 'And': 6, 'Icon': 4, 'paint': 2, 'void': 1, 'private': 0}
{'}\n': 162, ';': 65, 'idx': 23, '_': 128, '(': 6, '': 7, '}': 107, '.': 95, ')': 41, 'if': 43, '=': 24, 'String': 8, 'Index': 5, 'public': 0}
{'}\n': 100, ';': 72, ')': 35, '(': 29, '.': 92, 'm_writer': 66, '': 45, 'void': 1}
{'}\n': 213, ';': 210, 'NUM': 173, '_': 172, ')': 52, '(': 41, '.': 160, 'Paths': 36, 'm': 97, 'null': 102, '!=': 101, '{': 53, 'public': 0}
{'}\n': 168, '}': 167, ';': 80, ')': 52, ',': 132, '.': 128, '(': 16, '=': 72, '_': 93, '{': 69, '==': 60, 'if': 54, 'Index': 48, '': 8}
{'}\n': 78, '}': 77, ';': 24, ')': 5, 'i': 54, ',': 45, ']': 23, '[': 70, 'objs': 69, '(': 4, 'insert': 67, '{': 6, '++': 64, 'size': 61, '<': 60, 'NUM': 18, '_': 17, '=': 26, 'int': 28, 'for': 51, '-': 46, 'spine': 13, 'fill': 42, '.': 14, 'Arrays': 40, '': 39, 'Factor': 36, 'load': 35, '*': 34, 'length': 15, 'threshold': 25, '+': 20, '<<': 16, 'Spine': 3, 'grow': 2, 'void': 1, 'private': 0}
{'}\n': 104, '}': 41, ';': 17, ')': 4, '(': 3, 'get': 59, '.': 28, 'log': 50, '{': 5, 'Message': 60, 'e': 47, 'error': 52, 'Exception': 46, 'Interrupted': 45, '': 44, 'catch': 42, 'join': 37, 'try': 33, 'void': 1, 'public': 0}
{'}\n': 37, '>': 8, '': 1, 'Collection': 2, '(': 14, '<': 3}
{'}\n': 118, ';': 42, '_': 56, ')': 49, 'NUM': 57, '(': 5, 'get': 30, '.': 29, 'md': 25, '=': 27, 'i': 54, '{': 17, 'Data': 23, 'Meta': 22, '': 6, 'public': 0}
{'}\n': 66, ';': 65, ')': 10, 'circle': 9, '(': 49, '.': 47, '{': 11, 'Circle': 8, '': 7}
{'}\n': 87, ';': 86, ')': 47, 'arg': 35, '(': 65, 'add': 60, '.': 59, 'args': 55, 'Argument': 23, '': 32, 'public': 0}
{'}\n': 67, ';': 47, ')': 16, 'CURSOR': 64, 'HAND_': 63, '': 1, '.': 49, 'Cursor': 53, '(': 6, 'Predefined': 56, 'get': 55, '=': 51, 'cursor': 50, 'this': 48, 'Modifiers': 15, 'selection': 8, 'super': 18, '{': 17, 'int': 7, 'Plugin': 5, 'Mouse': 4, 'Graph': 3, 'Picking': 2, 'public': 0}
{'}\n': 150, ';': 60, 'results': 51, 'return': 147, ')': 46, 'Iterator': 29, 'Value': 10, 'next': 34, ',': 11, 'traversable': 18, 'NUM': 138, '_': 94, 'first': 134, 'Index': 106, 'Nodes': 105, 'current': 104, 'Scanned': 76, 'already': 75, '(': 7, 'Search': 6, 'First': 5, 'Breadth': 121, 'iterative': 119, 'sources': 44, '>': 17, '<': 14, 'Set': 99, 'Hash': 110, '': 12, 'new': 53, '=': 52, 'Integer': 42, 'BOOL': 95, 'fill': 64, '.': 57, 'Arrays': 62, ']': 3, 'length': 58, 'nodes': 56, '[': 2, 'boolean': 72, 'intial': 9, '{': 47, 'List': 39, 'N': 16, 'Next': 27, 'Bfs': 26, 'IBFSTraversable': 13, 'breadth': 4, 'public': 0}
{'}\n': 49, ';': 36, 'priority': 47, '=': 38, '_priority': 45, 'type': 43, '_type': 41, 'view': 13, '_view': 37, ')': 25, '(': 5, 'Null': 32, 'Non': 31, 'require': 30, '.': 29, 'Objects': 28, '': 1, '{': 26, '>': 12, 'T': 11, '<': 9, 'Render': 4, 'View': 2, 'Ref': 3, 'public': 0}
{'}\n': 310, ';': 309, ')': 39, '(': 33, '.': 276, 'disco': 68, '{': 40, 'boolean': 1}
{'}\n': 20, ';': 19, ')': 5, 'this': 17, '(': 4, 'Support': 9, 'Change': 8, 'Property': 13, '': 1, 'new': 11, '=': 10, 'property': 7, '{': 6, 'public': 0}
{'}\n': 244, '}': 242, ';': 76, ')': 25, '.': 81, '(': 5, '': 6, 'new': 194, 'config': 13, '{': 131, 'if': 122, 'null': 88, ',': 10, 'org': 86, 'Config': 61, 'Organization': 83, 'get': 82, 'scm': 80, '=': 79, 'throws': 26, 'String': 7, 'Name': 9, 'void': 1, 'static': 0}
{'}\n': 179, ';': 86, ',': 12, '(': 7, 'snapshot': 68, '.': 60, '': 20, ')': 47, 'class': 103, 'Snapshot': 6, 'Block': 88, 'Object': 97, 'query': 96, 'Client': 22, 'db': 93, '=': 92, '{': 48}
{'}\n': 165, ';': 19, 'result': 15, 'return': 162, '}': 70, 'Add': 35, 'To': 5, 'secs': 132, '=': 16, ')': 12, 'STR': 28, '_': 17, ',': 50, 'time': 11, '(': 8, 'remove': 47, '.': 23, 'Utils': 45, 'String': 4, '': 9, 'Of': 41, 'value': 40, 'Integer': 38, '{': 13, 'With': 25, 'ends': 24, 'if': 20, 'else': 71, 'mins': 85, '*': 61, 'NUM': 18, 'hours': 33, 'Time': 6, 'convert': 3, 'static': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 9, '(': 3, '.': 18, 'activity': 17, '{': 10, 'detach': 2, 'void': 1, 'public': 0}
{'}\n': 179, ';': 151, ')': 91, 'action': 24, '(': 109, '': 5, '.': 97, '{': 92, 'Action': 11, ',': 39, 'String': 23, 'public': 0}
{'}\n': 35, ';': 34, ')': 14, 'Runnable': 10, 'Info': 9, 'download': 11, '(': 6, '.': 27, 'List': 5, 'Active': 4, 'm': 24, '{': 15, 'Download': 8, '': 7, 'public': 0}
{'}\n': 334, '}': 333, '(': 6, 'Vector': 101, '': 109, 'Line': 42, 'Next': 41, 'mapping': 100, ')': 10, '_': 59, '{': 11, '.': 43, ';': 76, 'At': 225, 'element': 224, 'size': 133, 'NUM': 60, '!=': 58, 'length': 44, 'tlacode': 40, 'TLA': 5, 'void': 1, 'private': 0}
{'}\n': 74, ';': 36, 'BOOL': 67, '_': 34, 'return': 65, '}': 69, ')': 12, 'i': 32, '(': 8, 'At': 59, 'char': 58, '.': 40, 'is': 2, '!': 51, 'if': 49, '{': 13, '++': 46, 'length': 41, '<': 38, 'NUM': 35, '=': 33, 'int': 31, 'for': 29, 'String': 10, '': 9, 'boolean': 1}
{'}\n': 46, '}': 45, ';': 16, ')': 7, 'c': 30, '(': 3, 'i': 12, 'At': 35, 'char': 29, '.': 20, 'string': 6, '=': 13, '{': 8, '++': 26, 'length': 21, '<': 18, 'int': 11, 'for': 9, 'String': 5, '': 4}
{'}\n': 11, ';': 10, 'return': 7, '{': 6, ')': 5, '(': 4, 'Identifier': 3, 'public': 0}
{'}\n': 116, ';': 98, ')': 32, ',': 112, '(': 5, '.': 67, '}': 100, 'str': 21, '{': 85, 'List': 16, 'String': 19, '': 15, '=': 43, '>': 20, '<': 17, 'Affix': 4, 'remove': 2, 'void': 1, 'static': 0}
{'}\n': 48, ';': 18, 'value': 20, 'return': 45, ')': 8, 'random': 12, '(': 5, 'free': 40, '.': 23, 'List': 38, 'Random': 11, '_free': 36, 'Test': 34, '_is': 33, '!': 32, 'if': 30, 'next': 3, '=': 13, 'get': 14, '': 10, '{': 9, 'static': 1, 'public': 0}
{'}\n': 103, ';': 102, ')': 6, '(': 5, '.': 85, 'Day': 37, '=': 50, 'm': 27, '{': 7, 'void': 1, 'protected': 0}
{'}\n': 32, ';': 31, ')': 6, '(': 5, 'Millis': 23, 'Time': 22, 'current': 21, '.': 20, 'System': 19, '': 18, ',': 13, 'put': 8, '{': 7, 'Last': 3, 'store': 2, 'void': 1}
{'}\n': 146, ';': 145, ')': 85, '(': 79, '.': 126, 'contents': 117, '{': 86, 'Index': 75, 'int': 57}
{'}\n': 282, ';': 32, '(': 30, '': 15, 'new': 74, 'throw': 219, '{': 20, ')': 13, '}': 183, 'STR': 150, '_': 51, 'if': 138, '.': 27, '=': 25, 'NUM': 112, 'int': 2, 'oid': 12, 'throws': 14, ']': 4, '[': 3, 'static': 1, 'public': 0}
{'}\n': 176, ';': 58, ')': 40, '(': 26, 'size': 140, '.': 81, 'List': 43, '=': 49, '}': 106, 'id': 77, '': 22, 'for': 59, '>': 47, '<': 44, 'Array': 52, 'new': 50, 'String': 46, 'Id': 30, 'public': 0}
{'}\n': 103, ';': 44, '/': 97, 'Prior': 81, 'Sum': 76, 'm_': 30, '.': 72, '': 70, '}': 45, '{': 27, ')': 23, '(': 8, 'if': 28}
{'}\n': 75, ';': 32, 'BOOL': 31, '_': 30, 'return': 29, '}': 33, '{': 11, ')': 10, 'null': 16, '!=': 15, 'f': 9, '(': 6, 'Extension': 39, 'get': 38, '.': 22, 'filters': 50, '&&': 49, 'extension': 36, 'if': 12, '=': 37, 'String': 35, '': 7, 'Directory': 24, 'is': 23, 'File': 8, 'accept': 5, 'boolean': 4, 'public': 3}
{'}\n': 162, ';': 44, ')': 14, '(': 9, '}': 45, '': 1, '.': 20, 'Result': 6, 'Poll': 5, 'return': 37, '{': 15, 'conn': 13, 'CLOSED': 43, 'Controller': 12, 'start': 7, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 470, '}': 380, ';': 143, ')': 13, 'STR': 454, '_': 331, '(': 7, '': 15, '.': 119, 'Name': 253, 'if': 218, 'for': 200, 'new': 184, '=': 110, 'Member': 167, 'Policy': 126, 'Replication': 162, 'Names': 101, '_cluster': 116, '>': 82, 'String': 77, '<': 75, '{': 67, 'Exception': 17, 'Create': 16, 'throws': 14}
{'}\n': 80, ';': 38, 'return': 35, ')': 11, 'b': 10, 'a': 7, '(': 5, 'BOOL': 37, '_': 36, 'N': 20, 'Na': 19, 'is': 18, '.': 17, 'Double': 16, '': 15, '&&': 24, 'if': 13, '{': 12, 'double': 6, ',': 8, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 189, ';': 22, ')': 13, '(': 7, 'List': 152, 'String': 58, 'set': 53, '.': 16, 'NB1': 179, 'List_': 178, 'configure': 48, 'get': 40, 'as': 163, 'Arrays': 161, '': 1, '=': 19, '>': 156, '<': 153, 'Strategie': 137, 'Iterate': 30, 'Iterator': 35, 'Tags': 34, 'Of': 33, 'number': 32, 'NB2': 51, 'Model_': 50, 'Increment': 110, 'value': 60, 'At': 55, 'Stop': 82, 'Start': 54, 'Number': 41, 'Model': 31, 'final': 28, 'Components': 24, 'init': 23, 'this': 15, '{': 14, 'NB': 6, 'Dialog_': 5, 'Configure': 2, 'public': 0}
{'}\n': 31, ';': 30, 'log': 3, 'number': 8, '(': 6, '.': 17, 'Math': 16, '': 15, '{': 13, ')': 12, 'int': 10, 'double': 7, 'static': 1, 'public': 0}
{'}\n': 390, ';': 66, 'return': 67, ')': 38, '(': 5, '.': 50, 'Time': 29, 'mod': 28, 'set': 281, '}': 70, '{': 39, 'if': 40, 'null': 45, 'Is': 61, 'error': 55, 'Messages': 56, ',': 9, 'errors': 37, 'add': 51, 'Errors': 36, '': 1, 'Null': 62, '==': 44, 'Long': 27, 'String': 11, 'id': 12, 'user': 8, 'User': 7, 'Entry': 2, 'public': 0}
{'}\n': 74, ';': 54, 'extensions': 25, '=': 64, '.': 62, 'this': 61, ')': 26, '(': 5, 'set': 55, ',': 13, 'super': 28, '{': 27, 'String': 11, '': 1, 'public': 0}
{'}\n': 101, ';': 13, 'n': 15, 'return': 98, '}': 65, 'ERROR': 94, 'FORMAT_': 93, 'STATUS_': 92, '': 70, '=': 9, 'status': 89, ')': 5, '(': 4, '{': 6, 'e': 72, 'catch': 67, 'count': 32, '+=': 62, '-': 46, 'Size': 8, 'block': 7, '<': 37, 'while': 34, 'int': 1, 'try': 29, 'NUM': 18, '_': 17, '>': 24, 'if': 20, 'read': 2, 'Block': 3, 'protected': 0}
{'}\n': 29, ';': 28, ')': 16, 'run': 18, '.': 12, '(': 4, 'runs': 11, 'void': 1, 'public': 0}
{'}\n': 33, ';': 32, ')': 9, '{': 10, '': 4, '(': 3, 'void': 0}
{'}\n': 65, ';': 32, 'BOOL': 48, '_': 47, 'return': 46, ')': 16, '(': 8, '}': 50, '{': 17, 'Sensor': 7, 'if': 33, '=': 23, 'boolean': 4}
{'}\n': 34, ';': 13, '_': 31, '=': 11, ')': 8, '(': 3, 'flip': 24, '.': 16, 'Buffer': 15, '_read': 14, 'clear': 17, '{': 9, 'Channel': 6, 'Socket': 5, '': 4, 'public': 0}
{'}\n': 65, ';': 14, 'm': 15, 'NUM': 47, '_': 11, 'Queue': 43, ')': 4, '(': 3, '.': 8, 'Player': 17, 'STR': 12, 'i': 9, 'Timber': 7, '': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 45, ';': 44, ')': 23, 'value': 39, '(': 12, 'accept': 35, '.': 34, 'consumer': 22, 'if': 10, '{': 24, '': 19, 'Present': 11, 'public': 3}
{'}\n': 241, '}': 47, ';': 46, ')': 7, 'Step': 37, 'new': 49, '+': 26, 'STR': 25, '_': 24, 'intensity': 6, '(': 4, 'debug': 22, '.': 12, 'log': 11, '{': 8, 'Enabled': 15, 'Debug': 14, 'is': 13, 'if': 9, 'null': 183, ',': 160, 'out': 144, 'Sequence': 143, 'send': 2, 'tc': 175, '': 55, 'add': 155, '=': 51, 'return': 138, '==': 108, 'error': 89, 'Dim': 43, 'max': 42, '>': 80, '||': 76, 'NUM': 74, '<': 72, '*': 61, 'round': 58, 'Math': 56, 'int': 48, 'Output': 36, 'last': 35, 'double': 5, 'Intensity': 3, 'void': 1, 'protected': 0}
{'}\n': 58, ';': 40, '=': 44, 'null': 45, ')': 39, '(': 4, '.': 34, 'server': 20, '{': 15, '': 10, 'public': 0}
{'}\n': 22, ';': 12, ')': 4, 'directory': 19, '(': 3, 'Contents': 17, 'delete': 2, 'close': 9, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'void': 1, 'public': 0}
{'}\n': 103, ';': 47, 'BOOL': 101, '_': 100, 'return': 99, '}': 96, ')': 24, 'pvar': 39, '(': 6, 'add': 91, '.': 63, 'List': 89, 'Result': 88, 'my': 51, '{': 25, 'STATIC': 73, '': 1, 'Modifier': 65, 'Psi': 12, 'Property': 66, 'has': 64, '||': 55, 'Flag': 54, 'Scope': 59, 'Static': 52, '!': 50, 'Sensitive': 53, 'if': 26, 'pe': 14, 'Variable': 32, '=': 40, 'final': 35, 'instanceof': 29, 'state': 23, 'State': 22, 'Resolve': 21, 'Null': 10, 'Not': 9, '@': 0, ',': 15, 'Element': 13, 'execute': 5, 'boolean': 4, 'public': 3, 'Override': 2}
{'}\n': 205, '}': 186, '(': 3, ';': 47, ')': 31, 'STR': 71, '_': 70, 'write': 75, 'String': 169, 'to': 168, '.': 167, 'Integer': 166, '': 165, '{': 55, 'if': 134, ':': 72, 'default': 132, 'break': 81, 'case': 69, ']': 6, 'i': 44, '[': 5, 'ch': 59, '++': 53, '<': 49, 'start': 10, '=': 45, 'int': 9, 'for': 41, 'length': 13, ',': 8, 'char': 4, 'void': 1}
{'}\n': 154, ';': 22, ')': 14, '(': 8, '.': 90, 'if': 23, '+': 103, 'STR': 21, '_': 20, '}': 40, 'minutes': 104, '{': 15, 'NUM': 96, 'seconds': 63, 'else': 41, '': 16, 'static': 1}
{'}\n': 448, '}': 46, ';': 45, ')': 14, 'e': 372, '(': 9, 'Exception': 18, 'Generic': 441, 'Api': 37, 'Server': 36, '': 1, 'new': 34, 'throw': 33, 'Trace': 400, 'Stack': 399, 'Full': 398, 'get': 66, '.': 25, 'Util': 395, 'error': 391, 'Logger': 389, 's': 388, '{': 19, 'catch': 365, 'Logged': 383, 'Be': 382, 'Not': 381, 'should': 380, '!': 377, 'if': 20, 'Base': 370, 'Storage': 194, 'persisted': 196, 'Impl': 358, 'Message': 6, 'Chat': 69, 'return': 353, 'm': 62, 'Dequeue': 339, 'To': 338, 'try': 138, 'Service': 142, 'Im': 141, 'QUEUED': 263, 'Status': 148, ',': 182, 'msg': 171, 'Outgoing': 249, 'add': 248, 'OUTGOING': 245, 'Direction': 242, 'Type': 233, 'Mime': 232, 'Contact': 223, 'Remote': 17, 'Id': 215, 'Log': 209, 'Messaging': 208, 'Accessor': 195, 'Persisted': 193, '=': 50, 'timestamp': 156, 'Text': 23, 'create': 177, 'Utils': 24, 'final': 167, 'Millis': 163, 'Time': 162, 'current': 161, 'System': 159, 'long': 155, 'Composing': 147, 'remove': 144, 'STR': 43, '_': 42, '+': 96, 'Length': 49, 'max': 58, 'message': 48, 'Argument': 39, 'Illegal': 38, '>': 79, 'Max': 67, 'Settings': 64, 'Rcs': 63, 'int': 47, 'length': 53, 'Empty': 27, 'is': 26, 'throws': 15, 'String': 12, 'send': 7, 'IChat': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 17, ';': 16, ')': 8, 't': 7, '(': 2, 'remove': 1, '.': 11, 'running': 10, '{': 9, 'Thread': 6, 'Server': 5, '': 3, 'void': 0}
{'}\n': 18, ';': 17, 'node': 9, '=': 15, '.': 13, 'this': 12, '{': 11, ')': 10, '(': 6, '': 1, 'public': 0}
{'}\n': 89, '{': 62, ')': 61, '(': 55, 'Log': 47, '': 39, 'private': 0}
{'}\n': 48, '}': 47, ';': 29, ')': 9, '(': 8, '{': 10, 'if': 30, '.': 23, 'License': 21, '': 11, 'File': 18, 'new': 16, '=': 15, 'license': 13}
{'}\n': 23, ';': 22, ')': 11, '.': 18, 'return': 13, '{': 12, '(': 10, 'static': 4, 'public': 3}
{'}\n': 317, ';': 316, ')': 15, '(': 6, 'UTF': 233, 'read': 3, '.': 231, 'dis': 230, '{': 200, 'IOException': 18, '': 17, 'throws': 16, 'public': 0}
{'}\n': 338, ';': 30, 'Rect': 2, 'Invalidate': 21, 'm': 20, 'return': 333, ')': 18, 'Bounds': 6, 'Bg': 27, '(': 7, 'union': 326, '.': 23, '}': 172, 'Empty': 317, 'set': 24, '{': 19, 'else': 173, 'Height': 76, 'bg': 53, '+': 104, 'top': 232, '=': 42, 'bottom': 298, '-': 61, 'Padding': 41, 'edge': 40, 'get': 45, ',': 96, 'min': 271, 'Math': 88, '': 1, 'max': 90, '*': 108, 'FACTOR': 248, 'OFFSET_': 247, 'Y_': 246, 'OVERLAY_': 245, 'SCROLL_': 244, 'FAST_': 243, 'int': 14, 'Y': 17, 'Touch': 16, 'last': 15, 'Width': 48, 'right': 161, 'left': 131, 'Scrollbar': 47, 'Max': 46, 'NUM': 72, '_': 71, 'Background': 136, 'Res': 123, 'Rtl': 120, 'is': 33, 'Utilities': 117, 'if': 31, 'width': 101, 'Text': 63, 'Size': 60, 'Original': 59, '/': 70, 'height': 66, 'Visible': 34, 'Scroller': 5, 'Fast': 4, 'update': 3, 'public': 0}
{'}\n': 35, ';': 16, ')': 10, '(': 6, 'Components': 31, 'init': 30, 'STR': 26, '_': 25, 'String': 23, 'get': 22, '.': 21, 'res': 20, 'Title': 18, 'set': 17, 'parent': 9, 'super': 12, '{': 11, 'JDialog': 8, '': 1, 'Url': 5, 'Ca': 3, 'DNetscape': 2, 'public': 0}
{'}\n': 623, '}': 208, ';': 22, 'BOOL': 21, '_': 20, 'return': 19, 'else': 23, ')': 11, 'p_146201_1_': 7, '(': 5, 'String': 75, 'to': 605, '.': 72, 'Character': 588, '': 69, 'if': 13, '{': 12, 'Allowed': 583, 'is': 187, 'Characters': 584, ':': 180, 'default': 577, 'NUM': 48, 'Down': 190, 'Key': 3, 'Ctrl': 188, 'Screen': 71, 'Gui': 70, 'case': 177, 'length': 511, 'Shift': 239, '+': 440, ',': 8, '-': 203, 'p_146201_2_': 10, 'switch': 172, 'STR': 163, 'Clipboard': 74, 'set': 73, 'get': 114, '!': 15, 'int': 9, 'char': 6, 'Typed': 4, 'textbox': 2, 'boolean': 1, 'public': 0}
{'}\n': 98, ';': 89, ')': 17, '(': 6, '.': 43, 'file': 22, 'return': 90, '': 8, '{': 18, 'if': 49, ',': 11, 'public': 0}
{'}\n': 43, ';': 42, ')': 6, 'STR': 16, '_': 15, '(': 5, 'equals': 36, '.': 11, 'Version': 34, 'os': 9, '&&': 22, 'NUM': 21, '-': 19, '>': 18, 'Of': 13, 'index': 12, 'Name': 10, 'return': 8, '{': 7, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 159, ';': 43, ')': 20, '(': 11, '.': 95, 'Function': 38, '': 22, '=': 85, '>': 62, '<': 24, '{': 21, 'Functions': 10}
{'}\n': 47, '}': 46, ';': 24, ')': 15, 'i': 20, '(': 18, '{': 16, 'Index': 10, '=': 21, 'int': 8, 'for': 17, 'end': 13, ',': 11, 'start': 9, 'private': 0}
{'}\n': 77, ';': 45, 'return': 72, ')': 22, 'PROXY': 55, 'NO_': 54, '': 3, '.': 47, 'Proxy': 7, '(': 16, 'add': 48, '>': 8, '<': 5, 'List': 4, 'Array': 25, 'new': 33, '=': 32, '{': 23}
{'}\n': 44, ';': 20, ')': 10, '': 5, '(': 4, 'add': 2, '.': 37, 'Compile': 36, 'After': 35, 'Options': 34, 'Linker': 33, 'new': 32, 'definitions': 9, ',': 17, 'linker_more': 24, 'Strings': 13, '{': 11, ']': 8, '[': 7, 'String': 6, 'void': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 14, '(': 4, '.': 22, 'rec': 19, '{': 15, '': 5, 'public': 0}
{'}\n': 26, ';': 25, ')': 11, 'Lines': 10, 'ldif': 9, '(': 4, 'super': 13, '{': 12, 'String': 7, '': 1, 'final': 5, 'LDIFEntry': 2, 'public': 0}
{'}\n': 44, ';': 43, ')': 24, '(': 19, 'Person': 15}
{'}\n': 135, '(': 50, '.': 31, '}': 123, ';': 69, ')': 8, 'if': 95, '': 10, 'STR': 67, '_': 66, '{': 58, 'All': 33, 'License': 11}
{'}\n': 42, ';': 34, ')': 10, 'geo': 8, ',': 30, '(': 5, 'get': 25, '.': 15, '': 19, '{': 11, 'void': 1, 'public': 0}
{'}\n': 267, ';': 71, '}': 168, ')': 37, 'gts': 12, '.': 74, 'GTSHelper': 73, '': 2, ',': 13, '(': 7, '=': 50, '{': 43, 'if': 186, 'Len': 20, 'NUM': 135, '_': 134, 'continue': 166, ']': 162, 'i': 132, '[': 160, 'Values': 159, '++': 145, 'values': 142, '<': 138, 'int': 14, 'for': 129, 'Metadata': 112, 'get': 116, 'set': 111, 'bucketspan': 103, 'bucketcount': 99, 'lastbucket': 95, 'Serie': 5, 'Time': 4, 'Geo': 3, 'new': 87, 'sort': 75, 'window': 23, 'Size': 16, 'alphabet': 15, 'Exception': 42, 'Script': 41, 'Warp': 40, 'word': 19, 'static': 1, 'public': 0}
{'}\n': 83, ';': 43, 'msg': 11, 'return': 80, '}': 79, ')': 34, 'STR': 41, '_': 40, '(': 7, 'append': 38, '.': 37, '': 1, '>': 20, '<': 15, 'String': 2, 'private': 0}
{'}\n': 202, ';': 54, ')': 22, 'STR': 52, '_': 51, ',': 13, 'null': 41, '(': 8, 'Tag': 47, 'end': 57, '.': 31, 'out': 21, '}': 68, ']': 11, 'i': 132, '[': 10, 'val': 12, 'String': 15, 'to': 121, '': 14, 'attribute': 89, 'start': 46, '{': 36, '++': 143, 'N': 103, '<': 138, 'NUM': 135, '=': 104, 'int': 101, 'for': 129, 'Integer': 119, 'length': 107, 'final': 2, 'name': 16, '!=': 83, 'if': 37, 'return': 66, '==': 40, 'IOException': 35, 'io': 32, 'java': 30, 'Exception': 28, 'Parser': 27, 'Pull': 26, 'Xml': 7, 'throws': 23, 'Serializer': 20, 'Array': 6, 'write': 4, 'void': 3, 'static': 1, 'public': 0}
{'}\n': 36, ';': 26, ')': 12, 'Rule': 9, 'outbound': 10, '(': 5, '.': 16, '{': 13, 'Outbound': 3, '': 7, 'final': 6}
{'}\n': 25, ';': 18, 'password': 10, '=': 16, '.': 14, 'this': 13, 'username': 6, '{': 12, ')': 11, 'String': 5, '': 1, ',': 7, '(': 3, 'public': 0}
{'}\n': 19, ';': 18, ')': 7, '(': 4, 'Flags': 3, 'flags': 9, '{': 8}
{'}\n': 149, '}': 114, ';': 37, ')': 17, 'ex': 127, ',': 144, 'STR': 142, '_': 141, '(': 6, 'String': 49, 'get': 138, '.': 33, 'res': 136, 'Exception': 21, 'Crypto': 20, '': 7, 'new': 131, 'throw': 130, '{': 22, 'Store': 9, 'Key': 8, 'catch': 121, 'return': 111, 'key': 10, 'alias': 50, 'Entry': 70, 'is': 68, 'if': 63, 'Element': 59, 'next': 58, 'aliases': 29, '=': 30, 'Elements': 42, 'More': 41, 'has': 40, 'try': 23, 'throws': 18, 'static': 1, 'public': 0}
{'}\n': 100, ';': 20, ')': 9, 'STR': 38, '_': 37, '+': 39, 'time': 22, '-': 92, '(': 4, 'Millis': 29, 'Time': 28, 'current': 27, '.': 26, 'System': 25, '': 24, ',': 68, 'TAG': 78, 'd': 75, 'Log': 73, 'null': 69, 'TABLE_': 41, '=': 23, 'long': 21, 'return': 19, 'DBAvailable': 15, 'is': 14, '!': 13, 'if': 11, '{': 10, 'Articles': 3, 'purge': 1, 'void': 0}
{'}\n': 163, ';': 23, ')': 12, '(': 4, 'Layout': 72, 'In': 158, 'Views': 3, 'All': 156, 'remove': 155, 'views': 11, 'Scrap': 136, 'reclaim': 2, '.': 31, 'Recycler': 25, 'm': 29, '}': 142, 'child': 15, 'Heap': 137, 'To': 135, 'Moved': 134, 'on': 133, 'listener': 27, '{': 13, 'null': 100, '!=': 99, 'if': 96, 'add': 119, 'Type': 108, 'view': 112, 'lp': 74, 'View': 9, 'Recycle': 106, 'should': 105, '&&': 101, 'Params': 73, 'get': 18, '': 5, 'List': 6, 'Abs': 67, '=': 17, 'i': 39, 'At': 59, 'Child': 19, '++': 50, 'Count': 16, '<': 7, 'NUM': 42, '_': 41, 'int': 14, 'for': 36, 'Listener': 26, '>': 10, 'void': 1, 'public': 0}
{'}\n': 113, ';': 39, ')': 13, '(': 2, '}': 40, 'STR': 37, '_': 36, 'if': 15, 'Exception': 34, '': 3, 'new': 30, 'throw': 29, '{': 14, 'Proxy': 0, '!': 17, ',': 8}
{'}\n': 27, ';': 19, ')': 7, 'g': 6, '(': 3, '.': 10, '{': 8, 'Graphics': 5, '': 4, 'paint': 2, 'void': 1, 'public': 0}
{'}\n': 73, ';': 72, ')': 16, 'NUM': 51, '_': 50, '(': 6, 'b': 11, 'a': 8, '{': 22, 'long': 7, ',': 9, 'private': 0}
{'}\n': 105, '}': 104, ';': 31, ')': 13, '_': 95, 'BOOL': 96, ',': 94, '(': 6, 'IOException': 16, '': 15, 'throws': 14, 'Compact': 3, 'serialize': 2, 'private': 0}
{'}\n': 80, ';': 79, 'return': 77, ')': 14, '': 48, '(': 6, 'checkbox': 43, '.': 30, '{': 15}
{'}\n': 38, ';': 24, ')': 4, '.': 19, 'state': 6, '(': 3, 'stack': 18, '=': 9, '{': 5, 'void': 1, 'public': 0}
{'}\n': 268, ';': 26, ')': 17, '(': 5, '}': 213, '{': 21, 'NUM': 53, '_': 37, '==': 205, 'if': 202, 'Update': 198, 'execute': 197, '.': 33, 'prep': 30, '=': 31, 'int': 94, 'table': 16, ',': 9, 'String': 11, 'set': 49, 'schema': 12, 'STR': 38, '+': 39, 'SCHEMA': 41, '': 6, 'Statement': 29, 'prepare': 34, 'conn': 8, 'Prepared': 28, 'init': 22, 'SQLException': 20, 'throws': 18, 'Connection': 7, 'Index': 4, 'drop': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 33, ';': 32, ')': 9, 'processor': 8, '(': 4, 'Of': 28, 'index': 27, '.': 26, 'processors': 25, 'return': 24, '{': 10, 'Processor': 7, 'IAudio': 6, '': 5, 'int': 2, 'synchronized': 1, 'public': 0}
{'}\n': 189, '}': 158, ';': 121, '{': 133, 'else': 159, ')': 61, 'NUM': 43, '_': 42, 'length': 57, '.': 29, 'data': 55, '': 86, '(': 37, 'if': 124, '=': 65, ']': 11, '[': 10, 'byte': 9, 'public': 0}
{'}\n': 394, ';': 33, 'return': 392, '}': 49, 'Config': 13, 'wildcard': 140, '=': 14, '.': 21, 'this': 42, '{': 9, ')': 8, 'null': 39, '!=': 38, '(': 3, 'if': 34, 'WILDCARD': 159, 'COMPARATOR_': 30, 'RESOURCE_': 29, '': 4, 'Policy': 25, 'get': 22, 'Params': 7, 'config': 6, 'String': 11, 'BOOL': 101, '_': 90, 'Sensitive': 98, 'case': 52, 'else': 104, 'STR': 91, 'equals': 88, 'SENSITIVE': 72, 'CASE_': 71, 'delimiter': 12, 'DELIMITER': 31, 'Map': 5, 'initialize': 2, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 11, 'STR': 25, '_': 24, '(': 7, 'With': 22, 'starts': 21, '.': 20, 'uri': 10, '&&': 18, 'null': 17, '!=': 16, 'return': 13, '{': 12, 'String': 9, '': 8, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 59, ';': 58, '(': 20, 'State': 11, 'new': 35, 'old': 10, 'state': 21, 'if': 19, '{': 18, ')': 17}
{'}\n': 33, ';': 32, ')': 6, '(': 5, 'length': 29, '.': 28, 'm': 10, '{': 7, 'int': 1}
{'}\n': 522, ';': 37, ')': 21, '(': 7, 'remove': 483, '.': 28, 'comments': 18, 'Comment': 455, 'set': 454, '{': 22, 'Utils': 56, 'Position': 55, '': 8, 'children': 217, 'null': 279, 'get': 48, 'if': 23, '=': 45, '>': 43, '<': 40, 'List': 39, 'Begin': 60, 'By': 59, 'sort': 58, 'return': 36, 'NUM': 34, '_': 33, '==': 32, 'size': 29, 'In': 5, 'Comments': 4, 'insert': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 35, ';': 34, ')': 32, '(': 8, 'read': 21, 'return': 20, '{': 19, 'file': 11, '': 2, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 251, '}': 47, ';': 35, ')': 11, '(': 5, 'Checks': 157, 'run': 244, 'validator': 53, 'offer': 159, '.': 17, 'Pending': 156, 'm': 15, '{': 12, 'else': 48, 'PERMISSION': 210, 'MISSING_': 209, 'ERROR_': 208, '': 6, 'Callback': 9, 'Checker': 8, 'License': 7, 'Error': 182, 'application': 199, 'callback': 10, 'e': 170, 'Exception': 193, 'catch': 189, 'Connection': 181, 'Service': 90, 'handle': 179, 'STR': 33, '_': 32, ',': 31, 'TAG': 30, 'Log': 25, 'Result': 111, 'bind': 110, 'if': 13, 'CREATE': 146, 'AUTO_': 145, 'BIND_': 144, 'Context': 114, 'this': 138, 'Intent': 121, 'new': 55, '=': 54, 'boolean': 109, 'try': 107, 'i': 27, 'null': 92, '==': 91, 'Code': 84, 'Version': 83, 'Name': 80, 'Package': 79, 'Nonce': 74, 'generate': 73, 'Limiter': 67, 'Device': 66, 'Null': 65, 'Policy': 16, 'Validator': 52, 'LICENSED': 44, 'allow': 18, 'Access': 4, 'check': 3, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 101, '}': 65, ';': 32, ')': 4, '(': 3, '.': 16, '{': 5, '_': 86, '': 48, 'save': 41, 'File': 42, 'try': 33, 'if': 6, 'public': 0}
{'}\n': 71, ';': 38, ')': 14, 'Res': 21, 's': 11, '(': 8, '.': 63, '': 1, 'i': 20, ']': 42, '[': 41, ',': 32, '{': 15, 'String': 10}
{'}\n': 136, ';': 132, 'return': 133, ')': 18, '(': 9, '.': 68, 'NUM': 110, '_': 109, 'CHARACTER': 79, 'SPC_': 78, 'COMA_': 77, '': 10, 'Constants': 74, 'Common': 73, 'Carbon': 72, 'Mapping': 17, 'Dictionary': 15, 'no': 14, '=': 34, 'String': 27, '{': 19, 'convert': 4, 'static': 1, 'public': 0}
{'}\n': 19, ';': 12, ')': 4, '(': 3, 'clear': 2, '.': 8, 'Model': 7, 'm_': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 191, ';': 30, ')': 7, '(': 4, 'NUM': 39, '_': 38, ',': 148, 'r': 143, 'int': 2, 'min': 134, '.': 133, 'Math': 132, '': 131, 'b': 115, 'g': 105, 'c': 6, '=': 18, '{': 8, 'static': 1, 'public': 0}
{'}\n': 59, ';': 57, ')': 4, '(': 3, 'Threads': 14, 'void': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 9, 'a': 8, '(': 4, 'Of': 17, 'value': 16, '.': 15, 'String': 14, '': 1, 'super': 11, '{': 10, ']': 7, '[': 6, 'byte': 5, 'Message': 3, 'Serial': 2, 'public': 0}
{'}\n': 157, '}': 104, ';': 50, ')': 10, 'result': 59, '(': 7, 'invoke': 139, '.': 65, 'Invoker': 137, '': 1, '{': 43, 'else': 105, 'Unchecked': 140, 'Direct': 22, 'Invoke': 21, 'can': 20, 'if': 62, 'Transferred': 17, 'bytes': 16, 'Of': 97, 'value': 96, 'Integer': 117, 'V': 91, 'Result': 87, 'set': 86, 'Long': 94, 'enable': 73, 'return': 71, 'Done': 67, 'is': 66, 'synchronized': 57, 'Buffers': 45, 'release': 52, 'update': 44, 'boolean': 19, ',': 18, 'int': 15, 'completed': 13, 'void': 12, 'public': 11, 'STR': 9, '_': 8, 'Warnings': 6, 'Suppress': 5, '@': 0, 'Override': 2}
{'}\n': 141, '}': 42, ';': 18, ')': 10, 'NUM': 25, '_': 24, '&': 135, 'bit': 60, '>': 130, 'r': 51, '(': 4, 'Bit': 36, 'write': 2, '{': 11, '--': 96, '>=': 117, 'for': 19, 'divisor': 6, '-': 54, '<<': 87, '+=': 102, 'else': 99, '<': 28, 'if': 79, 'Zeros': 71, 'Leading': 70, 'Of': 69, 'number': 68, '.': 67, 'Integer': 66, '': 65, '=': 14, 'int': 5, '*': 56, 'q': 13, 'value': 9, '++': 32, 'i': 22, '/': 16, ',': 7, 'Golomb': 3, 'void': 1, 'public': 0}
{'}\n': 114, ';': 113, ')': 36, '(': 13, '.': 44, 'Value': 4, 'Int': 46, 'from': 45, 'Metric': 3, '': 2, 'return': 40, '{': 39, 'static': 1, 'private': 0}
{'}\n': 91, ';': 40, 'return': 87, '}': 41, ')': 13, '(': 3, 'start': 68, 'if': 42, '{': 31, 'end': 12, '': 4, 'public': 0}
{'}\n': 98, ';': 50, '': 14, 'k1': 6, ')': 10, 'NUM': 36, '_': 35, '(': 4, '.': 26, '{': 11}
{'}\n': 101, ';': 31, ')': 4, '(': 3, 'get': 14, '=': 23, 'p_': 58, '}': 89, 'name': 22, 'STR': 84, '_': 83, '': 8, '.': 25, 'else': 44, 'Int': 68, 'As': 67, 'Parameter': 11, 'para': 12, 'ID': 55, 'M_': 53, 'equals': 49, 'if': 32, 'null': 41, '==': 40, 'Name': 28, 'String': 21, '{': 5, ':': 13, 'Info': 10, 'Process': 9, 'for': 6, 'prepare': 2, 'void': 1, 'protected': 0}
{'}\n': 31, ';': 30, ')': 5, '(': 4, '.': 9, 'url': 15, '_': 12, '{': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 117, '}': 78, ';': 31, ')': 15, '.': 24, 'err': 100, 'System': 98, '': 3, '(': 6, 'Trace': 95, 'Stack': 94, 'print': 93, 'unexpected': 83, 'JNI': 20, 'trace': 19, 'if': 17, '{': 16, 'Throwable': 82, 'catch': 79, 'Address': 12, 'sys': 25, 'try': 44, 'GC': 40, 'To': 39, 'Down': 38, 'JNICount': 37, 'check': 36, 'Entrypoints': 34, 'Runtime': 33, 'STR': 29, '_': 28, 'Write': 26, 'VM': 23, ',': 10, 'env': 9, 'JNIEnvironment': 8, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 322, '}': 30, ';': 29, ')': 13, 'Name': 46, 'backup': 44, '+': 141, 'STR': 27, '_': 26, '(': 5, '.': 23, 'log': 22, '{': 21, 'else': 31, 'debug': 137, 'File': 4, '': 6, 'new': 250, 'To': 248, 'rename': 247, 'file': 12, 'if': 15, 'delete': 119, 'null': 19, '!=': 110, 'find': 98, '=': 47, 'get': 63, 'String': 7, 'Write': 37, 'can': 36, 'info': 24, '==': 18, 'Backup': 3, 'make': 2, 'public': 0}
{'}\n': 41, ';': 28, ')': 5, ',': 36, 'STR': 16, '_': 15, '(': 4, '.': 12, 'Path': 24, 'Absolute': 23, 'get': 22, '': 7, 'public': 0}
{'}\n': 102, ';': 57, ')': 19, '(': 5, '.': 95, 'labels': 42, '}': 58, '': 13, 'new': 49, '=': 48, '{': 20, 'null': 44, '==': 43, 'if': 40, 'void': 1}
{'}\n': 7, ')': 5, '(': 4, 'Only': 1, 'Read': 0}
{'}\n': 17, ';': 16, ')': 8, 'r': 7, '(': 4, '.': 11, 'regions': 10, '{': 9, 'Region': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 53, '}': 29, ';': 28, ')': 12, 'e': 35, ',': 45, 'STR': 47, '_': 46, 'TAG': 44, 'LOG_': 43, '': 8, '(': 7, 'w': 40, '.': 24, '{': 13, 'IOException': 34, 'catch': 31, 'close': 25, 'is': 11, 'null': 20, '!=': 19, 'if': 16, 'try': 14, 'Stream': 6, 'Input': 5, 'Close': 4, 'silent': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 76, ';': 58, ')': 25, 'STR': 43, '_': 42, '(': 7, 'equals': 40, '.': 39, 'Name': 20, 'attributes': 24, 'Attributes': 23, '': 1, ',': 11, 'q': 19, 'String': 9, 'uri': 10, 'Element': 6, 'start': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 168, '}': 31, ';': 30, ')': 6, '(': 3, 'join': 161, '.': 16, 'selectorthread': 101, 'interrupt': 155, '{': 11, 'Thread': 125, 'current': 127, '': 8, '!=': 102, 'null': 43, 'if': 12, 'this': 96, 'synchronized': 45, 'AWAY': 90, 'GOING_': 89, 'Frame': 86, 'Close': 41, 'close': 82, 'ws': 73, 'To': 40, 'sockets': 39, ':': 74, 'Socket': 37, 'Web': 36, 'for': 68, 'connections': 47, '>': 38, '<': 34, 'List': 33, 'Array': 56, 'new': 54, '=': 42, 'return': 29, 'BOOL': 22, '_': 21, ',': 23, 'Set': 19, 'And': 18, 'compare': 17, 'isclosed': 15, '!': 14, 'Exception': 10, 'Interrupted': 9, 'throws': 7, 'timeout': 5, 'int': 4, 'stop': 2, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 4, '(': 3, 'Storage': 2, 'get': 12, 'File': 10, '': 1, '{': 5, 'public': 0}
{'}\n': 336, '}': 149, ';': 44, ')': 27, 'Width': 4, 'max': 175, ',': 10, 'used': 243, '(': 5, 'min': 298, '.': 51, 'Math': 296, '': 6, 'Bar': 292, 'set': 291, 'state': 26, '{': 28, 'else': 150, 'columns': 67, '*': 179, 'rows': 78, '/': 301, 'NUM': 90, '_': 89, '>': 205, 'if': 59, 'Margin': 189, 'Item': 23, 'current': 195, '-': 250, 'category': 188, 'Upper': 264, 'get': 35, 'Axis': 31, 'domain': 32, 'Lower': 255, 'space': 110, '=': 34, 'double': 109, 'Category': 7, 'Maximum': 181, 'Area': 15, 'data': 14, 'VERTICAL': 160, 'Orientation': 117, 'Plot': 8, '==': 130, 'orientation': 118, 'Height': 145, 'HORIZONTAL': 136, 'plot': 9, 'Count': 73, 'Row': 104, 'dataset': 48, ':': 100, 'Series': 84, 'Visible': 83, '?': 91, '>=': 88, 'int': 17, 'Column': 72, 'null': 63, '!=': 62, 'Index': 19, 'renderer': 18, 'Dataset': 47, 'Domain': 36, 'State': 25, 'Renderer': 24, 'D': 13, 'Rectangle2': 12, 'calculate': 2, 'void': 1, 'protected': 0}
{'}\n': 192, ';': 41, 'this': 40, 'return': 39, '}': 42, ')': 12, '(': 4, 'start': 17, '.': 7, 'Thread': 158, 'Processing': 157, 'm': 26, 'BOOL': 177, '_': 176, 'Active': 174, 'set': 93, 'Processor': 166, 'Frame': 165, '': 1, 'new': 79, '=': 45, 'Preview': 94, 'Camera': 15, 'Holder': 133, 'get': 132, 'View': 109, 'Surface': 76, 'Dummy': 75, 'Display': 125, 'Context': 117, '{': 23, 'else': 104, 'Texture': 77, 'NAME': 87, 'TEXTURE_': 86, 'DUMMY_': 85, 'HONEYCOMB': 71, 'CODES': 68, 'VERSION_': 67, 'Build': 54, '>=': 62, 'INT': 61, 'SDK_': 60, 'VERSION': 57, 'if': 31, 'create': 46, 'null': 36, '!=': 35, 'Lock': 28, 'synchronized': 24, 'IOException': 22, 'throws': 20, 'Source': 16, 'public': 13, 'CAMERA': 11, 'permission': 8, 'Manifest': 6, 'Permission': 3, 'Requires': 2, '@': 0}
{'}\n': 21, ';': 20, ')': 11, 'listener': 10, '(': 5, '.': 15, 'Listeners': 14, 'breakpoint': 13, '{': 12, 'Listener': 4, 'Breakpoint': 3, '': 7, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 52, ';': 50, ')': 27, 'g': 6, '(': 3, 'paint': 46, '{': 28, 'Graphics': 5, '': 4, 'update': 2, 'void': 1, 'public': 0}
{'}\n': 41, ';': 39, ')': 10, '(': 6, 'Trace': 5, 'Stack': 4, 'print': 3, '{': 13, 'Throwable': 8, '': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 55, ';': 41, 'null': 53, 'return': 52, ')': 17, ',': 13, 'e': 12, '(': 8, 'get': 23, '.': 22, '{': 18, 'p': 16, 'Void': 5, '': 1, 'Element': 11, 'visit': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 33, ';': 32, ')': 7, '_': 14, '(': 3, '.': 21, 'null': 17, 'multi': 5, '': 1}
{'}\n': 39, ';': 38, ')': 7, 'x': 6, '(': 4, '.': 12, 'Math': 11, '': 10, 'return': 9, '{': 8, 'double': 1}
{'}\n': 326, ';': 286, 'return': 314, '}': 287, '{': 26, ')': 25, 'Side': 100, 'source': 17, '(': 5, '.': 108, '=': 196, 'if': 35, 'String': 7, '': 6}
{'}\n': 21, ';': 20, ')': 10, 'channel': 9, '(': 3, '{': 11, 'Channel': 2, '': 5, 'void': 0}
{'}\n': 209, ';': 66, '}': 68, ')': 41, '(': 16, '.': 77, '{': 42, 'BOOL': 140, '_': 63, 'File': 23, 'null': 40, '!=': 87, 'parent': 73, 'if': 35, 'Parent': 79, 'get': 78, 'file': 24, '=': 74, '': 17, 'else': 69, 'static': 9, 'public': 8}
{'}\n': 221, '}': 159, ';': 20, ')': 5, '(': 4, 'unlock': 209, '.': 18, 'lock': 15, 'signal': 203, 'available': 70, '&&': 195, 'null': 68, '==': 67, 'leader': 119, 'if': 64, '{': 10, 'finally': 160, '=': 16, 'Thread': 132, 'this': 17, 'delay': 79, 'Nanos': 154, 'await': 72, 'try': 45, 'current': 139, '': 1, 'else': 76, '!=': 120, 'poll': 99, 'q': 97, 'NUM': 92, '_': 91, '<=': 90, 'long': 78, 'for': 47, 'Interruptibly': 24, 'Lock': 14, 'Reentrant': 13, 'final': 11, 'Exception': 9, 'Interrupted': 8, 'throws': 6, 'take': 3, 'E': 2, 'public': 0}
{'}\n': 81, ';': 25, 'return': 78, '}': 65, ')': 18, '(': 5, 'offer': 72, '.': 33, 'actions': 70, '=': 22, '{': 19, 'else': 66, 'Thread': 27, 'duty': 46, 'equals': 44, 'current': 28, 'if': 39, '': 15, 'BOOL': 24, '_': 23, 'boolean': 1, 'action': 17, 'Action0': 16, 'public': 0}
{'}\n': 270, '=': 12, '(': 4, ';': 21, ')': 8, '}': 68, '_': 18, '.': 14, 'NUM': 44, '+': 143, 'index': 11, 'substring': 140, '{': 54, '-': 84, 'SELECTOR': 63, 'ILLEGAL_': 62, 'CSS_': 61, 'TAG_': 60, '': 5, 'Id': 57, 'Tag': 56, 'set': 55, 'if': 47, 'String': 23, 'STR': 19, 'Of': 16, 'int': 10}
{'}\n': 67, ';': 56, 'Array': 62, 'As': 61, 'Values': 49, 'action': 48, ')': 31, '(': 24, '.': 50, '{': 32, 'public': 0}
{'}\n': 51, ';': 35, ')': 23, '(': 7, 'Channel': 9, 'get': 45, '.': 29, 'Context': 11, 'Handler': 10, 'channel': 5, 'Group': 37, 'Get': 32, 'And': 31, 'curr_conns': 28, '{': 27, 'Exception': 26, '': 1, 'throws': 24, 'Event': 19, 'State': 18, ',': 15, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 33, ';': 22, 'Head': 4, '.': 12, ')': 8, ',': 18, 'STR': 17, '_': 16, '(': 7, '': 10, 'private': 0}
{'}\n': 25, ';': 24, ')': 10, 'id': 9, '(': 6, 'equals': 20, '.': 19, 'NEXT': 18, '': 7, 'return': 12, '{': 11, 'URI': 8, 'Window': 5, 'Next': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 159, '}': 111, ';': 34, ')': 10, '(': 5, 'stop': 154, '.': 26, 'time': 23, '{': 19, 'finally': 150, 'return': 146, 'BOOL': 129, '_': 31, ',': 15, 'NUM': 75, '-': 138, 'delete': 134, 'zookeeper': 92, 'null': 124, 'Data': 120, 'get': 119, '=': 24, ']': 114, '[': 113, 'byte': 112, '+': 30, 'STR': 32, 'Of': 68, 'Index': 67, 'last': 66, 'path': 39, 'substring': 62, 'response_prefix': 58, 'dir': 29, 'String': 38, '': 12, 'try': 35, 'stats': 25, 'Context': 22, 'Timer': 21, 'Exception': 14, 'Interrupted': 17, 'Keeper': 13, 'throws': 11, 'public': 0}
{'}\n': 103, '}': 102, ';': 32, ')': 19, 'Schemas': 18, 'attribute': 17, ',': 10, 'TYPE': 96, 'NULL_': 95, '': 1, '(': 4, 'put': 92, '.': 28, 'Schema': 39, 'Attribute': 67, 'To': 66, 'Type': 65, 'map': 64, 'NUM': 83, '_': 82, '*': 81, 'size': 78, 'Map': 73, 'Hash': 72, 'new': 70, '=': 30, '{': 26, 'null': 61, '!=': 60, 'Bundle': 50, 'service': 8, 'if': 56, 'Resource': 49, 'Service': 48, 'get': 41, 'Name': 36, 'this': 27, 'model': 13, 'SSOException': 25, 'SMSException': 22, 'throws': 20, 'Set': 16, 'AMModel': 12, 'XMLBuilder': 3, 'Property': 2, 'public': 0}
{'}\n': 69, ';': 68, ')': 11, 'NUM': 42, '_': 26, '(': 3, 'At': 50, 'char': 49, '.': 16, 'arg': 6, '{': 12, 'String': 5, '': 4, 'is': 2, 'boolean': 1}
{'}\n': 36, ';': 35, ')': 19, '(': 5, 'add': 31, '.': 30, 'list': 12, 'array': 18, 'for': 21, '{': 20, 'String': 10, '': 6, '>': 11, '<': 8, 'List': 7, 'static': 0}
{'}\n': 22, ';': 21, ')': 10, 'super': 7, '.': 14, '{': 11, 'Toast': 6, 'Super': 4, '': 3, '(': 2, 'void': 0}
{'}\n': 353, '}': 104, ';': 16, ')': 4, 'STR': 23, '_': 22, ',': 50, 'NUM': 52, 'fields': 39, '(': 3, 'Field': 106, 'assert': 105, 'trim': 47, '.': 14, 'split': 43, 'pattern': 9, '=': 10, ']': 38, '[': 37, 'String': 19, '': 7, 'final': 6, '{': 5, '+': 89, 'i': 58, 'info': 85, 'log': 75, 'Enabled': 79, 'Info': 78, 'is': 77, 'if': 73, '++': 70, 'length': 67, '<': 64, 'int': 57, 'for': 55, 'Collector': 13, 'VMStat': 12, 'Pattern': 8, 'test_vmstat_header_and_data_parse': 2, 'void': 1, 'public': 0}
{'}\n': 115, ';': 39, 'return': 107, '}': 105, '.': 89, '': 8, '(': 7, ')': 12, '{': 13, 'assertion': 10, '_': 37}
{'}\n': 43, '}': 26, ';': 19, ')': 11, '(': 6, 'Trace': 38, 'Stack': 37, 'print': 36, '.': 21, 'e': 31, '{': 12, 'Exception': 30, '': 1, 'catch': 27, 'step': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 49, ';': 48, ')': 21, 'attacker': 28, '(': 8, 'return': 23, '{': 22, '': 13, 'public': 0}
{'}\n': 52, ';': 51, 'vertex': 3, '.': 35, '': 33, 'public': 0}
{'}\n': 49, '}': 41, ';': 11, '{': 5, '_': 38, ')': 4, '(': 3, 'Millis': 33, 'Time': 32, 'current': 31, '.': 30, 'System': 29, '': 16, '==': 15, 'state': 14, 'if': 12, 'synchronized': 0}
{'}\n': 204, ';': 47, '_': 122, ')': 28, 'Replicas': 141, '(': 5, 'if': 48, '}': 137, '.': 113, '{': 29, 'collection': 16, '': 6, 'null': 55, '==': 54, 'int': 19, ',': 13, 'String': 11}
{'}\n': 28, ';': 27, ')': 7, 'this': 24, ',': 23, 'STR': 22, '_': 21, '(': 6, 'format': 19, '.': 18, 'String': 17, '': 1, 'Exception': 14, 'Operation': 13, 'Unsupported': 12, 'new': 10, 'throw': 9, '{': 8, 'as': 4, 'Declaration': 3, 'default': 0}
{'}\n': 109, ';': 32, ')': 19, '(': 8, 'String': 3, 'to': 104, '.': 37, 'sb': 24, 'return': 101, '}': 100, 'Value': 95, 'get': 84, 'entry': 47, '+': 88, 'STR': 74, '_': 73, 'Key': 85, 'append': 71, '{': 20, 'Set': 52, ':': 48, '>': 17, '': 2, ',': 14, '<': 11, 'Entry': 39, 'Builder': 23, 'new': 26, '=': 25, 'Map': 10, 'To': 6, 'static': 1}
{'}\n': 47, ';': 29, ')': 19, '(': 10, 'String': 42, 'to': 41, '.': 23, 'ID': 39, 'cheque': 38, 'Id': 36, 'Cheque': 35, 'photo': 30, '{': 20, '': 1}
{'}\n': 115, ';': 43, '(': 6, '.': 48, ')': 42, 'sqrt': 78, 'Math': 76, '': 75, 'NUM': 31, '_': 30, 'inverse': 18, '{': 14}
{'}\n': 68, ';': 39, '{': 13, ')': 12, '(': 4, 'if': 40, '.': 34, '=': 30, '': 5, 'public': 0}
{'}\n': 53, ';': 34, ')': 11, 'duration': 10, '(': 8, 'Nanos': 7, 'Time': 6, 'Get': 5, 'add': 2, '.': 27, 'delegate': 37, 'null': 39, '!=': 38, 'if': 35, 'And': 29, 'get': 24, '{': 12, 'long': 9, 'void': 1, 'public': 0}
{'}\n': 47, ';': 15, 'tempval': 12, 'return': 44, '}': 29, 'NUM': 21, '_': 20, '=': 13, '{': 10, ')': 9, '<': 33, 'val': 8, '(': 5, 'if': 16, '>': 19, 'float': 1, 'final': 6, 'Valid': 4, 'check': 2, 'private': 0}
{'}\n': 32, ';': 31, ')': 11, '.': 22, 'cell': 5, 'return': 13, '{': 12, '': 3, '(': 2}
{'}\n': 74, ';': 73, ')': 18, ',': 68, 'Name': 9, 'prop': 8, '(': 5, 'Property': 63, '{': 19, 'String': 7, '': 6, 'void': 1}
{'}\n': 202, ';': 40, 'return': 199, '_': 193, '(': 6, ')': 23, '.': 42, 'p': 164, '=': 32, '': 2, 'directory': 43, 'pb': 31, 'Builder': 30, 'Process': 29, 'new': 33, '{': 27, 'throws': 24, 'String': 15, ',': 10, 'File': 8, 'static': 1, 'public': 0}
{'}\n': 16, ';': 15, 'Channel': 6, 'return': 12, '{': 11, ')': 10, '(': 9, 'selectable': 7, 'Selectable': 5, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 119, ';': 118, ')': 70, '(': 96, 'append': 92, '.': 91, 'builder': 26, '{': 79, 'Builder': 22, 'String': 15, '': 20, 'public': 0}
{'}\n': 136, ';': 60, ')': 13, '(': 8, 'File': 22, '.': 62, 'chooser': 61, '': 1, 'STR': 51, '_': 50, ',': 49, 'new': 28, '=': 27, '{': 14, 'void': 4, 'Override': 2, '@': 0}
{'}\n': 155, ';': 48, 'result': 29, 'return': 56, '}': 59, '{': 25, ')': 24, '(': 10, 'if': 49, ',': 14, 'value': 16, 'Key': 13, 'h': 12, 'Value': 35, 'Reg': 7, 'Windows': 6, '': 5, '=': 30, 'NUM': 77, '_': 76, '*=': 115, 'Time': 64, 'sleep': 63, 'e': 106, 'Exception': 105, 'Interrupted': 104, 'catch': 101, '.': 93, 'Thread': 92, 'try': 89, '++': 86, 'i': 74, 'ATTEMPTS': 83, 'MAX_': 82, '<': 80, 'int': 11, 'for': 71, 'TIME': 69, 'SLEEP_': 68, 'INIT_': 67, 'long': 62, 'else': 60, 'static': 1, 'private': 0}
{'}\n': 74, ';': 20, '}': 63, '{': 16, ')': 11, '.': 45, '(': 7, 'Time': 4, 'date': 19, '=': 31, 'Date': 3, '': 2, 'Exception': 15, 'throws': 12, 'str': 10, 'String': 9}
{'}\n': 417, ';': 92, 'sort': 204, '.': 64, ')': 46, '(': 5, 'Sort': 49, 'set': 343, ',': 42, '': 48, 'new': 209, '_': 84, 'NUM': 85, 'Index': 12, 'void': 1}
{'}\n': 341, ';': 246, '(': 5, 'Exception': 330, '': 31, 'new': 327, 'throw': 326, ')': 41, '.': 254, 'Model': 53, 'get': 51, 'Default': 157, '=': 118, '{': 46, 'if': 47, 'String': 32, 'public': 0}
{'}\n': 27, ';': 26, 'annotation': 10, '(': 6, 'Annotation': 9, 'return': 13, '{': 12, ')': 11, '': 7, 'public': 0}
{'}\n': 219, ';': 218, 'ID': 33, '+': 169, 'STR': 171, '_': 170, 'return': 77, '{': 68, ')': 67, '': 8, 'String': 9, '(': 20}
{'}\n': 78, '}': 77, ')': 12, 'STR': 67, '_': 66, '(': 6, '{': 44, 'exists': 34, '.': 33, 'dir': 19, '!': 31, 'if': 29, ';': 28, 'directory': 10, 'File': 18, '': 8, 'new': 21, '=': 20, 'String': 9, 'final': 7, 'Directory': 5, 'void': 1}
{'}\n': 488, ';': 260, '=': 213, 'Time': 9, 'NUM': 346, '_': 345, ')': 192, '(': 17, '.': 222, '': 214, '{': 193, 'time': 33, 'long': 30, 'public': 0}
{'}\n': 40, ';': 21, ')': 7, '(': 4, 'println': 3, 'length': 31, '.': 15, 's': 11, ',': 25, 'NUM': 27, '_': 26, 'write': 22, 'v': 6, 'Of': 17, 'value': 16, 'String': 10, '': 9, '=': 12, '{': 8, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 364, '}': 363, ';': 52, ')': 23, ',': 13, 'Size': 70, '(': 7, '': 9, 'mask': 326, 'Register': 22, 'parent': 56, 'arch': 137, 'offset': 16, 'And': 312, 'create': 311, '.': 101, 'Helpers': 309, 'Reil': 308, 'add': 305, 'instructions': 303, 'String': 20, 'Variable': 298, 'Next': 297, 'get': 59, 'environment': 12, '=': 58, 'final': 8, 'STR': 151, '_': 150, 'Operand': 69, 'sub': 21, 'Parent': 60, '{': 29, 'Exception': 28, 'Translation': 27, 'Internal': 26, 'throws': 24, 'long': 15, 'Environment': 11, 'ITranslation': 10, 'static': 1}
{'}\n': 45, ';': 28, ')': 12, '(': 8, 'Interceptors': 7, '{': 13, 'public': 0}
{'}\n': 57, ';': 24, ')': 11, '(': 22, 'String': 8, 'to': 52, '.': 26, 'sb': 16, 'return': 49, 'STR': 30, '_': 29, 'append': 27, 'Builder': 15, '': 1, 'new': 18, '=': 17, '{': 12}
{'}\n': 505, '}': 152, '{': 53, ')': 78, '': 12, '(': 63, 'catch': 418, 'Exception': 432, ';': 79, '=': 58, 'is': 375, 'if': 133, '.': 60, 'method': 214, 'get': 102, 'Class': 55, 'else': 153, 'BOOL': 150, '_': 149, 'null': 137, '!=': 136, 'Annotation': 103, ',': 28}
{'}\n': 84, '}': 83, ';': 66, ')': 9, '(': 5, '.': 18, 's': 74, '': 6, '=': 16, 'ir': 8, 'Instruction': 14, 'for': 11, '{': 10, 'IR': 7, 'void': 1, 'static': 0}
{'}\n': 110, ';': 109, ')': 71, 'test': 68, '(': 64, '.': 76, '{': 72, 'Test': 66, '': 65}
{'}\n': 274, ';': 273, ')': 105, 'Interceptor': 69, ',': 248, '(': 8, 'get': 163, '{': 118, '': 60}
{'}\n': 125, '}': 93, ';': 22, 'BOOL': 90, '_': 89, 'return': 88, ')': 9, '(': 5, 'Message': 111, 'get': 110, '.': 43, 'e': 98, '+': 107, 'STR': 106, 'error': 103, '{': 10, 'Exception': 97, '': 6, 'catch': 94, 'footprint': 8, 'Reader': 54, 'String': 7, 'new': 17, 'Source': 49, 'Input': 48, 'parse': 44, 'parser': 25, 'configuration': 15, 'Parser': 24, '=': 16, 'GMLConfiguration': 19, 'Configuration': 14, 'try': 11, 'GMLFootprint': 4, 'check': 3, 'boolean': 2}
{'}\n': 40, ';': 39, 'shift': 15, '+': 37, ')': 16, 'theta': 12, ',': 7, 'k': 9, 'p': 6, '(': 4, 'quantile': 3, '.': 21, 'Distribution': 26, 'Gamma': 25, '': 19, 'Math': 20, 'return': 18, '{': 17, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 71, ';': 44, 'Editor': 3, 'text': 35, '=': 42, '.': 40, 'this': 39, 'Assist': 25, 'quick': 27, 'Factory': 17, 'Assistant': 16, 'code': 18, 'configuration': 11, '{': 38, ')': 37, 'Presenter': 34, '': 1, 'final': 6, ',': 12, 'Quick': 24, 'Code': 15, 'Configuration': 10, 'Text': 8, '(': 5, 'Init': 4, 'public': 0}
{'}\n': 24, ';': 23, ')': 10, 'value': 9, ',': 7, 'address': 19, '+': 18, 'offset': 6, '(': 4, 'put': 2, '.': 13, 'unsafe': 12, '{': 11, 'int': 5, 'void': 1, 'final': 0}
{'}\n': 20, ';': 19, ')': 10, 'error': 9, '(': 6, 'add': 3, '.': 14, 'Errors': 13, 'validation': 12, '{': 11, 'String': 8, '': 7, 'Validation': 4, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 92, 'NUM': 88, '_': 35, '}': 62, ';': 61, '{': 24, ')': 23, 'STR': 36, '(': 7, '.': 31, 'option': 10, 'String': 9, '': 8, 'static': 1, 'public': 0}
{'}\n': 77, ';': 46, '': 1, 'return': 73, ')': 45, 'A': 60, '(': 7, '=': 27, '.': 25, 'this': 24, ',': 41, 'N': 38, 'Util': 30, 'SRP6': 29, '{': 23, 'Integer': 3, 'Big': 2, 'public': 0}
{'}\n': 119, '}': 97, ';': 32, ')': 14, 'STR': 25, '_': 24, '(': 3, 'info': 22, '.': 21, 'LOG': 20, '': 4, '{': 18, 'else': 98, 'lookup': 45, 'if': 52, 'File': 61, '=': 63, 'dictionary': 35, '+': 26, 'name': 27, 'IOException': 17, 'throws': 15, 'searcher': 13, 'Searcher': 12, 'Index': 11, 'Solr': 5, ',': 8, 'core': 7, 'Core': 6, 'void': 1, 'public': 0}
{'}\n': 126, ';': 16, ')': 7, '(': 3, '.': 113, '{': 8, 'Tour': 35, 'guided': 58, 'Guided': 34, '': 33, 'void': 1}
{'}\n': 625, '}': 76, ';': 33, ')': 4, 'e': 545, ',': 27, 'STR': 555, '_': 554, '(': 3, 'Exception': 544, 'Runtime': 551, '': 6, 'new': 15, 'throw': 548, '{': 8, 'Name': 138, 'Object': 41, 'Malformed': 541, 'catch': 538, 'Conn': 123, 'Server': 122, 'mbean': 121, '=': 14, 'class': 172, '.': 22, 'MBean': 128, 'NAME': 432, 'MBEAN_': 431, 'Proxy': 152, 'JMX': 155, 'Service': 169, 'Storage': 168, 'name': 139, 'ss': 151, 'try': 134, 'Connection': 130, 'get': 127, 'jmxc': 107, 'env': 43, 'Url': 13, 'jmx': 12, 'connect': 2, 'Factory': 111, 'JMXConnector': 83, 'creds': 70, 'CREDENTIALS': 86, 'put': 80, 'password': 75, 'username': 61, ']': 69, '[': 68, 'String': 21, 'null': 63, '!=': 62, 'if': 59, '>': 42, '<': 36, 'Map': 35, 'Hash': 47, 'port': 30, 'host': 28, 'format': 23, 'URL': 11, 'JMXService': 10, 'IOException': 7, 'throws': 5, 'void': 1, 'private': 0}
{'}\n': 259, ';': 175, 'word': 64, '{': 80, ')': 69, '(': 40, '.': 155, '=': 143, '': 33}
{'}\n': 257, ';': 198, ')': 133, '(': 97, 'String': 67, 'to': 80, '.': 214, 'timestamp': 102, '': 66, 'static': 1, 'public': 0}
{'}\n': 21, ')': 19, 'info': 18, '(': 7, 'public': 3}
{'}\n': 53, ';': 51, '.': 20, ')': 8, '(': 4, 'source': 13, '=': 14, '{': 9, '': 5}
{'}\n': 49, ';': 24, ')': 9, '(': 8, 'String': 5, 'to': 6, '.': 26, 'risul': 14, 'return': 41, 'STR': 38, '_': 21, 'append': 27, 'NUM': 22, 'Builder': 13, '': 1, 'new': 16, '=': 15, '{': 10, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 118, ';': 44, 'vector': 13, ')': 21, 'length': 69, '.': 47, ',': 51, 'NUM': 53, '_': 52, '(': 6, 'arraycopy': 48, 'System': 46, '': 45, '{': 22, ']': 9, '[': 8, 'public': 0}
{'}\n': 136, '}': 125, ';': 94, ')': 35, '(': 38, '.': 104, 'auth': 58, '': 13, 'new': 80, '=': 60, '{': 36, '>': 28, 'String': 23, ',': 18, '<': 15, 'Map': 20}
{'}\n': 107, ';': 36, ')': 18, 'Name': 17, 'element': 16, '+': 99, 'STR': 34, '_': 33, 'Prefix': 42, ',': 13, 'NS': 65, 'Encryption': 68, '': 2, '.': 50, 'Constants': 69, '(': 9, 'Element': 3, 'create': 4, 'doc': 12, 'return': 60, '}': 37, '{': 19, 'NUM': 56, '==': 23, 'length': 51, '||': 46, 'null': 24, 'if': 20, 'Exception': 31, 'Runtime': 30, 'new': 28, 'throw': 27, 'String': 15, 'Document': 11, 'Space': 8, 'In': 6, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 5, 'NUM': 21, '_': 20, '==': 19, 'value': 17, '(': 4, 'Bits': 15, 'To': 13, '.': 11, '': 9, 'return': 7, '{': 6, 'Default': 3, 'equals': 2, 'boolean': 1, 'public': 0}
{'}\n': 97, ';': 29, ')': 28, '(': 23, '.': 80, '}': 87, 'File': 72, '': 6, 'Filter': 49, '=': 36, ',': 25, 'public': 0}
{'}\n': 20, ';': 19, ')': 7, '(': 6, '.': 13, 'Attacks': 12, 'Missile': 4, 'Tele': 3, 'pending': 9, '{': 8, 'void': 1, 'public': 0}
{'}\n': 62, ';': 55, ')': 12, '(': 4, 'Images': 58, 'update': 57, '}': 56, '.': 44, 'commands': 16, '{': 13, 'synchronized': 14, 'Commands': 3, 'void': 1, 'public': 0}
{'}\n': 136, ';': 19, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 82, 'sb': 11, 'return': 128, 'STR': 27, '_': 26, 'append': 83, '}': 31, '=': 12, ']': 22, 'NUM': 46, '[': 21, 'separator': 23, 'i': 43, '{': 7, '++': 78, '<': 49, 'int': 42, 'for': 40, ',': 28, 'char': 20, 'Buffer': 10, '': 1, 'new': 13, 'public': 0}
{'}\n': 29, '}': 28, ';': 27, ')': 9, 'sequence': 18, '.': 19, 'statements': 8, '(': 4, 'All': 21, 'add': 2, '{': 10, 'null': 15, '!=': 14, 'if': 11, 'Sequence': 7, 'Statement': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 127, '}': 124, ';': 63, ')': 22, '(': 13, 'remove': 108, '.': 59, 'iterator': 55, '{': 23, 'm': 45, 'record': 76, 'next': 84, 'Record': 53, '': 49, '=': 56, 'Next': 69, 'has': 68, 'while': 64, 'Records': 46, '>': 54, '<': 51, 'Iterator': 50, 'synchronized': 43, 'void': 1, 'private': 0}
{'}\n': 91, ';': 16, 'VALUE': 80, 'MIN_': 88, '': 30, '.': 32, 'Double': 76, 'return': 37, 'else': 44, 'MAX_': 79, ')': 7, 'NUM': 64, '_': 63, '>': 29, 'del': 19, '(': 14, 'if': 26, 'EPSILON': 35, 'QL_': 34, 'Constants': 31, '<': 54, 'abs': 50, 'Math': 48, '*': 41, 'val': 11, '/': 39, 'delta': 21, '=': 12, 'double': 1, 'final': 9, 'value': 13, '{': 8, 'elasticity': 2, 'public': 0}
{'}\n': 213, '}': 92, ';': 55, ')': 16, '(': 7, 'close': 208, '.': 48, 'bytes': 31, 'buffer': 59, 'Buf': 99, 'return': 157, 'Pool': 42, 'm': 41, 'STR': 193, '_': 101, 'Log': 188, '': 8, '{': 24, 'e': 183, 'IOException': 19, 'catch': 179, 'Content': 50, 'consume': 173, 'entity': 4, 'try': 63, 'finally': 167, 'Array': 28, 'Byte': 27, 'to': 160, 'count': 112, ',': 20, 'NUM': 102, 'write': 134, '-': 127, '!=': 126, 'read': 121, 'in': 68, '=': 32, 'while': 114, 'int': 45, 'get': 49, 'Error': 23, 'Server': 22, 'new': 33, 'throw': 84, 'null': 61, '==': 80, 'if': 77, 'Stream': 30, 'Input': 66, ']': 3, '[': 2, 'byte': 1, 'Length': 51, 'Output': 29, 'Pooling': 26, 'throws': 17, 'Entity': 10, 'Http': 9, 'Bytes': 6, 'To': 5, 'private': 0}
{'}\n': 27, ';': 26, ')': 8, '(': 5, '.': 18, 'Math': 17, '': 16, 'Decimal': 12, '{': 9, 'value': 7, 'float': 2, 'round': 3, 'static': 1, 'public': 0}
{'}\n': 263, '(': 111, ')': 132, ';': 83, '.': 77, 'get': 126, '': 1, 'runner': 105, 'environment': 72, 'String': 71, 'Options': 48, 'Run': 47, 'Null': 22, 'Not': 21, '@': 0, 'Runner': 6, 'public': 4}
{'}\n': 33, ';': 32, ')': 7, 'STR': 17, '_': 16, '(': 6, 'equals': 27, '.': 12, 'Version': 25, 'os': 10, '&&': 23, 'NUM': 22, '-': 20, '>': 19, 'Of': 14, 'index': 13, 'Name': 11, 'return': 9, '{': 8, 'Windows': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 34, '}': 22, ';': 21, ')': 10, '(': 6, 'String': 2, 'to': 28, '.': 27, 'input': 9, 'return': 19, '{': 11, 'else': 23, 'null': 16, '==': 15, 'if': 12, '': 1, 'To': 4, 'private': 0}
{'}\n': 138, 'Measure': 25, 'pref': 127, ',': 9, 'min': 26, '(': 5, '.': 50, 'Spec': 42, ')': 37, 'size': 51, ';': 56, 'form': 13, '{': 38, '': 6, 'int': 2, 'static': 1, 'private': 0}
{'}\n': 1347, ';': 335, ')': 109, '(': 64, '.': 309, 'dir': 379, 'NUM': 1049, '_': 738, '+': 995, 'STR': 954, 'Index': 838, 'last': 780, ',': 740, 'Name': 207, 'File': 51, '': 79, 'new': 612, '=': 211, 'file': 94, '{': 110, 'String': 80}
{'}\n': 42, ';': 41, ')': 15, 'node1': 10, '(': 7, 'get': 28, '.': 27, 'node2': 14, '&&': 21, '{': 16, ',': 11, 'is': 3, 'boolean': 2}
{'}\n': 469, ';': 201, 'null': 371, 'return': 466, '}': 434, '{': 158, 'else': 435, ')': 132, '(': 73, '.': 186, 'if': 389, '!=': 370, 'Log': 9, '=': 162, 'Message': 10, '': 4, ',': 116, 'read': 39, 'public': 3}
{'}\n': 390, ';': 80, ')': 10, '(': 4, 'Int': 77, 'read': 76, '.': 65, 'is': 9, '=': 73, '{': 50, 'IOException': 13, '': 5, 'throws': 11, 'Stream': 8, 'Input': 7, 'Data': 6}
{'}\n': 50, ';': 49, '(': 6, ')': 9, '.': 29, '': 2, 'l': 13, '{': 10}
{'}\n': 136, ';': 53, 'return': 131, '}': 128, ')': 35, '(': 5, '.': 98, '': 42, '=': 81, '{': 36, 'if': 16, '!=': 26, 'authn': 18}
{'}\n': 86, ';': 38, 'temp': 25, ')': 14, '(': 32, '.': 52, 'File': 24, 'Temp': 30, '': 5, '{': 22, 'IOException': 17, 'throws': 15}
{'}\n': 76, ';': 66, ')': 45, 'editable': 15, '(': 5, 'Editable': 71, 'set': 70, '.': 69, 'Box': 68, 'combo': 67, 'Arguments': 44, 'key': 12, ',': 9, 'Validator': 32, 'input': 37, 'Value': 28, 'Selection': 2, 'initial': 26, 'Values': 22, 'selection': 21, 'owner': 8, 'this': 47, '{': 46, '...': 42, 'Object': 41, '': 1, '>': 36, 'T': 25, '<': 33, 'Input': 3, 'boolean': 14, 'String': 11, 'Window': 7, 'Dialog': 4, 'public': 0}
{'}\n': 124, '}': 102, ';': 39, ')': 14, '(': 3, '.': 21, '': 4, '{': 18, 'Stream': 86, 'File': 56, 'new': 82, '=': 58, 'null': 52, '!=': 51, 'Dir': 50, 'store': 49, 'dictionary': 44, 'STR': 25, '_': 24, 'info': 22, 'LOG': 20, 'IOException': 17, 'throws': 15, 'searcher': 13, 'Searcher': 12, 'Index': 11, 'Solr': 5, ',': 8, 'core': 7, 'Core': 6, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 8, ',': 18, 'buf': 17, '(': 7, 'Of': 15, 'copy': 14, '.': 13, 'Arrays': 12, '': 11, 'return': 10, '{': 9, 'Array': 6, 'Byte': 5, 'to': 4, 'public': 0}
{'}\n': 79, ';': 58, ')': 31, 'Callback': 24, 'response': 29, ',': 11, 'Spec': 16, 'Create': 15, '(': 5, 'Json': 68, 'As': 67, 'Object': 60, 'serialize': 65, 'path': 39, 'Async': 4, 'create': 2, 'Id': 10, 'project': 9, 'Path': 51, 'Base': 50, 'get': 49, 'STR': 47, '_': 46, 'format': 44, '.': 43, 'String': 8, '': 7, '=': 40, 'final': 6, '{': 35, 'IOException': 34, 'throws': 32, '>': 28, 'Task': 27, '<': 25, 'Future': 23, 'void': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 17, 'domain': 5, '(': 7, 'With': 23, 'ends': 22, '.': 21, 'host': 11, '{': 18, 'String': 10, '': 1, 'final': 8, ',': 12, 'Match': 6, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 20, ';': 19, ')': 9, 'name': 8, '(': 5, 'Element': 15, '.': 13, 'Attributes': 12, 'enabled': 11, '{': 10, 'String': 7, '': 6, 'Attribute': 4, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 8, '(': 3, 'Insn': 14, 'Ldc': 13, 'visit': 12, '.': 11, 'mv': 10, '{': 9, '': 5, 'final': 4, 'push': 2, 'void': 1, 'public': 0}
{'}\n': 170, ';': 169, 'key': 9, ')': 10, '(': 6, '.': 37, '_': 67, 'STR': 120, '{': 11, 'String': 8, '': 2}
{'}\n': 440, ';': 80, ')': 50, 'Desc': 55, 'input': 54, '+': 64, 'STR': 63, '_': 62, 'any': 139, '(': 6, 'fail': 335, 'Empty': 330, 'is': 329, '.': 59, '!': 326, 'if': 288, 'late': 26, 'early': 15, '}': 195, 'a': 282, 'continue': 298, '{': 51, 'else': 350, 'remove': 292, 'Events': 5, 'actual': 48, ':': 163, 'Event': 13, 'Change': 4, 'Port': 11, '': 7, 'for': 156, 'ev': 162, 'contains': 175, ',': 17, 'False': 168, 'assert': 3, 'anytime': 37, '>': 14, '<': 9, 'List': 94, 'Array': 93, 'new': 91, '=': 56, 'Collection': 8, 'format': 60, 'String': 53, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 102, ';': 46, ')': 14, 'i': 42, '(': 6, '.': 60, 's': 57, '<': 48, 'NUM': 45, '_': 44, '=': 43, 'int': 41, 'for': 39, '{': 15, '': 11, 'write': 5, 'void': 4, 'public': 3}
{'}\n': 21, '{': 14, ')': 13, '': 6}
{'}\n': 115, ';': 113, ')': 18, '(': 31, '.': 33, 'bb': 12, '+': 66, '{': 19, 'Buffer': 11, 'Byte': 10, '': 9, 'static': 1}
{'}\n': 163, ';': 37, ')': 20, 'length': 112, '.': 30, 'v2': 19, ',': 108, 'v1': 35, 'data': 89, 'NUM': 128, '_': 127, '(': 5, 'arraycopy': 122, 'System': 120, '': 1, '+': 113, 'field': 49, 'Array': 2, 'build': 104, 'Arrays': 102, 'Math': 28, '=': 50, 'to': 93, ':': 90, '>': 84, 'T': 16, '<': 81, 'Vector': 4, 'Field': 3, '?': 74, 'instanceof': 68, 'Data': 64, ']': 62, '[': 61, 'final': 58, 'get': 53, 'Null': 23, 'Not': 32, 'check': 31, 'Utils': 29, '{': 26, 'Exception': 25, 'Argument': 24, 'throws': 21, 'public': 0}
{'}\n': 142, ';': 25, ')': 4, '(': 3, '.': 10, 'Cursor': 108, 'Contract': 52, 'Contacts': 51, 'm': 27, 'Observer': 45, '{': 5, 'Registered': 47, 'Is': 46, 'if': 6, '}': 26, 'STR': 23, '_': 22, 'info': 20, 'Logger': 9, 's': 8, 'Activated': 12, 'is': 11, 'void': 1, 'public': 0}
{'}\n': 54, ';': 53, ')': 19, 'Value': 14, 'new': 17, '(': 6, 'Of': 37, 'value': 36, '.': 35, '': 7, ',': 11, 'old': 13, 'Name': 10, 'property': 9, 'Change': 5, 'Vetoable': 4, 'fire': 3, '{': 25, 'Exception': 24, 'Veto': 23, 'Property': 22, 'throws': 20, 'String': 8, 'void': 2, 'final': 1, 'protected': 0}
{'}\n': 129, ';': 65, ')': 5, 'gold': 67, ',': 125, '(': 4, 'Similarity': 122, '': 7, 'new': 119, 'Core': 117, 'Test': 116, 'correctness': 115, 'NUM': 18, '_': 17, '+': 36, 'TOKENS': 98, 'FIELD_': 97, 'OF_': 96, 'NUMBER_': 95, '/': 29, 'FREQ': 24, 'TERM_': 86, 'TOTAL_': 85, '*': 82, 'p': 11, 'log': 76, '.': 75, 'Math': 74, 'float': 10, '=': 12, '{': 9, 'IOException': 8, 'throws': 6, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 53, ';': 52, ')': 19, '(': 5, 'Sinks': 3, '{': 20, 'public': 0}
{'}\n': 22, ';': 21, 'dto': 9, '(': 5, 'return': 12, '{': 11, ')': 10, '': 6, 'public': 0}
{'}\n': 68, ';': 42, ')': 23, 'ddl': 22, '(': 8, 'Statement': 63, 'Of': 62, 'End': 61, 'print': 43, ',': 12, 'Name': 49, 'get': 46, 'Identifier': 44, 'STR': 40, '_': 39, 'append': 37, '.': 36, '{': 24, 'Builder': 21, 'String': 20, '': 9, 'table': 11, 'Table': 10, 'Stmt': 7, 'Drop': 6, 'External': 3, 'write': 2, 'void': 1}
{'}\n': 115, ';': 51, ')': 6, '(': 3, '.': 43, 'Lock': 37, 'To': 61, 'file': 36, '=': 59, '}': 52, 'return': 50, '{': 18, 'Valid': 45, 'is': 44, '&&': 40, 'null': 39, '!=': 38, 'if': 34, 'IOException': 9, '': 8, 'throws': 7, 'obtain': 2, 'void': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 12, 'Header': 21, '.': 19, '{': 17, '': 1, 'o': 11, '(': 8, 'public': 3, '@': 0}
{'}\n': 171, ';': 80, 'return': 156, '}': 126, ')': 89, ',': 21, 'project': 20, '(': 13, '{': 90, '&&': 136, 'else': 127, 'file': 86, '.': 55, 'if': 91, 'files': 54, ':': 87, 'File': 39, '': 15, 'for': 81, '=': 68, '>': 40, '<': 36, 'Null': 17, 'Not': 16, '@': 14, 'Project': 19}
{'}\n': 83, ';': 15, ')': 6, 'Label': 9, '(': 3, 'Tick': 44, '}': 66, '{': 7, 'Enabled': 38, 'Scale': 37, 'Log': 36, 'is': 35, '.': 11, 'scale': 33, 'if': 31, 'Positions': 25, 'tick': 8, 'Labels': 17, 'int': 4, 'update': 2, 'void': 1}
{'}\n': 67, ';': 66, '.': 59, 'Position': 9, 'start': 52, ')': 24}
{'}\n': 207, ';': 206, ')': 204, '(': 48, ',': 166, '.': 114, '': 39, '{': 97, 'Order': 77, 'SPOKey': 76, 'final': 53, 'new': 44, 'public': 1}
{'}\n': 31, ';': 30, ')': 12, 'Id': 6, 'item': 10, '(': 3, '.': 23, '{': 13, 'int': 9, 'final': 8, 'Res': 7, '': 5, '@': 4, 'public': 0}
{'}\n': 45, ';': 26, 'this': 43, 'return': 21, ')': 12, '(': 4, 'String': 6, 'to': 36, '.': 29, ',': 8, 'option': 7, 'put': 3, 'options': 28, '}': 27, 'remove': 22, '{': 13, 'null': 18, '==': 17, 'value': 11, 'if': 14, '': 1, 'Options': 2, 'public': 0}
{'}\n': 252, ';': 210, 'Page': 107, 'return': 248, ')': 145, '(': 124, '.': 206, '': 28, '=': 185, '{': 146, 'page': 128}
{'}\n': 50, ';': 49, ')': 17, 'index': 12, '(': 4, 'get': 25, '.': 24, 'matrix': 9, '{': 18, 'formatter': 16, 'Former': 15, '': 1, ',': 10, 'int': 11, 'D': 8, 'Matrix1': 7, 'form': 3, 'String': 2, 'protected': 0}
{'}\n': 430, ';': 43, ')': 8, 'mask': 11, ',': 228, 'Flags': 291, 'fired': 386, 'STATE_': 19, '': 4, '.': 17, 'Adapter': 6, 'Bluetooth': 5, 'state': 64, 'STR': 227, '_': 48, '(': 3, 'format': 224, 'String': 222, 'fail': 219, 'receiver': 54, 'Receiver': 16, 'remove': 98, 'Fired': 290, 'get': 56, '=': 12, 'int': 10, '}': 233, 'TIME': 381, 'POLL_': 380, 'sleep': 377, 'return': 104, 'Output': 339, 'write': 338, '{': 9, 'else': 358, 'start': 45, '-': 47, 'finish': 313, 'NUM': 49, '!=': 326, '&&': 285, 'if': 274, 'Time': 166, 'Completed': 318, 'long': 44, 'Enabled': 93, 'is': 92, 'adapter': 7, 'assert': 87, '==': 277, '&': 294, 'State': 69, 'TIMEOUT': 262, 'DISABLE_': 261, 'ENABLE_': 260, '<': 258, 's': 235, 'Millis': 167, 'current': 165, 'System': 163, 'while': 246, ':': 86, 'default': 211, 'break': 138, 'OFF': 191, 'TURNING_': 20, 'case': 78, 'True': 172, 'False': 117, 'ON': 114, 'switch': 73, 'FLAG': 22, 'MODE_': 39, 'SCAN_': 38, '|': 23, 'void': 1, 'public': 0}
{'}\n': 60, ';': 43, ')': 14, '(': 19, 'separator': 13, '_': 22, 'STR': 23, '{': 15, 'String': 3, '': 2, ',': 10, 'static': 1, 'public': 0}
{'}\n': 10, ')': 8, '(': 5, 'force': 2, 'void': 1}
{'}\n': 221, ';': 31, 'BOOL': 159, '_': 36, '}': 49, '{': 39, ')': 30, 'i': 70, '(': 29, 'At': 125, 'char': 124, '.': 27, 'str': 12, 'len': 24, '<': 90, 'NUM': 37, '=': 25, 'int': 23, '>': 55, 'return': 40, '==': 35, 'if': 32, 'length': 28, 'public': 0}
{'}\n': 480, '}': 459, ';': 171, ')': 105, 'r': 413, '(': 22, 'add': 453, '.': 166, 's': 436, 'dest': 361, ',': 26, 'bb': 185, 'result': 54, 'Set': 48, 'Split': 441, 'Create': 440, 'Or': 439, 'find': 438, '=': 164, '>': 52, 'Register': 51, '': 23, '<': 40, 'Hash': 38, '{': 106, 'Symbolic': 424, 'is': 423, 'if': 419, 'Registers': 394, 'live': 30, ':': 414, 'for': 154, 'Edge': 402, 'On': 401, 'Live': 28, 'get': 167, 'Element': 190, 'next': 189, 'out': 338, 'Block': 43, 'Basic': 42, 'Elements': 176, 'More': 175, 'has': 174, 'Out': 344, 'Normal': 343, 'Enumeration': 157, 'Pair': 44, 'Map': 39, 'Analysis': 29, 'ir': 25, 'IR': 24, 'static': 1, 'private': 0}
{'}\n': 115, ';': 37, ')': 7, '(': 6, 'Property': 14, '.': 16, ',': 43, 'Equals': 39, 'assert': 38, 'inner': 11, '_': 33, 'STR': 34, 'get': 59, '': 9, 'On': 19, 'Properties': 10, 'split': 17, 'Utils': 15, '=': 12, '{': 8, 'Split': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 75, 'offset': 23, '-': 68, 'length': 67, '.': 28, 'Array': 13, 'source': 12, ',': 14, 'destination': 19, 'NUM': 35, '_': 34, '(': 7, 'arraycopy': 29, 'System': 27, '': 8, ';': 45, ')': 24, '{': 25, 'int': 22, ']': 11, '[': 10, 'Object': 4, 'Offset': 6, 'At': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 91, '}': 90, ';': 44, ')': 7, '(': 66, '{': 85, '.': 80, 'File': 61, 'Db': 60, ',': 21, 'Path': 54, 'db': 24, '': 1, 'new': 63, '=': 35, 'String': 23}
{'}\n': 17, ';': 16, 'stream': 7, '{': 12, 'IOException': 11, '': 4, ')': 8, 'Stream': 1, 'Http': 0, '(': 3}
{'}\n': 44, ';': 43, ')': 8, '(': 4, 'Path': 27, 'Absolute': 26, 'get': 25, '.': 17, 'file': 7, '{': 9, 'File': 3, '': 5, 'public': 0}
{'}\n': 39, ';': 22, ')': 7, '(': 6, 'At': 33, 'char': 32, '.': 14, 's': 13, 'is': 27, 'Character': 25, '': 24, 'length': 15, 'n': 11, '{': 8, 'boolean': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'Short': 3, 'read': 2, '.': 13, 'return': 10, '{': 9, 'IOException': 8, '': 7, 'throws': 6, 'short': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 6, '.': 12, '': 10, '(': 3, 'print': 2, '{': 7, 'void': 1, 'public': 0}
{'}\n': 284, ';': 64, ')': 50, '(': 24, '.': 54, '': 32, 'Zy': 33, 'final': 31, '=': 85, 'Content': 83, 'Label': 82, 'STR': 62, '_': 61, ',': 60, 'Null': 57, 'Not': 56, 'check': 55, 'Preconditions': 53, '{': 51, '>': 38, '?': 37, '<': 36, 'Node': 35, 'Graph': 34, 'static': 1, 'public': 0}
{'}\n': 72, ';': 47, 'BOOL': 70, '_': 69, 'return': 68, ')': 17, '{': 18, '.': 41, '(': 6, 'if': 19, 'varray': 15, 'URI': 14, '': 7, ',': 12, 'Required': 5, 'Zoning': 4, 'boolean': 2}
{'}\n': 58, ';': 57, ')': 42, '(': 54, 'add': 52, '.': 51, 'frames_': 50, 'Frame': 17, 'CCSprite': 38, '': 37}
{'}\n': 55, ';': 21, ')': 6, '(': 5, 'Path': 10, 'Parent': 49, 'get': 16, '.': 15, 'tree': 14, 'Selection': 17, '=': 13, 'Tree': 9, '': 8, '{': 7, 'void': 1, 'private': 0}
{'}\n': 47, ';': 45, ')': 17, 'Messages': 4, '(': 5, '{': 18, '': 10, 'public': 0}
{'}\n': 41, ';': 31, 'SUCCESS': 39, 'EGL_': 38, '': 34, '.': 10, 'EGL10': 35, 'return': 23, '}': 32, ')': 4, '(': 3, 'Error': 28, 'Get': 27, 'egl': 11, '{': 5, 'Surface': 19, ',': 17, 'Display': 16, 'Buffers': 13, 'Swap': 12, '!': 8, 'if': 6, 'swap': 2, 'int': 1, 'public': 0}
{'}\n': 82, ';': 31, ')': 17, 'Size': 16, 'window': 15, ',': 13, 'list': 38, '(': 9, 'windows': 8, 'return': 73, 'Token': 68, 'next': 67, '.': 54, 'tokenizer': 22, 'add': 63, 'Tokens': 57, 'More': 56, 'has': 55, 'while': 51, '>': 7, '<': 4, 'List': 3, 'Array': 42, '': 2, 'new': 24, '=': 23, 'String': 36, 'words': 12, 'Tokenizer': 21, '{': 18, 'int': 14, 'Window': 6, 'static': 1, 'public': 0}
{'}\n': 588, '}': 587, ';': 25, ')': 9, 'Text': 4, 'Center': 3, 'm': 17, 'NUM': 165, '_': 142, '/': 546, '-': 542, '+': 534, ',': 529, '.': 19, '(': 5, 'c': 8, '=': 16, '': 6, '{': 10, 'int': 401, 'center': 14, '*': 299, '>': 253, 'if': 26, 'Box': 56, 'Circle': 55, 'get': 20, 'Chart': 18, 'F': 47, 'null': 42, '!=': 41, '&&': 38, 'Enabled': 35, 'Draw': 32, 'is': 31, 'Canvas': 7, 'draw': 2, 'void': 1, 'protected': 0}
{'}\n': 534, ';': 93, '}': 456, ')': 24, 'Frames': 45, '(': 86, 'add': 479, '.': 55, '{': 30, 'frames': 410, '=': 46, 'i': 393, 'is': 354, 'if': 351, '': 5, 'new': 127, 'Frame': 9, '<': 7}
{'}\n': 224, ';': 61, 'result': 146, 'return': 94, '}': 62, ')': 27, 'index': 13, '-': 216, 'length': 100, ',': 10, 'NUM': 41, '_': 40, '+': 55, 'array': 9, '(': 5, 'arraycopy': 165, '.': 70, 'System': 163, '': 2, '{': 28, '<': 23, 'if': 29, 'element': 18, 'set': 83, 'Array': 66, 'clss': 26, 'Instance': 72, 'new': 45, '=': 67, 'Object': 3, 'STR': 54, 'Exception': 51, 'Bounds': 50, 'Of': 49, 'Out': 48, 'Index': 47, 'throw': 44, '||': 116, '>': 25, 'Length': 106, 'get': 105, 'int': 12, 'joined': 65, '!=': 39, 'null': 33, '==': 32, '?': 24, 'Class': 22, 'final': 6, 'add': 4, 'static': 1, 'private': 0}
{'}\n': 15, ';': 14, ')': 5, '(': 4, 'Value': 3, 'double': 1, '.': 9, 'return': 7, '{': 6}
{'}\n': 145, ';': 12, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 29, 'result': 11, 'return': 137, 'STR': 33, '_': 32, 'append': 30, '}': 71, 'n': 17, ',': 121, 'i': 14, '{': 7, 'NUM': 41, '>': 58, 'if': 55, '++': 52, '<': 44, '=': 20, 'for': 36, 'Buffer': 10, '': 1, 'new': 21, 'int': 13, 'Matlab': 4, 'public': 0}
{'}\n': 72, ';': 42, ')': 9, '(': 5, 'init': 67, '=': 45, 'File': 2, 'input': 64, 'Path': 54, 'Absolute': 59, 'get': 48, '.': 18, 'absolute': 53, 'Name': 49, 'name': 44, 'f': 8, '+': 33, 'STR': 22, '_': 21, 'output': 29, 'Debug': 17, '': 1, '{': 13, 'debugging': 19, 'if': 14, 'IOException': 12, 'throws': 10, 'Reader': 4, 'Input': 3, 'public': 0}
{'}\n': 37, ';': 36, ')': 14, 'self': 13, '(': 10, 'Stream': 5, 'Output': 4, 'new': 6, '.': 28, 'Files': 27, '': 2, 'return': 19, '{': 18, 'IOException': 17, 'throws': 15, 'Path': 12, 'static': 1, 'public': 0}
{'}\n': 68, ';': 34, 'set': 22, 'return': 65, '}': 64, ')': 13, '(': 12, 'Set': 5, 'key': 10, '.': 52, 's': 46, 'All': 54, 'add': 53, '{': 14, 'segments': 48, ':': 47, '>': 9, 'V': 44, '': 4, ',': 42, 'K': 8, '<': 6, 'Segment': 38, 'for': 35, 'Hash': 16, 'new': 24, '=': 23}
{'}\n': 22, ';': 21, '{': 11, ')': 10, 'certificate': 8, 'Certificate': 6, '': 5, 'public': 0}
{'}\n': 24, ';': 23, ')': 11, 'policy': 9, '.': 15, '{': 12, '': 6, '(': 5, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 148, ';': 62, 'return': 142, '}': 63, '_': 51, '(': 5, '.': 70, 'code': 96, '+': 88, 'STR': 87, '{': 81, ')': 79, '': 6, 'if': 65, '=': 27, 'String': 7, 'public': 0}
{'}\n': 110, ';': 63, '(': 9, 'Exception': 104, '': 2, '}': 97, 'Module': 13, 'raw': 25, '{': 28, ')': 27, 'if': 78, 'Modules': 26, ':': 73, 'Raw': 7, 'INavi': 3, 'final': 10, 'for': 64, '>': 24, '<': 19, 'List': 18, ',': 15}
{'}\n': 91, ';': 56, 'return': 87, ')': 38, '(': 45, '.': 43, 'args': 42, '_': 50, '>': 13, '': 8, '<': 10, 'List': 9}
{'}\n': 44, ';': 43, ')': 19, 'Of': 17, 'day': 16, ',': 14, 'Year': 13, 'proleptic': 12, '(': 10, 'of': 31, '.': 30, 'Date': 6, 'Local': 28, '': 1, 'Japanese': 5, 'new': 22, 'return': 21, '{': 20, 'int': 11, 'date': 7, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 320, ';': 70, ')': 32, ',': 6, '(': 38, 'of': 313, '.': 40, 'Pair': 2, '': 1, 'return': 309, '}': 79, 'alias': 21, 'get': 63, '=': 55, 'Key': 15, 'if': 37, '{': 36, 'Exception': 35, 'Unrecoverable': 239, 'catch': 236, 'null': 179, 'Entry': 129, 'source': 75, 'format': 88, 'form': 54, 'new': 56, 'throw': 81, ']': 9, '[': 8, 'Object': 72, 'STR': 67, '_': 47, 'String': 20, 'rb': 61, 'Format': 53, 'Message': 52, 'BOOL': 48, '==': 46, 'Alias': 42, 'contains': 41, 'throws': 33, 'char': 7, 'recover': 11, '>': 10, '<': 3, 'private': 0}
{'}\n': 26, ';': 25, ')': 8, '(': 4, 'Loader': 1, '': 5}
{'}\n': 25, ';': 24, ')': 4, '(': 3, 'this': 6, '{': 5, '': 1, 'public': 0}
{'}\n': 93, ';': 25, 'Arr': 24, 'new': 23, 'return': 89, '}': 88, ')': 18, 'length': 34, '.': 33, 'obj': 17, ',': 14, 'arr': 13, 'NUM': 37, '_': 36, '(': 6, 'arraycopy': 69, 'System': 67, '': 8, '+': 60, 'Of': 53, 'copy': 52, 'Arrays': 50, '=': 41, '{': 19, 'else': 44, '==': 29, '||': 31, 'null': 30, 'if': 26, ']': 4, '[': 3, '...': 16, 'Nullable': 9, '@': 7, 'concat': 5, 'static': 1}
{'}\n': 76, ';': 75, ')': 7, 'zrot': 35, '(': 4, 'Radians': 33, 'to': 32, '.': 26, 'Math': 25, '': 24, 'cos': 58, '*': 23, 'size': 6, '+': 20, 'Yoff': 50, 'target': 18, 'float': 5, '-': 13, ',': 43, 'sin': 27, 'Xoff': 19, 'Position': 11, 'To': 10, 'move': 9, '{': 8, 'Camera': 3, 'void': 1, 'public': 0}
{'}\n': 833, ';': 21, 'Data': 27, 'decoded': 93, 'return': 19, '}': 22, ')': 10, 'b4': 116, '|': 315, 'NUM': 56, '_': 55, '<<': 312, 'b3': 111, '(': 6, 'byte': 2, '=': 28, ']': 4, '++': 189, 'Index': 150, 'encoded': 9, '[': 3, '&': 338, '>': 317, 'b2': 106, 'b1': 101, 'd4': 137, 'Alphabet': 270, 'base64': 26, 'd3': 132, '{': 11, 'else': 577, 'null': 16, 'tmp': 515, '*': 172, 'i': 143, ',': 105, 'arraycopy': 532, '.': 30, 'System': 530, '': 7, '+': 524, 'new': 84, '!=': 54, 'if': 12, 'Pad': 483, 'is': 195, '&&': 487, '!': 194, '||': 210, 'data': 156, 'd2': 127, 'd1': 122, '-': 184, 'Quadruple': 65, 'number': 64, '<': 181, 'for': 177, 'int': 37, 'char': 23, '==': 15, 'FOURBYTE': 53, '/': 69, 'len': 38, '%': 51, 'Space': 42, 'White': 41, 'remove': 40, 'Array': 33, 'Char': 32, 'to': 31, 'String': 8, 'decode2': 5, 'static': 1, 'public': 0}
{'}\n': 15, ';': 14, ')': 4, '(': 3, 'Now': 11, 'shutdown': 2, '.': 9, 'Service': 8, '{': 5, 'void': 1, 'public': 0}
{'}\n': 306, ';': 35, 'return': 298, '}': 169, 'STR': 117, '_': 39, 'current': 12, '<': 51, 'start2': 43, '(': 5, 'if': 15, 'NUM': 40, '+': 268, 'end2': 73, '=': 38, 'end1': 68, 'start1': 37, 'break': 167, 'i': 237, ')': 13, '++': 173, 'int': 36, 'for': 234, '{': 14, '!=': 199, '&&': 57, 'while': 48, 'previous': 8, 'else': 170, '==': 18, 'c1': 97, 'c2': 121, '?': 107, '<=': 80, 'null': 19, ',': 9, 'deflate': 4, 'static': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 21, '(': 5, '.': 26, 'S': 20, '': 6, '<': 8}
{'}\n': 35, '}': 34, ';': 33, ')': 14, 'l': 13, '(': 8, '.': 20, 'listeners': 19, '{': 15, 'contains': 21, 'if': 16, 'Listener': 7, 'Change': 6, 'Property': 5, '': 9, 'void': 3, 'synchronized': 2, 'static': 1, 'public': 0}
{'}\n': 65, ';': 62, ')': 26, '(': 5, 'Directory': 4, 'is': 46, '.': 45, 'f': 32, 'File': 31, '': 6, '{': 27, 'path': 21, 'static': 1}
{'}\n': 139, ';': 56, ')': 55, '.': 102, '(': 54, 'if': 109, 'tx': 50, 'assert': 57, ':': 39, '': 11, 'Tx': 27, '>': 15}
{'}\n': 126, '}': 106, ';': 24, ')': 9, '(': 4, 'Exception': 113, '': 1, 'new': 110, 'throw': 109, '{': 46, 'else': 107, '.': 31, 'NUM': 56, '_': 55, 'group': 53, 'matcher': 27, 'if': 38, 'String': 6, 'public': 0}
{'}\n': 31, ';': 30, ')': 14, 'length': 13, ',': 8, 'start': 10, 'ch': 24, '(': 3, 'append': 22, '.': 21, '{': 18, 'SAXException': 17, '': 16, 'throws': 15, 'int': 9, ']': 7, '[': 6, 'char': 4, 'characters': 2, 'void': 1, 'public': 0}
{'}\n': 171, ';': 38, '}': 127, ')': 34, '-': 25, '(': 5, '.': 22, '': 157, '=': 20, '{': 68, 'NUM': 27, '_': 26, ',': 28, 'i': 56, 'k': 93, '*': 102, '+=': 129, ']': 112, '[': 110, 'j': 78, 'get': 95, '++': 66, '<': 62, 'int': 45, 'for': 53, 'double': 39}
{'}\n': 9, '{': 8, ')': 7, 'Properties': 5, '': 4, '(': 3, 'initialize': 2, 'void': 1}
{'}\n': 64, ';': 18, ')': 9, 'numtomove': 29, ',': 41, 'index': 5, 'array': 40, '(': 3, 'arraycopy': 38, '.': 37, 'System': 36, '': 35, '-': 32, 'size': 31, '=': 30, 'int': 4, 'Range': 12, 'check': 11, '{': 10, 'public': 0}
{'}\n': 28, ';': 27, ')': 11, 'Stores': 10, '(': 4, '.': 14, '': 1, '=': 17, '{': 12}
{'}\n': 142, ';': 77, ')': 22, '(': 36, '.': 125, '': 24, 'prefix': 14, 'NUM': 88, '_': 42, '=': 83, 'int': 81, '}': 78, 'Length': 47, 'if': 35, 'public': 0}
{'}\n': 41, ';': 40, 'value': 20, 'return': 31, '{': 30, ')': 29, 'T': 7, '': 6, '(': 14, '>': 8, '<': 5, 'public': 0}
{')': 36, '': 8, 'Key': 18, 'Pair': 9, '(': 7}
{'}\n': 794, '}': 132, ';': 44, ')': 20, '(': 4, 'next': 126, '.': 50, 'parser': 9, '=': 36, 'Type': 47, 'event': 46, 'STR': 140, '_': 70, 'Exception': 26, 'Runtime': 136, '': 5, 'new': 37, 'throw': 133, ':': 205, 'DOCUMENT': 169, 'END_': 168, 'Parser': 8, 'Pull': 7, 'Xml': 6, 'case': 196, 'break': 130, 'BOOL': 71, 'Menu': 3, 'Of': 66, 'End': 65, 'reached': 173, '{': 30, 'MENU': 117, 'XML_': 116, 'equals': 113, 'Name': 60, 'tag': 59, 'if': 83, 'else': 291, 'Item': 342, 'add': 731, 'State': 33, 'menu': 19, 'Added': 722, 'has': 721, '!': 183, 'Group': 277, 'reset': 642, 'GROUP': 238, 'null': 79, 'Tag': 68, 'unknown': 75, 'Unknown': 67, 'For': 64, 'looking': 63, '&&': 520, 'get': 51, 'TAG': 95, ',': 10, 'attrs': 14, 'read': 276, 'START_': 94, 'switch': 190, 'while': 157, 'boolean': 62, '!=': 161, '+': 141, '==': 87, 'do': 81, 'String': 58, 'Event': 52, 'int': 45, 'IOException': 29, 'throws': 21, 'Set': 13, 'Attribute': 12, 'parse': 2, 'void': 1, 'private': 0}
{'}\n': 399, ';': 36, ')': 27, 'crs12': 340, '-': 34, 'Q': 22, 'crs1': 356, '(': 7, 'sin': 233, '.': 63, 'Math': 62, '': 61, '*': 291, 'asin': 375, 'return': 371, 'x': 307, ',': 10, 'y': 287, 'atan2': 345, '=': 32, 'double': 2, 'final': 29, 'E': 288, 'cdlon1': 267, 'clat': 302, 'slat1': 314, 'slat': 327, 'clat1': 310, 'cdlon12': 238, 'clat2': 292, 'slat2': 312, 'sdlon1': 255, 'sdlon12': 228, 'dlon1': 39, 'Cos': 246, 'To': 76, 'Util': 73, 'dlon12': 31, 'lat2': 15, 'lat': 21, 'lat1': 9, 'lon1': 12, 'lon': 25, 'lon2': 18, '{': 28, 'Rad': 6, 'Distance': 5, 'Track': 4, 'cross': 3, 'static': 1, 'public': 0}
{'}\n': 40, ';': 39, ')': 21, 'socket': 20, ',': 11, 'issuers': 16, 'Type': 10, 'key': 9, '(': 6, 'Alias': 5, 'Server': 4, 'choose': 3, '.': 27, '{': 22, 'Socket': 19, '': 1, ']': 15, '[': 14, 'Principal': 13, 'String': 2, 'public': 0}
{'}\n': 85, ';': 84, ')': 16, 'shape': 9, '(': 4, 'Gamma': 70, 'ln': 73, '.': 42, 'Function': 71, '': 40, '-': 47, 'x': 6, '/': 65, 'scale': 12, 'log': 43, 'Math': 41, '*': 39, 'NUM': 23, '_': 22, '+': 50, 'return': 25, '<=': 21, 'if': 18, '{': 17, 'factor': 15, 'double': 2, ',': 7, 'static': 1, 'public': 0}
{'}\n': 236, ';': 43, ')': 29, 'value': 28, ',': 8, 'Field': 22, 'm': 17, 'Tab': 16, 'No': 12, 'Window': 11, '': 1, 'ctx': 7, '(': 4, 'tax': 219, 'return': 66, '}': 163, 'null': 51, '=': 37, 'pstmt': 80, 'rs': 87, 'close': 202, '.': 57, 'DB': 96, '{': 30, 'finally': 197, 'Message': 192, 'Localized': 191, 'get': 154, 'e': 169, 'sql': 72, 'SEVERE': 180, 'Level': 177, 'log': 172, 'SQLException': 168, 'catch': 165, 'NUM': 64, '_': 63, 'Decimal': 156, 'Big': 155, 'STR': 68, 'Value': 59, 'set': 108, 'next': 138, 'if': 44, 'Query': 130, 'execute': 129, 'int': 9, 'ID': 36, 'Charge_': 35, 'C_': 34, 'Int': 109, 'Statement': 79, 'prepare': 98, 'try': 91, 'Set': 86, 'Result': 85, 'Prepared': 78, 'String': 2, '==': 50, '||': 52, 'Integer': 32, 'Object': 27, 'Grid': 15, 'Properties': 6, 'charge': 3, 'public': 0}
{'}\n': 211, ';': 45, ')': 9, '(': 19, '.': 22, '+': 185, 'STR': 184, '_': 183, 'Error': 181, 'throw': 180, '}': 88, 'append': 164, 'builder': 150, '{': 10, 'else': 89, 'if': 70, 'Comment': 108, 'process': 83, 'Opening': 78, 'Character': 107, 'Next': 106, 'is': 105, 'Tag': 97, 'get': 76, 'syntax': 74, '==': 73, 'Argument': 77, 'final': 33}
{'}\n': 298, ';': 21, ')': 7, '(': 6, 'Count': 256, 'Message': 53, 'get': 152, '.': 99, 'C': 86, 'msgs': 149, ',': 17, 'COUNT': 116, 'MESSAGE_': 115, '': 9, 'Equals': 245, 'assert': 244, 'B': 71, 'A': 56, 'Arrive': 206, 'To': 205, 'Messages': 107, 'For': 203, 'wait': 202, 'client': 55, 'STR': 16, '_': 15, 'Consumer': 54, '=': 41, 'List': 148, 'Id': 147, 'dest': 40, 'send': 106, 'NUM': 103, 'sleep': 100, 'Thread': 98, 'create': 42, 'BOOL': 49, 'Destination': 39, 'Brokers': 13, 'All': 33, 'start': 32, 'bridge': 12, '{': 11, 'Exception': 10, 'throws': 8, 'Network': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 80, ';': 21, ')': 4, '(': 3, '.': 12, 'write': 13, 'NUM': 19, '_': 18, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'void': 1}
{'}\n': 13, ';': 12, ')': 5, '(': 4, 'remove': 9, '.': 8, 'current': 7, '{': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 285, ';': 77, ')': 20, 'return': 275, '(': 13, '.': 52, 'token': 49, 'Type': 50, 'get': 53, 'Token': 25, '{': 21, '': 6}
{'}\n': 26, ';': 25, 'buf': 12, ')': 13, '(': 8, '.': 16, '{': 14, 'Buffer': 11, '': 9, 'Packet': 5}
{'}\n': 100, ';': 99, ')': 61, '(': 6, '{': 62, '': 11, 'for': 63, '>': 50, 'Matcher': 49, '<': 45, 'Array': 43, ',': 15}
{'}\n': 24, ';': 23, ')': 10, '(': 4, 'Int': 3, 'parse': 2, '.': 15, 'Integer': 9, '': 5, 'String': 6, 'public': 0}
{'}\n': 57, ';': 33, ')': 13, 'root': 36, '(': 9, 'Response': 6, 'Token': 5, 'Security': 4, 'Request': 3, '': 2, 'new': 47, 'return': 46, 'Element': 35, 'Document': 20, 'get': 40, '.': 25, 'doc': 21, '=': 22, 'debug': 31, ',': 30, 'DOMDocument': 27, 'to': 26, 'XMLUtils': 24, '{': 18, 'Exception': 17, 'WSFederation': 16, 'throws': 14, 'XML': 8, 'parse': 7, 'static': 1, 'public': 0}
{'}\n': 276, '}': 275, ';': 124, ')': 14, 'Request': 11, '(': 7, 'Container': 144, '.': 26, 'Client': 265, 'am': 264, 'Map': 253, 'requests': 252, 'container': 242, ',': 120, 'STR': 42, '_': 41, 'info': 27, 'log': 25, '{': 15, 'null': 187, '': 1, 'AMRMClient': 141, 'Resource': 10, 'Samza': 9, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 132, ';': 40, ')': 28, '(': 13, '}': 120, '.': 79, 'collection': 78, '>': 25, '': 4, '<': 20, 'List': 54, 'Array': 53, 'new': 51, '=': 50, 'result': 49, '{': 29, 'Collection': 7}
{'}\n': 717, ';': 18, ')': 9, 'ca': 276, '(': 5, 'String': 2, '': 1, 'new': 278, 'return': 709, '}': 116, ']': 275, 'j': 353, '[': 274, 'csx': 343, '=': 15, 'i': 32, '++': 239, ',': 25, 'length': 96, '.': 47, '<': 99, 'First': 354, 'int': 11, 'for': 364, 'NUM': 17, '_': 16, ':': 360, '?': 357, 'neg': 44, 'Array': 349, 'Char': 348, 'to': 347, 'sx': 8, 'char': 48, 'STR': 56, 'Zeros': 14, 'Leading': 13, 'n': 12, 'Blanks': 21, 'Space': 206, 'leading': 202, 'if': 58, 'else': 117, 'Sign': 203, '{': 10, '!': 85, 'Justify': 287, 'left': 286, '+=': 254, '--': 212, '||': 204, '&&': 67, '-': 108, 'Width': 176, 'field': 175, 'Set': 69, '+': 149, 'precision': 68, '==': 54, 'equals': 62, 'At': 49, 'boolean': 43, 'DFormat': 4, 'print': 3, 'private': 0}
{'}\n': 488, ';': 486, ')': 252, '(': 72, '.': 357, 'is': 29, '{': 265, '': 73, 'ni': 84, 'Interface': 53, 'Network': 74, 'private': 0}
{'}\n': 39, ';': 18, ')': 6, '(': 3, 'name': 27, '.': 22, 'sym': 5, '_all': 21, 'not_null': 14, '{': 9, 'internal_error': 8, 'throws': 7, 'symbol': 4, 'public': 0}
{'}\n': 38, '}': 26, ';': 25, ')': 5, '(': 4, '.': 11, 'Array': 20, 'java': 30, '{': 6, 'else': 27, 'js': 19, 'Script': 13, 'is': 12, 'GWT': 10, '': 9, 'if': 7, 'final': 1, 'public': 0}
{'}\n': 1311, ';': 128, ')': 102, '(': 3, '': 5, '=': 153, '.': 145, ',': 10, 'final': 4, '{': 103, 'for': 896, 'NUM': 372, '_': 230, '+': 777, 'this': 298, 'BOOL': 493, 'z': 397, '-': 255, 'y': 262, 'Point': 28, 'Geo': 27, 'Model': 7, 'planet': 8, 'Planet': 6, 'public': 0}
{'}\n': 98, ';': 35, 'return': 94, '}': 93, 'out': 46, ')': 55, '(': 26, '{': 56, '.': 48, '=': 40, 'String': 17, '': 2, 'public': 0}
{'}\n': 82, ';': 70, ')': 14, '(': 13, '.': 66, 'printer': 63, 'null': 49, '{': 23, 'end': 3, 'void': 2, 'public': 0}
{'}\n': 176, ';': 88, ')': 36, '(': 9, '.': 112, '': 10, 'return': 165, '{': 56, '}': 145, '+': 136, 'Path': 78, 'hdfs': 33, '=': 60, 'String': 11, 'public': 0}
{'}\n': 22, ';': 21, ')': 14, 'page': 18, '(': 9, '{': 15, 'Object': 6, 'Model': 3, 'public': 0}
{'}\n': 71, ';': 32, ')': 5, 'res': 44, '(': 4, 'Needed': 66, 'If': 65, 'renegotiate': 64, 'Status': 59, 'check': 58, 'compact': 54, '.': 18, 'Buf': 35, 'Net': 34, 'in': 33, 'unwrap0': 46, '=': 45, 'Result': 43, 'SSLEngine': 42, '': 7, 'flip': 37, 'STR': 30, '_': 29, 'debug': 27, 'log': 17, 'Enabled': 21, 'Debug': 20, 'is': 19, 'if': 15, '{': 14, 'SSLException': 13, ',': 11, 'Exception': 10, 'Checked': 9, 'Ignite': 8, 'throws': 6, 'Data': 3, 'unwrap': 2, 'void': 1, 'private': 0}
{'}\n': 50, '}': 49, ';': 25, ')': 6, 'STR': 45, '_': 44, '(': 5, 'Permission': 36, 'Time': 41, 'Joda': 40, '': 8, 'new': 38, 'check': 3, '.': 19, 'sm': 15, '{': 11, 'null': 30, '!=': 29, 'if': 26, 'Manager': 14, 'Security': 9, 'get': 20, 'System': 18, '=': 16, 'Exception': 10, 'throws': 7, 'void': 2, 'private': 0}
{'}\n': 36, '}': 35, ';': 34, ')': 8, '(': 11, 'Key': 28, 'put': 24, '.': 23, 'State': 16, 'shared': 15, '{': 9, 'null': 18, '!=': 17, 'if': 10, 'void': 1}
{'}\n': 38, ';': 37, ')': 15, 'Node': 6, 'child': 7, '(': 3, '.': 31, '{': 16, '': 4, 'Child': 2, 'void': 0}
{'}\n': 75, ';': 74, ')': 18, ',': 13, '(': 9, '.': 54, 'return': 46, '{': 34, 'Exception': 26, 'Interrupted': 21, '': 20, 'throws': 19, 'timeout': 11, 'Termination': 6, 'await': 5}
{'}\n': 73, '}': 71, ';': 54, ')': 34, 'i': 49, '(': 14, '{': 35, '': 6, 'public': 0}
{'}\n': 572, ';': 78, '}': 281, '{': 62, ')': 61, '(': 10, '.': 71, 'get': 425, '=': 83, '': 31, 'Index': 52, 'curr': 110, 'NUM': 306, '_': 90, 'if': 199, '&&': 239, 'int': 49, '>': 37, '<': 34, 'List': 33, 'static': 1}
{'}\n': 24, ';': 17, ')': 7, '(': 6, '.': 10, '_': 14, 'failed': 5, '': 1}
{'}\n': 823, '}': 309, ';': 167, ')': 84, 'Response': 94, 'And': 93, 'request': 11, '(': 6, 'Html404': 815, 'return': 814, '{': 38, 'else': 310, 'Html': 324, 'handle': 299, 'STR': 59, '_': 58, '.': 54, 'uri': 195, 'if': 287, 'Json': 490, 'equals': 339, 'Account': 732, 'Close': 755, 'With': 698, 'starts': 697, 'Change': 707, 'Password': 708, 'Exception': 25, 'Servlet': 24, '': 7, ',': 14, 'void': 1, 'private': 0}
{'}\n': 103, ';': 101, ')': 91, '.': 95, '{': 92, '(': 87, 'Document': 67, 'create': 77, '': 57}
{'}\n': 76, ';': 75, ')': 36, '(': 33, '': 4, 'Edge': 6, 'removed': 11}
{'}\n': 11, ')': 9, 'key': 7, 'void': 1}
{'}\n': 145, ';': 30, 'BOOL': 111, '_': 110, 'return': 109, '}': 113, ')': 8, 'Node': 56, 'descendant': 70, '(': 4, 'add': 35, '.': 34, 'Process': 18, 'To': 17, 'nodes': 16, '{': 9, 'contains': 121, '!': 42, 'if': 114, 'Id': 95, 'get': 76, 'Nodes': 78, 'Output': 77, 'current': 55, ':': 72, 'BNode': 14, '': 5, 'for': 66, 'poll': 62, '=': 19, 'Empty': 48, 'is': 47, 'while': 40, 'this': 37, '>': 15, '<': 12, 'List': 23, 'Linked': 22, 'new': 20, 'Queue': 11, 'Descendant': 3, 'has': 2, 'boolean': 1, 'public': 0}
{'}\n': 271, ')': 43, 'STR': 216, '_': 215, '(': 30, '{': 110, '}': 227, ';': 66, ',': 132, 'get': 73, '.': 125, '': 8, 'Locale': 81, '=': 56, 'Bundle': 17, 'Resource': 16, 'private': 0}
{'}\n': 30, ';': 29, ')': 10, '(': 6, 'get': 24, '.': 23, 'Class': 20, 'Proxy': 5, 'Cglib': 4, 'is': 3, 'return': 12, '{': 11, '': 7, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 128, '}': 112, ';': 21, ')': 5, '(': 4, 'close': 122, '.': 41, 'conn2': 120, '{': 9, '': 7, 'STR': 63, '_': 62, '=': 13, 'Exception': 8, 'throws': 6, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 57, '}': 42, ';': 41, ')': 14, 'field2': 13, ',': 9, 'field1': 8, '(': 4, 'equals': 3, '.': 23, 'Arrays': 47, '': 46, 'return': 30, '{': 15, 'else': 43, 'NUM': 27, '_': 26, '==': 19, 'length': 24, '||': 21, 'null': 20, 'if': 16, ']': 7, '[': 6, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 84, '}': 30, ';': 29, ')': 10, 'anno': 9, ',': 78, '(': 4, 'add': 52, '.': 41, 'Order': 40, 'Event': 61, 'annotations': 38, '{': 11, 'remove': 42, 'if': 12, 'Draw': 39, 'lock': 33, 'synchronized': 31, 'STR': 27, '_': 26, 'Exception': 24, 'Argument': 23, 'Illegal': 22, '': 6, 'new': 20, 'throw': 19, 'null': 16, '==': 15, 'Annotation': 8, 'Workflow': 7, 'final': 5, 'to': 2, 'void': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 15, '(': 31, 'new': 27, '.': 24, '{': 16, '': 7, 'public': 0}
{'}\n': 83, ';': 36, ')': 13, '(': 9, 'String': 8, 'to': 78, '.': 77, 'builder': 18, 'return': 75, '}': 50, 'e': 55, '': 2, 'new': 20, 'throw': 58, '{': 14, 'IOException': 54, 'catch': 51, 'try': 37, 'Builder': 17, '=': 19}
{'}\n': 80, ';': 77, ')': 46, '_': 69, '(': 32, 'Upload': 24, 'File': 22}
{'}\n': 187, ';': 29, 'BOOL': 28, '_': 27, 'return': 26, ')': 4, '(': 3, 'flip': 179, '.': 18, 'Buffer': 42, 'Net': 41, 'out': 73, '}': 30, 'result': 51, '+': 170, 'STR': 169, 'SSLException': 7, '': 6, 'new': 164, 'throw': 163, '{': 8, 'CLOSED': 160, 'Status': 87, '!=': 151, 'get': 86, 'if': 9, 'break': 139, 'else': 137, 'capacity': 107, 'limit': 125, 'NUM': 45, '<<': 116, 'OVERFLOW': 100, 'BUFFER_': 99, '==': 13, 'buf': 69, ',': 72, 'empty': 66, 'wrap': 64, 'Engine': 12, 'ssl': 11, '=': 60, 'for': 53, 'Result': 50, 'SSLEngine': 49, 'Out': 40, 'create': 39, 'Outbound': 2, 'close': 1, 'Done': 21, 'is': 19, '||': 15, 'null': 14, 'throws': 5, 'boolean': 0}
{'}\n': 36, ';': 35, ')': 19, '': 5, ',': 16, 'height': 18, 'width': 15, '(': 24, 'return': 21, '{': 20, 'int': 14, 'Bitmap': 6, 'static': 4}
{'}\n': 129, ';': 75, ')': 59, '(': 5, 'close': 123, '.': 77, 'flush': 92, 'writer': 38, 'File': 52, 'Writer': 31, 'Print': 30, '': 12, 'new': 40, '=': 39, 'write': 2, 'void': 1, 'private': 0}
{'}\n': 116, 'Event': 22, 'the': 106, ']': 55, '[': 24, 'Bean': 23, '': 21, ';': 73, ')': 9, 'NUM': 64, '_': 63, '{': 10, '(': 31, 'if': 30, 'public': 0}
{'}\n': 265, ';': 241, ')': 11, 'der': 43, 'put': 244, '.': 243, '(': 5, 'Value': 25, 'Der': 7, '': 6, 'new': 65, '=': 64, '{': 15, 'IOException': 14, 'throws': 12, 'Stream': 9}
{'}\n': 44, ';': 23, 'return': 41, ')': 22, '.': 37, 'probabilities': 26, '': 1, '{': 10}
{'}\n': 94, '}': 93, ';': 32, ')': 8, 'VK_': 29, '': 24, '.': 20, 'Event': 26, 'Key': 25, '(': 5, 'Release': 72, 'key': 21, 'controller': 19, 'Press': 22, '{': 9, 'c': 7, 'char': 6, 'type': 2, 'private': 0}
{'}\n': 30, ';': 29, ')': 12, 'o2': 11, '(': 4, 'equals': 25, '.': 24, 'o1': 7, ':': 22, 'null': 17, '==': 16, '?': 18, 'return': 14, '{': 13, 'Object': 6, '': 5, ',': 8, 'eq': 3, 'boolean': 2, 'static': 1}
{'}\n': 130, ')': 34, '(': 8, '.': 94, '{': 35, ';': 58, 'NUM': 65, '_': 64, 'notifications': 53, '=': 49, 'int': 47, 'Notification': 17, '': 13, 'public': 0}
{'}\n': 58, ';': 52, 'return': 49, '}': 53, 'BOOL': 51, '_': 50, ')': 13, '(': 4, 'Class': 37, 'get': 36, '.': 41, 'obj': 12, '{': 14, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 13, 'value': 12, '(': 5, 'put': 17, '.': 16, 'buf': 9, '{': 14, ',': 10, 'Buffer': 8, 'Byte': 7, '': 6, 'write': 3, 'void': 2, 'final': 1, 'protected': 0}
{'}\n': 16, ';': 15, 'item': 7, '.': 11, '{': 9, ')': 8, '': 5, '(': 4, 'public': 0}
{'}\n': 81, '}': 80, ';': 56, ')': 38, ',': 11, 'NUM': 69, '_': 68, '-': 67, '+': 65, 'x': 13, '(': 7, 'Rect': 31, 'fill': 59, '.': 49, 'g': 10, 'Shadow': 54, 'dark': 53, 'Color': 51, 'set': 50, '{': 39, 'Painted': 37, 'Border': 4, 'Content': 3, 'is': 34, 'if': 40, 'boolean': 24, 'sel': 30, 'Rectangle': 29, '': 8, 'Broken': 26, 'draw': 25, 'h': 22, 'int': 12, 'w': 19, 'y': 16, 'Graphics': 9, 'Edge': 6, 'paint': 2, 'void': 1, 'protected': 0}
{'}\n': 158, ';': 32, ')': 11, '(': 7, ',': 134, 'NUM': 80, '_': 79, 'get': 97, '.': 41, 'To': 91, '=': 24, 'final': 47, 'Integer': 86, '': 13, 'asn1': 72, 'Object': 68, 'ASN1': 49, 'throws': 12, 'public': 0}
{'}\n': 66, ';': 65, ')': 30, '(': 14, 'Size': 60, 'buffer': 59, '.': 58, '': 3, ',': 27, 'parallelism': 29, 'source': 23, 'from': 13, 'return': 32, '{': 31, 'int': 28, '>': 5, 'T': 4, 'extends': 19, '?': 18, '<': 2, 'Publisher': 16, 'Parallel': 7, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, '(': 5, '.': 17, '': 6, 'add': 2, '{': 10, 'var': 8, 'To': 3, 'void': 1, 'public': 0}
{'}\n': 142, '}': 89, ';': 88, '{': 31, ')': 30, '(': 26, 'URL': 17, '': 11, 'public': 0}
{'}\n': 804, ';': 211, ')': 18, 'Nums': 664, 'page': 214, ',': 9, 'NUMS': 798, 'PAGE_': 707, 'PAGINATION_': 705, '': 1, '.': 15, 'Pagination': 702, '(': 4, 'put': 562, 'Model': 440, 'data': 439, 'Count': 633, 'COUNT': 627, 'Num': 215, 'NUM': 708, 'CURRENT_': 506, '}': 47, '_': 7, '-': 745, 'size': 742, 'get': 110, 'LAST_': 730, 'FIRST_': 706, '{': 26, 'Empty': 233, 'is': 232, '!': 242, 'if': 227, 'Size': 653, 'window': 680, 'paginate': 669, 'Paginator': 667, '=': 6, '>': 662, 'Integer': 269, '<': 659, 'List': 658, 'final': 69, 'double': 644, '/': 648, 'Cnt': 647, 'ceil': 641, 'Math': 639, 'int': 264, 'Int': 619, 'opt': 383, 'user': 92, 'ID': 391, 'OBJECT_': 390, 'Keys': 387, 'Long': 597, 'Date': 592, 'new': 590, 'TIME': 588, 'CREATE_': 587, 'T_': 586, 'USER_': 585, 'Ext': 582, 'User': 42, 'Following': 533, 'FOLLOWING': 569, 'IS_': 475, 'Common': 472, 'Id': 514, 'follower': 513, 'Service': 537, 'Query': 536, 'follow': 535, 'boolean': 457, 'String': 91, 'current': 490, 'USER': 117, 'JSONObject': 101, 'In': 460, 'Logged': 459, 'IN': 477, 'LOGGED_': 476, 'Boolean': 464, 'STR': 8, 'Symphonys': 300, 'Str': 216, 'Of': 272, 'value': 5, 'Numeric': 247, 'Strings': 230, '||': 241, 'Null': 235, 'Or': 234, 'Parameter': 221, 'request': 80, 'Attribute': 111, 'Exception': 97, 'throws': 95, 'Name': 93, 'response': 87, 'Response': 86, 'Servlet': 78, 'Http': 77, 'Request': 2, 'context': 73, 'Context': 72, 'HTTPRequest': 13, 'Home': 66, 'show': 65, 'void': 64, 'public': 63, 'class': 32, 'Advice': 30, 'End': 58, 'Stopwatch': 28, 'Class': 24, 'advice': 23, 'After': 51, '@': 0, 'Check': 37, 'Block': 43, 'View': 36, 'Anonymous': 35, 'Start': 29, 'Before': 21, 'GET': 17, 'Method': 14, 'method': 10, 'Processing': 3}
{'}\n': 60, ';': 17, ')': 10, '(': 4, '.': 29, 'Math': 53, '': 52, 'i': 21, 'v': 9, ']': 8, '[': 7, '{': 35, '++': 33, 'length': 30, '<': 27, 'NUM': 24, '_': 23, '=': 14, 'int': 20, 'for': 18, 'double': 6, 'static': 1}
{'}\n': 134, ';': 12, ')': 8, 'result': 11, '(': 4, 'ceil': 128, '.': 20, 'Math': 105, '': 17, 'int': 1, 'return': 117, '}': 61, 'Size': 30, 'spec': 14, ',': 110, 'min': 107, '=': 16, '{': 9, 'MOST': 99, 'AT_': 98, 'Spec': 7, 'Measure': 18, '==': 47, 'Mode': 15, 'if': 43, 'Bottom': 84, 'Padding': 77, 'get': 21, '+': 75, 'Top': 78, 'Width': 72, 'Stroke': 71, 'Selected': 68, 'Paint': 67, 'm': 66, 'else': 62, 'EXACTLY': 53, 'measure': 2, 'float': 10, 'Height': 3, 'private': 0}
{'}\n': 761, ';': 27, ')': 7, '(': 3, '-': 422, 'get': 20, '.': 33, 'insets': 338, 'Height': 211, 'bounds': 326, ',': 14, 'Width': 177, 'Center': 394, 'y': 434, 'x': 368, 'center': 158, 'Component': 500, 'layout': 2, 'Vertical': 590, 'West': 110, 'width': 172, 'west': 126, 'South': 224, 'height': 206, 'south': 77, 'Horizontal': 539, 'East': 46, 'east': 62, 'North': 207, 'north': 30, 'gap': 240, '+': 378, '=': 19, 'double': 171, 'Y': 295, 'Top': 448, 'Min': 374, 'Right': 426, 'X': 253, 'Max': 176, 'Left': 382, '}': 366, 'Double': 362, '': 4, 'D': 325, 'Insets2': 336, 'new': 356, '{': 8, 'null': 351, '==': 350, 'if': 347, 'Insets': 343, 'container': 6, 'Bounds': 331, 'Rectangle2': 324, 'NUM': 248, '_': 247, ':': 256, 'Gap': 252, '?': 250, '>': 17, 'CENTER': 168, 'Location': 13, 'comps': 18, 'Drawable': 16, 'WEST': 121, 'NORTH_': 56, 'SOUTH_': 88, 'SOUTH': 104, 'EAST': 57, 'NORTH': 40, 'By': 22, 'Components': 21, '<': 11, 'Map': 10, 'Container': 5, 'void': 1, 'public': 0}
{'}\n': 65, ';': 28, '+=': 61, '_length': 13, ')': 9, ',': 6, '_buffer': 38, '(': 3, 'arraycopy': 32, '.': 31, 'System': 30, '': 29, '+': 14, 'Capacity': 21, 'ensure': 20, '_capacity': 18, 'if': 11, '{': 10, 'int': 4, 'void': 1, 'public': 0}
{'}\n': 47, ';': 15, '.': 27, 'vec': 7, 'i': 19, ')': 8, '++': 31, '<': 25, 'NUM': 14, '_': 13, '=': 20, 'int': 18, '(': 3, 'for': 16, '{': 9, 'private': 0}
{'}\n': 117, ';': 116, 'Pos': 71, 'y': 17, 'x': 13, '(': 3, '.': 76, ')': 72, 'float': 12, ',': 7}
{'}\n': 63, '}': 62, ';': 43, ')': 20, '(': 8, '': 2, '.': 34, 'Sync': 3, '{': 21}
{'}\n': 34, ';': 33, ')': 14, 'b': 13, '(': 6, 'equals': 3, '.': 27, 'a': 9, '&&': 25, 'null': 24, '!=': 23, '||': 20, '==': 18, 'return': 16, '{': 15, 'Object': 8, '': 7, ',': 10, 'boolean': 2, 'static': 1}
{'}\n': 87, ';': 69, ')': 8, '(': 3, '.': 53, '{': 20, '': 4}
{'}\n': 35, '}': 26, '{': 11, ')': 10, 'Throwable': 30, '': 6, '(': 5, 'catch': 27, ';': 25, 'close': 3, '.': 21, 'is': 9, 'null': 18, '!=': 17, 'if': 14, 'try': 12, 'Stream': 8, 'Input': 7, 'EL': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 117, ';': 102, ')': 73, '(': 16, '.': 93, 'monitor': 10, '': 24, 'public': 0}
{'}\n': 99, ';': 31, ')': 18, '(': 29, 'String': 3, 'to': 94, '.': 83, 'buf': 23, 'return': 91, '}': 90, 'ch': 86, 'append': 84, '{': 19, '++': 49, 'i': 35, '<': 41, 'NUM': 38, '_': 37, '=': 24, 'int': 34, 'for': 32, 'Buffer': 22, '': 2, 'new': 25, ',': 13, 'char': 10, 'static': 1}
{'}\n': 126, ';': 91, ')': 35, '(': 34, '.': 84, '': 25, ',': 80, 'STR': 50, '_': 49, 'Format': 40, 'Date': 39, 'Simple': 38, 'new': 43, '=': 42, 'sdf': 41, 'String': 26}
{'}\n': 279, ';': 40, 'return': 32, '}': 41, ')': 20, '(': 5, '=': 116, 'Type': 12, '': 11, '{': 31, ',': 207, 'if': 22, '.': 144, 'sts': 177, 'size': 145, 'Types': 121, 'get': 119, '>': 113, '<': 110, 'List': 109}
{'}\n': 50, ';': 41, ')': 16, '(': 6, 'Activity': 45, 'start': 44, '.': 28, 'activity': 42, 'parse': 36, 'Uri': 34, '': 8, ',': 32, 'VIEW': 31, 'ACTION_': 30, 'Intent': 19, 'new': 22, '=': 21, 'void': 2, 'public': 0}
{'}\n': 45, ';': 44, ')': 43, ',': 39, '(': 10, 'wait': 3, '{': 24, 'public': 0}
{'}\n': 28, ';': 27, ')': 25, 'Name': 23, 'get': 20, '(': 5, 'Null': 10, 'Not': 16, 'Getter': 13, '': 9, 'For': 3, 'boolean': 1}
{'}\n': 47, ';': 26, ')': 6, '(': 2, '.': 11, 'Stream': 14, 'get': 12, 'process': 5, 'Input': 13, '{': 7, 'Process': 4, '': 3}
{'}\n': 80, ';': 57, ')': 44, '(': 10, '.': 51, '': 33, 'File': 12, 'get': 52, '{': 45}
{'}\n': 700, '}': 696, ';': 90, ')': 75, 'NUM': 83, '_': 82, '(': 59, '.': 580, '': 585, '{': 571, 'i': 80, '=': 81, 'int': 79, 'for': 77, 'number': 72, 'Int': 58}
{'}\n': 75, ';': 68, 'BOOL': 67, '_': 66, 'return': 65, '}': 69, '{': 18, ')': 17, 'taxon': 43, '(': 4, 'contains': 59, '.': 58, '!': 55, 'if': 53, 'taxa': 45, 'Taxon': 13, '': 9, 'for': 19, '>': 14, '<': 11, 'boolean': 1}
{'}\n': 374, ';': 115, ')': 59, 'W': 35, 'Space': 39, 'text': 12, ',': 14, 'txt': 34, '(': 5, 'min': 297, '.': 288, 'Math': 295, '': 28, 'return': 360, 'Height': 58, 'font': 57, 'Decoration': 13, 'y': 54, 'x': 51, '+': 142, 'Text': 4, 'shift': 43, 'Font': 31, 'native': 30, 'String': 47, 'draw': 2, '}': 181, 'Width': 121, 'string': 120, '=': 112, 'points': 111, 'NUM': 87, '_': 86, '-': 173, 'index': 210, 'max': 305, 'substring': 289, '++': 282, '{': 60, '<': 276, '&&': 81, 'widest': 216, 'Check': 256, 'Char': 254, 'fast': 253, 'while': 251, 'int': 1, 'STR': 114, 'char': 218, 'Points': 26, 'With3': 25, 'ends': 24, 'if': 61, 'else': 194, 'Rect': 155, 'clip': 154, 'Running': 21, 'Ticker': 20, 'is': 19, '!': 64, 'rtl': 16, '>': 77, '||': 69, 'Object': 29, 'boolean': 15, 'Label': 3, 'protected': 0}
{'}\n': 23, ';': 22, ')': 6, '(': 5, '.': 17, 'Objects': 4, 'map': 9, 'null': 12, '{': 7, 'Map': 3, 'public': 0}
{'}\n': 29, '}': 28, ';': 27, ')': 20, '(': 4, '.': 14, 'action': 17, '{': 9, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 18, '{': 19, '(': 15, 'dump': 12, 'public': 0}
{'}\n': 144, ';': 59, ')': 29, '(': 6, 'get': 114, '.': 39, 'add': 2, 'aggregates': 52, '=': 36, '{': 30, '': 24}
{'}\n': 299, '}': 82, ';': 37, 'dim': 25, 'return': 295, 'bottom': 293, '.': 15, 'insets': 262, '+': 139, 'top': 289, '+=': 135, 'height': 76, 'right': 281, 'left': 277, 'width': 68, ')': 10, '(': 6, 'Insets': 261, 'get': 16, 'target': 9, '=': 26, '': 1, 'vgap': 140, 'd': 56, ',': 33, 'max': 121, 'Math': 119, 'Size': 5, 'title': 206, 'Dimension': 2, '{': 11, 'Visible': 49, 'is': 48, '&&': 45, 'null': 43, '!=': 42, 'if': 38, 'hgap': 182, 'Label': 87, 'y': 146, 'x': 86, 'chart': 41, 'NUM': 32, '_': 31, 'new': 27, 'Lock': 18, 'Tree': 17, 'synchronized': 12, 'Container': 8, 'Layout': 4, 'public': 0}
{'}\n': 82, ';': 61, ')': 27, 'resource': 37, '(': 33, '.': 40, '_': 55, '{': 31, 'Name': 42, 'get': 41, 'if': 32, '': 7, ',': 10, 'Resource': 3}
{'}\n': 120, '}': 93, ';': 39, ')': 17, 'NUM': 116, '_': 36, ',': 114, '(': 13, 'Message': 111, 'get': 110, '.': 2, 'ex': 99, 'Exception': 21, 'Parse': 20, '': 7, 'new': 30, 'throw': 29, '{': 22, 'catch': 94, 'timp': 69, 'URL': 9, 'Tel': 8, 'return': 85, 'Url': 43, 'tel': 42, 'parse': 78, 'smp': 56, 'URLImpl': 68, '=': 44, 'Parser': 55, 'Msg': 54, 'String': 15, 'try': 50, 'uri': 16, '+': 47, 'STR': 37, 'Pointer': 33, 'Null': 32, 'null': 27, '==': 26, 'if': 23, 'throws': 18, 'create': 10, 'address': 5, 'sip': 3, 'public': 0}
{'}\n': 260, ';': 63, 'bias': 26, '=': 68, '.': 38, 'this': 64, 'kernel': 23, '}': 101, ')': 27, 'STR': 98, '_': 86, '(': 4, 'Exception': 95, 'Argument': 94, 'Illegal': 93, '': 1, 'new': 91, 'throw': 90, '{': 28, 'NUM': 87, '==': 76, 'size': 82, 'Vectors': 19, 'support': 18, '||': 78, 'null': 77, 'if': 72, 'PARENTS': 61, 'SAME_': 60, 'ALLOW_': 45, 'Option': 42, 'Compare': 41, 'Types': 54, 'Utilities': 37, 'Set': 7, 'Example': 6, ',': 10, 'SUPERSET': 46, 'Sets': 40, 'example': 8, 'super': 29, 'double': 25, 'Kernel': 22, '>': 17, 'Vector': 16, 'Support': 15, '<': 13, 'List': 12, 'public': 0}
{'}\n': 39, ';': 34, 'return': 35, ')': 5, '': 7, '.': 18, 'singelton': 13, '(': 4, 'if': 11, '{': 10, 'Exception': 9, 'Servlet': 8, 'throws': 6}
{'}\n': 58, ';': 34, ')': 4, '(': 3, 'Wide': 42, 'System': 41, 'get': 40, '.': 39, 'Environment': 38, '': 1, '=': 36, 'm_env': 35, ',': 26, 'Border': 17, '{': 5, 'public': 0}
{'}\n': 112, ';': 42, '.': 29, '': 27, ')': 13, 'x': 6, '(': 4, '/': 53, '-': 50, '*': 68, 'log': 72, 'Math': 70, 'NUM': 67, '_': 66, 'Double': 28, '<': 58, 'mu': 9, '=': 47, '}': 43, 'INFINITY': 32, 'NEGATIVE_': 40, 'return': 35, '{': 14, '==': 26, '||': 24, 'if': 15, 'double': 2, ',': 7, 'logpdf': 3, 'static': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 10, '(': 6, 'Case': 27, 'Lower': 26, 'to': 25, '.': 20, 'codec': 9, 'get': 21, 'return': 12, '{': 11, 'String': 8, '': 2, 'Format': 3, 'generate': 4, 'static': 1, 'public': 0}
{'}\n': 61, ';': 29, ')': 14, '(': 7, 'empty': 57, '.': 43, 'Int': 3, 'Optional': 2, '': 1, ':': 52, ']': 18, 'NUM': 34, '_': 33, '[': 17, 'result': 19, 'of': 44, '?': 39, '==': 36, 'return': 30, 'null': 23, ',': 24, 'collect': 21, '=': 20, 'int': 16, '{': 15, 'Extractor': 13, 'key': 12, 'Operator': 11, 'Unary': 10, 'By': 5, 'public': 0}
{'}\n': 178, '}': 168, ';': 30, ')': 12, '(': 7, 'unlock': 173, '.': 97, 'lock': 171, '{': 13, 'finally': 169, '=': 35, 'final': 8, '': 24, '_': 54, 'Exception': 27, 'Argument': 26, 'Illegal': 25, 'new': 23, 'throw': 22, 'if': 14, 'public': 0}
{'}\n': 77, ';': 23, ')': 10, '(': 6, '.': 40, 'Writer': 14, 'print': 28, 'Trace': 43, 'Stack': 42, 'Print': 26, '': 2, 'new': 17, '=': 16, 'String': 3, '{': 11, 'static': 1, 'public': 0}
{'}\n': 122, ';': 44, ')': 17, ',': 118, '': 13, 'NUM': 91, '_': 74, '(': 28, '.': 25, 'if': 78, 'Index': 72, 'Name': 51, 'var': 15, 'String': 14, '}': 45, '{': 18, 'public': 0}
{'}\n': 23, ';': 18, ')': 8, '(': 7, 'wake': 19, 'Decrement': 15, 'And': 14, 'get': 13, '.': 12, 'Count': 11, '_thread': 10, '{': 9, 'End': 6, 'Thread': 4, 'on': 2, 'void': 1, 'public': 0}
{'}\n': 323, '}': 109, ';': 27, ')': 11, 'STR': 200, '_': 199, '+': 195, 'Name': 10, 'container': 9, 'Message': 193, 'Registration': 192, 'MBean': 5, 'Transport': 279, 'successful': 278, '(': 6, 'config': 276, '.': 65, '_logger': 166, '{': 12, 'CONFIG': 270, '': 7, 'Level': 172, 'Loggable': 169, 'is': 83, 'if': 28, 'e': 117, ',': 104, 'Prefix': 194, 'failed': 189, 'SEVERE': 187, 'log': 181, 'Exception': 116, 'catch': 110, 'WARNING': 175, 'Compliant': 158, 'Not': 157, 'Exists': 115, 'Already': 114, 'Instance': 113, 'obj': 59, 'register': 3, 'Server': 15, 'Bean': 17, 'm': 16, 'try': 91, 'Registered': 84, '!': 78, 'Constants': 64, '=': 19, 'Object': 57, 'new': 48, 'return': 36, 'null': 34, '==': 33, 'get': 20, 'String': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 125, ';': 48, 'NUM': 82, '_': 70, '-': 80, 'return': 79, '}': 84, ')': 28, 'sets': 17, ',': 18, '(': 34, 'name': 96, '.': 39, 'mapping': 32, 'Table': 31, '{': 29, 'Empty': 92, 'is': 60, 'X': 89, '': 15, '!': 87, 'if': 49, 'STR': 71, '+': 72, 't': 27, 'error': 68, 'log': 58, 'Enabled': 62, 'Error': 61, 'null': 53, '==': 52, 'class': 46, 'Annotation': 41, 'get': 40, '=': 33, '>': 26, 'Bean': 25, 'extends': 23, '?': 22, '<': 21, 'Class': 20, 'V': 16, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 50, ';': 31, 'null': 38, '=': 37, 'Timer': 26, 'm': 15, ')': 9, '(': 8, '.': 27, '{': 10, 'if': 11, 'stop': 2}
{'}\n': 20, ';': 19, ')': 11, 'listener': 10, '(': 4, 'remove': 2, '.': 14, 'listeners': 13, '{': 12, 'Listener': 3, '': 6, 'public': 0}
{'}\n': 270, ';': 143, ')': 63, 'Props': 96, 'exp': 95, '(': 39, '=': 132, '.': 152, '': 41, 'Properties': 24, 'props': 46, 'Stream': 44, 'Input': 43, 'static': 1}
{'}\n': 51, ';': 49, ')': 15, 'Identifier': 11, 'Table': 10, 'absolute': 12, '(': 7, '.': 24, 'Map': 23, 'table': 21, 'Lock': 22, '{': 16, 'Absolute': 9, '': 8, 'void': 2}
{'}\n': 126, ')': 124, '': 13, ',': 18, 'Set': 20, '>': 25, 'Mirror': 24, 'Annotation': 23, '<': 15, 'Map': 14}
{'}\n': 33, ';': 32, ')': 18, '(': 4, '{': 19, 'async': 12, '': 6, 'final': 5, 'public': 0}
{'}\n': 209, ';': 26, ')': 16, ',': 10, '(': 2, '.': 51, '=': 32, 'from': 96, 'to': 76, ']': 50, 'i': 31, '[': 48, '{': 17, '++': 41, '<': 37, 'int': 8, 'for': 28, '}': 27, 'return': 25, 'if': 18, 'void': 0}
{'}\n': 37, ';': 24, 'conn': 15, 'return': 34, ')': 8, 'autocommit': 7, '(': 5, 'Commit': 29, 'Auto': 28, 'set': 27, '.': 19, 'Connection': 2, 'get': 20, 'Src': 18, 'data': 17, '=': 16, '': 1, '{': 12, 'SQLException': 11, 'throws': 9, 'boolean': 6, 'open': 3}
{'}\n': 111, ';': 107, ')': 9, 'NUM': 86, '_': 85, '==': 84, '(': 4, '.': 17, 'e': 8, 'Mouse': 6, '': 5, 'get': 23, '{': 10, 'Event': 7, 'public': 0}
{'}\n': 88, ';': 52, '.': 77, '=': 64, ')': 30, 'No': 11, 'column': 14, ',': 8, 'line': 10, '(': 4, '': 1, 'public': 0}
{'}\n': 15, ';': 14, ')': 6, '(': 5, 'Set': 2, 'Key': 10, '{': 7, 'key': 3, '': 1, 'public': 0}
{'}\n': 49, ';': 48, ')': 11, 'out': 10, '(': 3, '.': 28, '{': 15, 'Writer': 9, '': 4, 'void': 1, 'public': 0}
{'}\n': 92, ';': 91, ')': 18, 'details': 16, ',': 63, '.': 35, '': 10, '(': 5, 'new': 28, '{': 19, 'String': 11, 'public': 0}
{'}\n': 170, ';': 25, 'result': 123, 'return': 167, ',': 10, '(': 5, '=': 19, ')': 15, 'int': 1, ']': 3, '[': 2, '{': 16, 'length': 56, '.': 55, 'NUM': 32, '_': 31, 'arraycopy': 80, 'System': 78, '': 37, 'new': 51, '}': 45, 'if': 26, 'a': 9, 'private': 0}
{'}\n': 359, ';': 34, ')': 13, '(': 12, 'elements': 355, '.': 28, 'result': 21, 'return': 352, 'STR': 45, '_': 44, ',': 55, 'NUM': 60, 'Option': 8, '': 1, 'new': 40, 'Element': 38, 'add': 37, '+': 46, 'Num': 48, 'default': 47, 'Min': 187, 'Max': 148, 'Options': 11, 'list': 10, 'super': 27, 'Vector': 16, 'To': 24, 'enum': 23, '=': 22, '>': 9, '<': 6, '{': 14, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 76, ';': 25, ')': 16, '.': 19, 'sb': 12, 'STR': 23, '_': 22, '(': 21, 'append': 20, 'Builder': 11, 'String': 10, '': 9, 'public': 0}
{'}\n': 58, '}': 57, ')': 6, '(': 5, '.': 10, '': 19, '{': 7, 'i': 21}
{'}\n': 55, ';': 37, 'return': 52, ')': 18, '': 4, '(': 35, 'add': 40, '.': 39, '>': 16, 'Option': 15, '<': 13, 'Vector': 21, 'new': 28, '=': 27, '{': 19, 'Enumeration': 12}
{'}\n': 224, ';': 85, ')': 36, '(': 82, 'return': 199, 'add': 156, '.': 155, 'list': 62, 'i': 89, 'size': 98, '<': 52, 'NUM': 92, '_': 91, '=': 63, 'int': 88, 'for': 86, '>': 61, 'List': 51, 'Array': 66, '': 49, 'new': 64, '{': 37, 'Data': 15}
{'}\n': 98, ';': 96, ')': 73, 'Ident': 61, '(': 42, '.': 76, '{': 74, '': 51, 'add': 2, 'void': 1}
{'}\n': 450, ';': 219, ')': 89, 's2': 40, '(': 153, '.': 347, 's1': 25, 'return': 290, '}': 220, '_': 217, '{': 90, '==': 155, 'if': 152, '': 18, 'final': 13}
{'}\n': 124, '}': 86, ';': 50, ')': 39, '(': 6, 'Trace': 115, 'Stack': 114, 'print': 113, '.': 28, 'e': 99, 'STR': 108, '_': 82, '': 7, '{': 101, 'Exception': 98, 'catch': 88, '!=': 66, 'if': 62, 'Info': 22, '=': 25, ',': 40, 'Name': 37, 'Package': 12, 'get': 29, 'context': 9, 'Manager': 13, 'package': 14, 'Context': 8, 'load': 3, 'static': 1, 'private': 0}
{'}\n': 234, ';': 117, 'Graph': 13, 'Bipartite': 12, 'return': 227, '}': 225, ')': 30, 'NUM': 65, '_': 64, 'byte': 219, '(': 14, ',': 18, 'i': 121, 'Edge': 86, 'add': 209, '.': 171, 'next': 172, 'random': 29, '{': 31, '++': 132, 'j': 145, '<': 127, '=': 43, 'int': 15, 'for': 118, 'Size': 17, 'left': 16, 'Receiver': 96, 'Stats': 95, 'Null': 94, '': 2, 'new': 44, 'Mask': 88, 'Type': 87, 'Identity': 85, '/': 63, 'Left': 3, 'Segment': 7, 'Random': 9, 'right': 20, 'build': 8, 'static': 1, 'public': 0}
{'}\n': 68, ';': 32, ')': 12, '': 1, 'request': 11, ',': 29, '(': 6, '.': 21, 'null': 18, '!=': 17, 'if': 14, 'Request': 5}
{'}\n': 88, ';': 34, 'return': 19, '}': 79, 'NUM': 17, '_': 16, 'n': 9, ')': 10, '%': 50, '>': 38, '(': 7, 'while': 35, '<=': 15, 'if': 12, '{': 11, 'int': 8, 'public': 0}
{'}\n': 37, ';': 36, ')': 18, 'File': 16, 'output': 11, ',': 8, 'input': 7, '': 5, 'new': 22, '(': 4, 'process': 3}
{'}\n': 174, ';': 126, 'Dir': 55, 'Conf': 40, 'replicator': 23, ')': 10, '+': 99, 'STR': 60, '_': 59, '(': 31, 'Exception': 95, 'Runtime': 94, 'Server': 93, '': 49, 'new': 48, 'throw': 90, '{': 11, '.': 83, '!': 80, ',': 58, 'Replicator': 53, 'locate': 52, 'File': 50, '=': 47}
{'}\n': 69, ';': 34, 'a': 23, 'return': 66, '}': 65, ')': 17, 'i': 38, '(': 8, 'get': 60, '.': 29, 'l': 16, '=': 24, ']': 4, '[': 3, '{': 18, '++': 50, 'length': 47, '<': 12, 'NUM': 41, '_': 40, 'int': 37, 'for': 35, 'size': 30, 'new': 25, 'final': 9, '>': 15, '': 10, 'List': 11, 'Array': 7, 'as': 5, 'static': 1, 'public': 0}
{'}\n': 182, ';': 27, ')': 6, '(': 5, 'All': 164, 'm_remove': 163, '.': 10, '': 20, 'Submenu': 129, 'm_condition': 128, 'Criterium': 42, 'Not': 49, 'm_insert': 68, 'm_append': 28, 'Or': 29, '{': 7, 'Menu': 3}
{'}\n': 194, ';': 18, ')': 7, 'key': 88, '(': 6, 'get': 66, '.': 65, 'map': 62, ',': 39, '+': 107, 'STR': 106, '_': 15, 'Equals': 174, 'assert': 102, 'exp': 25, ':': 170, 'Integer': 23, '': 9, 'for': 165, 'Empty': 113, 'is': 112, 'missing': 124, 'True': 103, 'Set': 20, 'All': 97, 'remove': 96, '>': 24, '<': 21, 'Hash': 81, 'new': 79, '=': 30, 'Collection': 72, 'extra': 77, 'Map': 54, 'delegate': 64, 'String': 60, '}': 44, 'Store': 13, 'shutdown': 47, '{': 11, 'finally': 45, 'NUM': 16, 'Multithreaded': 35, 'Remove': 34, 'Get': 33, 'Put': 32, 'run': 31, 'try': 27, 'init': 12, 'Exception': 10, 'throws': 8, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 57, ';': 24, ')': 16, '(': 8, 'to': 51, '.': 43, 'result': 20, 'return': 48, 'STR': 38, '_': 37, 'list': 15, ':': 30, 'String': 3, '': 2, 'for': 25, '=': 21, '{': 17, '>': 14, '<': 11, 'List': 10, 'static': 1}
{'}\n': 75, ';': 74, ')': 13, 'listener': 12, '(': 8, 'Listener': 7, 'Notification': 6, 'remove': 5, '.': 67, '{': 38, 'Exception': 19, 'Found': 18, 'Not': 17, '': 9, 'throws': 14, 'void': 4, 'public': 3}
{'}\n': 34, ';': 33, ')': 17, '<': 30, 'size1': 10, '(': 5, '{': 18, 'size2': 16, 'long': 12, 'is': 3, 'public': 0}
{'}\n': 127, '}': 126, ';': 51, ')': 31, 'n': 24, ',': 9, 'aix': 76, 'c': 18, 'NUM': 117, '_': 116, '(': 4, 'arraycopy': 112, '.': 60, 'System': 110, '': 58, 'a': 8, 'Agg': 95, '{': 32, '+=': 90, '++': 87, 'i': 72, 'ru': 30, '<': 83, '*': 79, 'rl': 27, '=': 37, 'int': 20, 'for': 69, 'fill': 61, 'Arrays': 59, 'null': 41, '==': 55, 'agg': 13, 'if': 52, ']': 7, '[': 6, 'double': 5, 'new': 46, ':': 45, '?': 43, '!=': 40, 'm': 21, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 71, ';': 50, ')': 30, 'Backend': 27, 'for': 28, ',': 16, 'modules': 24, 'dirs': 38, '(': 12, 'Wildcards': 11, 'expand': 9, 'return': 58, 'dir': 15, 'add': 53, '.': 52, '>': 8, 'File': 14, '': 2, '<': 4, 'List': 3, 'Array': 42, 'new': 40, '=': 39, '{': 31, 'static': 1, 'public': 0}
{'}\n': 834, ';': 16, ')': 5, '.': 20, '(': 4, '': 12, 'new': 11, '=': 10, 'BOOL': 205, '_': 30, ',': 32, 'NUM': 31, 'null': 195, 'SIZEPOLICY_': 174, 'Constraints': 139, 'Grid': 26, 'GROW': 185, 'CAN_': 175, 'FILL_': 166, 'ANCHOR_': 158, 'add': 129, 'Panel': 9, 'Content': 8, 'my': 7, 'CENTER': 636, 'FIXED': 327, 'set': 21, 'Text': 227, '|': 177, 'SHRINK': 176, 'Button': 212, 'Index': 253, 'Mnemonic': 239, 'Displayed': 251, 'STR': 230, '-': 53, 'Insets': 38, 'Manager': 28, 'Layout': 22, 'JPanel': 13, '{': 6, 'UI$$$': 3, '$$$setup': 2, 'void': 1, 'private': 0}
{'}\n': 231, ';': 60, ')': 59, '(': 7, ',': 205, 'STR': 204, '_': 203, 'format': 201, '.': 161, 'String': 199, '': 11, '{': 20, 'Activity': 118, '=': 35, 'Error': 48, 'Process': 47, 'Info': 75, '>': 51, '<': 45, 'new': 36}
{'}\n': 1376, ';': 1267, 'Arguments': 37, '=': 1358, 'min': 1341, ')': 928, '(': 42, 'add': 1271, '.': 986, '_': 1220, ',': 271, 'is': 1040, '!': 1037, 'Argument': 218, '': 19, '{': 929, 'final': 105, '>': 241, 'public': 0}
{'}\n': 123, ';': 84, ')': 23, '(': 6, 'get': 76, '.': 75, 'Checkpoint': 35, '{': 26, '': 12, 'public': 3}
{'}\n': 94, ';': 29, 'Source': 6, 'data': 67, 'return': 90, ')': 14, 'Copy': 22, 'properties': 13, ',': 85, '(': 10, 'Data': 65, 'H2': 79, 'setup': 78, 'Jdbc': 64, '': 1, 'new': 24, '=': 23, 'Options': 49, 'Pooling': 56, 'reject': 47, 'Unsupported': 48, '}': 46, 'All': 41, 'put': 40, '.': 39, '{': 18, 'null': 34, '!=': 33, 'if': 30, 'Properties': 12, 'SQLException': 17, 'throws': 15, 'create': 7, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 79, ';': 29, 'facta': 33, '*': 64, 'xa': 46, '+': 66, 'factb': 40, 'xb': 56, '-': 59, 'x': 7, '=': 34, 'double': 2, ')': 8, '(': 5, 'Part': 50, 'High': 49, 'NUM': 24, '_': 23, 'final': 31, '}': 30, 'return': 27, '{': 9, '==': 22, '||': 20, 'Infinite': 16, 'is': 15, '.': 14, 'Double': 13, '': 12, 'if': 10, 'to': 3, 'static': 1, 'public': 0}
{'}\n': 135, '}': 134, ';': 103, ')': 56, '': 8, '.': 70, ',': 17, '(': 73, 'Decimal': 27, 'Big': 26, 'is': 71, '{': 57, 'final': 7, 'void': 0}
{'}\n': 18, ';': 17, ')': 7, '(': 4, '.': 12, 'Specifiers': 11, 'm_': 10, 'return': 9, '{': 8, 'protected': 0}
{'}\n': 368, '}': 340, ';': 338, ')': 116, 'format': 19, '(': 5, '.': 267, 'Line': 247, '{': 117, 'if': 122, '...': 27, '': 17, ',': 23, 'String': 18, 'public': 0}
{'}\n': 172, ';': 171, ')': 137, '(': 4, 'get': 161, '.': 160, 'value': 37, ',': 8, 'Tag': 3, 'write': 2, '{': 141, '': 5, 'tag': 7, 'String': 6, 'void': 1, 'public': 0}
{'}\n': 194, ';': 189, 'return': 191, ')': 13, 'port': 11, '(': 4, 'String': 101, '.': 36, 'Integer': 48, '': 1, '=': 46, '{': 17}
{'}\n': 176, ';': 31, ')': 16, 'return': 164, 'm_': 64, '(': 15, '.': 121, 'Filter': 120, 'NUM': 83, '_': 82, '': 1, '{': 20, 'Format': 14, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 609, '}': 608, ';': 73, ')': 30, '(': 8, '.': 52, 'get': 407, '=': 48, '': 16, ',': 292, 'X': 415, 'Y': 408, 'new': 380, 'To': 54, 'Math': 51, 'Proj': 50, 'double': 46, 'Rad': 55, 'deg': 53, '{': 31, 'if': 23, 'void': 1, 'public': 0}
{'}\n': 134, ';': 94, ')': 9, '(': 8, '.': 90, '': 53, ',': 86, 'Cookie': 34, 'new': 67, 'Manager': 35, '=': 20, '{': 10}
{'}\n': 214, ';': 29, 'return': 210, '}': 127, ')': 9, '(': 5, '.': 91, '': 1, 'in': 35, '=': 36, 'line': 88, '{': 31, 'NUM': 108, '_': 107, 'length': 103, 'String': 71, 'file': 8, 'File': 50, 'new': 37, 'Reader': 46, 'Buffered': 39, 'try': 30, 'parse': 3, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, '(': 5, 'suite': 4, 'return': 11, '{': 10, 'Test': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 11, 'STR': 18, '_': 17, '(': 3, '.': 14, '{': 12, 'o': 10, 'Object': 9, '': 4, ',': 7, 'public': 0}
{'}\n': 40, ';': 39, ')': 20, '(': 3, 'Image': 17, 'get': 34, '.': 33, 'ii': 19, ',': 6, 'ln': 8, 'lt': 5, 'this': 22, '{': 21, 'Icon': 18, '': 1, 'double': 4, 'OMRaster': 2, 'public': 0}
{'}\n': 136, ';': 37, '_': 132, ')': 6, '(': 5, 'Elements': 98, '.': 53, 'running': 69, 'Element': 55, 'Thread': 44, 'Resource': 43, '': 42, '=': 46, 't': 45, '{': 7, 'synchronized': 1}
{'}\n': 51, '}': 50, ';': 23, ')': 10, '(': 4, '{': 11, 'STR': 29, '_': 28, 'name': 14, 'if': 24, 'Name': 20, 'Property': 6, 'get': 18, '.': 17, 'evt': 9, '=': 15, 'String': 13, '': 5, 'Event': 8, 'Change': 3, 'property': 2, 'void': 1}
{'}\n': 28, ';': 27, ')': 13, 'null': 25, 'object2': 12, '(': 5, '.': 19, 'object1': 8, '{': 14, '': 6, ',': 9, 'static': 1, 'public': 0}
{'}\n': 161, ';': 155, 'sql': 59, 'return': 158, 'STR': 95, '_': 94, ')': 70, '(': 31, 'With': 92, '.': 90, 'if': 80, '{': 71, 'String': 2, '': 1, 'SQL': 4, 'format': 3}
{'}\n': 46, ';': 45, 'child': 8, '(': 5, 'add': 40, '.': 14, 'View': 7, ')': 10, 'get': 23, '_': 17, ',': 19, '{': 11, '': 6, 'void': 1, 'public': 0}
{'}\n': 57, ';': 56, ')': 18, 'Acceptor': 54, ',': 42, '(': 4, 'List': 6, 'empty': 48, '.': 30, 'Collections': 46, '': 5, 'projects': 11, 'STR': 39, '_': 38, 'File': 9, 'new': 34, 'as': 31, 'Arrays': 29, 'Projects': 3, 'compile': 2, '{': 24, 'Exception': 23, 'JSCompile': 22, 'N4': 21, 'throws': 19, '>': 10, '<': 7, 'void': 1, 'public': 0}
{'}\n': 112, ';': 32, ')': 18, ',': 10, 'STR': 56, '_': 55, '(': 4, 'String': 96, 'get': 102, '.': 12, 'resources': 47, 'to': 95, 'p_window': 9, '': 5, 'append': 61, 'Resources': 46, 'Gui': 45, 'new': 51, 'r_board': 49, '=': 28, 'return': 42, 'Empty': 38, 'is': 37, 'if': 33, '>': 26, 'Item': 25, 'Brd': 24, '<': 22, 'Collection': 21, '{': 19, 'p_locale': 17, 'Locale': 16, 'util': 13, 'java': 11, 'Panel': 8, 'Info': 7, 'Object': 6, 'void': 2, 'final': 1, 'protected': 0}
{'}\n': 154, ';': 38, 'this': 51, 'return': 151, '}': 110, ')': 7, 'Callbacks': 37, 'always': 46, '(': 4, 'Always': 43, 'All': 135, 'trigger': 134, '{': 24, 'NUM': 121, '_': 5, '>': 17, 'size': 116, '.': 86, '||': 122, 'if': 111, 'clear': 105, 'clone': 87, 'm': 61, '=': 63, 'STR': 6, 'Changed': 70, 'State': 57, 'print': 68, 'STATE_': 65, '': 1, 'Pending': 56, 'In': 55, 'validate': 54, 'synchronized': 49, 'Callback': 30, '<': 11, 'List': 26, 'Progress': 16, ',': 14, 'Result': 13, 'Promise': 10, 'public': 8, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 166, ';': 61, 'snapshot': 58, ')': 25, '.': 51, '(': 55, '': 5, '{': 26, 'Client': 22, 'db': 23, 'Db': 21, ',': 14, 'Snapshot': 7, 'Block': 6}
{'}\n': 77, ';': 76, ')': 35, '(': 16, '.': 41, 'props': 30, 'Properties': 26, '': 6, 'public': 0}
{'}\n': 193, ';': 71, 'count': 84, 'return': 79, '++': 111, ')': 16, 'len': 3, '<': 107, 'last': 90, '||': 157, 'Empty': 15, 'ignore': 14, '!': 154, '(': 4, 'if': 72, '}': 175, 'NUM': 77, '_': 76, '+': 168, 'i': 101, '=': 62, '{': 17, '==': 75, 'At': 119, 'char': 118, '.': 66, 'list': 7, 'int': 2, 'for': 98, 'length': 67, 'Util': 65, 'String': 6, '': 5, 'boolean': 13, ',': 8, 'delimiter': 11, 'static': 1, 'public': 0}
{'}\n': 110, '}': 100, ';': 27, ')': 12, '(': 25, 'unlock': 105, '.': 29, 'rq': 17, '{': 13, 'finally': 101, 'Now': 96, 'flush': 95, 'p': 9, 'Long': 87, 'put': 76, 'buf': 51, 'DISPOSE_': 80, '': 14, 'Int': 77, 'NUM': 68, '_': 67, ',': 69, 'Alignment': 65, 'And': 64, 'Capacity': 63, 'ensure': 62, 'Buffer': 50, 'get': 23, '=': 18, 'Render': 49, 'try': 34, 'lock': 30, 'Instance': 24, 'Queue': 16, 'Info': 11, 'Config': 10, 'long': 8, 'dispose': 2, 'void': 1, 'static': 0}
{'}\n': 272, ';': 14, ')': 4, 'NUM': 139, '_': 33, '(': 3, 'Program': 17, 'Use': 16, 'gl': 6, ',': 32, 'EXT': 91, 'FRAMEBUFFER_': 95, 'GL_': 10, '': 9, 'Framebuffer': 90, 'Bind': 89, 'BUFFER': 124, 'ARRAY_': 123, 'Buffer': 42, 'Array': 136, 'Attrib': 135, 'Vertex': 134, 'Disable': 218, 'Vertices': 214, 'num': 213, 'TRIANGLES': 208, 'Arrays': 204, 'Draw': 203, 'Offset': 199, 'normals': 198, 'BOOL': 34, 'FLOAT': 155, 'Pointer': 145, 'Enable': 7, 'Vbo': 129, 'cube': 128, '.': 20, 'this': 19, 'BIT': 108, 'BUFFER_': 107, 'DEPTH_': 11, '|': 109, 'COLOR_': 106, 'Clear': 102, 'fbo': 98, 'matrix': 41, 'get': 39, 'Matrix': 30, 'normal': 21, 'Uniform': 26, 'Matrix3fv': 69, 'proj': 50, 'Matrix4fv': 27, 'view': 29, 'TEST': 12, '{': 5, 'Normal': 2, 'render': 1, 'void': 0}
{'}\n': 78, ';': 47, ')': 30, '(': 17, 'get': 66, 'resources': 38, 'NUM': 61, '_': 60, 'size': 56, '.': 55, 'null': 52, 'clazz': 29, ',': 22, 'type': 21, '=': 39, '>': 7, 'T': 3, '': 2, '<': 1, 'List': 33, '{': 31, 'Class': 24, 'Type': 20, 'CWLResource': 6, 'For': 15, 'look': 14, 'extends': 4, 'private': 0}
{'}\n': 138, ';': 137, ')': 15, '(': 12, 'decrement': 8, '.': 80, 'return': 17, '{': 16, 'int': 7}
{'}\n': 60, ';': 23, 'result': 7, 'return': 57, '}': 56, ')': 4, '(': 3, '.': 25, '+=': 48, 'next': 43, 'it': 18, '=': 8, '': 33, '{': 5, 'Next': 27, 'has': 26, 'iterator': 20, 'int': 0}
{'}\n': 88, ';': 45, ')': 25, ',': 60, 'max': 10, '(': 5, 'min': 7, '': 1, '.': 54, 'Math': 53, '=': 19, 'double': 6}
{'}\n': 69, ';': 28, ')': 13, '(': 8, 'read': 6, '.': 23, 'String': 25, 'in': 12, '=': 21, '{': 17, 'IOException': 16, '': 9, 'throws': 14, 'Input': 11, 'Stream': 10, 'From': 7, 'public': 0}
{'}\n': 223, ';': 222, ')': 10, 'datatype': 9, '(': 6, '.': 202, 'return': 12, '{': 11, '': 7, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 27, ';': 19, ')': 8, 'c': 7, '(': 4, '.': 21, 'NUM': 17, '_': 16, '{': 9}
{'}\n': 69, '}': 68, ';': 67, '.': 59, '{': 15, ')': 14, 'foreign': 26, '(': 8, 'if': 24, 'void': 1, 'public': 0}
{'}\n': 212, '}': 183, ')': 46, '(': 29, '.': 75, '{': 91, ';': 172, 'file': 41, 'Exit': 17, 'On': 16, '': 34, 'Delete': 15}
{'}\n': 44, ';': 18, ')': 9, '(': 4, 'unlock': 40, '.': 14, 'Lock': 13, 'Set': 12, 'write': 11, 'value': 8, ',': 31, 'Pair': 28, 'Value': 27, 'Timestamp': 26, '': 25, 'lock': 15, '{': 10, ']': 7, '[': 6, 'byte': 5, 'Written': 3, 'void': 1, 'public': 0}
{'}\n': 66, ';': 45, ')': 7, '(': 3, 'Id': 61, 'get': 36, '.': 35, 'unit': 6, 'Element': 56, 'add': 55, '}': 46, 'STR': 32, '_': 31, '+': 33, 'Name': 38, 'Short': 37, 'Exception': 12, 'Argument': 11, 'Illegal': 10, '': 4, 'new': 25, 'throw': 24, '{': 13, 'Load': 18, 'can': 17, '!': 16, 'if': 14, 'throws': 8, 'Entity': 5, 'load': 2, 'void': 1, 'public': 0}
{'}\n': 152, '}': 101, ';': 24, ')': 4, 'trailer': 125, '(': 3, 'write': 71, '.': 13, 'out': 87, 'NUM': 45, '_': 44, ',': 43, 'Trailer': 72, ']': 124, 'SIZE': 68, 'TRAILER_': 67, '': 6, '[': 123, 'byte': 122, 'new': 127, '=': 37, 'len': 36, 'buf': 42, '>': 105, 'if': 9, 'return': 99, '+': 82, '{': 8, '-': 65, 'length': 49, '<=': 61, '&&': 59, 'finished': 14, 'def': 12, 'deflate': 40, 'int': 35, '!': 11, 'while': 25, 'finish': 2, 'IOException': 7, 'throws': 5, 'void': 1, 'public': 0}
{'}\n': 91, ';': 63, 'BOOL': 87, '_': 75, 'return': 85, 'Free': 48, 'is': 47, ')': 7, 'NUM': 76, '+': 74, 'top': 12, ',': 58, '(': 3, 'Set': 55, 'And': 54, 'compare': 53, '.': 29, 'obj': 6, 'null': 59, 'Stack': 51, '_free': 50, '=': 14, 'boolean': 1, '{': 8, '_top': 15, 'T': 5, '': 4, 'free': 2, 'public': 0}
{'}\n': 38, ';': 32, 'null': 36, 'binding': 34, 'return': 33, ')': 16, 'key': 15, 'Binding': 4, 'get': 25, '=': 24, '>': 14, '<': 12, '': 6, '{': 17, 'Key': 11}
{'}\n': 152, '}': 122, ';': 30, ')': 14, 'e': 127, ',': 143, 'Name': 13, 'service': 12, 'STR': 142, '_': 141, '(': 23, 'format': 139, '.': 21, 'String': 11, '': 1, '{': 129, 'Exception': 126, 'catch': 123, 'orm': 37, 'Replicator': 35, 'new': 39, '=': 38, 'Manager': 36, 'Open': 34, 'private': 0}
{'}\n': 29, ';': 28, ')': 14, 'dir': 13, '': 11, '(': 10, 'static': 1, 'public': 0}
{'}\n': 448, '}': 447, ';': 144, ')': 15, 'Name': 9, 'service': 7, '(': 4, 'remove': 359, '.': 21, 'Cache': 173, '{': 16, 'synchronized': 159, 'STR': 34, '_': 33, '+': 35, 'message': 22, 'Enabled': 23, 'if': 17, 'String': 6, '': 5}
{'}\n': 633, ';': 127, 'start': 301, 'i': 56, '{': 35, ')': 34, ']': 234, '[': 232, '(': 26, 'equals': 489, '.': 488, 'if': 36, 'NUM': 126, '_': 125, 'end': 85, '=': 57, 'int': 55, 'for': 53, 'else': 326, '}': 323, '': 31}
{'}\n': 44, ';': 28, ')': 11, ',': 8, 'val': 10, 'addr': 7, '(': 5, 'Byte': 33, 'By': 32, 'Short': 4, 'put': 3, 'else': 29, '.': 20, 'UNSAFE': 19, '': 15, 'UNALIGNED': 16, 'if': 13, '{': 12, 'short': 9, 'long': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 53, ';': 29, ')': 18, '(': 7, 'digest': 23, '.': 31, 'return': 41, 'length': 17, ',': 12, 'offset': 14, 'input': 11, 'update': 32, 'Digest': 22, 'new': 25, '=': 24, 'Message': 21, '': 20, '{': 19, 'int': 13, ']': 4, '[': 3, 'byte': 2, 'hash': 5, 'static': 1, 'public': 0}
{'}\n': 55, ';': 27, ')': 13, '(': 4, 'close': 51, '.': 35, 'get': 36, '': 1, '=': 32, 'scan': 10, '{': 17, ',': 8, 'public': 0}
{'}\n': 381, ';': 26, 'ca5': 23, 'return': 378, '}': 139, ']': 3, 'j': 38, '[': 2, 'ca4': 12, '=': 24, 'i': 35, ')': 18, '++': 97, ',': 13, 'length': 59, '.': 58, '<': 91, '(': 7, 'for': 83, 'STR': 136, '_': 66, 'k': 322, 'Blanks': 43, 'n': 42, 'NUM': 67, 'int': 34, '{': 19, '==': 298, 'if': 27, '+': 78, 'char': 1, 'new': 72, '>': 65, '-': 56, 'Width': 30, 'field': 29, 'Zeros': 146, 'leading': 145, 'else': 141, 'Digits': 17, 'no': 16, '||': 147, '!': 144, 'Justify': 48, 'left': 47, 'Set': 31, 'boolean': 15, 'Padding': 6, 'Float': 5, 'apply': 4, 'private': 0}
{'}\n': 331, ';': 45, '}': 154, ')': 22, '(': 17, 'List': 83, 'unmodifiable': 82, '.': 81, 'Collections': 80, '': 79, '=': 38, '{': 23, 'null': 176, '!=': 175, 'authn': 60, '_': 39, 'Immutable': 6, 'make': 5, 'void': 4, 'public': 3}
{'}\n': 211, ';': 109, 'return': 202, '}': 110, ')': 41, '(': 25, '.': 186, '{': 62, 'null': 129, '!=': 128, '=': 77, 'loaders': 53, 'Loader': 34, '': 19, 'public': 3}
{'}\n': 22, ';': 21, ')': 12, 'listener': 11, '(': 5, '.': 16, 'Listeners': 15, 'component': 14, '{': 13, 'Listener': 4, 'Update': 9, 'Component': 3, '': 7, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 60, '}': 59, ';': 36, 'null': 57, 'return': 32, ':': 31, 'default': 54, '': 33, 'NUM': 30, '_': 2, 'case': 28, '{': 13, ')': 12, 'Id': 7, 'field': 10, '(': 8, 'switch': 14, 'int': 9, 'Thrift': 6, 'By': 5, 'find': 4, 'Fields': 3, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, 'NUM': 24, '_': 23, '==': 14, ')': 10, '(': 5, 'length': 19, '.': 18, 'text': 9, '||': 16, 'null': 15, 'return': 12, '{': 11, '': 6, 'Empty': 4, 'is': 3, 'boolean': 2}
{'}\n': 297, ';': 72, 'Data': 288, 'actual': 287, ')': 71, '.': 51, ',': 107, 'NUM': 227, '_': 173, 'expected': 121, '(': 47, 'Ganglia': 83, '': 9, 'new': 81, '=': 80, 'final': 8, 'IGanglia': 10, 'Message': 12, 'decl': 13, 'Metadata': 11}
{'}\n': 33, ';': 32, ')': 8, '(': 4, '&&': 21, 'NUM': 19, '_': 18, 'length': 14, '.': 13, 'term': 7, 'return': 10, '{': 9, 'String': 6, '': 5, 'is': 2, 'boolean': 1}
{'}\n': 340, '}': 209, '{': 22, ')': 21, 't': 335, '': 5, '(': 4, 'catch': 314, ';': 39, 'close': 297, '.': 47, 'Socket': 46, 'my': 45, 'try': 23, 'ioe': 318, 'IOException': 317, 'data': 20, 'null': 29, '!=': 83, 'if': 25, 'out': 43, 'flush': 221, 'read': 251, ',': 8, 'NUM': 260, '_': 36, 'buff': 235, 'write': 277, 'break': 273, '<=': 269, '=': 44, 'int': 250, 'while': 156, ']': 234, '[': 233, 'byte': 232, 'new': 32, 'pw': 57, 'STR': 37, 'print': 69, '+': 73, 'value': 184, 'key': 169, 'Property': 108, 'get': 48, 'header': 15, 'String': 6, 'Element': 178, 'next': 177, 'e': 148, 'Elements': 162, 'More': 161, 'has': 160, 'keys': 152, 'Enumeration': 147, 'Date': 130, 'format': 126, 'Frmt': 124, 'gmt': 123, '==': 28, '||': 104, 'mime': 11, 'status': 7, 'Writer': 56, 'Print': 55, 'Stream': 19, 'Output': 41, 'Error': 34, 'throw': 31, 'Input': 18, 'Properties': 14, 'Response': 3, 'send': 2, 'void': 1, 'private': 0}
{'}\n': 257, ';': 41, '_': 35, 'return': 180, '}': 59, ')': 21, 'e': 66, ',': 37, 'STR': 36, '+': 89, '(': 19, 'error': 85, '.': 52, 'debug': 71, 'Instance': 77, 'get': 76, 'Debug': 70, '': 25, '=': 29, '{': 22, 'Exception': 65, 'Security': 64, 'catch': 61, 'isp': 28, 'Permission': 27, 'check': 53, 'Manager': 45, 'security': 44, 'null': 47, '!=': 46, 'if': 42, 'ISSecurity': 26, 'new': 30, 'try': 23, 'static': 1}
{'}\n': 63, '}': 44, ';': 28, 'e': 51, 'throw': 59, ')': 7, 'shutdown': 57, '!': 56, '(': 6, 'if': 13, '{': 12, 'Exception': 11, 'Interrupted': 10, '': 9, 'catch': 46, 'wait': 2, '.': 39, 'Waiting': 16, 'mutex': 15, 'synchronized': 31, 'try': 29, 'Object': 25, 'new': 23, '=': 22, 'null': 18, '==': 17, 'throws': 8, 'Signal': 5, 'Shutdown': 4, 'For': 3, 'void': 1, 'protected': 0}
{'}\n': 113, ';': 26, ')': 8, 'connection': 7, '+': 109, 'STR': 24, '_': 23, ',': 106, '(': 4, 'trace': 102, 'TRACE': 100, '': 5, 'if': 10, '.': 63, 'new': 17, 'connections': 66, 'Exception': 21, 'Argument': 20, 'Illegal': 19, 'throw': 16, 'null': 14, '==': 13, '{': 9, 'Connection': 3, 'void': 1, 'public': 0}
{'}\n': 73, ';': 72, ')': 8, '.': 53, 'pt': 7, '-': 47, '(': 3, '{': 9, '': 4}
{'}\n': 53, ';': 41, ')': 24, 'trim': 22, '(': 6, '.': 46, 'return': 38, '}': 42, '{': 37, '==': 33, 'if': 26, 'int': 11, ',': 10, 'value': 9, '': 7}
{'}\n': 47, ';': 46, ')': 18, '(': 42, '>': 7, 'T': 6, '': 1, '<': 4, 'Iterable': 3, '{': 19, 'public': 0}
{'}\n': 42, ';': 31, ')': 21, '(': 5, 'Step': 38, 'After': 37, 'wait': 36, '.': 25, 'Ctrl': 34, 'Pane': 33, 'sim': 32, 'null': 29, 'Later': 27, 'run': 26, 'Platform': 24, '': 16, '{': 22, 'View': 4, 'State': 3, 'update': 2, 'void': 1, 'private': 0}
{'}\n': 104, ';': 102, ')': 60, '(': 47, '.': 96, 'address': 77, 'return': 75, '{': 61, 'port': 23, 'int': 17, 'public': 3}
{'}\n': 95, '}': 89, ';': 46, ')': 13, '(': 12, '.': 41, 'file': 61, 'if': 47, '{': 14, 'files': 37, ':': 62, 'File': 34, '': 1, 'for': 57, 'null': 51, 'Files': 43, 'list': 42, 'Directory': 40, 'cache': 39, '=': 38, ']': 36, '[': 35, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 22, ';': 21, 'system': 8, '=': 14, '.': 12, 'this': 11, '{': 10, ')': 9, 'System': 7, 'Dialogue': 6, '': 1, '(': 4, 'public': 0}
{'}\n': 340, '}': 73, ';': 130, ')': 22, '(': 7, 'close': 335, '.': 79, '{': 23, '!=': 109, 'if': 75, '=': 38, 'try': 237, '+': 227, '_': 87, '': 8, ',': 12, ']': 163, '[': 162, 'String': 161, 'new': 159, 'URI': 148, 'CONTENT_': 147, 'query': 140, 'Cursor': 135, 'return': 131, 'STR': 128, 'TAG': 125, 'd': 122, 'Log': 120, 'GRANTED': 116, 'PERMISSION_': 115, 'Manager': 112, 'Package': 111, 'CALENDAR': 107, 'READ_': 106, 'permission': 103, 'Manifest': 101, 'context': 98, 'Permission': 96, 'Self': 95, 'check': 94, 'Compat': 92, 'Context': 91, '&&': 89, 'NUM': 88, '>=': 86, 'INT': 85, 'SDK_': 84, 'VERSION': 81, 'Build': 78, 'Resolver': 10, 'Content': 9, 'static': 1, 'private': 0}
{'}\n': 45, ';': 44, ')': 27, '(': 14, 'Exec': 40, 'get': 39, ',': 38, 'null': 37, 'Async': 35, 'supply': 34, '.': 33, 'Future': 6, 'Completable': 5, '': 1, 'return': 29, '{': 28, 'fn': 26, '>': 11, 'T': 24, 'super': 22, '?': 21, '<': 7, 'Function': 19, 'Double': 10, 'To': 17, 'final': 15, 'Optional': 9, 'default': 3, 'Override': 2, '@': 0}
{'}\n': 91, ';': 16, 'BOOL': 89, '_': 71, 'return': 87, ')': 10, 'State': 3, 'new': 8, ',': 67, 'state': 15, '(': 4, 'Listeners': 79, 'notify': 78, '}': 44, '_name': 74, '+': 70, 'STR': 72, 'Level': 57, '_low': 56, 'log': 63, '.': 38, '_log': 47, '{': 11, 'Loggable': 54, 'is': 53, '&&': 50, 'null': 49, '!=': 48, 'if': 45, 'Time': 33, 'current': 39, 'Current': 36, '': 5, '=': 23, 'Change': 32, '_last': 31, '_state': 24, 'this': 19, 'synchronized': 17, 'Lifecycle': 6, 'to': 2, 'boolean': 1, 'private': 0}
{'}\n': 634, ';': 14, 'Fields': 384, 'has': 383, 'return': 630, ')': 5, '(': 4, 'dispose': 626, 'else': 321, '}': 472, 'gbc': 15, ',': 96, 'NUM': 32, '_': 31, 'Strut': 91, 'Horizontal': 602, 'create': 89, '.': 8, 'Box': 87, '': 19, 'add': 84, 'Panel': 82, 'center': 81, '=': 18, 'gridx': 50, 'Vertical': 90, '++': 46, 'm_line': 45, 'gridy': 43, '{': 6, 'if': 126, 'STR': 124, 'SEVERE': 548, 'Level': 545, 'log': 540, 'size': 501, 'Editors2': 534, 'm_v': 519, '!=': 504, 'Fields2': 506, 'm_m': 498, '||': 511, 'Editors': 520, 'e': 477, 'SQLException': 476, 'catch': 473, 'rs': 429, 'Field': 454, 'BOOL': 387, 'next': 442, 'while': 438, 'Query': 434, 'execute': 433, 'pstmt': 394, 'ID': 159, 'Process_': 420, 'AD_': 157, 'get': 107, 'Info': 416, 'm_process': 415, 'Int': 410, 'set': 409, 'null': 66, 'sql': 261, 'Statement': 400, 'prepare': 399, 'DB': 397, 'boolean': 1, '+': 141, 'ASPFilter': 121, 'Ctx': 113, 'Env': 110, 'Language': 272, 'Base': 271, 'is': 130, 'String': 119, 'Client_': 158, 'client': 102, 'ASP': 132, 'Use': 131, 'MClient': 101, 'HORIZONTAL': 79, 'Constraints': 22, 'Bag': 21, 'Grid': 20, 'fill': 71, 'Inset': 67, 'insets': 64, 'gridwidth': 57, 'weighty': 36, 'weightx': 29, 'NORTHWEST': 25, 'anchor': 17, 'init': 2, 'public': 0}
{'}\n': 82, ';': 30, ')': 15, '(': 9, 'String': 5, 'to': 77, '.': 32, 'message': 20, 'return': 74, 'NUM': 28, '_': 27, ',': 50, 'utc': 68, 'date': 6, 'char': 64, 'append': 33, 'month': 53, 'STR': 36, 'Buffer': 19, '': 1, 'new': 22, '=': 21, '{': 16, 'Data': 13, 'Time': 12, 'Date': 11, 'To': 7, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 46, ';': 34, ')': 9, 'new': 24, '(': 4, 'add': 40, '.': 39, 'List': 15, 'm_': 36, '}': 35, '>': 31, 'Test': 3, '': 5, '<': 28, '=': 23, 'Rule': 14, 'private': 0}
{'}\n': 1234, '}': 343, ';': 199, ')': 255, '/': 314, 'x': 521, '*': 272, '(': 4, 'return': 336, 't': 497, 'NUM': 72, '_': 71, '+': 269, 's': 425, '=': 70, '{': 280, '-': 91, 'e': 916, 'exp': 305, '.': 304, 'Math': 303, '': 302, 'w': 1128, '<=': 295, 'sign_u': 950, 'u': 932, 'c': 676, 'if': 242, 'q': 786, 'e1': 165, 'e2': 170, 'e3': 175, 'e4': 180, 'e5': 185, 'e6': 190, 'e7': 1152, 'else': 344, '>': 492, 'continue': 1118, 'v': 762, 'a1': 116, 'a2': 121, 'a3': 127, 'a4': 132, 'a5': 138, 'a6': 143, 'a7': 149, 'a8': 154, 'a9': 160, 'q0': 596, 'log': 310, 'ss': 418, 'abs': 777, 'while': 489, 'si': 671, 'b': 265, ':': 961, '?': 958, 'random': 285, 'do': 446, 'gds': 300, 'r': 589, 'q1': 69, 'q2': 74, 'q3': 79, 'q4': 84, 'q5': 89, 'q6': 95, 'q7': 100, 'q8': 105, 'q9': 111, '!=': 410, 'd': 435, '>=': 539, 'v12': 515, 'sqrt': 430, 'v1': 499, 'p': 281, 'double': 1, ',': 7, 'next': 2, 'public': 0}
{'}\n': 60, ';': 24, ')': 9, ',': 6, 'j': 8, '(': 3, 'set': 47, '.': 19, 'list': 18, '{': 10, 'int': 4, 'i': 5, 'swap': 2, 'void': 1, 'public': 0}
{'}\n': 310, ';': 182, 'return': 307, '}': 306, ')': 115, '(': 60, '.': 206, 'get': 286, ',': 70, 'Pair': 28, 'Value': 27, 'Name': 26, '': 22, 'new': 255, 'String': 100, '>': 29, '<': 24, 'List': 23}
{'}\n': 95, '}': 78, ';': 58, ')': 33, 'self': 19, '(': 16, 'Warning': 89, 'With': 88, 'close': 71, '{': 45, 'finally': 79, 'result': 50, 'return': 75, '.': 31, 'temp': 61, 'null': 67, '=': 27, 'Closeable': 10, '': 3, 'call': 54, 'action': 40, 'T': 4, 'try': 46, 'throws': 42, '>': 11, '<': 2, 'Closure': 23, 'class': 32, 'Param': 30, 'First': 29, 'value': 26, 'Params': 24, '@': 21, ',': 5, 'U': 7, 'with': 14, 'extends': 8, 'static': 1, 'public': 0}
{'}\n': 87, ';': 49, 'matched': 85, '_': 77, '{': 20, ')': 19, '(': 5, 'if': 52, '.': 35, '=': 33, '': 6, ',': 10, 'static': 1}
{'}\n': 151, ';': 39, ')': 27, ',': 83, 'groups': 15, 'Map': 31, 'Load': 81, 'queue': 132, '(': 5, 'location': 9, 'connection': 80, '.': 32, 'Group': 30, 'server': 29, ']': 14, '[': 13, 'String': 12, '': 6, 'Location': 8, 'Server': 4, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 10, '(': 4, 'add': 2, '.': 13, '_leaves': 12, '{': 11, 'leaf': 9, 'Leaf': 3, 'Tree': 7, 'Catalog': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 138, ';': 30, ')': 15, '(': 7, '.': 63, '': 23, ',': 10, ']': 50, 'SIDX': 112, '[': 49, 'pieces': 51, 'IIDX': 106, 'HIDX': 100, 'DIDX': 94, 'MIDX': 88, 'YIDX': 82, 'tstamp': 9, 'Bits': 65, 'unpack': 64, 'Time': 62, 'Component': 61, 'NUMIDX': 57, 'int': 48, 'new': 53, '=': 52, '{': 16, 'long': 8, 'static': 1}
{'}\n': 27, ';': 26, ')': 11, '(': 6, 'Int': 21, 'parse': 20, '.': 19, 'Integer': 18, '': 1, 'Length': 5, 'content': 4, 'return': 13, '{': 12, 'String': 9, 'final': 7, 'Request': 3, 'Http': 2, 'public': 0}
{'}\n': 76, ';': 36, ')': 19, 'param': 13, '(': 8, 'Request': 70, 'post': 69, 'String': 16, 'to': 63, '.': 39, 'Bld': 25, 'url': 24, '=': 26, '_url': 58, 'ACTION': 55, 'MODIFY_': 54, 'LUN_': 53, 'URL_': 33, '': 1, 'append': 40, 'Id': 18, 'resource': 17, 'RESOURCE': 34, 'Builder': 23, 'new': 27, '{': 20, ',': 14, 'Param': 12, 'Modify': 11, 'Lun': 6, 'modify': 5, 'Command': 3, 'VNXe': 2, 'public': 0}
{'}\n': 200, ';': 33, ')': 14, '(': 4, 'String': 2, 'to': 60, '.': 59, 'return': 85, '-': 81, 'count': 187, ',': 9, '+': 136, 'offset': 135, 'value': 133, 'append': 131, 'NUM': 74, '_': 30, '!=': 171, 'Of': 69, 'index': 68, '=': 57, 'while': 158, '}': 34, '{': 15, 'do': 127, 'int': 65, 'Builder': 101, '': 1, 'new': 24, 'replacement': 13, 'this': 86, '==': 19, 'if': 16, 'target': 8, 'STR': 31, 'Exception': 28, 'Pointer': 27, 'Null': 26, 'throw': 23, 'null': 20, 'Sequence': 7, 'Char': 6, 'replace': 3, 'public': 0}
{'}\n': 145, ';': 37, ')': 8, '.': 76, 'Concept': 30, '(': 4, '': 5, 'String': 107, '<': 105, 'Hash': 103, 'new': 61, '{': 9, 'public': 0}
{'}\n': 78, ';': 46, ')': 23, '(': 37, '.': 61, '': 14, '=': 53, '_': 38, 'Tracker': 29, 'new': 32, 'Analytics': 4, '{': 24, 'final': 18, ',': 12, 'String': 15, 'Google': 3, 'public': 0}
{'}\n': 30, ';': 28, ')': 7, 'song': 6, '(': 3, '{': 8, 'Song': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 148, ';': 59, ')': 36, ']': 144, '(': 10, 'size': 141, '.': 86, 'result': 46, '[': 138, 'Element': 24, 'Psi': 6, '': 1, 'new': 48, 'Array': 50, 'to': 131, 'Query': 7, 'return': 123, '}': 120, 'add': 115, '{': 37, 'Name': 107, 'get': 106, 'equals': 102, 'name': 35, 'if': 98, 'clazz': 26, ',': 27, 'Type': 90, 'Of': 89, 'Children': 88, 'find': 87, 'Util': 85, 'Tree': 84, ':': 67, 'Named': 23, 'final': 15, 'for': 60, 'Elements': 70, 'my': 68, 'element': 66, '>': 25, '<': 18, 'List': 40, '=': 47, 'String': 34, 'Null': 3, 'Not': 2, '@': 0, 'extends': 20, '?': 19, 'Class': 17, 'public': 4}
{'}\n': 25, ';': 24, ')': 10, '(': 6, 'Code': 16, 'hash': 15, 'return': 12, '{': 11, 'o': 9, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 281, ';': 65, ')': 14, '(': 21, '.': 19, '}': 242, 'add': 263, 'Index': 82, 'end': 87, '=': 17, 'start': 252, '{': 15, 'if': 213, '': 1, 'text': 13, 'NUM': 133, '_': 132, '==': 130, 'new': 55, 'String': 51}
{'}\n': 79, ';': 32, 'return': 76, ')': 31, 'Index': 8, 'start': 7, 'end': 11, '(': 25, '.': 48, 'NUM': 44, '_': 43, ',': 9, '=': 22, 'int': 6, 'public': 0}
{'}\n': 43, ';': 42, ')': 16, 'permission': 15, '(': 6, 'singleton': 37, '.': 30, 'Collections': 35, '': 7, ',': 10, 'Change': 29, 'Permission': 4, 'path': 9, 'Recursive': 5, 'Permissions': 22, 'change': 21, '{': 20, 'IOException': 19, 'throws': 17, 'File': 13, 'Posix': 12, 'Path': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 43, '}': 33, '{': 7, ')': 6, 'e': 38, 'Exception': 37, '': 23, '(': 5, 'catch': 34, ';': 20, 'sleep': 26, '.': 25, 'Thread': 24, 'try': 21, 'while': 8}
{'}\n': 239, ';': 47, ')': 5, '(': 4, 'signum': 234, '.': 154, 'result': 150, ',': 17, 'NUM': 16, '_': 15, 'STR': 227, 'Equals': 224, 'assert': 206, '}': 46, ']': 11, 'i': 190, '[': 10, 'Bytes': 9, 'r': 170, '==': 214, 'res': 162, 'True': 207, '{': 6, '++': 203, 'length': 173, '<': 196, '=': 12, 'int': 189, 'for': 187, 'Array': 183, 'Byte': 182, 'to': 181, 'byte': 7, 'new': 117, 'Number': 115, 'b': 49, 'a': 8, 'Integer': 113, 'Big': 112, '': 111, 'Sign': 123, '-': 14, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 251, ';': 250, ')': 28, ',': 50, '(': 44, '.': 127, 'action': 20, 'Presentation': 129, 'get': 128, 'presentation': 124, 'Manager': 52, 'Action': 8, '': 7, 'new': 35, '{': 29}
{'}\n': 124, ';': 34, ')': 16, '(': 6, 'find': 41, '.': 28, 'Matcher': 19, 'Ref': 21, 'matcher': 29, '=': 23, '': 7, '{': 17, 'String': 8, 'static': 1}
{'}\n': 18, ')': 16, '(': 15, 'Weights': 14, 'public': 0}
{'}\n': 105, ';': 99, 'return': 101, '}': 100, ')': 21, '_': 38, '.': 68, 'Name': 13, 'file': 49, '(': 5, '=': 51, 'STR': 39, 'String': 11, '': 10, 'File': 3, 'private': 0}
{'}\n': 22, ';': 21, ')': 8, 'length': 19, '.': 18, 'bytes': 7, ',': 13, 'NUM': 15, '_': 14, '(': 3, '{': 9, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 25, ';': 24, ')': 11, '(': 7, 'On': 5, 'Size': 10, 'Real': 15, 'get': 14, 'return': 13, '{': 12, 'update': 9, 'long': 8, 'Space': 4, 'enough': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 120, 'Value': 40, ',': 11, '(': 6, '}': 89, ';': 56, 'old': 39, 'if': 59, ')': 16, '.': 49, 'String': 13, '': 7, '{': 21}
{'}\n': 84, '}': 83, ';': 48, ')': 16, 'support': 15, ',': 11, 'node': 50, '(': 7, 'Order': 6, 'Doc': 5, 'In': 4, 'Node': 66, 'add': 2, '{': 17, 'next': 65, '.': 31, 'iterator': 10, '=': 62, '!=': 59, 'while': 52, 'null': 45, 'MUTABLE': 43, 'NOT_': 42, 'ER_': 40, '': 8, 'Resources': 37, 'XPATHError': 36, 'XPATHMessage': 33, 'create': 32, 'XSLMessages': 30, 'Exception': 27, 'Runtime': 26, 'new': 24, 'throw': 23, 'm_mutable': 21, '!': 20, 'if': 18, 'Context': 14, 'XPath': 13, 'Nodes': 3, 'void': 1, 'public': 0}
{'}\n': 59, ';': 21, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 53, 'buffer': 11, 'return': 51, 'Builder': 10, '': 1, 'new': 13, '=': 12, '{': 7, 'public': 0}
{'}\n': 54, ';': 50, 'return': 51, 'Trie': 2, '': 1, 'new': 38, '=': 37, '(': 24, 'trie': 18, ')': 13, '>': 7, '<': 4, 'public': 0}
{'}\n': 77, ';': 23, ')': 13, '.': 40, '(': 4, 'NUM': 48, '_': 47, '': 5, ',': 20, '{': 14, 'state': 8, 'State': 7, 'Dialogue': 6, 'void': 1, 'public': 0}
{'}\n': 246, ';': 38, 'len': 15, ')': 16, ',': 10, 'limit': 125, '.': 51, 'block': 43, 'data': 100, 'off': 12, '(': 4, 'current': 45, '=': 44, 'Block': 42, '': 41, 'final': 5, '}': 39, 'Slow': 30, 'write': 2, '{': 17, 'remaining': 22, '>': 21, 'if': 18, 'int': 11, 'public': 0}
{'}\n': 19, ';': 18, 'connection': 10, '.': 14, '{': 12, ')': 11, 'Connection': 9, 'Server': 3, 'Geo': 2, '': 1, '(': 5}
{'}\n': 1266, '}': 208, ';': 24, ')': 10, 'STR': 127, '_': 126, '(': 5, 'Exception': 1229, 'SSLProtocol': 1257, '': 1, 'new': 236, ',': 281, 'ERROR': 1253, 'INTERNAL_': 1252, '.': 21, 'Protocol': 1249, 'Alert': 1244, 'throw': 1241, 'Trace': 1237, 'Stack': 1236, 'print': 763, 'e': 1230, '{': 11, 'catch': 1226, 'is_client': 381, 'if': 115, 'Name': 89, 'Instance': 973, 'get': 80, '=': 19, 'IV': 471, 'client': 212, 'alg': 88, 'client_key': 361, 'Spec': 469, 'Key': 63, 'Secret': 1011, 'MODE': 1007, 'DECRYPT_': 1039, 'Cipher': 15, 'init': 1000, 'dec': 953, 'server': 223, 'server_key': 372, 'ENCRYPT_': 1006, 'enc': 943, 'else': 676, 'Null': 948, 'null': 119, '==': 939, 'logger': 117, 'println': 124, 'server_mac_secret': 350, 'client_mac_secret': 339, 'Random': 213, 'master_secret': 331, 'session': 9, 'is_exportabe': 50, '+': 136, '!=': 118, 'iv_size': 67, 'hash_size': 175, '*': 241, 'NUM': 240, 'key_block': 234, 'Parameter': 468, 'Iv': 467, 'block_size': 75, 'key_size': 47, 'arraycopy': 277, 'System': 275, 'Server': 387, 'is': 386, '!': 383, 'boolean': 380, ']': 211, '[': 210, 'byte': 209, 'seed': 258, 'compute': 323, 'PRF': 321, 'length': 266, 'Suite': 16, 'cipher': 17, 'String': 87, 'Algorithm': 97, 'Encryption': 96, 'Bulk': 95, 'Size': 73, 'Block': 81, 'iv': 72, 'int': 46, 'Material': 57, 'expanded': 62, ':': 58, 'key': 56, '?': 52, 'try': 12, 'Impl': 8, 'SSLSession': 7, 'State': 3, 'Connection': 2, 'protected': 0}
{'}\n': 269, ';': 15, 'NUM': 14, '_': 13, 'return': 207, ')': 5, '(': 2, '.': 41, 'Connection': 10, 'Idle': 28, 'longest': 27, 'Quietly': 254, 'close': 253, '}': 113, '-': 125, '{': 6, 'else': 196, 'Ns': 37, 'Duration': 36, 'Alive': 171, 'keep': 170, '>': 59, 'Count': 11, 'Use': 9, 'in': 8, 'if': 88, 'idle': 17, 'remove': 188, 'connections': 62, 'Connections': 183, 'max': 181, 'this': 48, '||': 174, '>=': 167, 'connection': 80, '=': 12, 'Nanos': 130, 'At': 129, 'now': 4, 'long': 0, '++': 109, 'continue': 111, ',': 97, 'Allocation': 93, 'Get': 92, 'And': 91, 'prune': 90, 'next': 84, 'i': 60, 'Real': 25, '': 24, 'Next': 71, 'has': 70, 'iterator': 64, '<': 55, 'Iterator': 54, 'for': 51, 'synchronized': 46, 'VALUE': 44, 'MIN_': 43, 'Long': 40, 'null': 31, 'int': 7, 'cleanup': 1}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'State': 2, '': 1, 'public': 0}
{'}\n': 52, ';': 51, 'return': 49, '}': 48, '_': 44, '{': 12, ')': 11, 'expected': 33, '(': 3, 'Object': 5, '': 4, ',': 7, 'boolean': 1}
{'}\n': 136, ';': 60, ')': 10, 'NUM': 44, '_': 29, ',': 121, '(': 6, '.': 38, '=': 79, ']': 77, 'i': 90, '[': 76, '{': 22, '++': 101, '<': 96, 'int': 89, 'for': 87, 'byte': 81, 'new': 24, '}': 61, '': 7, 'if': 16, 'throws': 11}
{'}\n': 96, ';': 51, '}': 90, ')': 29, '(': 15, 'Namespace': 11, 'User': 5, '.': 73, '=': 42, '>': 38, '': 1, '<': 33, 'List': 32, '{': 30, 'Authorizations': 12, 'private': 0}
{'}\n': 29, ';': 28, ')': 5, 'this': 22, '(': 4, 'Header': 3, '{': 11}
{'}\n': 201, ';': 175, ')': 40, '(': 4, ',': 12, 'y': 17, 'x': 14, 'text': 92, '.': 60, 'p': 34, 'Paint': 33, '': 9, 'int': 13, 'String': 10, 'Text': 3, 'draw': 2, 'void': 1}
{'}\n': 59, ';': 19, ')': 13, 'NUM': 56, '_': 55, 'parameter': 35, '(': 8, 'To': 7, 'compare': 49, '.': 48, 'Value': 24, 'this': 23, 'return': 44, 'Percent': 10, '': 9, 'Null': 27, 'not': 26, '=': 25, 'Decimal': 22, 'Big': 21, 'Defined': 16, 'assert': 15, '{': 14, 'Equal': 6, 'Or': 5, 'Then': 4, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 212, 'width': 196, '.': 26, ';': 49, ')': 34, '(': 7, '=': 71, 'column': 65, ',': 135, 'row': 105, 'Cell': 131, 'get': 59, 'table': 10, '_': 42, '': 8, 'NUM': 43, 'Model': 31, 'Column': 28, 'JTable': 9}
{'}\n': 28, ';': 24, ')': 14, 'folder': 22, '(': 21, 'add': 20, '.': 19, '': 8, 'Folder': 5}
{'}\n': 67, ';': 66, ')': 39, ',': 29, 'URI': 25, 'system': 55, '(': 48, 'Method': 47, '': 8, '.': 45, 'Workflow': 44, 'new': 42, 'return': 41, '{': 40, '>': 36, '<': 33, 'List': 32, 'public': 0}
{'}\n': 458, ';': 66, 'fg': 16, '=': 103, '.': 86, ')': 39, '(': 5, '': 6, ',': 9}
{'}\n': 134, ';': 41, ')': 12, '(': 7, 'Array': 19, 'Byte': 18, 'to': 128, '.': 38, 'Stream': 21, 'out': 22, 'return': 124, 'close': 120, '}': 116, 'size': 84, ',': 109, 'NUM': 99, '_': 79, 'buf': 67, 'write': 106, 'break': 101, '<=': 97, 'if': 94, 'read': 89, 'in': 11, '=': 24, 'int': 83, '{': 16, 'BOOL': 80, 'while': 77, ']': 5, 'SIZE': 74, 'BUF_': 73, '': 14, '[': 4, 'byte': 3, 'new': 25, 'Input': 57, 'length': 39, '*': 36, 'RATIO': 35, 'COMPRESSION_': 34, 'EXPECTED_': 33, 'Output': 20, 'IOException': 15, 'throws': 13, 'final': 2, 'static': 1, 'public': 0}
{'}\n': 90, ';': 20, ')': 13, 'NUM': 33, '_': 32, '(': 7, '}': 43, 'i': 16, '=': 17, '{': 14, 'public': 3}
{'}\n': 212, ';': 101, 'Socket': 7, ')': 17, 'set': 195, '.': 94, '(': 30, 'Server': 6, '': 2, '{': 104, 'else': 103, '}': 102, 'create': 95, 'SSLServer': 62, '=': 87, 'Factory': 64, 'if': 29, 'IOException': 20, 'throws': 18, 'bind': 15, 'public': 0}
{'}\n': 293, ';': 144, ')': 15, 'NUM': 29, '_': 28, '(': 4, '[': 6, 'data': 8, ']': 7, '=': 156, '{': 153, '}': 145, 'int': 37, 'length': 26, 'byte': 5}
{'}\n': 186, '}': 96, ';': 21, ')': 9, 'STR': 19, '_': 18, '(': 4, 'info': 16, '.': 15, '_log': 14, 'close': 172, 'Resp': 26, 'client': 25, '{': 13, 'null': 28, '!=': 107, 'if': 70, 'finally': 159, 'e': 152, 'throw': 86, 'Exception': 12, '': 5, 'catch': 148, 'else': 97, 'err': 114, 'PARException': 90, 'HP3': 89, 'new': 87, 'Details': 119, 'Response': 24, 'get': 103, '=': 27, 'String': 6, 'NUM': 109, 'Status': 104, 'error': 80, '==': 74, 'path': 33, 'try': 60, ',': 45, 'CG': 44, 'URI_': 42, 'format': 39, 'Format': 37, 'Message': 36, 'final': 30, 'Client': 23, 'throws': 10, 'VVset': 3, 'void': 1, 'public': 0}
{'}\n': 107, ';': 20, '_': 18, 'return': 74, '}': 77, ')': 11, '+': 96, '(': 6, 'debug': 92, '.': 26, 'log': 81, '{': 12, 'Enabled': 85, 'Debug': 84, 'is': 83, 'if': 62, '=': 52, 'key': 9, 'String': 8, '': 7, 'private': 0}
{'}\n': 34, ';': 33, ')': 5, '(': 4, 'Time': 20, '.': 18, '<=': 23, 'get': 19, 'Date': 11, 'Expiry': 10, 'cookie': 9, '&&': 14, 'null': 13, '!=': 12, 'return': 7, '{': 6, 'Expired': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 223, ';': 156, 'm': 157, '(': 107, '.': 196, 'Math': 195, '': 194, '=': 190, 'Px': 167, ')': 29, '{': 30, 'float': 25, 'public': 0}
{'}\n': 41, ';': 17, ')': 5, '(': 4, '.': 24, '': 9, '=': 8, 'Set': 27, 'Hash': 13, 'new': 12, 'Map': 14, '{': 6}
{'}\n': 37, ';': 36, ')': 14, '(': 4, '.': 23, '{': 15, 'props': 13, 'Properties': 12, '': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 4, '(': 3, 'Increment': 13, 'And': 12, 'get': 11, '.': 10, 'return': 6, '{': 5, 'next': 2, 'public': 0}
{'}\n': 318, '}': 287, ';': 286, ')': 131, '(': 45, '.': 267, 'connection': 81, '{': 132, 'null': 144, 'if': 137, 'URLConnection': 48, 'Http': 47, '': 46}
{'}\n': 120, ';': 36, 'title': 11, '}': 105, ')': 12, 'NUM': 88, '_': 46, '(': 8, 'group': 85, '.': 43, 'm': 59, '{': 13, 'find': 72, 'if': 68, 'matcher': 63, 'p': 39, '=': 40, 'Matcher': 58, '': 2, 'INSENSITIVE': 54, 'CASE_': 53, 'Pattern': 38, ',': 48, 'STR': 47, 'compile': 44, 'null': 32, 'String': 3, 'Title': 7, 'parse': 6, 'static': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 5, '(': 4, '.': 10, 'return': 7, '{': 6, 'sel': 3, '': 1, 'public': 0}
{'}\n': 49, ';': 25, 'Ratio': 36, '{': 39, ')': 17, '.': 14, '': 28, '(': 16, 'if': 26, 'double': 20, 'public': 0}
{'}\n': 56, '}': 55, ';': 20, ')': 9, 'root': 2, '(': 4, 'repository': 49, '.': 16, 'listener': 34, 'next': 43, 'it': 13, 'Listener': 33, 'IRepository': 32, '': 5, '=': 14, '{': 10, 'Next': 26, 'has': 25, 'while': 21, 'iterator': 17, 'listeners': 15, 'Iterator': 12, 'Location': 7, 'ISVNRepository': 6, 'void': 1, 'public': 0}
{'}\n': 138, ';': 53, ')': 11, '(': 18, '.': 46, 'queue': 22, '_': 49, '': 8, '{': 12, 'void': 2, 'public': 0}
{'}\n': 6, '{': 5, ')': 4, '(': 3, 'Message': 2}
{'}\n': 118, ';': 117, 'STR': 25, '_': 24, '+': 31, '{': 18, ')': 10, '(': 6, 'String': 2, '': 1}
{'}\n': 348, ';': 45, ')': 17, ',': 164, 'STR': 284, '_': 283, '+': 285, '(': 40, 'get': 37, '.': 58, 'Query': 11, '{': 69, '': 1, 'catch': 251, '}': 193, 'query': 130, 'Name': 114, '=': 26, 'is': 59, 'if': 48}
{'}\n': 78, ';': 27, ')': 15, 'STR': 75, '_': 25, '(': 7, '.': 62, 'i': 23, '++': 35, 'level': 30, '<': 29, 'NUM': 26, '=': 24, 'int': 8, 'for': 20, '{': 19, ',': 10, 'private': 0}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'size': 2, '.': 8, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 52, ';': 19, ')': 11, '(': 4, '.': 39, '_': 24, '': 30, 'new': 29, 'tree': 27, '=': 23, 'Feature': 9, 'feature': 13, 'void': 1, 'public': 0}
{'}\n': 13, ';': 12, ')': 5, '(': 4, 'clear': 9, '.': 8, 'listeners': 7, '{': 6, 'Listeners': 3, 'remove': 2, 'void': 1, 'public': 0}
{'}\n': 305, ';': 33, ')': 10, 'Bytes': 69, 'Of': 68, 'Num': 67, 'n': 13, ',': 83, 'NUM': 27, '_': 26, 'buf': 150, '(': 4, 'UNCString': 292, 'To': 77, 'Array': 290, 'byte': 49, '.': 20, 'Converter': 73, 'Bin': 72, '': 1, 'return': 46, 'STR': 145, '<': 38, 'if': 34, 'Byte': 219, 'Pad': 218, '-=': 127, '=': 15, '||': 244, '>': 24, '&': 29, ']': 51, '-': 226, 'length': 21, '[': 50, 'int': 12, 'decrypt': 3, 'm_bfish': 117, 'null': 47, 'Len': 14, '*': 185, 'BLOCKSIZE': 44, 'ECB': 41, 'Blowfish': 40, 'Text': 9, 'Cipher': 8, 's': 7, 'Hex': 76, 'bin': 75, 'new': 54, '==': 139, 'cbciv': 52, 'CBCIV': 120, 'set': 119, '~': 30, '{': 11, 'String': 2, 'public': 0}
{'}\n': 219, ';': 68, 'return': 214, '}': 211, ')': 46, '(': 70, '.': 99, '{': 85, 'NUM': 75, '_': 74, 'j': 72, 'if': 86, '++': 83, 'L': 80, '': 31, '<': 78, '=': 57, 'int': 13, 'for': 69, 'new': 58, 'Array': 28, ']': 16, '[': 15, 'static': 1, 'public': 0}
{'}\n': 206, ';': 56, '(': 4, '{': 35, ')': 34, 'advance': 77, '.': 52, 'iter': 61, 'valid': 71, '=': 62, '': 5, '}': 138, 'ids': 51, 'DBIDIter': 60, 'for': 57, 'size': 53}
{'}\n': 23, ';': 22, ')': 11, '+': 19, 'STR': 18, '_': 17, '(': 4, '.': 14, 'log': 13, '{': 12, '': 5, 'void': 1, 'public': 0}
{'}\n': 142, '}': 94, ';': 93, ')': 31, 'Time': 47, 'current': 123, '(': 19, '{': 106, 'Idle': 46, 'if': 95, '.': 27, '': 6, 'void': 1, 'public': 0}
{'}\n': 107, ';': 17, ')': 8, '(': 13, '}': 72, '.': 11, '=': 22, 'T': 35, '': 34, '{': 9, 'STR': 15, '_': 14, 'debug': 12, 'logger': 10, 'void': 1, 'protected': 0}
{'}\n': 101, ';': 17, 'STR': 80, '_': 42, '=': 8, 'Origin': 77, 'm': 18, ')': 4, 'NUM': 43, '/': 41, '>': 66, '*': 61, 'uptime': 7, '(': 3, '-': 53, '&': 48, '<<': 45, 'Timestamp': 37, 'Looper': 27, 'Main': 19, 'get': 29, '.': 11, '': 1, 'Handler': 20, 'new': 22, 'Millis': 14, 'Time': 13, 'current': 12, 'System': 10, 'long': 6, '{': 5, 'Session': 2, 'public': 0}
{'}\n': 200, ';': 27, 'dados': 17, 'return': 197, '}': 164, ')': 9, 'ex': 182, '+': 192, 'STR': 35, '_': 34, '(': 8, 'erro': 188, '.': 40, 'Mensagem': 186, '': 1, '{': 10, 'SQLException': 181, 'catch': 178, 'close': 167, 'rs': 47, 'stm': 37, ',': 82, 'NUM': 80, 'get': 76, 'String': 31, 'Int': 77, 'new': 19, 'next': 61, 'while': 57, 'sql': 32, 'Query': 52, 'execute': 51, '=': 18, 'Statement': 42, 'prepare': 41, 'conector': 39, 'try': 28, '>': 6, '<': 3, 'List': 2, 'Array': 21, 'listar': 7, 'public': 0}
{'}\n': 34, ';': 32, ')': 14, 'Instruction': 6, '': 5, '{': 15}
{'}\n': 17, ';': 16, 'length': 15, '.': 14, 'array': 9, '{': 11, ')': 10, ']': 8, '[': 7, 'int': 1, 'public': 0}
{'}\n': 46, ';': 45, ')': 5, 'STR': 17, '_': 16, '+': 26, '{': 6, '(': 4}
{'}\n': 31, ';': 30, ']': 3, 'NUM': 28, '_': 27, '[': 2, ')': 10, '}': 24, '{': 11, 'double': 1, 'new': 16, '(': 5}
{'}\n': 36, ';': 35, ')': 8, '}': 33, 'Number': 7, 'frame': 6, '(': 4, 'String': 20, 'to': 27, '.': 26, 'Integer': 25, '': 10, '{': 12, ']': 22, '[': 21, 'new': 18, ',': 17, 'STR': 16, '_': 15, 'print': 13, 'IOException': 11, 'throws': 9, 'int': 5, 'Frame': 3, 'void': 1, 'public': 0}
{'}\n': 51, ';': 29, ')': 7, '(': 3, 'This': 47, 'encode': 46, '}': 30, 'STR': 39, '_': 38, '+': 40, 'IOException': 10, '': 4, 'new': 34, 'throw': 33, '{': 11, 'else': 31, 'null': 28, '=': 27, 'names': 26, 'NAME': 22, 'Case': 18, 'Ignore': 17, 'equals': 16, '.': 15, 'name': 6, 'if': 12, 'throws': 8, 'String': 5, 'delete': 2, 'void': 1, 'public': 0}
{'}\n': 36, ';': 32, 'this': 34, 'return': 33, ')': 15, ',': 12, 'key': 11, '(': 8, 'Range': 23, '': 1, 'new': 21, 'add': 5, '.': 18, 'ranges': 17, '{': 16, 'double': 13, 'String': 10, 'Unbounded': 6, 'Builder': 4, 'Distance': 3, 'Geo': 2, 'public': 0}
{'}\n': 130, ';': 86, ')': 25, '(': 4, 'reply': 49, '.': 57, 'get': 70, '{': 32, '': 20, 'void': 1}
{'}\n': 104, ';': 30, ')': 17, '(': 6, 'String': 3, 'to': 99, '.': 60, 'return': 96, 'NUM': 37, '_': 36, 'pos': 20, '}': 86, '+': 81, ',': 14, '{': 18, 'str': 9, '-': 35, '==': 34, 'if': 31, 'Of': 23, 'index': 22, '=': 21, 'int': 19, '': 2, 'static': 1, 'public': 0}
{'}\n': 74, ';': 38, 'config': 12, '=': 71, '.': 69, 'this': 68, '{': 20, '}': 39, ')': 19, 'STR': 36, '_': 35, '(': 7, 'Exception': 33, 'Pointer': 32, 'Null': 31, '': 1, 'new': 29, 'throw': 28, 'null': 25, '==': 24, 'if': 21, 'Config': 11, 'Network': 10, 'final': 8, 'public': 0}
{'}\n': 38, '{': 36, '': 31, ')': 24, '(': 23, 'void': 2}
{'}\n': 20, ';': 19, ')': 4, ']': 17, 'NUM': 16, '_': 15, '[': 14, 'fields': 13, '(': 3, 'Long': 8, 'parse': 10, '.': 9, '': 7, 'return': 6, '{': 5, 'long': 1, 'public': 0}
{'}\n': 317, ';': 47, ')': 30, '(': 64, '=': 221, '': 11, '.': 34, 'Mode': 170, 'new': 148, 'set': 35, 'Paint': 33, '{': 31}
{'}\n': 13, ';': 12, 'Device': 3, 'return': 9, '{': 8, ')': 7, '(': 6, '': 1}
{'}\n': 40, ';': 21, 'this': 16, 'return': 37, ')': 8, '(': 7, 'start': 5, '.': 23, 'thread': 10, 'BOOL': 28, '_': 18, 'Daemon': 25, 'set': 24, 'STR': 19, ',': 17, 'Thread': 14, '': 1, 'new': 12, '=': 11, '{': 9, 'Collecting': 6, 'public': 0}
{'}\n': 22, ';': 21, ')': 7, '': 16, 'pixels': 14, '(': 10, '{': 8}
{'}\n': 189, ';': 20, ')': 7, 'i': 114, '(': 41, '_': 107, '.': 93, 'NUM': 108, 'sb': 92, '=': 59, '{': 11, '': 9, 'throws': 8}
{'}\n': 34, ';': 33, ')': 13, 'z': 12, '*': 22, '+': 24, 'y': 9, 'x': 6, '(': 4, 'sqrt': 19, '.': 18, 'Math': 17, '': 16, 'return': 15, '{': 14, 'double': 2, ',': 7, 'static': 1, 'public': 0}
{'}\n': 584, ';': 104, 'return': 579, '}': 478, ')': 77, 'STR': 521, '_': 520, '+': 522, '(': 102, 'Exception': 509, 'Argument': 517, 'Illegal': 516, '': 6, 'new': 91, 'throw': 513, '{': 167, 'e': 510, 'Json': 508, 'Gf': 507, 'catch': 504, 'String': 15, '.': 153, 'Object': 152, 'json': 40, ',': 16, 'key': 170, 'next': 174, 'keys': 149, '=': 90, 'Next': 163, 'has': 162, 'while': 158, '>': 22, '<': 81, 'Iterator': 144, 'Map': 80, 'static': 1, 'public': 0}
{'}\n': 65, ';': 22, 'props': 15, 'return': 48, ')': 6, 'STR': 32, '_': 31, ',': 30, '': 1, '(': 5, 'Property': 26, 'set': 25, '.': 24, 'Properties': 14, 'new': 17, '=': 16, '{': 11, 'create': 3, 'private': 0}
{'}\n': 88, ';': 24, ')': 6, 'CENTER': 85, '': 1, '.': 27, 'Layout': 59, 'Border': 63, ',': 52, 'm_': 8, '(': 5, 'Pane': 74, 'JScroll': 73, 'new': 46, 'add': 69, 'set': 28, 'NUM': 51, '_': 33, 'BOOL': 34, 'Model': 18, 'List': 3, '{': 7, 'Panel': 4, 'public': 0}
{'}\n': 1203, ';': 285, '}': 1190, ')': 731, '(': 9, '.': 1106, '=': 117, ']': 4, '[': 3, '': 30, '{': 732, '++': 721, '<': 421, 'NUM': 372, '_': 371, 'for': 286, 'i': 345, 'cols': 128, 'rows': 122, 'new': 118, 'int': 24}
{'}\n': 15, ')': 13, '(': 12, 'Utils': 9, '': 7, 'private': 0}
{'}\n': 18, ';': 17, ')': 9, 'photo': 8, '(': 4, '.': 12, 'photos': 11, '{': 10, 'Entity': 7, 'Photo': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 284, ';': 58, 'Matches': 279, '(': 70, '}': 259, ')': 75, 'Score': 243, 'Bit': 242, 'get': 64, '.': 63, 'Block': 24, 'match': 222, '_': 56, 'for': 176, 'Name': 151, '{': 41, 'Blocks': 69, 'Match': 68, 'Available': 67, 'Of': 66, 'Number': 65, 'read': 25, 'NUM': 57, '=': 55, '': 22, ',': 16, 'IRead': 23, 'static': 1}
{'}\n': 76, ';': 71, 'return': 73, '}': 72, ')': 13, 'i': 62, '[': 10, 'a': 12, '.': 51, '_': 45, '(': 7, '{': 14, ']': 11, 'public': 0}
{'}\n': 37, ';': 36, ')': 9, '.': 31, 'failures': 13, '{': 10, '(': 5, 'void': 2, 'public': 1}
{'}\n': 94, ';': 18, ')': 4, 'STR': 16, '_': 15, '(': 3, 'debug_message': 13, '}': 21, 'parse_state': 84, '.': 39, 'i': 31, 'At': 60, 'element': 59, 'stack': 8, '+': 52, 'sym': 66, '{': 5, '++': 45, 'size': 40, '<': 37, 'NUM': 34, '=': 32, 'int': 30, 'for': 28, 'return': 19, 'null': 10, '==': 9, 'if': 6, 'dump_stack': 2, 'void': 1, 'public': 0}
{'}\n': 67, ';': 37, 'return': 64, '}': 63, ')': 19, '(': 11, '.': 54, 'String': 6, '': 2, '{': 20, ':': 43, 'for': 38, '>': 7, '<': 4, 'Set': 3, 'Hash': 31, 'new': 29, '=': 28, 'static': 1}
{'}\n': 247, '}': 100, ';': 85, '{': 59, ')': 17, 't': 240, 'Throwable': 239, '': 4, '(': 3, 'catch': 101, 'close': 231, '.': 230, 'Stream': 80, 'try': 86, 'null': 84, '!=': 222, 'if': 218, 'finally': 216, 'e': 105, 'throw': 108, 'Exception': 22, 'FTPAborted': 47, 'Transfer': 14, 'FTPData': 13, 'FTPException': 39, 'Reply': 35, 'FTPIllegal': 34, 'IOException': 31, 'State': 21, 'Illegal': 20, 'listener': 16, ',': 7, 'At': 10, 'restart': 9, 'Name': 126, 'new': 91, 'File': 5, '=': 83, 'Found': 27, 'Not': 26, 'throws': 18, 'Listener': 15, 'long': 8, 'void': 1, 'public': 0}
{'}\n': 125, ';': 93, 'return': 122, ')': 9, '.': 28, '(': 5, '_': 89, 'socket': 82, ',': 72, 'Socket': 37, 'create': 68, 'SSLSocket': 15, '': 1, '=': 18, 'get': 29, 'Factory': 16, '{': 13, 'public': 0}
{'}\n': 129, ';': 28, ')': 16, '(': 5, 'String': 2, 'to': 78, '.': 49, 'response': 32, 'return': 121, 'STR': 40, '_': 39, 'append': 62, '}': 71, 'n': 27, 'Node': 4, 'format': 3, '{': 17, 'null': 57, '!=': 56, 'Son': 52, 'Right': 92, 'get': 50, 'node': 15, '=': 33, 'if': 43, 'Left': 51, 'Builder': 31, '': 1, 'new': 34, '>': 14, 'T': 13, '<': 11, 'Binary': 9, 'private': 0}
{'}\n': 125, '}': 81, ';': 30, ')': 13, 'e': 105, ',': 120, 'Interface': 12, 'mbean': 11, '+': 64, 'STR': 63, '_': 62, '(': 5, 'Exception': 104, 'Runtime': 112, 'Server': 17, '': 6, 'new': 109, 'throw': 108, '{': 14, 'catch': 101, 'String': 68, 'to': 67, '.': 23, 'name': 36, 'warn': 86, 'logger': 58, 'else': 82, 'MBean': 4, 'unregister': 3, 'mbs': 18, 'info': 60, 'Registered': 52, 'is': 51, 'if': 47, 'Name': 35, 'Object': 34, 'generate': 38, '=': 19, 'try': 31, 'Platform': 25, 'get': 24, 'Factory': 22, 'Management': 21, '>': 10, '?': 9, '<': 8, 'Class': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 76, ';': 58, 'cause': 39, '=': 63, ')': 42, '(': 20, '{': 43, 'Throwable': 27, '': 6, 'Exception': 9}
{'}\n': 27, ';': 23, 'this': 25, 'return': 24, ')': 9, 'value': 8, '(': 5, 'add': 4, '.': 12, 'values': 11, '{': 10, 'String': 7, '': 1, 'Array': 3, 'Json': 2, 'public': 0}
{'}\n': 87, ';': 58, 'STR': 81, '_': 69, ')': 50, ',': 36, '(': 53, '.': 74, '=': 61, 'm': 64, '{': 51, '': 1, '<': 13, 'String': 15}
{'}\n': 237, ';': 63, 'NUM': 10, '_': 9, 'return': 220, '}': 232, 'READY': 230, 'NOT_': 229, 'USBCAM_': 228, 'ERROR_': 227, '': 1, '.': 52, 'Errors': 224, 'Kernel': 223, 'Sce': 222, ')': 16, 'STR': 216, '(': 6, 'format': 213, 'String': 211, 'warn': 208, 'log': 206, '{': 50, 'Video': 23, 'setup': 200, '!': 199, 'if': 197, 'evlevel': 195, 'Param': 32, 'Setup': 22, 'Cam': 21, 'usb': 33, '=': 8, 'Level': 186, 'ev': 185, 'framesize': 183, 'Size': 48, 'frame': 92, 'effectmode': 171, 'Mode': 162, 'Effect': 161, 'image': 160, 'sharpness': 149, 'contrast': 138, 'brightness': 127, 'saturation': 116, 'wb': 114, 'Balance': 105, 'white': 104, 'framerate': 102, 'Rate': 93, 'resolution': 74, 'Area': 43, 'work': 42, 'this': 51, 'Address': 60, 'get': 59, 'int': 18, ',': 11, 'TPointer': 41, 'Usb': 20, 'psp': 26, 'sce': 19, 'public': 17, 'version': 12, 'nid': 7, 'HLEFunction': 5, '@': 0, 'HLEUnimplemented': 2}
{'}\n': 139, ';': 27, 'list': 34, 'return': 136, '}': 83, ')': 16, '(': 12, 'unlock': 129, '.': 22, 'Scope': 62, 'identity': 61, '{': 17, 'null': 64, '!=': 63, 'if': 48, 'finally': 116, 'Next': 110, 'To': 53, 'move': 52, 'cursor': 15, 'while': 104, 'BOOL': 99, '_': 98, ',': 97, 'Deep': 9, 'Current': 93, 'load': 7, 'add': 90, 'do': 86, 'try': 84, 'count': 19, 'Room': 78, 'reserve': 77, 'lock': 70, 'First': 54, '>': 6, '': 1, '<': 3, 'List': 2, 'Array': 38, 'new': 36, '=': 20, 'Count': 24, 'get': 23, 'int': 18, 'Cursor': 11, 'From': 10, 'All': 8, 'public': 0}
{'}\n': 50, ';': 33, ')': 12, 'date': 10, '(': 7, '.': 40, 'Format': 20, 'STR': 31, '_': 30, 'Date': 19, 'Simple': 26, '': 2, 'new': 24, '=': 23, '{': 17, 'convert': 4, 'static': 1, 'public': 0}
{'}\n': 209, ';': 39, ')': 11, '(': 6, 'parse': 204, '.': 34, 'db': 157, 'Handler': 189, 'Error': 188, 'Parser': 14, 'Saml': 193, '': 2, 'new': 35, 'set': 42, 'Resolver': 175, 'Null': 179, 'Entity': 174, 'Builder': 26, 'Document': 3, 'dbf': 28, '=': 29, 'null': 159, 'BOOL': 46, '_': 45, ',': 17, 'DTD': 148, 'EXTERNAL_': 118, 'LOAD_': 146, 'Feature': 84, 'ENTITIES': 120, 'PARAMETER_': 133, 'GENERAL_': 119, 'DECL': 106, 'DOCTYPE_': 105, 'DISALLOW_': 104, 'PROCESSING': 92, 'SECURE_': 91, 'FEATURE_': 90, 'XMLConstants': 87, 'Aware': 75, 'Namespace': 74, 'Whitespace': 65, 'Content': 64, 'Element': 63, 'Ignoring': 52, 'Comments': 53, 'Validating': 43, 'Instance': 36, 'Factory': 27, '{': 23, 'IOException': 22, 'SAXException': 19, 'Exception': 16, 'Configuration': 15, 'throws': 12, 'DOM': 5, 'create': 4, 'static': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 5, 'NUM': 13, '_': 12, '(': 4, 'set': 10, '.': 9, 'Cnt': 8, 'reset': 2, 'void': 1, 'public': 0}
{'}\n': 48, ';': 29, ')': 16, 'length': 15, ',': 10, 'NUM': 43, '_': 42, 'offset': 12, 'Value': 9, 'attribute': 8, '(': 4, 'arraycopy': 33, '.': 32, 'System': 31, '': 18, ']': 7, '[': 6, 'byte': 5, 'new': 24, '=': 23, '{': 21, 'Exception': 20, 'Stun': 19, 'throws': 17, 'char': 11, 'Body': 3, 'Attribute': 2, 'decode': 1, 'void': 0}
{'}\n': 154, ';': 65, ')': 57, '(': 5, 'STR': 56, '_': 55, '=': 62, 'else': 67, '}': 66, '{': 59, '.': 37, 'abi': 49, 'if': 47, 'equals': 51, '': 6, 'static': 1, 'public': 0}
{'}\n': 162, ';': 28, 'BOOL': 27, '_': 26, 'return': 25, '}': 140, '{': 8, ')': 7, '.': 37, 'other': 50, 'name': 96, '(': 3, 'equals': 92, 'if': 19, 'obj': 6, '': 4, '=': 51, 'Class': 32, 'get': 31, '!=': 35, 'null': 23, '==': 22, 'Object': 5, 'boolean': 1, 'public': 0}
{'}\n': 126, ';': 21, ')': 13, ',': 9, '(': 44, '.': 37, '': 65, '=': 19, 'h1': 45, 'h0': 18, 'NUM': 56, '_': 55, 'h2': 34, ']': 24, '[': 23, '{': 14, 'public': 0}
{'}\n': 20, ';': 19, ')': 5, '(': 4, 'open': 15, '.': 14, 'Selector': 3, '': 1, '{': 9, 'IOException': 8, 'throws': 6}
{'}\n': 79, ';': 47, ')': 8, '(': 11, '.': 29, 'index': 7, 'children': 20, 'child': 51, 'size': 30, 'null': 22, '==': 21, 'NUM': 16, '_': 15, '<': 14, 'if': 10, '{': 9, 'int': 6, 'void': 1, 'public': 0}
{'}\n': 255, '}': 77, ';': 62, 'null': 39, '=': 55, 'img': 163, ')': 33, ',': 7, 'y': 21, 'x': 18, '(': 3, 'Image': 162, 'draw': 237, '.': 71, 'g': 15, 'dispose': 231, 'gfx': 54, 'h': 27, 'w': 24, 'Component': 96, 'get': 95, 'ctx': 11, 'paint': 2, 'p': 6, 'transform': 32, '{': 34, '!=': 38, 'if': 35, 'Graphics': 14, 'create': 131, 'D': 48, 'Graphics2': 47, '': 4, 'ARGB': 181, 'INT_': 180, 'TYPE_': 179, 'Buffered': 161, 'new': 165, 'else': 158, 'Trace': 151, 'Stack': 150, 'print': 149, 'e': 144, 'Exception': 143, 'Transform': 31, 'Noninvertible': 141, 'catch': 138, 'Inverse': 132, 'try': 123, '-': 109, 'translate': 80, 'instanceof': 45, 'Affine': 30, 'int': 17, 'Context': 10, 'Synth': 9, 'Painter': 5, 'void': 1, 'private': 0}
{'}\n': 56, ';': 30, ')': 13, 'file': 49, '(': 28, 'files': 22, ':': 42, 'File': 19, '': 5, 'for': 37, '!=': 34, 'if': 31, 'Files': 27, 'list': 26, '.': 25, '=': 23, ']': 21, '[': 20, '{': 17}
{'}\n': 107, '}': 102, ';': 100, ')': 81, '(': 47, 'is': 71, '.': 70, 'cls': 69, 'if': 67, '{': 66, '': 16, '>': 23, 'Throwable': 22, 'extends': 20, 'static': 1, 'public': 0}
{'}\n': 81, ';': 57, ')': 13, 'x': 12, 'byte': 43, '(': 5, 'write': 2, '.': 39, 'out': 9, '}': 66, 'NUM': 31, '_': 30, '>>>=': 59, '&': 28, '|': 48, '{': 17, '!=': 33, '~': 29, 'while': 24, 'IOException': 16, '': 6, 'throws': 14, 'long': 11, ',': 10, 'Stream': 8, 'Output': 7, 'Long': 4, 'Var': 3, 'static': 0}
{'}\n': 27, ';': 26, ')': 7, 'b': 6, '(': 4, 'update': 16, '.': 15, 'Digest': 14, '{': 12, 'Exception': 11, 'Signature': 10, '': 9, 'throws': 8, 'byte': 5, 'Update': 3, 'engine': 2, 'void': 1, 'protected': 0}
{'}\n': 104, ';': 24, ')': 12, '(': 15, '.': 60, '': 9, '}': 25, 'BOOL': 23, '_': 22, 'return': 21, '{': 13, 'null': 18, '==': 17, 'initiator': 11, 'if': 14, 'For': 5, 'If': 3, 'check': 2, 'boolean': 1}
{'}\n': 86, '{': 70, ')': 69, 'Message': 34, 'Serial': 33, '': 32, '(': 12, 'public': 3}
{'}\n': 168, ';': 56, 'return': 165, '}': 98, '{': 23, ')': 32, '(': 31, '': 2, 'config': 26, '.': 70, 'new': 28, '=': 27, 'Path': 37, 'STR': 74, '_': 53, 'BOOL': 54, ',': 17, 'DMLConfig': 25, 'File': 6, 'String': 9}
{'}\n': 30, ';': 29, ')': 12, 'value': 11, '(': 5, 'String': 7, 'to': 23, '.': 22, '': 1, ',': 9, 'key': 8, 'Default': 4, 'with': 3, 'return': 14, '{': 13, 'B': 2, 'default': 0}
{'}\n': 91, ';': 44, '.': 36, 'Read': 22, ',': 51, 'length': 37, 'NUM': 53, '_': 52, '(': 10, 'arraycopy': 48, 'System': 46, '': 1, ')': 23, ']': 14, '+': 38, '[': 13, 'new': 31, '=': 30, 'buffer': 15}
{'}\n': 102, ';': 26, ')': 25, '(': 9, '{': 78, '=': 60, '': 10, 'is': 34, '.': 33, 'if': 28}
{'}\n': 74, ';': 41, ')': 15, '(': 5, 'Monitor': 60, 'new': 58, ',': 57, '.': 28, 'STR': 33, '_': 32, '': 7, 'Exception': 20, 'throws': 16, '>': 13, '<': 9, 'protected': 0}
{'}\n': 968, ';': 39, ')': 26, '(': 4, 'get': 35, '.': 34, '*': 895, 'PIXELS': 88, 'UNIT_': 87, 'SIZE_': 86, '': 6, 'Screen': 83, 'IGame': 82, 'int': 20, ',': 18, 'Width': 98, 'Area': 36, 'entity': 33, '=': 32, 'D': 30, 'Rectangle2': 29, '{': 27, 'final': 19, 'void': 1}
{'}\n': 21, ';': 20, 'Info': 4, 'resolve': 9, '.': 14, '{': 12, ')': 11, '': 1, '(': 5, 'public': 0}
{'}\n': 304, ';': 70, ')': 55, 'Value1': 40, 'Node': 39, 'register': 38, ',': 7, 'address': 60, '(': 14, '>': 10, 'String': 6, '': 2, '<': 4, 'Pair': 3, 'new': 286, 'return': 285, 'dw': 163, 'Mask': 210, 'Bit': 209, 'Word': 208, 'd': 207, 'Var2': 90, 'tmp': 74, '++': 161, 'Offset': 117, 'base': 116, 'And': 194, 'create': 156, '.': 63, 'Helpers': 154, 'Reil': 30, 'add': 150, 'instructions': 33, 'index': 104, 'Add': 227, 'Var1': 75, 'qw': 178, 'Value': 54, 'immediate': 52, '+': 173, 'STR': 172, '_': 171, 'Value2': 47, 'Bsh': 157, 'offset': 17, '=': 61, 'long': 16, 'Variable': 66, 'Next': 65, 'get': 64, 'environment': 23, 'final': 15, '{': 56, 'Instruction': 31, 'List': 27, 'Environment': 22, 'ITranslation': 21, 'LSR': 13, 'Indexed': 12, 'static': 1, 'private': 0}
{'}\n': 19, ';': 18, ')': 9, '.': 13, 'ref': 11, '{': 10, '(': 5, 'public': 0}
{'}\n': 37, ';': 36, ')': 16, 'name': 10, '(': 7, '{': 17, 'String': 9, '': 8, 'Property': 6, 'public': 0}
{'}\n': 95, ';': 28, ')': 12, 'NUM': 68, '_': 67, ']': 61, '[': 59, '=': 19, '': 1, '(': 4, '.': 41, 'tmp': 34, ',': 31, '{': 13, 'Rule': 3, 'Head': 2, 'public': 0}
{'}\n': 335, ';': 63, ')': 8, '(': 7, 'signum': 330, '.': 249, 'result': 245, ',': 20, 'NUM': 19, '_': 18, 'STR': 322, 'Equals': 319, 'assert': 301, '}': 62, ']': 14, 'i': 285, '[': 13, 'Bytes': 12, 'r': 149, '==': 309, 'res': 257, 'True': 302, '{': 9, '++': 298, 'length': 268, '<': 291, '=': 15, 'int': 133, 'for': 282, 'Array': 278, 'Byte': 277, 'to': 276, 'byte': 10, 'new': 212, 'Number': 210, 'b': 65, 'a': 11, 'Integer': 208, 'Big': 207, '': 206, 'Sign': 135, '-': 17, 'Shorter': 6, 'First': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 126, ';': 124, ')': 104, 'task': 22, '(': 15, 'submit': 14, '.': 119, 'return': 117, '{': 105, '>': 7, 'T': 6, '': 5, '<': 4, 'Callable': 17, 'Future': 9, 'public': 3}
{'}\n': 172, ';': 19, ')': 11, '(': 10, 'scale': 167, '.': 119, 'result': 127, ',': 75, 'Scale': 7, 'c': 44, 'STR': 18, '_': 17, 'Equals': 141, 'assert': 140, 'String': 14, 'to': 150, 'mc': 106, 'Number': 61, 'b': 29, 'subtract': 132, 'a': 15, '=': 16, 'Decimal': 59, 'Big': 58, '': 13, 'DOWN': 121, 'Mode': 118, 'Rounding': 117, 'NUM': 25, 'Context': 5, 'Math': 4, 'new': 63, 'Integer': 71, '-': 53, 'int': 20, '{': 12, 'Diff': 6, 'Subtract': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 289, '}': 283, ';': 67, ')': 12, '(': 6, '{': 13, 'Count': 103, '<': 98, 'row': 21, 'NUM': 61, '_': 60, '=': 59}
{'}\n': 138, ';': 28, 'NUM': 36, '_': 35, ')': 18, '(': 4, 'bit': 83, 'mask': 64, '': 43, '=': 22, '{': 19, 'public': 0}
{'}\n': 30, ';': 29, ')': 9, '.': 23, 'string': 8, 'return': 17, '{': 10, 'String': 7, '': 6, '(': 5, 'Empty': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{')': 15, 'boolean': 11, 'Used': 5, '(': 6, 'public': 0}
{'}\n': 87, ';': 26, ')': 16, 'y': 53, ',': 83, 'x': 28, '(': 10, 'Point': 5, '': 4, 'new': 78, 'return': 77, 'top': 74, '.': 36, 'insets': 20, '+': 46, 'Y': 63, 'scale': 44, 'this': 42, '*': 41, 'get': 22, 'DPoint': 15, 'java2': 14, 'int': 27, '=': 21, 'left': 49, 'X': 38, 'Insets': 19, '{': 17, 'D': 13, 'Point2': 12, 'Screen': 9, 'DTo': 8, 'Java2': 7, 'translate': 6, 'public': 3}
{'}\n': 522, '}': 517, ';': 100, ')': 17, ',': 80, 'STR': 79, '_': 78, '(': 11, 'put': 467, '.': 75, 'Properties': 74, '': 12, 'font': 103, '{': 18, 'null': 152, '!=': 151, 'if': 147, 'Name': 104, '=': 28, 'String': 24}
{'}\n': 126, ';': 26, ')': 6, '(': 5, 'notify': 120, '}': 118, 'traffic': 33, '.': 86, 'Traffic': 14, 'all': 35, '{': 7, 'if': 39, ':': 34, 'Map': 13, 'Air': 12, '': 8, 'for': 27, '>': 15, '<': 10, 'List': 9, 'Array': 20, 'new': 18, '=': 17, 'void': 1, 'private': 0}
{'}\n': 27, ';': 26, ')': 14, 'throwable': 13, '(': 6, '{': 15, 'Throwable': 12, '': 7, 'Trace': 5, 'Stack': 4, 'void': 2, 'public': 0}
{'}\n': 412, ';': 59, ')': 13, '(': 23, '.': 51, ',': 10, 'bg': 31, '': 80, '=': 48, '{': 14, 'int': 8}
{')': 442, 'item': 434, 'Item': 186, 'Menu': 185, '': 257, '(': 230, 'boolean': 66}
{'}\n': 38, ';': 37, ')': 26, 'NUM': 25, '_': 18, 'bcd': 32, ',': 20, '(': 6, 'STR': 19, '.': 15, '': 2, 'String': 3, 'public': 0}
{'}\n': 75, ';': 39, ')': 10, 'panel': 72, '(': 17, 'add': 70, '.': 15, 'Layout': 45, '': 44, '{': 11, 'void': 1, 'public': 0}
{'}\n': 159, '}': 121, ';': 37, ')': 21, '.': 28, 'STR': 32, '_': 31, '(': 4, '': 6, 'new': 80, 'throw': 141, ',': 33, '{': 96, 'wildcard': 19, 'if': 88, '=': 53, 'String': 51}
{'}\n': 236, ';': 122, ')': 24, 'Interface': 73, '(': 6, 'map': 230, 'return': 229, 'Parameters': 224, 'audit': 202, '.': 33, 'ip': 147, ',': 37, 'null': 218, 'BOOL': 120, '_': 85, 'IPINTERFACE': 213, 'HOST_': 212, '': 1, 'Enum': 208, 'Type': 32, 'Operation': 206, 'Op': 203, 'Object': 110, 'Client': 193, '_db': 192, 'Param': 83, 'Ip': 72, 'populate': 181, 'Data': 126, 'validate': 123, 'id': 90, 'class': 115, 'query': 109, '=': 53, '{': 29, 'Exception': 103, 'Database': 102, 'throws': 100, 'URI': 89, 'STR': 86, 'Path': 82, '@': 0, 'Rep': 75, 'Rest': 74, 'public': 70, '}': 45, 'ADMIN': 60, 'TENANT_': 59, 'Role': 56, 'roles': 52, 'Permission': 50, 'Check': 49, 'JSON': 44, 'APPLICATION_': 35, 'Media': 31, 'XML': 36, 'Produces': 27}
{'}\n': 117, ';': 45, '}': 112, ')': 44, '(': 43, '.': 103, 'Proposal': 6, 'Proposals': 10, '{': 73, '': 4, '>': 20, 'IEdit': 18, '<': 16, 'List': 15, 'protected': 0}
{'}\n': 60, ';': 41, 'Name': 14, 'attribute': 18, '=': 47, '.': 23, 'this': 42, 'Point': 13, 'extension': 12, 'Id': 40, 'plugin': 39, ')': 20, 'STR': 34, '_': 33, '(': 4, 'contains': 31, '{': 21, 'String': 11, '': 1, ',': 15, 'Query': 3, 'Extension': 2, 'public': 0}
{'}\n': 66, ';': 64, 'image': 31, ',': 56, '.': 42, ')': 9, 'get': 33, 'Image': 13, '{': 10, '': 6, '(': 5}
{'}\n': 106, ')': 6, '(': 5, 'String': 100, 'to': 99, '.': 76, '+': 96, 'STR': 95, '_': 52, 'Filtered': 18, 'm_': 17, 'Classifier': 40, '=': 30, '}': 26, ';': 25, 'return': 24, '{': 7, 'null': 21, '==': 20, 'if': 15, 'public': 0}
{'}\n': 101, ';': 23, '-': 97, ')': 18, '(': 40, 'sum': 31, '=': 35, '*': 53, 'double': 9, '{': 19, ',': 14, ']': 11, '[': 10}
{'}\n': 112, 'y2': 24, '}': 69, ';': 68, '=': 47, '{': 77, ')': 76, '(': 71, 'if': 70, 'x1': 14, 'int': 6, 'final': 44, 'y1': 34, ']': 8, '[': 7, 'private': 0}
{'}\n': 228, ';': 222, 'return': 224, '}': 223, ')': 103, 'component': 150, '(': 98, 'Component': 149, '{': 104, '>': 173, '': 70, '<': 169, 'List': 168, ':': 151, 'for': 145, 'public': 4}
{'}\n': 83, ';': 24, 'len': 14, 'return': 75, '}': 78, 'cnt': 20, '{': 16, ')': 15, '': 6, '==': 69, 'pos': 35, '(': 5, 'At': 65, 'char': 64, '.': 63, 'str': 8, 'if': 60, '+': 38, 'off': 11, '=': 21, 'int': 1, 'final': 33, '++': 30, '<': 26, 'NUM': 23, '_': 22, 'for': 17, ',': 9, 'String': 7, 'Newline': 4, 'Non': 3, 'private': 0}
{'}\n': 181, ';': 18, ')': 5, '(': 4, 'String': 2, 'to': 176, '.': 55, 'sb': 10, 'return': 173, '}': 172, 'STR': 59, '_': 58, 'append': 56, '{': 6, 'if': 19, 'Builder': 9, '': 1, 'new': 12, '=': 11, 'public': 0}
{'}\n': 87, ';': 49, ')': 13, '(': 6, 'Null': 42, 'Signer': 4, '{': 14, 'void': 1, 'public': 0}
{'}\n': 119, ';': 67, ')': 66, '(': 64, '.': 72, 'get': 99, 'entry': 82, 'map': 84, ':': 83, '>': 81, ',': 40, 'K': 20, '': 9, '<': 18, 'Entry': 74, 'Map': 33, 'for': 68, 'static': 17, 'public': 16, '@': 8}
{'}\n': 29, ';': 28, ')': 11, '(': 3, '.': 19, '': 13, '{': 16, 'Exception': 15, 'Interrupted': 14, 'sleep': 2, 'void': 1}
{'}\n': 48, ';': 20, 'BOOL': 46, '_': 45, '=': 44, 'Muted': 16, 'already': 15, ')': 10, '(': 9, 'Err': 7, 'set': 25, '.': 24, 'System': 23, '': 22, 'Out': 5, '}': 21, 'return': 19, '{': 11, 'if': 12, 'Stream': 8, 'And': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 74, ';': 45, '(': 42, ')': 25, '.': 56, '=': 33, ']': 31, '[': 30, 'Integer': 4, 'Big': 3, '': 2, '{': 26, '>': 23, '<': 19, 'List': 9, 'static': 1, 'public': 0}
{'}\n': 144, ';': 15, 'result': 11, 'return': 141, '}': 78, ')': 8, 'Size': 33, 'spec': 17, ',': 134, '(': 4, 'min': 131, '.': 23, 'Math': 129, '': 20, '=': 19, '{': 9, 'MOST': 123, 'AT_': 122, 'Spec': 7, 'Measure': 21, '==': 64, 'Mode': 18, 'if': 60, 'Bottom': 108, 'Padding': 101, 'get': 24, '+': 90, 'Top': 102, 'descent': 95, 'Paint': 54, 'Text': 53, 'm': 46, 'Ascent': 47, '-': 87, 'int': 1, 'else': 79, 'EXACTLY': 70, 'ascent': 56, 'measure': 2, 'Height': 3, 'private': 0}
{'}\n': 238, ';': 71, ')': 5, '(': 4, 'signum': 233, '.': 153, 'result': 149, ',': 29, 'NUM': 16, '_': 15, 'STR': 226, 'Equals': 223, 'assert': 205, '}': 70, ']': 11, 'i': 189, '[': 10, 'Bytes': 9, 'r': 87, '==': 213, 'res': 161, 'True': 206, '{': 6, '++': 202, 'length': 172, '<': 195, '=': 12, 'int': 72, 'for': 186, 'Array': 182, 'Byte': 181, 'to': 180, 'byte': 7, 'new': 116, 'Number': 114, 'b': 80, 'a': 8, 'Integer': 112, 'Big': 111, '': 110, 'Sign': 74, '-': 30, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 113, ';': 112, ')': 110, '(': 109, 'For': 104, 'wait': 103, '': 2, 'Stage': 80, '.': 65, 'Task': 6, '<': 19}
{'}\n': 145, ';': 124, '(': 11, '.': 133, '{': 78, ')': 77, 'chunks': 66, '>': 50, '': 1, '<': 46, 'List': 45}
{'}\n': 154, '}': 89, ';': 25, ')': 8, 'num': 61, '(': 3, 'put': 28, '.': 27, 'bb': 7, 'i': 46, '-': 77, 'NUM': 23, '_': 22, '*': 73, '>': 20, 'Id': 19, 'tuple': 131, 'byte': 60, '=': 13, '{': 9, '++': 57, '<': 52, 'int': 10, 'for': 43, 'oper': 37, 'operator': 40, 'Integer': 36, '': 4, 'Sec': 12, 'base': 11, 'Int': 29, 'window': 18, 'Buffer': 6, 'Byte': 5, 'insert': 1, 'void': 0}
{'}\n': 298, ';': 39, '.': 45, 'Overlap': 244, 'x': 46, '=': 43, ')': 17, ',': 9, '(': 5, 'Math': 118, '': 6, 'y': 64, 'bx1': 78, 'by1': 96, 'ay1': 60, 'bx2': 85, 'height': 75, 'b': 12, '+': 54, 'by2': 103, 'width': 57, 'a': 8, 'ay2': 67, 'ax2': 49, 'ax1': 42, '{': 18, 'Rectangle': 7, 'static': 1}
{'}\n': 96, ';': 23, 'Row': 15, 'To': 14, 'moved': 13, 'return': 91, '}': 90, ')': 5, ',': 49, 'TXT_': 46, '': 7, '(': 4, 'Value': 43, 'Field': 42, 'Display': 41, 'set': 40, ']': 67, 'Tile': 3, 'cur': 31, '[': 64, 'INDEX': 48, 'Index': 36, 'get': 34, '=': 16, '{': 11, 'if': 24, 'next': 2, '.': 18, 'super': 17, 'boolean': 1, 'Exception': 10, 'Control': 9, 'Model': 8, 'throws': 6, 'public': 0}
{'}\n': 75, ';': 74, '_': 66, '(': 26, 'Misc': 22, 'has': 2, ')': 37, '': 27, 'boolean': 1, 'public': 0}
{'}\n': 96, ';': 57, 'NUM': 94, '_': 93, '>': 64, ')': 14, '(': 6, 'size': 89, '.': 24, 'return': 86, '': 17, 'Intent': 71, 'query': 70, 'Manager': 19, 'package': 20, '=': 22, 'Info': 63, 'Resolve': 62, '<': 60, 'List': 59, 'Package': 18, 'get': 25, '{': 15, 'Available': 5, 'is': 3, 'boolean': 2}
{'}\n': 214, '}': 163, ';': 63, ')': 48, '(': 23, '{': 190, '': 7, 'get': 70, '.': 69, 'STR': 130, '_': 80, 'url': 38, '=': 67, 'String': 65}
{'}\n': 21, ';': 20, ')': 10, 'cert': 9, '(': 5, 'return': 12, '{': 11, 'Certificate': 8, 'X509': 7, '': 6}
{'}\n': 349, ';': 69, 'Wrapper': 31, 'rest': 65, 'return': 97, '}': 13, ')': 23, 'ERROR': 341, '': 1, '.': 20, 'Rest': 30, ',': 10, '(': 4, 'Message': 103, 'get': 166, 'e': 310, 'new': 89, '=': 6, 'error': 102, 'LOGGER': 274, '{': 7, 'Exception': 309, 'catch': 306, '+': 280, 'Name': 297, 'principal': 59, 'STR': 9, '_': 8, 'Id': 161, 'info': 276, 'OK': 270, 'set': 158, 'jpa': 124, 'dao': 122, 'md': 120, 'bdre': 118, 'ats': 116, 'wipro': 114, 'com': 112, 'try': 110, 'Result': 53, 'binding': 54, 'Error': 84, 'Binding': 52, 'Errors': 76, 'has': 75, 'if': 70, 'null': 68, 'Principal': 58, 'Valid': 44, '@': 0, 'Attribute': 37, 'Model': 36, 'insert': 32, 'public': 28, 'Body': 27, 'Response': 26, 'PUT': 22, 'Method': 19, 'Request': 2, 'method': 15, 'value': 5, 'Mapping': 3}
{'}\n': 41, ';': 40, ')': 21, 'start': 20, '(': 10, 'List': 35, 'as': 34, '.': 33, 'Arrays': 32, '': 1, ',': 14, 'distance': 13, 'Words': 9, 'nearest': 8, 'return': 23, '{': 22, '...': 19, 'Token': 6, 'Word': 5, 'final': 11, 'int': 12, '>': 7, '<': 3, 'Set': 2, 'public': 0}
{'}\n': 43, ';': 34, ')': 4, '(': 3, '.': 22, 'pair': 16, '': 13, '{': 5, 'public': 0}
{'}\n': 132, ';': 34, 'res': 24, 'return': 51, '}': 54, 'end': 88, '.': 42, 'i': 90, '=': 25, '{': 17, ')': 16, '(': 8, 'if': 35, 'else': 107, 'add': 97, 'start': 92, '': 1, 'NUM': 48, '_': 47, '==': 38, 'size': 43, 'intervals': 15, '||': 40, 'null': 39, '>': 6, '<': 3, 'List': 2, 'Array': 28, 'new': 26, 'Interval': 5, 'public': 0}
{'}\n': 143, ';': 70, ')': 10, '(': 5, '.': 137, 'return': 135, '}': 134, 'STR': 31, '_': 30, 'if': 71, ',': 29, 'Tokenizer': 14, 'String': 2, '': 1, 'new': 17, '=': 16, 'tokenizer': 15, '{': 11, 'private': 0}
{'}\n': 36, ';': 35, ')': 19, ',': 30, 'File': 15, 'Store': 17, 'key': 16, '(': 9, '{': 23, 'Exception': 22, '': 1, 'Not': 12}
{'}\n': 153, ';': 150, ')': 140, '(': 55, '{': 141, 'info': 75, 'Info': 73, 'Rendering': 64, 'Plot': 63, '': 25, 'public': 3}
{'}\n': 140, ';': 139, ')': 93, 'Controller': 63, '(': 68, 'add': 126, '.': 125, 'List': 108, '': 79, 'void': 1}
{'}\n': 111, ';': 23, 'return': 97, ')': 12, '.': 16, 'Box': 9, 'check': 10, '(': 6, 'get': 33, 'set': 17, '{': 13, 'JCheck': 8, '': 1, 'private': 0}
{'}\n': 36, ';': 27, ')': 26, '(': 16, 'Event': 9, '.': 22, 'CLOSING': 25, 'WINDOW_': 24, '': 7, 'Window': 3, 'void': 1}
{'}\n': 543, ';': 124, ')': 68, 'param': 44, '(': 5, 'Value': 334, '': 10, '.': 111, '}': 444, '_': 399, '{': 82, 'null': 301, 'Name': 48, 'if': 126, 'void': 1}
{')': 512, '': 22, 'Null': 24, 'Not': 23, '@': 21, ',': 37, '(': 11, 'public': 3}
{'}\n': 40, '}': 39, ';': 38, ')': 9, '.': 22, '(': 5, 'Case': 29, 'Lower': 28, 'to': 27, 'alias': 8, 'remove': 23, 'entries': 18, '{': 15, 'synchronized': 16, 'Exception': 14, 'Store': 13, 'Key': 12, '': 6, 'throws': 10, 'String': 7, 'Entry': 4, 'Delete': 3, 'engine': 2, 'void': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 8, '(': 4, 'Elements': 7, '{': 9, 'num': 6, 'int': 5, '': 1, 'public': 0}
{'}\n': 160, '}': 58, ';': 57, ')': 30, '(': 5, '.': 63, 'out': 116, ']': 23, 'm': 148, '[': 22, 'Id': 29, 'Internal': 28, 'Msg': 27, 'To': 26, 'Index': 25, 'mat': 24, '_': 120, '{': 35, ':': 78, 'for': 59, ',': 10, 'STR': 121, 'printf': 118, 'Value': 112, 'get': 95, 'entry': 77, '=': 92, '>': 17, 'Integer': 74, '': 6, '<': 13, 'final': 1, 'Key': 96, 'String': 68, 'Set': 83, 'Clusters': 39, 'Entry': 65, 'Map': 62, 'Data': 16, 'cluster': 18, 'update': 44, 'null': 41, '==': 40, 'm_final': 38, 'if': 36, 'Exception': 34, 'Ade': 33, 'throws': 31, 'int': 21, 'Cluster': 15, 'List': 12, 'print': 3, 'void': 2, 'public': 0}
{'}\n': 45, ';': 28, ')': 18, 'b': 13, '(': 5, 'add': 2, '.': 21, 'gui': 8, 'this': 35, 'Listener': 33, 'Action': 23, 'cmd': 17, 'Command': 24, 'set': 22, '{': 19, 'String': 16, '': 6, ',': 9, 'JPanel': 7, 'GUI': 4, 'To': 3, 'void': 1, 'protected': 0}
{'}\n': 159, ';': 76, ')': 23, 'Name': 9, 'field': 8, '(': 5, '': 6, 'new': 46, 'NUM': 123, '_': 52, '.': 111, 'if': 28, 'STR': 53, 'Exception': 50, 'Argument': 49, 'Illegal': 48, 'throw': 45, '{': 27, 'String': 7, ',': 15}
{'}\n': 182, ';': 181, ')': 104, ',': 75, '(': 54, '.': 144, 'p_polyline': 70, '{': 105, 'int': 88, '': 34, 'Shape': 36}
{'}\n': 35, ';': 34, ')': 10, '(': 4, 'Path': 30, 'to': 29, '.': 28, 'Folder': 9, 'Or': 8, 'file': 7, 'delete': 3, 'null': 21, '!=': 20, 'if': 15, '{': 14, 'File': 6, '': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 87, ';': 38, 'ret': 85, 'return': 84, ')': 18, '.': 67, '': 65, ']': 4, '=': 42, 'int': 40, '[': 3, 'double': 2, 'new': 29, '{': 19, 'Array': 6, 'static': 1, 'public': 0}
{'}\n': 487, ';': 65, 'Bean': 34, 'Factory': 13, ')': 24, 'Properties': 369, '(': 14, '.': 77, '': 1, 'Property': 216, 'get': 195, '=': 153, 'new': 120, '{': 25, '@': 0}
{'}\n': 85, ';': 57, ')': 15, 'NUM': 40, '_': 39, '-': 44, 'maxval': 28, '(': 3, 'lower': 8, 'return': 58, 'nbits': 14, ',': 6, 'pow': 37, '.': 36, 'Math': 35, '': 34, 'int': 13, '=': 29, '{': 16, 'upper': 11, 'double': 7, 'value': 5, 'protected': 0}
{'}\n': 119, ';': 56, 'return': 116, ')': 30, 'count': 113, '}': 57, '_': 53, '{': 43, 'NUM': 83, '==': 40, '(': 4, 'if': 36, '-': 74, '.': 70, 'Stream': 39, 'input': 38, '=': 67, '<': 62, 'while': 59, 'STR': 54, 'IOException': 51, '': 50, 'new': 49, 'throw': 48, 'null': 41, 'public': 0}
{'}\n': 178, '}': 140, ';': 33, ')': 16, '(': 10, 'To': 131, 'forward': 130, 'Message': 152, 'get': 29, '.': 91, 'e': 146, ',': 50, 'STR': 162, '_': 161, 'ERROR': 159, 'TYPE_': 158, '': 11, 'CCAlert': 155, 'Alert': 151, 'Inline': 150, 'set': 42, '{': 22, 'Exception': 21, 'AMConsole': 144, 'catch': 141, 'Context': 135, 'Request': 9, 'vb': 67, 'Map': 5, 'Session': 44, 'Pg': 102, 'pass': 101, 'Trail': 97, 'Page': 43, 'unlock': 95, 'class': 92, 'Bean': 66, 'View': 65, 'List': 6, 'DSAttribute': 4, 'WSPPService': 60, '=': 28, 'values': 27, 'Hash': 53, 'ATTRIBUTE': 49, 'PROPERTY_': 48, 'Attribute': 45, 'Profile': 37, 'Save': 36, 'Before': 35, 'on': 34, 'Values': 30, 'try': 23, 'Control': 20, 'Model': 19, 'throws': 17, 'event': 15, 'Event': 14, 'Invocation': 13, 'Tbl': 3, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 223, ';': 25, 'null': 15, 'return': 220, '}': 142, '=': 35, 'n': 67, 'b': 57, 'outer': 38, 'break': 89, ')': 9, '(': 5, 'if': 11, '_': 174, 'NUM': 175, 'key': 8, '.': 70, ',': 53, 'cmp': 34, 'cpr': 162, 'c': 81, '==': 14, 'v': 78, '||': 150, 'value': 124, 'f': 101, 'Delete': 133, 'help': 132, '{': 10, 'next': 71, '!=': 110, '>': 33, 'V': 2, '': 1, 'K': 32, '<': 28, 'Node': 49, 'int': 80, 'Object': 7, 'Predecessor': 60, 'find': 59, 'for': 40, ':': 39, 'comparator': 36, 'super': 30, '?': 29, 'Comparator': 27, 'Exception': 22, 'Pointer': 21, 'Null': 20, 'new': 18, 'throw': 17, 'do': 3}
{'}\n': 21, ';': 20, ')': 11, 'e': 10, '(': 5, 'Line': 16, 'Swf': 2, 'dump': 13, '{': 12, 'Event': 4, '': 6, 'handle': 1, 'void': 0}
{'}\n': 37, ';': 21, '(': 4, 'Reply': 3, ')': 5, '{': 6}
{'}\n': 68, '}': 47, ';': 38, ')': 15, 'STR': 56, '_': 55, '+': 57, '(': 7, 'Path': 59, 'get': 58, 'IOException': 18, '': 1, 'new': 51, 'throw': 50, '{': 19, 'else': 48, 'b': 14, '.': 30, 'Buffer': 23, 'byte': 11, 'offset': 9, 'int': 34, 'position': 31, 'null': 25, '!=': 24, 'if': 20, 'throws': 16, ']': 13, '[': 12, ',': 10, 'long': 8, 'void': 5, 'synchronized': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 21, ';': 20, ')': 5, '(': 4, 'Code': 13, 'Hash': 12, 'identity': 11, '.': 10, 'System': 9, '': 8, 'return': 7, '{': 6, 'public': 0}
{'}\n': 116, '}': 115, '.': 29, '{': 8, ')': 7, '(': 3, 'view': 37, 'View': 5, 'if': 56, '': 4, ';': 27, '=': 16}
{'}\n': 183, ';': 42, ')': 11, '(': 4, 'set': 176, '.': 21, 'pc': 174, '=': 86, '': 13, 'NUM': 100, '_': 32, '}': 43, 'null': 116, ',': 61, 'STR': 33, 'Name': 60, 'bundle': 59, 'Exception': 16, 'Login': 15, 'Auth': 14, 'new': 53, 'throw': 52, '{': 17, '<=': 98, 'length': 97, 'ext': 85, 'if': 18, 'state': 6, 'Callback': 82, 'get': 87, ']': 69, '[': 68, 'Integer': 73, 'Object': 67, 'Length': 49, '>': 47, '+': 34, 'message': 22, 'debug': 20, 'Enabled': 23, 'throws': 12, 'int': 5, 'void': 1, 'public': 0}
{'}\n': 288, ';': 167, 'return': 285, 'NUM': 277, '_': 164, '.': 138, '': 7, '(': 140, ')': 21, 'calendar': 15, 'Calendar': 14}
{'}\n': 41, ';': 30, 'removed': 22, 'return': 38, ')': 18, 'location': 12, '(': 3, 'Removed': 33, 'Item': 32, 'notify': 31, 'object': 17, 'remove': 2, '.': 25, 'data': 24, '=': 23, 'boolean': 1, 'final': 20, 'int': 11, 'public': 0}
{'}\n': 42, ';': 36, ')': 10, '(': 26, 'user': 32, '.': 23, 'users': 9, '': 1, 'List': 13, '>': 17, '<': 14, 'User': 7, 'Users': 4}
{'}\n': 31, ';': 30, ')': 12, 'Name': 25, 'device': 10, '{': 18, 'Exception': 17, 'Api': 16, 'VPlex': 15, '': 8, 'throws': 13, '(': 7, 'Device': 6}
{'}\n': 188, ';': 70, ')': 12, '(': 7, 'return': 163, 'NUM': 127, '_': 126, 'read': 4, '.': 27, 'in': 11, '=': 22, 'VInt': 29, '{': 16, 'IOException': 15, '': 1, 'throws': 13, 'Input': 10, 'Data': 9, 'static': 0}
{'}\n': 40, ';': 37, ')': 5, '(': 4, '.': 26, '{': 6, 'void': 1, 'public': 0}
{'}\n': 93, ';': 92, ')': 23, ']': 31, 'NUM': 89, '_': 35, '[': 30, 'options': 32, ',': 37, 'null': 82, 'MESSAGE': 80, 'WARNING_': 79, '': 28, '.': 54, 'Pane': 53, 'JOption': 52, 'OPTION': 72, 'STR': 36, '(': 22, 'Dialog': 57, 'Option': 56, 'show': 55, '{': 34, '=': 33, 'Object': 29}
{'}\n': 70, ';': 33, ')': 11, 'datasource': 10, '(': 7, 'add': 65, '.': 17, 'Sources': 49, 'data': 48, 'NUM': 59, '_': 21, '>': 56, '<': 55, 'List': 36, 'Array': 53, '': 1, 'new': 51, '=': 37, 'Instance': 44, 'get': 18, 'Show': 3, 'Tv': 2, 'tv': 34, 'STR': 22, '+': 24, 'String': 9, 'BUNDLE': 16, 'super': 13, '{': 12, 'Datasource': 5, 'Update': 4, 'public': 0}
{'}\n': 47, ';': 42, 'line': 10, 'return': 44, '}': 43, ')': 30, 'NUM': 36, '_': 35, '(': 4, '=': 11, '{': 8, 'Line': 3}
{'}\n': 56, '}': 55, ';': 26, ')': 4, 'selection': 24, ',': 51, 'Selection': 13, 'old': 12, '(': 3, 'Changed': 47, 'fire': 45, '{': 5, 'if': 33, '.': 28, '>': 11, 'Sensor': 10, '': 6, '<': 8, 'Set': 7, 'Hash': 17, 'new': 15, '=': 14, 'void': 1, 'public': 0}
{'}\n': 253, ';': 124, '}': 125, ')': 53, '(': 56, 'File': 30, 'Absolute': 162, 'get': 111, '.': 110, 'file': 44, '': 28, '=': 104, '{': 61, 'null': 59, '!=': 58, 'if': 55}
{'}\n': 23, '}': 22, ';': 21, ')': 6, '(': 5, '{': 7, 'Closed': 13, 'is': 12, '.': 11, 'socket': 10, 'if': 8, 'public': 0}
{'}\n': 21, ';': 20, ')': 10, 'message': 9, '(': 6, '{': 11, 'IMessage': 8, '': 1}
{'}\n': 61, ';': 60, ')': 8, ',': 44, 'NUM': 46, '_': 29, '.': 13, 'this': 48, 'hash': 7, '(': 3, 'arraycopy': 41, 'System': 39, '': 1, 'STR': 30, 'Exception': 27, 'Argument': 26, 'Illegal': 25, 'new': 23, 'throw': 22, '{': 9, '!=': 15, 'length': 14, 'if': 10, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 283, ';': 65, ')': 53, '(': 76, 'forward': 36, '.': 31, '': 9, 'Flags': 220, '=': 204, 'Flag': 34, 'Edge': 29, 'Store': 30, '}': 128, 'STR': 78, '_': 77, 'Tag': 87, '{': 54, 'if': 129, ',': 23, '>': 35, '<': 27, 'Set': 26, 'Enum': 25}
{'}\n': 458, ';': 51, ')': 9, ',': 315, '(': 4, 'get': 126, '.': 45, 'model': 298, '': 5, 'set': 248, '=': 92, 'Model': 12, 'event': 8, 'Display': 3, 'begin': 2, 'super': 44, '{': 15, 'Exception': 14, 'Control': 13, 'throws': 10, 'Event': 7, 'void': 1, 'public': 0}
{'}\n': 59, ';': 19, ')': 7, 'b': 53, '(': 6, '.': 41, '=': 14, ']': 3, '[': 2, 'byte': 1, '}': 32, 'return': 29, '{': 11, 'NUM': 26, '_': 25, '-': 24, '==': 23, 'if': 20, 'read': 4, 'len': 13, 'int': 12, 'IOException': 10, '': 9, 'throws': 8}
{'}\n': 15, ';': 14, 'STR': 13, '_': 12, 'return': 11, '{': 10, ')': 9, '(': 8, 'Text': 7, 'Tip': 6, 'String': 2, '': 1, 'public': 0}
{'}\n': 53, ';': 52, ')': 24, '(': 4, 'List': 36, 'as': 45, '.': 44, 'Arrays': 43, '': 1, '>': 13, '<': 7, 'Array': 35, 'new': 33, ',': 15, 'alias': 18, 'clazz': 14, 'join': 3, 'return': 26, '{': 25, '...': 22, 'String': 17, 'Object': 12, 'Data': 11, 'extends': 9, '?': 8, 'Class': 6, 'Joiner': 2, 'public': 0}
{'}\n': 14, '{': 6, ')': 5, '(': 4, 'close': 2, 'void': 1, 'public': 0}
{'}\n': 374, ';': 36, 'return': 371, '}': 56, 'break': 367, ')': 10, 'NUM': 90, '_': 85, ']': 40, '[': 39, 'groups': 187, '(': 9, '.': 46, '': 1, 'new': 26, '=': 25, ':': 208, 'case': 229, '{': 17, 'index': 213, 'switch': 224, ',': 49, 'regex': 219, 'line': 207, 'match': 215, 'int': 212, 'lines': 101, 'String': 59, 'for': 203, 'STR': 86, 'get': 82, 'Properties': 80, 'MDSDialog': 79, 'buf': 61, 'Lines': 104, 'prompts': 41, 'For': 76, 'Wait': 75, 'send': 74, 'Builder': 60, 'THAN': 55, 'GREATER_': 54, 'SSHPrompt': 38, 'POUND': 48, '>': 6, '<': 3, 'Exception': 16, 'Controller': 15, 'Device': 14, 'Network': 13, 'throws': 11, 'show': 7, 'public': 0}
{'}\n': 99, ';': 35, ')': 9, '(': 5, 'clear': 32, '.': 31, 'Pvs': 90, 'Vid': 89, '': 18, 'SVC_': 20, 'OBD_': 19, 'Service': 14, '{': 10, 'void': 1}
{'}\n': 44, ';': 32, 'return': 41, ')': 14, '(': 6, '.': 24, 'o': 28, '': 1, '=': 20, 'Edge': 3, 'Quad': 2, '{': 15, ',': 10, 'Vertex': 8, 'public': 0}
{'}\n': 25, ';': 24, ')': 13, '(': 5, 'sort': 3, '.': 17, 'Collections': 16, '': 15, '{': 14, 'void': 2, 'public': 0}
{'}\n': 28, ';': 27, ')': 11, 'value': 10, '(': 4, 'String': 6, 'to': 21, '.': 20, '': 1, ',': 8, 'key': 7, 'with': 3, 'return': 13, '{': 12, 'B': 2, 'default': 0}
{'}\n': 232, '}': 178, ';': 55, ')': 42, 'fe': 199, '(': 4, 'append': 224, '.': 21, 'List': 32, 'result': 40, 'fname': 120, ',': 8, 'd': 46, 'File': 6, '': 5, 'new': 159, 'this': 207, 'Object': 20, 'Regular': 203, '=': 47, 'Java': 18, '{': 43, 'Kinds': 26, 'file': 25, 'Valid': 185, 'is': 133, 'if': 56, 'else': 180, 'recurse': 29, 'subdirectory': 12, 'Directory': 3, 'Relative': 10, 'directory': 7, 'list': 2, '&&': 142, 'f': 113, 'Name': 125, 'get': 50, 'String': 119, 'files': 74, ':': 114, 'for': 109, 'Files': 79, 'sort': 93, 'Arrays': 99, 'null': 87, '!=': 95, 'return': 68, '==': 86, ']': 73, '[': 72, 'Check': 61, 'Map': 60, 'case': 59, '!': 58, '>': 24, '<': 16, 'Buffer': 33, 'boolean': 28, 'Kind': 23, 'Set': 15, 'void': 1, 'private': 0}
{'}\n': 82, ';': 18, 'path': 13, 'return': 79, ')': 11, 'NUM': 27, '_': 26, '-': 25, 'height': 10, ',': 8, '(': 5, 'To': 22, 'line': 35, '.': 14, 'width': 7, 'move': 21, 'reset': 15, '{': 12, 'int': 6, 'decode': 3, 'Shape': 2, '': 1, 'private': 0}
{'}\n': 95, ';': 92, ')': 60, 'a': 81, '(': 55, '': 67, '{': 64, 'test': 44}
{'}\n': 21, ';': 20, ')': 10, 'Name': 9, 'resource': 8, '(': 16, '.': 14, '{': 11, 'String': 7, '': 6, 'boolean': 1, 'public': 0}
{'}\n': 51, ';': 30, ')': 12, '(': 7, 'read': 5, '.': 24, 'in': 11, '=': 43, 'External': 6, 'super': 23, '{': 22, 'Exception': 21, 'Found': 20, 'Not': 19, 'Class': 18, '': 1, ',': 16, 'IOException': 15, 'throws': 13, 'Input': 10, 'Object': 9, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 17, ';': 16, ')': 6, 'NUM': 11, '_': 10, ',': 12, '(': 5, 'this': 8, '{': 7, 'Map': 4, 'Id': 3, '': 1, 'public': 0}
{'}\n': 140, ';': 74, ')': 47, 'factories': 56, '(': 9, 'Factories': 135, 'Balance': 134, 'load': 133, 'return': 132, '}': 131, 'Options': 44, 'ldap': 45, ',': 17, 'Unit': 41, 'Time': 40, 'Beat': 33, 'heart': 32, 'Interval': 34, 'password': 25, 'username': 20, 'ldapurl': 79, 'Factory': 4, 'Connection': 3, 'new': 5, '.': 69, '{': 48, 'servers': 16, ':': 80, 'LDAPURL': 14, '': 2, 'for': 75, 'size': 70, '>': 15, '<': 12, 'List': 50, 'Array': 60, '=': 57, 'String': 19, 'int': 31, ']': 24, '[': 23, 'char': 22, 'Set': 11, 'Failover': 6, 'static': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 10, '.': 21, '(': 4, 'this': 17, 'Exception': 15, 'Argument': 14, 'Illegal': 13, '': 6, 'Arg': 9, 'final': 5, 'public': 0}
{'}\n': 27, ';': 20, 'ordinal': 12, '.': 22, '=': 18, '{': 14, ')': 13, '': 1, 'String': 7}
{'}\n': 211, '}': 210, ';': 74, ')': 24, '.': 87, ',': 117, 'paint': 2, '(': 4, 'g2': 57, '{': 25, 'g': 11, 'D': 56, 'Graphics2': 55, '': 9, '=': 58, 'if': 45, 'Graphics': 10, 'void': 1, 'public': 0}
{'}\n': 113, ';': 57, 'return': 110, ')': 12, '(': 4, 'close': 106, '.': 68, 'Input': 59, 'l': 60, 'Class': 98, 'get': 97, ',': 8, 'Object': 88, 'read': 87, 'kryo': 85, '=': 51, 'Operator': 82, 'File': 80, '': 1, 'Array': 39, 'Byte': 38, 'to': 69, 'bos': 42, 'new': 52, 'Stream': 41, 'Output': 40}
{'}\n': 154, ';': 148, '_': 119, 'hostname': 80, 'return': 132, ')': 82, '(': 51, '.': 99, '{': 83, 'String': 46, '': 45, 'static': 1, 'private': 0}
{'}\n': 140, ';': 73, 'Template': 60, '=': 75, ')': 64, '(': 4, 'Time': 102, 'get': 101, '.': 100, 'Date': 44, 'modification': 51, '': 1, 'new': 94, 'm_modification': 107, 'creation': 45, 'm_creation': 91, 'description': 40, 'm_description': 87, 'name': 35, 'm_name': 83, 'Id': 30, 'm_id': 78, 'provider': 25, 'm_provider': 74, '{': 65, 'Debugger': 59, 'final': 5, ',': 10, 'String': 34, 'int': 28, 'Configuration': 3, 'public': 0}
{'}\n': 85, ';': 24, 'p': 16, 'return': 82, ')': 11, 'BOOL': 79, '_': 78, ',': 77, '(': 7, 'Iterator': 73, 'Path': 15, 'get': 71, '.': 31, 's': 10, 'append': 67, 'make': 32, 'Transform': 26, '': 1, '=': 17, 'General': 14, 'new': 18, '{': 12, 'Shape': 2, 'To': 4, 'public': 0}
{'}\n': 64, ';': 62, ')': 41, 'window': 25, '(': 16, '{': 42, 'Window': 11, 'public': 3}
{'}\n': 18, ';': 17, ')': 5, '(': 4, 'Millis': 14, 'Time': 13, 'current': 12, '.': 11, 'System': 10, '': 1, '=': 8, 'time1': 7, '{': 6, 'Logger': 3, 'Performance': 2, 'public': 0}
{'}\n': 39, ';': 38, 'Url': 14, ',': 29, '(': 5, '{': 24, '': 1, ')': 15, 'return': 12, 'String': 11}
{'}\n': 150, ';': 68, '}': 134, ')': 19, '': 6, '(': 29, '.': 90, '=': 83, '<': 73, 'NUM': 40, '_': 39, 'pin': 15, 'final': 11, 'public': 0}
{'}\n': 62, '}': 52, ';': 51, 'return': 46, '{': 10, 'else': 53, ')': 9, '(': 5, 'With': 39, 'starts': 38, '.': 14, 'uri': 8, 'STR': 19, '_': 18, 'if': 11, 'String': 7, '': 6, 'public': 0}
{'}\n': 54, ';': 53, '_': 40, '==': 43, ')': 10, 'NUM': 41, '.': 14, 'str': 9, '(': 6, '&&': 23, 'return': 12, '{': 11, 'String': 8, '': 7, 'boolean': 2}
{'}\n': 91, '}': 81, ';': 30, 'BOOL': 34, '_': 22, 'return': 84, '{': 13, 'else': 82, ')': 4, '(': 3, 'wait': 77, '.': 16, 'mutex': 39, 'size': 67, 'list': 48, 'if': 63, ',': 9, 'Path': 20, 'root': 19, 'Children': 54, 'get': 53, 'Keeper': 7, 'zoo': 14, '=': 49, '>': 47, 'String': 46, '': 6, '<': 44, 'List': 43, 'synchronized': 37, 'while': 31, 'NUM': 28, 'name': 25, '+': 21, 'STR': 23, 'Exception': 8, 'Interrupted': 11, 'throws': 5, 'boolean': 1, 'public': 0}
{'}\n': 50, ';': 46, 'this': 48, 'return': 47, ')': 19, 'Name': 18, 'as': 17, ',': 14, '(': 9, 'Expression': 36, 'Clause': 3, 'Select': 2, '': 1, 'new': 26, 'add': 4, '.': 23, 'List': 22, 'select': 21, '{': 20, 'String': 16, 'public': 0}
{'}\n': 42, ';': 41, ')': 9, '(': 4, '.': 33, 'Name': 23, 'interface': 7, '{': 10, '': 5, 'Interface': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 51, ';': 28, 'string': 11, 'return': 48, '}': 47, ')': 16, 'i': 19, '(': 8, 'substring': 15, '.': 22, '=': 20, '{': 17, 'NUM': 35, '_': 34, '-': 33, '!=': 32, 'if': 29, 'Of': 7, 'index': 23, 'int': 18, 'String': 3, '': 2, ',': 12, 'Index': 6, 'cut': 4, 'static': 1, 'public': 0}
{'}\n': 243, '}': 203, ';': 137, ')': 12, 'STR': 226, '_': 225, '+': 227, '(': 8, 'Exception': 16, 'Registry': 7, '': 14, 'new': 164, 'throw': 212, '{': 17, 'e': 209, 'catch': 204, ',': 175, '.': 86, 'try': 18, 'throws': 13}
{'}\n': 61, ';': 23, ')': 5, '(': 4, 'next': 49, '.': 29, 'it': 26, 'Equals': 45, 'assert': 44, '{': 43, 'Next': 39, 'has': 38, 'iterator': 30, 'q': 15, '=': 27, 'Iterator': 3, '': 7, 'Queue': 14, 'Blocking': 13, 'Linked': 12, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 20, ';': 19, 'User': 7, 'current': 8, '=': 16, '.': 13, '{': 11, ')': 10, '': 4, '(': 3}
{'}\n': 247, '}': 124, '{': 12, ')': 11, 'Exception': 230, 'Bounds': 237, 'Of': 236, 'Out': 235, 'Index': 234, 'Array': 89, '': 6, '|': 231, 'Pointer': 229, 'Null': 228, '(': 5, 'catch': 225, ';': 40, 'event': 167, 'Nodes': 218, 'tree': 217, '.': 72, 'listener': 208, 'try': 213, 'listeners': 210, ':': 86, 'Listener': 207, 'Model': 165, 'Tree': 21, 'for': 79, ']': 187, '[': 186, 'Object': 194, 'new': 87, ',': 176, 'index': 156, 'int': 185, 'Path': 180, 'get': 97, 'this': 175, 'Event': 166, '=': 24, 'NUM': 160, '_': 159, '-': 158, '>': 92, 'if': 154, 'Show': 4, 'Map': 71, 'node': 70, 'tv': 9, '<': 91, 'List': 90, 'Tv': 3, 'root': 15, 'Node': 22, 'synchronized': 13, 'void': 1, 'private': 0}
{'}\n': 142, ';': 68, ')': 21, '.': 9, '_': 103, '(': 7, '{': 22, 'else': 108, '}': 107, 'BOOL': 104, 'Compliance': 2, 'set': 100, 'policy': 98, 'operation': 20, 'is': 74, '': 1, 'Policy': 40, 'get': 32, 'Operation': 19, 'beans': 16, 'agent': 14, 'emm': 12, 'wso2': 10, 'org': 8, 'check': 4, 'Feature': 3}
{'}\n': 49, ';': 27, ')': 16, '(': 5, 'Class': 11, 'get': 37, '.': 30, 'o': 35, 'From': 33, 'Assignable': 32, 'is': 31, 'c': 29, 'return': 28, '': 6, 'null': 22, '==': 21, 'if': 18, '{': 17, '>': 14, '?': 13, '<': 12, ',': 9, 'static': 1, 'public': 0}
{'}\n': 260, '}': 259, ';': 258, ')': 229, '(': 225, 'close': 249, '.': 248, 'Socket': 241, 'datagram': 240, '{': 230, 'null': 243, '!=': 242, 'if': 238, 'public': 3}
{'}\n': 72, ';': 70, ')': 7, '(': 6, 'Switch': 36, '': 11, '{': 8}
{'}\n': 328, ';': 179, 'return': 324, ')': 80, 'get': 238, '.': 116, 'vdc': 63, '(': 26, '!': 210, 'if': 201, '': 39, '}': 180, 'Config': 53, 'Vdc': 47, 'public': 0}
{'}\n': 40, ';': 39, 'target': 35, '.': 27, '{': 17, ')': 16, 'handler': 15, '': 4, ',': 8, 'String': 5, '(': 3}
{'}\n': 39, ';': 20, ')': 7, 'normalized': 12, '(': 3, '=': 14, '{': 8, '': 4}
{'}\n': 22, ';': 21, ')': 8, 'settings': 7, '(': 4, '.': 16, '{': 13, '': 1}
{'}\n': 124, '}': 122, ';': 51, ')': 31, '(': 81, '.': 87, '{': 32, 'has': 88, 'e': 86, ',': 12, 'Event': 35, '': 9, 'type': 11, 'String': 10, 'void': 1}
{'}\n': 22, ';': 21, ')': 7, 'Model': 19, 'color': 18, ',': 17, '(': 4, 'For': 3, '.': 12, 'Type': 11, 'surface': 10, 'return': 9, '{': 8, 'int': 1, 'public': 0}
{'}\n': 205, ';': 22, 'carry': 18, 'return': 202, '}': 199, ')': 15, 'STR': 40, '_': 20, '==': 38, ']': 9, 'NUM': 91, '-': 146, 'icarry': 14, '[': 8, 'ca1': 10, '||': 41, '(': 5, '=': 19, '{': 16, '>': 135, '&&': 133, '!': 131, 'if': 23, 'length': 29, '.': 28, '<': 26, 'ii': 86, 'break': 117, '!=': 112, '++': 103, 'for': 93, '+': 89, 'int': 13, 'else': 73, 'BOOL': 21, 'boolean': 1, ',': 11, 'char': 7, 'Carry': 4, 'For': 3, 'check': 2, 'private': 0}
{'}\n': 39, ')': 37, '(': 34, 'Component': 25, '': 6}
{'}\n': 192, '}': 184, ';': 47, ')': 18, '(': 6, 'get': 170, '.': 84, '{': 19, 'file': 54, '+': 117, 'STR': 116, '_': 115, 'if': 20, 'Path': 55, 'File': 72, '': 10, 'new': 70, '=': 69, 'Paths': 15, ':': 58, 'String': 11, 'for': 50, 'null': 29, 'Directory': 4, 'static': 1, 'public': 0}
{'}\n': 80, '}': 76, ';': 75, ')': 14, '(': 7, 'String': 52, 'to': 51, '.': 23, 'dir': 10, 'STR': 47, '_': 46, 'IOException': 17, '': 8, 'new': 37, 'throw': 36, '{': 18, '!': 21, '&&': 27, 'if': 19, 'throws': 15, 'File': 9, 'static': 1, 'public': 0}
{'}\n': 121, ';': 120, 'NUM': 112, '_': 111, ')': 33, '(': 9, 'length': 80, '.': 79, 'cs': 24, 'null': 64, 'return': 41, '': 16, 'static': 1, 'public': 0}
{'}\n': 96, ';': 95, ')': 71, 'type': 26, '(': 4, '.': 77, 'visited': 76, 'return': 73, '{': 72, 'Type': 25, '': 23}
{'}\n': 322, '}': 175, ';': 49, ')': 31, 'i': 299, '.': 60, 'NUM': 105, '_': 104, '(': 7, 'Value': 241, 'int': 240, 'Terminators': 236, 'if': 227, 'Integer': 211, '': 8, 'eoln': 132, '{': 167, 'STR': 165, 'length': 79, 'null': 71, '!=': 70, 'native': 58, 'For': 40, 'get': 37, '=': 36, ',': 11, 'String': 9}
{'}\n': 220, '}': 30, ';': 29, ')': 24, ',': 211, '.': 143, '': 185, 'else': 171, '(': 5, 'if': 128, '=': 66, '+': 94, 'int': 6, 'End': 78, 'Gap': 68, 'Start': 69, '{': 14}
{'}\n': 197, '}': 174, ';': 148, ')': 68, '.': 167, '(': 5, 'append': 168, '{': 69, '++': 163, 'i': 153, '<': 159, 'NUM': 91, '_': 90, '=': 120, 'int': 10, 'for': 150, 'String': 3, '': 2, 'new': 121, 'padding': 15, 'if': 78, 'pad': 4, 'static': 1, 'public': 0}
{'}\n': 73, '.': 28, ')': 10, '(': 5, 'Transform': 51, ';': 19, '=': 13, '{': 11, '': 6, 'void': 2}
{'}\n': 33, ';': 31, ')': 18, 'listener': 15, '(': 6, 'add': 3, '.': 26, 'listeners': 25, '{': 19, 'Listener': 5, '': 7, 'void': 2, 'public': 0}
{'}\n': 245, '}': 35, ';': 34, ')': 16, 'con': 83, '(': 5, 'Connection': 82, 'close': 142, '.': 62, 'Util': 236, 'Db': 235, '': 7, '{': 17, 'finally': 232, 'Message': 190, 'get': 63, 'sqle': 158, 'Exception': 221, 'State': 220, 'Illegal': 219, 'new': 56, 'throw': 216, ',': 10, '+': 76, 'STR': 75, '_': 74, 'SEVERE': 206, 'Level': 203, 'log': 200, 's_logger': 70, 'return': 195, 'info': 177, 'NUM': 116, '==': 170, 'Code': 167, 'Error': 166, 'if': 18, 'SQLException': 157, 'final': 6, 'catch': 153, 'commit': 148, 'ps': 99, 'execute': 136, 'Ts': 40, 'Till': 15, 'mute': 14, 'Timestamp': 37, 'set': 112, 'String': 8, 'Statement': 98, 'prepare': 103, '=': 41, 'Prepared': 97, 'try': 93, 'Database': 86, 'fine': 72, 'Time': 64, 'null': 42, '!=': 48, 'Muted': 3, 'remove': 28, 'is': 20, 'Date': 13, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 359, '}': 303, ';': 36, ')': 14, 'response': 13, '(': 9, 'Headers': 352, 'Cache': 351, 'parse': 350, '.': 22, 'Parser': 348, 'Header': 347, 'Http': 346, '': 1, ',': 69, 'bitmap': 58, 'success': 341, 'Response': 2, 'return': 319, '{': 15, 'else': 304, 'Error': 328, 'Parse': 8, 'new': 46, 'error': 323, 'null': 60, '==': 315, 'if': 242, 'Bitmap': 5, 'temp': 218, '=': 20, 'recycle': 299, 'BOOL': 83, '_': 67, 'Height': 118, 'desired': 127, 'Width': 108, 'Scaled': 280, 'create': 279, '>': 6, 'get': 130, '||': 260, '&&': 248, '!=': 246, 'Options': 42, 'decode': 43, 'length': 100, 'data': 19, 'NUM': 96, 'Array': 91, 'Byte': 90, 'Factory': 39, 'actual': 107, 'Size': 196, 'Sample': 195, 'Best': 199, 'find': 198, 'in': 77, 'Bounds': 80, 'Decode': 79, 'Just': 78, 'Max': 135, 'm': 134, 'Dimension': 132, 'Resized': 131, 'int': 106, 'out': 113, ']': 18, '[': 17, 'byte': 16, 'Network': 11, 'do': 7, '<': 3, 'private': 0}
{'}\n': 17, ';': 16, ')': 5, '(': 4, 'Empty': 3, 'is': 2, '.': 11, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 37, '}': 36, ';': 20, 'BOOL': 33, '_': 32, '=': 31, 'closed': 12, ')': 4, '(': 3, 'close': 2, '.': 25, 'out': 24, 'finish': 17, '{': 8, '!': 11, 'if': 9, 'IOException': 7, '': 6, 'throws': 5, 'void': 1, 'public': 0}
{')': 16, 'Object': 13, '': 2, '<': 11}
{'}\n': 82, ';': 17, 'rnd': 36, ')': 10, 'byte': 6, '(': 5, '=': 14, ']': 8, '++': 74, 'i': 21, '[': 7, 'bytes': 9, '>>=': 67, 'NUM': 24, '_': 23, '>': 62, '--': 61, 'n': 43, ',': 42, '-': 53, 'length': 30, 'min': 48, '.': 47, 'Math': 46, '': 45, 'Int': 39, 'next': 3, 'int': 20, 'for': 18, '<': 27, '{': 11, 'Bytes': 4, 'void': 2, 'public': 0}
{'}\n': 114, ';': 31, ')': 21, 'm': 20, ',': 10, 'xx': 17, 'side': 24, '-': 45, '+': 53, '(': 6, 'Double': 42, '': 11, '.': 33, 'D': 13, 'Line2': 38, 'new': 36, 'draw': 2, 'g2': 14, 'NUM': 30, '_': 29, '*': 28, 'Radius': 9, 'a': 8, '=': 25, 'double': 7, '{': 22, 'Graphics2': 12, 'Out': 5, 'Far': 4, 'Low': 3, 'void': 1}
{'}\n': 192, ';': 50, 'result': 37, 'return': 189, '}': 80, ')': 28, 'Server': 87, 'old': 88, '(': 14, 'MBean': 86, 'set': 103, '.': 69, 'query': 27, '{': 29, 'finally': 175, 'Name': 75, 'get': 74, 'no': 63, 'add': 70, 'res': 123, 'if': 51, 'BOOL': 152, '_': 151, '=': 38, 'e': 146, 'Exception': 145, '': 1, 'catch': 142, 'apply': 131, 'try': 110, 'boolean': 122, 'list': 22, ':': 64, 'Object': 5, 'Named': 12, 'for': 58, 'server': 107, 'Eval': 93, 'Query': 25, 'else': 82, 'null': 55, '==': 54, '>': 7, '<': 3, 'Set': 2, 'Hash': 41, 'new': 39, 'Exp': 26, ',': 23, 'Objects': 13, 'Filtered': 11, 'From': 10, 'object': 8, 'private': 0}
{'}\n': 166, ';': 48, 'Pt': 93, 'return': 162, '}': 49, ')': 26, 'Location': 19, 'Response': 24, 'attr': 13, ',': 10, 'RESPLOC': 154, '': 1, '.': 96, 'SAMLNames': 110, '(': 6, 'Attribute': 107, 'set': 106, '{': 30, 'null': 35, '!=': 140, 'if': 31, 'LOCATION': 129, 'Binding': 14, 'BINDING': 113, 'name': 9, 'Element': 2, 'create': 3, 'doc': 95, '=': 94, 'STR': 46, '_': 45, 'Exception': 43, 'Argument': 42, 'Illegal': 41, 'new': 39, 'throw': 38, '==': 34, 'DOMException': 29, 'throws': 27, 'String': 8, 'Point': 5, 'End': 4, 'private': 0}
{'}\n': 428, ';': 60, ')': 31, '(': 3, '.': 143, '}': 124, ',': 8, '_': 113, '{': 106, '=': 75, '': 4, 'STR': 114, 'if': 96, 'get': 144, 'dest': 18, 'File': 2, 'Path': 7, 'Absolute': 145, 'src': 39, 'new': 108, 'throw': 107, '!': 98, 'String': 5, 'void': 0}
{'}\n': 132, ';': 19, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 21, 'buffer': 11, 'return': 124, 'STR': 39, '_': 38, 'append': 22, 'Default': 48, 'Use': 47, 'is': 46, 'Class': 28, 'get': 27, 'Buffer': 10, '': 1, 'new': 13, '=': 12, '{': 7, 'public': 0}
{'}\n': 190, ';': 21, ')': 6, '_': 34, '(': 5, 'Test': 28, 'STR': 35, ',': 33, 'REQUESTS': 151, 'LOCK_': 115, 'SORT_': 149, '': 8, '.': 23, 'Options': 29, 'Property': 25, 'set': 24, 'properties': 14, 'LOCKS': 81, 'PREDECLARE_': 132, 'TRIES': 116, 'MAX_': 97, 'MIN_': 80, 'NRESOURCES': 64, 'NTASKS': 48, 'NTHREADS': 32, 'Properties': 13, 'new': 16, '=': 15, '{': 10, 'Exception': 9, 'throws': 7, 'Resource': 3, 'test_multiple': 2, 'void': 1, 'public': 0}
{'}\n': 124, '}': 105, ';': 32, ')': 13, '': 10, '{': 14, '.': 19, '(': 8, 'out': 38, ',': 67, 'NUM': 69, '_': 68, 'PNG': 66, 'Format': 63, 'Compress': 62, 'Bitmap': 5, 'compress': 56, 'bitmap': 12, 'try': 50, 'size': 16, 'Stream': 37, 'Output': 36, 'Array': 35, 'Byte': 34, 'new': 40, '=': 17, 'Height': 29, 'get': 20, '*': 25, 'int': 15, ']': 3, '[': 2, 'byte': 1}
{'}\n': 213, '}': 84, ';': 67, ')': 22, '(': 5, '': 6, 'get': 153, '.': 52, 'File': 7, 'template': 30, '{': 26, 'e': 92, 'Exception': 91, 'catch': 85, '=': 32, ',': 10, 'Template': 4, 'static': 1}
{'}\n': 139, ';': 35, ')': 13, '(': 12, 'elements': 135, '.': 38, 'Vector': 16, 'new': 21, 'return': 131, '': 1, 'add': 39, 'STR': 50, '_': 32, ',': 51, 'NUM': 33, 'Option': 8, 'Element': 40, '>': 9, '<': 6, '=': 23, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 19, ';': 18, ')': 10, 'node': 9, '(': 4, 'add': 2, '.': 13, '{': 11, 'Node': 8, '': 5, 'void': 1, 'public': 0}
{'}\n': 203, ';': 76, ')': 37, '.': 50, 'field': 103, 'NUM': 154, '_': 153, '(': 6, '': 127, '{': 56, '&&': 100, 'if': 77, '=': 67, ']': 10, '[': 9, 'length': 51, 'int': 18, ',': 13, 'static': 1}
{'}\n': 85, ';': 84, ')': 16, 'module': 9, '(': 6, 'add': 4, '.': 66, 'modules': 65, 'Module': 5, '': 7, 'new': 45, '{': 17, 'public': 0}
{'}\n': 254, '}': 56, ';': 78, ')': 22, 'Relation': 14, 'word': 15, ',': 11, '(': 6, 'length': 241, '.': 28, 'String': 8, 'number': 9, 'NUM': 33, '_': 32, 'substring': 233, 'Digits': 228, 'expand': 227, 'enty': 197, 'Word': 13, 'add': 82, ']': 77, 'STR': 37, '-': 74, 'At': 30, 'char': 29, '[': 64, 'digit2enty': 114, '=': 62, '': 7, '{': 23, 'else': 57, 'digit2teen': 164, '==': 35, 'if': 24, 'digit2num': 63, 'Number': 5, 'Digit': 4, 'expand2': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 57, '}': 51, ';': 25, ')': 17, 'i': 22, '(': 4, '.': 37, 'buffer': 7, '{': 18, 'end': 13, '<': 27, 'start': 10, '=': 23, 'int': 9, 'for': 19, ',': 8, '': 5}
{'}\n': 68, ';': 37, 'BOOL': 66, '_': 65, 'return': 28, '}': 38, ')': 8, '(': 7, 'Enabled': 6, 'is': 5, '.': 32, 'Box': 47, '{': 9, 'null': 17, '!=': 16, 'this': 43, 'if': 10, 'else': 39, 'Panel': 15, 'Selection': 14, 'attribute': 13, 'Only': 23, 'Value': 22, '!': 20, '&&': 19, 'boolean': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 104, ';': 26, ')': 12, 'NUM': 93, '_': 92, 'diff': 66, '*': 67, '-': 61, '(': 4, '.': 40, '': 38, 'x': 8, '=': 22, 'double': 2, '{': 13, 'public': 0}
{'}\n': 135, ';': 41, '_': 39, '.': 76, 'Response': 9, 'And': 8, 'request': 10, ')': 13, '(': 5, 'Closed': 103, 'Account': 102, '{': 72, 'User': 22, 'BOOL': 40, 'Request': 7, '': 6}
{'}\n': 112, ';': 109, ')': 47, 'location': 45, '(': 40, 'add': 66, '.': 65, '{': 48, 'Location': 42, '': 41, 'void': 4, 'public': 3}
{'}\n': 32, ';': 31, ')': 18, '(': 9, 'return': 20, '{': 19, '': 11, 'Null': 13, 'Not': 12, '@': 10, 'Wrap': 8, 'Soft': 7, 'boolean': 4, 'public': 3}
{'}\n': 289, '}': 244, ';': 25, ')': 13, 'Schema': 276, '(': 8, '{': 14, 'else': 251, 'Stream': 4, 'Input': 3, 'schema': 17, 'return': 245, 'STR': 125, '_': 124, '+': 123, 'File': 188, 'URL': 232, 'Resource': 183, 'get': 182, '.': 41, '_logger': 203, '': 2, 'Level': 209, 'Loggable': 206, 'is': 205, 'if': 192, 'null': 198, '!=': 197, '=': 22, 'SUFFIX': 176, 'FILE_': 175, 'CLUSTER_': 64, 'XML': 61, 'Cluster': 6, 'Constants': 145, 'Used': 21, 'Be': 20, 'To': 19, 'Name': 18, '_cluster': 11, 'String': 10, 'find': 5, 'public': 1, 'static': 0}
{'}\n': 14, ';': 13, 'BOOL': 12, '_': 11, 'return': 10, '{': 9, ')': 8, 'world': 7, 'World': 6, '': 5, '(': 4, 'public': 0}
{'}\n': 46, ';': 20, 'NUM': 14, '_': 13, '=': 37, 'psize': 31, 'rsize': 16, ')': 4, 'null': 18, ',': 12, 'pitems': 26, '(': 3, 'fill': 9, '.': 8, 'Arrays': 7, '': 6, 'ritems': 11, '{': 5, 'clear': 2, 'void': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 11, '(': 5, 'set': 15, '{': 12, 'pos': 10}
{'}\n': 50, '}': 31, ';': 21, ')': 6, '(': 3, 'NUM': 17, '_': 16, '=': 23, 'offset': 5, '.': 11, '{': 7, 'int': 1}
{'}\n': 65, ';': 44, 'result': 45, 'return': 62, ')': 15, 'items': 34, ',': 11, 'Format': 49, 'label': 55, '.': 50, 'this': 53, '(': 6, 'format': 51, 'Message': 48, '': 1, '=': 35, 'dataset': 10, 'Array': 38, 'Item': 37, 'create': 36, ']': 33, '[': 32, 'Object': 31, 'null': 21, '{': 16, 'Dataset': 9, 'generate': 3, 'String': 2, 'protected': 0}
{';\n': 8, ')': 7, '(': 6, 'Fade': 4, 'do': 3, 'void': 2, 'protected': 1, 'abstract': 0}
{'}\n': 40, ';': 39, ')': 38, ',': 7, 'BOOL': 34, '_': 33, '(': 3, 'Command': 13, 'String': 5, '': 4, 'exec': 2, 'public': 0}
{'}\n': 78, ';': 57, ')': 12, 'Stream': 29, 'in': 28, '(': 6, '': 7, 'new': 36, '=': 35, '{': 23, 'IOException': 15, 'throws': 13, 'public': 0}
{'}\n': 75, ';': 46, 'words': 56, 'return': 72, ')': 10, ']': 3, '[': 2, '(': 6, '.': 19, '': 7, '=': 17, '++': 54, '<': 48, 'i': 47, 'NUM': 45, '_': 44, 'int': 26, '{': 11, 'String': 8}
{'}\n': 23, ';': 22, ')': 13, '(': 5, 'Empty': 19, 'is': 3, '.': 17, 'actions': 16, 'return': 15, '{': 14, 'boolean': 2, 'public': 0}
{'}\n': 57, ';': 56, ')': 9, '(': 5, '.': 51, 'dict': 45, 'return': 20, '{': 10, 'public': 0}
{'}\n': 88, ';': 36, '}': 83, ')': 16, ']': 4, 'i': 40, '[': 3, '': 74, '{': 17, '++': 53, 'length': 32, '.': 31, '<': 46, 'NUM': 43, '_': 42, '=': 25, 'int': 39, '(': 38, 'for': 37, 'new': 26, 'static': 1, 'public': 0}
{'}\n': 106, ';': 91, ')': 63, 'STR': 71, '_': 70, '(': 50, '.': 67, 'LOG': 66, '': 59, 'e': 62, 'info': 68, '{': 64, 'Exception': 61, 'void': 1}
{'}\n': 114, ';': 113, ')': 31, ']': 87, 'NUM': 86, '_': 85, '[': 84, 'fields': 83, '(': 24, 'Int': 81, 'parse': 80, '.': 79, 'Integer': 78, '': 77, '{': 32, 'public': 0}
{'}\n': 107, ';': 84, ')': 12, '(': 4, 'src': 7, 'dst': 11, ',': 8, 'File': 6, '{': 56, 'IOException': 15, '': 5, 'throws': 13, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 17, ';': 16, 'api': 8, '=': 14, '.': 12, 'this': 11, '{': 10, ')': 9, 'Go': 7, 'Pokemon': 6, '': 1, '(': 4, 'Map': 2, 'public': 0}
{'}\n': 105, ';': 29, ')': 9, '(': 8, 'get': 71, '.': 22, 'xpath': 69, ',': 52, 'STR': 27, '_': 26, 'Equals': 47, 'assert': 46, 'dom1': 17, 'dom2': 33, 'compare': 55, 'comparator': 53, 'NUM': 51, '-': 49, 'Dom': 16, 'build': 23, 'Factory': 21, 'Xpp': 15, '': 11, '=': 18, '{': 13, 'Exception': 12, 'throws': 10, 'Of': 6, 'Number': 5, 'According': 4, 'Sorts': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 89, ';': 86, ')': 26, '(': 46, '.': 58, ',': 51, 'STR': 50, '_': 49, '{': 27, 'Alive': 12, 'keep': 11, 'void': 1, 'static': 0}
{'}\n': 532, ';': 175, 'Type': 33, ')': 64, '.': 154, 'Object': 486, '': 29, ',': 483, '(': 38, 'target': 110, '=': 109, '{': 391, 'class': 359, ']': 293, '[': 285, 'length': 212, 'NUM': 202, '_': 201, 'int': 192, 'parameter': 155, 'Class': 67, 'Method': 30}
{'}\n': 44, ';': 42, ')': 33, '(': 39, '.': 37, 'Values': 13, '{': 34, 'values': 32, '>': 22, 'Object': 21, '': 16, '<': 19, 'Set': 18, 'public': 0}
{'}\n': 120, ';': 41, ')': 40, '(': 39, 'add': 79, '.': 54, 'Key': 65, 'Sort': 16, '': 12, 'Keys': 53, 'sort': 19, 'NUM': 48, '_': 47, '>': 28, '<': 25, 'List': 24, 'Array': 33, 'new': 31, '=': 30}
{'}\n': 75, '}': 74, ';': 53, ')': 46, 'client': 35, '(': 18, 'start': 50, '.': 49, 'Url': 14, 'zookeeper': 13, 'Client': 42, 'get': 41, '=': 36, 'Framework': 34, 'Curator': 33, '': 11, 'String': 12, 'private': 0}
{'}\n': 147, ';': 101, 'STR': 61, '_': 60, 'Tip': 106, 'tool': 105, ')': 21, '(': 7, '.': 45, '{': 22, 'String': 14, '': 13, 'add': 4, 'public': 0}
{'}\n': 145, '}': 144, ';': 37, ')': 17, 'key': 51, '(': 6, 'get': 106, '.': 24, 'from': 10, ',': 11, 'to': 16, '': 7, '=': 22, '{': 18, 'Elements': 44, 'More': 43, 'has': 42, 'keys': 21, 'while': 38, 'Enumeration': 20, 'void': 2, 'static': 1}
{'}\n': 32, ';': 23, 'null': 14, '=': 25, 'buf': 28, 'in': 12, ')': 5, '(': 4, 'close': 3, '.': 19, 'if': 10, '{': 9, 'IOException': 8, '': 7, 'throws': 6, 'void': 2}
{'}\n': 123, ';': 28, 'Factory': 4, 'old': 18, 'return': 119, '}': 91, ')': 13, 'e': 96, ',': 50, '(': 8, 'Message': 111, 'get': 23, '.': 22, 'TAG': 106, 'LOG_': 105, '': 2, '{': 14, 'Exception': 95, 'catch': 92, 'new': 55, 'SSLSocket': 3, 'set': 83, 'connection': 12, 'Socket': 76, 'sc': 33, '=': 20, 'Random': 62, 'Secure': 61, 'security': 58, 'java': 56, 'Certs': 53, 'All': 6, 'trust': 5, 'null': 49, 'init': 47, 'STR': 42, '_': 41, 'Instance': 39, 'SSLContext': 32, 'try': 29, 'URLConnection': 11, 'Https': 10, 'Hosts': 7, 'static': 1, 'private': 0}
{'}\n': 17, ';': 16, ')': 5, '(': 4, 'get': 10, 'set': 7, '{': 6, 'Amount': 3}
{'}\n': 252, ';': 11, ')': 6, 'data': 10, ',': 81, 'STR': 30, '_': 29, '(': 5, 'assert': 232, 'NUM': 212, 'atts': 19, 'Name': 24, 'rel': 23, 'Instances': 9, '': 8, 'new': 34, '=': 28, 'null': 196, '>': 18, 'String': 22, '<': 15, 'List': 14, 'Array': 13, 'Attribute': 17, 'add': 47, '.': 46, '}': 127, '{': 7, ']': 117, '[': 116, 'as': 110, 'Arrays': 108, 'Creation': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 512, ';': 114, ')': 12, '.': 80, ',': 257, '(': 8, '': 28, 'NUM': 202, '_': 110, 'new': 37, '=': 36, 'add': 267, 'set': 81, 'Layout': 144, 'JPanel': 29, '{': 13, 'void': 1, 'private': 0}
{'}\n': 28, ';': 27, ')': 11, '(': 7, 'Dex': 6, 'return': 16, '{': 15, '': 8, 'File': 9, ']': 4, '[': 3, 'byte': 2, 'public': 0}
{'}\n': 128, '}': 47, ';': 46, 'STR': 33, '_': 32, ')': 11, '+': 100, '(': 4, '.': 20, '{': 12, 'channel': 65, '=': 53, 'String': 6, '': 5, 'stream': 30, 'Empty': 22, 'is': 21, '||': 18, 'null': 17, '==': 16, 'if': 13, ',': 8, 'public': 0}
{'}\n': 85, ';': 83, ')': 28, 'Clause': 20, '(': 3, '.': 46, 'List': 31, '': 13, 'void': 0}
{'}\n': 107, ';': 40, ')': 10, '(': 15, '.': 18, 'Math': 17, '': 16, '*': 24, 'NUM': 77, '_': 76, '/': 71, '=': 14, 'double': 2, '{': 11, 'x': 9, 'static': 1, 'public': 0}
{'}\n': 62, '}': 36, ';': 35, '(': 13, '': 39, ')': 10, '{': 11, 'active': 14, 'if': 12, 'public': 0}
{'}\n': 84, '}': 83, ';': 82, '_': 34, 'return': 79, ':': 32, 'STR': 35, 'case': 29, '{': 22, ')': 21, '(': 24, 'switch': 23, 'Type': 6, 'static': 1}
{'}\n': 30, ';': 29, ')': 10, 'PREFIX': 23, 'HIDDEN_': 22, '': 7, 'key': 9, 'return': 12, '{': 11, 'String': 8, 'final': 6, '(': 5, 'static': 1, 'public': 0}
{'}\n': 87, ';': 34, 'return': 84, '}': 83, 'token': 60, '(': 8, '.': 64, ')': 33, '': 2, 'Token': 38, 'parse': 50, '{': 42, 'if': 35, 'String': 15, '=': 18}
{'}\n': 39, ';': 38, ')': 13, ']': 11, 'NUM': 25, '_': 24, '[': 10, 'types': 12, '(': 31, 'length': 22, '.': 21, '{': 14}
{'}\n': 464, ';': 31, 'ans': 54, 'return': 323, ')': 15, 'NUM': 72, '_': 71, '<': 319, 'n': 61, '++': 454, '(': 6, 'while': 452, '}': 307, 'big': 387, '*=': 391, 'qkm1': 28, 'qkm2': 30, 'pkm1': 22, 'pkm2': 24, '{': 16, 'biginv': 392, 'pk': 20, 'abs': 292, '.': 291, 'Math': 290, '': 162, '||': 420, 'qk': 26, 'if': 264, '>': 386, '+': 81, '+=': 328, 'k8': 47, 'k7': 45, 'k6': 43, 'k5': 41, 'k4': 39, 'k3': 37, '-=': 333, 'k2': 35, 'k1': 33, 'thresh': 58, 't': 52, '=': 64, 'else': 308, 'r': 50, '/': 134, '-': 70, '!=': 267, 'xk': 18, '*': 161, 'z': 56, 'do': 165, 'MACHEP': 163, 'x': 14, 'a': 8, 'b': 11, 'int': 60, ',': 9, 'double': 2, 'Fraction2': 5, 'Beta': 4, 'incomplete': 3, 'static': 1, 'public': 0}
{'}\n': 272, '}': 63, ';': 29, ')': 14, '(': 5, 'String': 2, 'to': 266, '.': 57, 'result': 33, 'return': 232, 'start': 26, '-': 119, ',': 10, 'buffer': 114, 'append': 58, '{': 24, 'else': 248, 'get': 236, 'Pool': 234, 'string': 233, 'null': 35, '==': 96, 'if': 37, ']': 183, '[': 179, '+': 181, 'position': 28, '_': 68, '=': 27, '': 1, 'Buffer': 128, 'fill': 127, 'Builder': 32, 'new': 49, '&&': 41, 'BOOL': 69, 'while': 66, 'text': 42, '!=': 43, 'int': 25, 'Exception': 23, 'Parser': 22, 'Pull': 21, 'Xml': 20, 'IOException': 17, 'throws': 15, 'boolean': 11, 'char': 6, 'read': 3, 'private': 0}
{'}\n': 16, ';': 15, ')': 4, '(': 3, 'Error': 10, 'Assertion': 9, '': 1, 'new': 7, 'throw': 6, '{': 5, 'private': 0}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'Empty': 15, 'is': 2, '.': 13, 'children': 8, '||': 11, 'null': 10, '==': 9, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 464, ';': 205, ')': 17, '(': 5, 'dispose': 460, '.': 31, 'g2': 22, 'rect': 10, 'fill': 273, '': 7, 'Color': 239, 'set': 209, 'create': 32, 'D': 9, 'Graphics2': 14, '=': 24, '{': 18, 'final': 6, ',': 11, 'Rectangle2': 8, 'void': 2}
{'}\n': 25, '}': 24, ';': 23, ')': 9, '(': 4, 'interrupt': 20, '.': 19, 'thread': 8, '{': 10, 'null': 15, '!=': 14, 'if': 11, 'Thread': 7, '': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 85, ';': 57, ')': 14, '(': 4, 'Object': 3, 'write': 2, '.': 17, 's': 13, 'Write': 26, 'default': 25, '{': 22, 'IOException': 21, '': 9, 'io': 18, 'java': 16, 'throws': 15, 'Stream': 12, 'Output': 11, 'void': 1, 'private': 0}
{'}\n': 35, ';': 34, ')': 9, '': 2, '.': 14, 'Layout': 21, 'Border': 20, ',': 24, '(': 5, 'new': 18, 'In': 16, 'enclose': 15, 'Container': 3, 'return': 11, '{': 10, 'Component': 7, 'static': 1, 'public': 0}
{'}\n': 272, ';': 30, 'null': 270, 'return': 249, '}': 252, ')': 9, 'e': 257, 'STR': 263, '_': 124, '(': 8, 'fail': 260, '{': 10, 'Exception': 256, '': 2, 'catch': 253, 'evids': 133, ']': 5, 'NUM': 141, '[': 4, 'Null': 33, 'Not': 32, 'assert': 31, 'Id5': 192, 'Allevent': 151, 'put': 6, '=': 14, 'Id4': 182, 'Id3': 172, 'Id2': 162, 'Id1': 152, 'ID': 130, 'Event': 129, 'new': 44, 'map': 42, 'All': 7, '.': 16, 'region': 13, ',': 59, 'KEY5': 110, 'PUTALL_': 57, 'KEY4': 97, 'KEY3': 84, 'KEY2': 71, 'KEY1': 58, 'Map': 41, 'Hash': 47, 'Linked': 46, 'NAME': 28, 'REGION_': 27, '+': 25, 'SEPARATOR': 24, 'Region': 12, 'get': 17, 'cache': 15, 'Object': 3, 'static': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 13, 'BOOL': 25, '_': 24, ',': 9, 'Tab': 12, 'new': 11, '(': 4, 'Layout': 3, '': 5, 'void': 1}
{'}\n': 55, ';': 37, ')': 18, ',': 7, 'marker': 10, '(': 3, '.': 43, '}': 38, 'STR': 35, '_': 34, 'Exception': 32, '': 4, 'new': 28, 'throw': 27, '{': 19, 'if': 20, 'Strategy': 15, 'delete': 16, 'Delete': 14, 'File': 13, 'Object': 9, 'void': 1}
{'}\n': 19, ';': 18, ')': 8, 'name': 7, '(': 4, 'has': 2, '.': 12, 'return': 10, '{': 9, 'String': 6, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 59, ';': 44, 'return': 56, ')': 30, '(': 7, '.': 21, 'Size': 36, 'Stream': 20, 'value': 32, 'Id': 10, 'window': 9, 'Window': 26, 'key': 19, '=': 18, 'long': 4, 'Memory': 6}
{'}\n': 57, ';': 31, 'NUM': 55, '_': 28, '>=': 53, ')': 12, '(': 8, 'Case': 49, 'Upper': 48, 'to': 47, '.': 36, 'identifier': 11, ',': 44, 'RESERVED': 43, 'SQL99_': 41, '': 9, 'Search': 38, 'binary': 37, 'Arrays': 35, 'return': 33, '}': 32, 'STR': 29, 'Exception': 26, 'Pointer': 25, 'Null': 24, 'new': 22, 'throw': 21, '{': 13, 'null': 18, '==': 17, 'if': 14, 'String': 10, 'Keyword': 7, 'Reserved': 6, 'SQL99': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 126, ';': 29, ')': 28, '(': 7, '.': 70, '}': 111, '=': 84, '': 47, 'Block': 41, 'Root': 40, 'final': 8}
{'}\n': 14, ';': 13, 'Task': 4, ')': 7, '(': 6, 'boolean': 1, 'public': 0}
{'}\n': 56, ';': 38, ')': 11, '(': 7, 'to': 51, '.': 50, 'buffer': 49, 'return': 48, 'Stream': 27, 'Output': 26, '': 8, 'new': 30, '=': 29, 'Array': 25, 'Byte': 24, 'static': 1, 'public': 0}
{'}\n': 86, ';': 20, 'return': 83, '}': 82, ']': 7, 'i': 24, '[': 6, 'data': 8, '=': 13, 'max': 12, ')': 9, '>': 72, '||': 67, '(': 4, 'N': 19, 'Na': 18, 'is': 44, '.': 16, 'Double': 15, '': 14, 'if': 39, 'continue': 54, '{': 10, '++': 36, 'length': 33, '<': 30, 'NUM': 27, '_': 26, 'int': 23, 'for': 21, 'double': 5, 'static': 1, 'public': 0}
{'}\n': 112, ';': 24, '_': 21, 'return': 102, 'last': 26, ')': 10, '(': 6, '&&': 88, 'first': 13, 'STR': 63, '=': 14, 'int': 12, '{': 11}
{'}\n': 121, ';': 120, ')': 4, '(': 3, 'read': 1, '.': 72, '_is': 71, '|': 80, 'NUM': 78, '_': 77, '<<': 76, 'return': 9, '{': 8, 'IOException': 7, '': 6, 'throws': 5}
{'}\n': 21, ';': 20, ')': 10, 'index': 9, '(': 7, 'remove': 16, '.': 15, 'Instances': 14, 'm_': 13, '{': 11, 'int': 8, 'public': 3}
{'}\n': 52, ';': 51, ')': 11, 'STR': 24, '_': 23, '(': 7, 'Of': 21, 'index': 20, '.': 15, 's3uri': 10, ',': 29, 'NUM': 28, '+': 26, 'substring': 16, 'return': 13, '{': 12, 'String': 3, '': 2, 'extract': 4, 'static': 1, 'protected': 0}
{'}\n': 255, ';': 23, 'ret': 19, 'return': 252, '}': 70, ')': 12, 'NUM': 58, '_': 21, ',': 8, 'op': 37, '(': 4, 'get': 180, '.': 29, '_operations': 178, 'Code': 208, 'Return': 207, 'report': 206, '_measurements': 174, '{': 17, 'else': 71, '-': 191, 'if': 46, '/': 194, 'st': 25, 'en': 164, 'int': 186, 'measure': 176, 'Time': 31, 'nano': 30, 'System': 28, '': 5, '=': 20, 'long': 24, 'db': 7, 'Write': 157, 'Modify': 156, 'Read': 65, 'Transaction': 3, 'do': 2, 'Scan': 143, '==': 56, 'STR': 54, 'To': 51, 'compare': 50, 'Insert': 117, 'Update': 91, 'String': 36, 'next': 41, 'operationchooser': 39, 'BOOL': 22, 'boolean': 1, 'Exception': 16, 'Workload': 15, 'throws': 13, 'threadstate': 11, 'Object': 10, 'DB': 6, 'public': 0}
{'}\n': 96, '}': 57, ';': 56, ')': 21, 'Index': 20, '-': 87, 'Size': 16, 'old': 15, ',': 9, 'dst': 12, 'src': 8, '(': 5, 'arraycopy': 41, '.': 40, 'System': 39, '': 6, '{': 22, '<': 62, 'if': 23, 'NUM': 35, '_': 34, '>': 33, 'int': 14, 'Object': 7, 'copy': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 20, ';': 19, 'url': 9, 'Url': 14, 'site': 13, '{': 12, ')': 11, 'String': 6, '': 1, '(': 4, 'Site': 2}
{'}\n': 106, '}': 101, ';': 76, 'return': 102, ')': 15, 'Id': 14, '+': 96, 'STR': 95, '_': 94, '(': 9, 'Exception': 92, 'State': 91, 'Illegal': 90, '': 1, 'new': 88, 'throw': 87, '{': 16, 'Next': 49, 'has': 48, '.': 47, 'it': 27, 'if': 77, 'empty': 73, 'Optional': 2, ':': 69, 'next': 65, 'Blaze': 5, 'of': 56, '?': 52, '=': 28, '>': 7, '<': 3, 'final': 10, 'Iterator': 22, 'Closeable': 21, 'try': 17, 'public': 0}
{'}\n': 83, ';': 21, ')': 15, 'u': 18, ',': 11, 'r': 20, '(': 6, 'Set': 72, 'And': 71, 'compare': 70, '.': 27, '!': 67, 'while': 65, '}': 52, 'Add': 14, 'to': 13, 'Cap': 56, 'add': 3, '=': 25, 'return': 44, '{': 16, 'VALUE': 41, 'MAX_': 40, '': 7, 'Long': 37, '==': 35, 'if': 32, 'get': 28, 'do': 22, 'long': 12, 'static': 1}
{'}\n': 95, ';': 32, ')': 15, 'label': 22, '+': 88, 'STR': 30, '_': 29, 'OK': 87, '': 4, '(': 3, 'println': 84, '.': 25, 'out': 82, 'Mon': 65, 'get': 26, '=': 23, 'Parameter': 27, 'request': 8, 'String': 21, '{': 19, 'IOException': 18, 'throws': 16, 'response': 14, 'Response': 13, 'Servlet': 6, 'Http': 5, ',': 9, 'Request': 7, 'void': 1, 'private': 0}
{'}\n': 50, ';': 11, ']': 39, 'i': 15, '[': 37, ')': 4, '++': 27, 'length': 24, '.': 23, '<': 21, 'NUM': 10, '_': 9, '=': 8, 'int': 14, '(': 3, 'for': 12, 'sum': 7, 'double': 1, '{': 5, 'public': 0}
{'}\n': 145, ';': 39, 'N': 33, '': 3, '/': 133, 'return': 131, '}': 130, '+=': 126, ')': 61, ']': 11, '[': 10, 'i': 49, 'Y': 9, '(': 6, 'if': 63, '{': 62, '++': 60, '<': 55, 'NUM': 44, '_': 43, '=': 34, 'int': 15, 'for': 46, 'double': 2, 'length': 38, '.': 37, ',': 14, 'static': 1, 'public': 0}
{'}\n': 49, ';': 22, ')': 10, '.': 16, ',': 39, 'NUM': 41, '_': 40, '(': 4, 'ad': 19, '': 5}
{'}\n': 161, ';': 42, ')': 31, 'STR': 59, '_': 55, ',': 13, '(': 5, 'size': 51, '.': 35, 'Bitmaps': 63, 'm': 62, '==': 149, 'Durations': 125, 'State': 47, 'check': 36, 'Preconditions': 34, '': 1, 'durations': 20, 'Null': 38, 'Not': 37, '=': 64, '}': 123, 'bitmap': 91, 'add': 100, 'Releaser': 24, 'resource': 29, 'of': 106, 'Reference': 104, 'Closeable': 2, 'References': 76, 'Bitmap': 4, '{': 32, 'bitmaps': 12, ':': 92, 'for': 87, '>': 11, '<': 8, 'List': 7, 'Array': 67, 'new': 65, 'NUM': 56, '>=': 54, 'Resource': 23, 'Integer': 18, 'Animated': 3, 'public': 0}
{'}\n': 127, '}': 113, ';': 44, ')': 21, '(': 35, '.': 76, '{': 119, '+': 107, 'STR': 100, '_': 95, 'if': 84, 'String': 3, '': 2, '=': 30, 'Reader': 28, 'new': 31, 'File': 38, 'Buffered': 27}
{'}\n': 256, ';': 23, ')': 13, '(': 3, '': 4, '}': 151, '[': 10, '=': 20, '_': 36, 'Converter': 0, '{': 46, ']': 11, 'new': 111, 'NUM': 37, 'i': 34, '++': 44, 'length': 41, '<': 40, 'int': 33, 'for': 31}
{'}\n': 186, ';': 68, ')': 32, '(': 61, '}': 101, 'e': 145, '': 6, '{': 82, 'final': 43, 'catch': 139, 'Object': 115, '=': 50, 'XStream': 15}
{'}\n': 145, ';': 90, ')': 88, '(': 16, '.': 122, 'Uid': 7, 'Message': 6, '': 20, 'private': 0}
{'}\n': 250, ';': 28, ')': 8, '(': 4, 'close': 246, '.': 86, 'ssx': 60, '+': 212, 'STR': 211, '_': 78, ',': 91, 'break': 124, '{': 44, 'NUM': 93, 'LENGTH': 99, '': 10, 'File': 39, 'shp': 38, 'new': 54, '=': 18, '}': 47, 'return': 45, 'if': 36, 'Index': 3, 'void': 1, 'public': 0}
{'}\n': 164, ';': 44, 'return': 160, ')': 24, '(': 51, '.': 70, 'Param': 14, '=': 35, '{': 25, 'private': 0}
{'}\n': 329, ';': 124, ')': 27, '.': 128, '}': 232, ',': 9, '(': 94, '{': 28, 'if': 163, 'else': 233, 'NUM': 172, '_': 171, '=': 90, 'next': 139, 'Next': 130, 'has': 129, 'while': 125, 'iterator': 72, '>': 67, '': 10, '<': 64, 'Iterator': 63, 'Solution': 12}
{'}\n': 198, '}': 197, ';': 56, ')': 28, '(': 5, '.': 51, 'vv': 38, '{': 29, 'if': 143, 'get': 52, 'e': 19, '=': 39, 'Source': 53, '>': 37, '?': 34, ',': 35, '<': 33, 'Viewer': 32, 'Visualization': 31, '': 6, 'Event': 9, 'Mouse': 7, 'mouse': 2, 'void': 1, 'public': 0}
{'}\n': 149, ';': 32, 'Folder': 5, 'new': 25, 'return': 145, '}': 33, ')': 11, '(': 6, 'mkdirs': 140, '.': 61, '{': 15, 'else': 135, 'Path': 129, 'Absolute': 128, 'get': 127, '+': 123, 'STR': 30, '_': 29, 'IOException': 14, '': 1, 'throw': 24, 'exists': 62, 'if': 16, '++': 103, 'i': 52, 'Integer': 95, ',': 45, 'String': 48, 'Next': 90, 'format': 86, 'Format': 84, 'Message': 83, 'Dir': 10, 'containing': 9, 'Object': 41, 'File': 2, 'create': 3, '=': 38, 'NUM': 55, '<': 67, '&&': 65, 'while': 57, 'int': 51, 'null': 21, '==': 20, 'throws': 12, 'New': 4, 'public': 0}
{'}\n': 345, ')': 91, '}': 126, ',': 10, '(': 90, '.': 102, ';': 72, '{': 58, 'null': 238, 'if': 93, 'get': 287, '': 6, '==': 237, '=': 62, '>': 16, '<': 13, 'Map': 25, 'Object': 31, 'String': 28}
{'}\n': 59, ';': 20, 'result': 57, 'return': 56, ')': 8, '(': 3, '.': 31, 'BOOL': 19, '_': 18, 'other': 7, 'boolean': 1, 'public': 0}
{'}\n': 363, '}': 117, ';': 116, '{': 36, ')': 35, 'i': 225, '.': 244, 'Double': 299, '': 89, '(': 31, 'if': 100, '++': 288, 'j': 276, '<': 231, 'NUM': 228, '_': 158, '=': 226, 'int': 224, 'for': 47, 'STR': 159, 'Exception': 113, 'Argument': 149, 'Illegal': 148, 'new': 109, 'throw': 108, 'Pointer': 112, 'Null': 111, 'null': 105, '==': 104, 'variable': 102}
{'}\n': 214, ';': 33, 'Ids': 92, 'screen': 91, 'return': 210, '}': 160, ')': 17, '(': 13, 'close': 204, '.': 27, 'sc': 55, '{': 18, 'finally': 193, 'BOOL': 187, '_': 128, ',': 64, 'e': 165, '+': 180, 'STR': 179, 'TAG': 176, '': 2, 'Log': 173, 'Dump': 172, 'add': 148, 'Launcher': 41, 'Exception': 164, 'catch': 161, 'Index': 110, 'id': 109, 'Long': 7, 'get': 28, 'try': 105, 'Next': 138, 'To': 137, 'move': 136, 'while': 132, 'ID': 129, 'Screens': 11, 'Workspace': 10, 'Settings': 42, 'Throw': 118, 'Or': 117, 'Column': 115, '=': 25, 'int': 108, 'final': 19, '>': 8, '<': 5, 'List': 4, 'Array': 3, 'new': 94, 'RANK': 81, 'SCREEN_': 80, 'null': 65, 'Uri': 36, 'screens': 37, 'query': 60, 'Resolver': 22, 'content': 23, 'Cursor': 54, 'URI': 50, 'CONTENT_': 49, 'Content': 21, 'context': 16, 'Context': 15, 'Db': 12, 'load': 9, 'static': 1, 'public': 0}
{'}\n': 263, ';': 59, ')': 18, 'STR': 53, '_': 52, '(': 4, 'Column': 222, 'get': 151, '.': 49, 'Line': 162, '': 5, 'BOOL': 58, 'return': 56, 'value': 74, 'if': 41, '{': 33, ',': 8, 'node': 7, 'boolean': 1}
{'}\n': 28, ';': 27, ')': 8, 's': 7, '(': 4, 'parse': 20, '.': 15, 'parser': 18, 'format': 16, 'fmt': 14, 'return': 13, '{': 12, 'Exception': 11, '': 1, 'throws': 9, 'String': 2, 'e': 3, 'protected': 0}
{'}\n': 57, '}': 42, ';': 41, ')': 14, 'field2': 13, ',': 9, 'field1': 8, '(': 4, 'equals': 3, '.': 23, 'Arrays': 47, '': 46, 'return': 30, '{': 15, 'else': 43, 'NUM': 27, '_': 26, '==': 19, 'length': 24, '||': 21, 'null': 20, 'if': 16, ']': 7, '[': 6, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 140, ';': 139, 'NUM': 122, '_': 121, 'Scale': 72, 'y': 80, 'x': 62, 'double': 20, '': 1}
{'}\n': 38, ';': 11, ')': 5, '(': 4, 'repaint': 34, 'Image': 21, 'get': 20, '.': 19, 'Ic': 18, 'Im': 17, 'unlinked': 25, ':': 24, 'linked': 7, '?': 15, '=': 8, 'link': 12, '{': 6, 'public': 0}
{'}\n': 83, ';': 82, ')': 41, '(': 7, ',': 11, 'Geometry': 3, '': 16, 'public': 0}
{'}\n': 127, '}': 117, '{': 97, ')': 23, '': 91, '(': 5, ';': 74, 'ms': 9, '.': 36, 'int': 8, 'void': 1}
{'}\n': 37, ';': 36, 'return': 28, '{': 27, ')': 25, '.': 20, 'filters': 14, '(': 7}
{'}\n': 38, ';': 13, ')': 4, '(': 3, 'Changed': 17, 'Table': 15, 'fire': 14, 'clear': 2, '.': 9, '{': 7, 'public': 0}
{'}\n': 24, ';': 23, ')': 7, ',': 19, 'fi': 18, '(': 3, '{': 14, '': 4, 'throws': 8, 'boolean': 1}
{'}\n': 366, ';': 15, ')': 5, '(': 4, 'STR': 34, '_': 33, '.': 29, ',': 35, 'props': 20, 'Props': 69, 'With': 68, 'Connection': 67, 'get': 66, 'Property': 31, 'set': 30, 'Properties': 19, '': 7, 'new': 22, '=': 21, '{': 9, 'Exception': 8, 'throws': 6, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 71, ';': 61, ')': 13, 'key': 8, '(': 5, 'add': 2, '.': 63, 'STR': 44, '_': 43, 'Exception': 41, 'Pointer': 40, 'Null': 39, '': 6, 'new': 37, 'throw': 36, 'null': 34, '==': 33, 'if': 30, '{': 14, 'void': 1, 'public': 0}
{'}\n': 62, 'STR': 54, '_': 53, '': 4, '{': 13, ')': 12, '.': 33, 'time': 32, '(': 31, 'if': 30, ';': 29, '=': 26, 'Address': 25}
{'}\n': 58, ';': 38, 'BOOL': 56, '_': 55, 'return': 45, ')': 19, '(': 7, 'Value': 50, 'boolean': 2, '.': 48, 'share': 23, 'null': 43, '!=': 42, 'if': 39, 'ID': 12, 'Table_': 17, 'AD_': 10, '': 9, ',': 13, 'Client_': 11, 'Shared': 26, 'is': 3, '=': 24, 'Boolean': 22, '{': 20, 'int': 8, 'Only': 6, 'Level': 5, 'static': 1, 'public': 0}
{'}\n': 45, '}': 44, ';': 25, ')': 12, '(': 7, '{': 13, 'STR': 33, '_': 32, 'equals': 30, '.': 19, 'command': 16, 'if': 26, 'Command': 22, 'Action': 9, 'get': 20, 'event': 11, '=': 17, 'String': 15, '': 1, 'Event': 10, 'Performed': 6, 'action': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 71, ';': 32, ')': 11, '(': 7, 'Out': 22, 'Stream': 20, 'Output': 19, 'Array': 18, 'Byte': 17, '': 13, 'new': 24, '=': 23, '{': 15, 'IOException': 14, 'throws': 12, 'serialize': 4, ']': 3, '[': 2, 'byte': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 15, 'Name': 7, 'mod': 6, '(': 3, '.': 17, 'context': 16, 'Pointer': 14, 'String': 5, '': 4}
{'}\n': 52, ';': 33, ')': 12, 'Directory': 11, 'Working': 10, 'nar': 9, '=': 39, '.': 35, '': 1, 'new': 25, '(': 5, '{': 22, ',': 19, 'throws': 13, 'File': 8, 'final': 6}
{'}\n': 174, '}': 148, ';': 147, 'original': 18, '{': 21, 'else': 149, '_': 132, ')': 20, '(': 8, '.': 55, 'if': 22, '': 2, 'static': 1, 'public': 0}
{'}\n': 82, ';': 29, '(': 41, '.': 51, '': 71, ')': 16, 'point': 67, ',': 11, '=': 22, ']': 8, '[': 7, 'float': 6, 'new': 23, '{': 17}
{'}\n': 161, ';': 39, ')': 12, 'STR': 38, '_': 37, ',': 73, 'Xml': 20, 'Web': 41, 'src': 19, '(': 11, 'Filter': 5, 'has': 149, '.': 51, 'Utils': 147, '': 14, 'True': 142, 'assert': 141, 'merge': 80, 'Filters': 134, 'merger': 118, 'Merger': 117, 'new': 56, '=': 21, 'null': 74, 'Bytes': 67, 'get': 66, 'Stream': 61, 'Input': 60, 'Array': 59, 'Byte': 58, 'parse': 52, 'Io': 50, 'String': 18, '{': 16, 'Exception': 15, 'throws': 13, 'Into': 6, 'One': 4, 'Merge': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 59, ';': 22, ')': 15, '(': 3, 'src': 6, 'dest': 31, '=': 26, '{': 16, '': 12, ',': 7}
{'}\n': 304, ';': 259, ')': 41, '': 242, '.': 237, 'Opcodes': 243, '(': 39, 'Insn': 240, 'visit': 238, 'mv': 236, '{': 42, 'void': 1, 'public': 0}
{'}\n': 214, ';': 213, ')': 43, 'limit': 39, ',': 20, 'start': 22, 'text': 172, '(': 7, 'Bidi': 68, '.': 77, '': 47, '{': 44, 'int': 21, 'public': 0}
{'}\n': 101, ';': 27, ')': 17, '(': 6, 'String': 3, 'to': 96, '.': 23, 'res': 43, 'return': 36, '}': 39, 'filling': 16, 'append': 87, '{': 18, '++': 82, 'i': 72, 'dif': 62, '<': 78, 'NUM': 75, '_': 74, '=': 21, 'int': 11, 'for': 69, 'ln': 20, '-': 66, 'Length': 13, 'min': 12, 'Builder': 42, '': 2, 'new': 45, 's': 9, '<=': 32, 'if': 28, 'length': 24, 'char': 15, ',': 10, 'Pad': 5, 'static': 1, 'public': 0}
{'}\n': 272, ';': 37, ')': 19, '.': 44, '(': 7, 'reader': 12, 'read': 45, '=': 42, '_': 53, 'c': 41, ',': 167, 'NUM': 154, '==': 114, 'if': 49, '{': 56, 'STR': 54, '': 2}
{'}\n': 226, ';': 19, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 21, 'builder': 11, 'return': 218, 'STR': 25, '_': 24, 'append': 22, '}': 61, 'predicted': 40, 'Total': 157, 'Predicted': 194, 'get': 133, '{': 7, 'classes': 42, ':': 41, 'T': 39, '': 1, 'for': 36, 'actual': 83, 'Actual': 156, ',': 115, 'Count': 134, 'format': 111, '=': 12, 'Label': 74, 'Column': 73, 'first': 72, 'Builder': 10, 'new': 13, 'public': 0}
{'}\n': 88, ';': 64, ')': 38, 'id': 27, 'null': 45, '==': 44, '(': 6, 'if': 40, 'Object': 26, '': 1, 'Id': 4, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, '(': 5, 'get': 11, '.': 10, 'closed': 9, 'return': 8, '{': 7, 'is': 3, 'boolean': 2, 'final': 1, 'public': 0}
{'}\n': 299, ';': 48, 'result': 137, 'return': 296, ')': 30, 'STR': 46, '_': 45, '(': 14, 'remove': 290, '.': 42, 'list': 173, ',': 7, 'put': 71, 'Size': 35, '}': 244, 'module': 263, 'e': 249, '+': 216, 'Info': 256, 'log': 255, 'Debug': 253, '': 2, '{': 31, 'Exception': 248, 'catch': 245, 'close': 240, 'it': 191, 'List': 13, 'Partial': 212, 'After': 232, 'Results': 230, 'get': 43, '=': 36, 'view': 34, 'NUM': 66, 'start': 148, 'Iterator': 190, 'Entity': 188, 'try': 185, 'Integer': 33, 'null': 54, '>': 10, 'Value': 154, 'Generic': 170, '<': 4, 'int': 147, '*': 157, 'Index': 83, 'context': 29, 'dctx': 18, 'Find': 12, 'perform': 11, 'Object': 9, 'String': 6, 'Map': 3, 'Of': 63, 'value': 62, '==': 53, 'if': 49, 'Context': 17, 'Dispatch': 16, 'static': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 11, '(': 7, 'get': 20, '.': 19, '{': 12, 'SOAPElement': 9, '': 2, 'soap': 4, 'static': 1, 'public': 0}
{'}\n': 31, '}': 30, ';': 29, ')': 7, '(': 6, '.': 25, '{': 13, 'IOException': 10, '': 1, 'throws': 8, 'close': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 41, ';': 40, ')': 14, 'y': 13, '(': 6, 'equals': 36, '.': 35, 'x': 9, '==': 23, '{': 19, 'Object': 8, '': 7, ',': 10, 'boolean': 4}
{'}\n': 24, ';': 23, ')': 11, '(': 8, 'Boolean': 7, '.': 17, 'dis': 16, '{': 15, 'IOException': 14, '': 1, 'throws': 12, 'final': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 70, ';': 62, ')': 41, '(': 59, 'File': 11, '': 7, '{': 42, 's': 24, 'String': 19, 'public': 0}
{'}\n': 109, ';': 23, ')': 10, '(': 9, 'size': 103, '.': 41, 'result': 26, ',': 51, 'Equals': 97, 'assert': 82, 'Null': 84, 'Not': 83, '}': 73, '{': 11, 'e': 78, 'Exception': 77, '': 12, 'catch': 74, 'SUBTREE': 69, 'SCOPE_': 68, 'Constants': 65, 'Scope': 64, 'Ldap': 6, 'STR': 50, '_': 49, 'VO': 47, 'Search': 46, 'get': 17, 'find': 42, 'proxy': 15, '=': 16, 'try': 36, 'null': 28, 'List': 25, 'Open': 5, 'Proxy': 14, 'Spring': 4, 'Find': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 9, '.': 20, '(': 4, 'this': 16, 'Exception': 14, 'Argument': 13, 'Illegal': 12, '': 5, 'Arg': 8, 'public': 0}
{'}\n': 141, ';': 23, 'return': 138, '}': 137, 'r': 14, '*': 79, '=': 54, '/': 100, '{': 10, ')': 9, 'NUM': 94, '_': 93, '!=': 92, '(': 3, '.': 30, 'Math': 29, '': 28, 'a': 5, 'abs': 31, 'b': 8, 'double': 1, ',': 6, 'static': 0}
{'}\n': 82, ';': 37, ')': 16, 'NUM': 31, '_': 30, '&': 33, '(': 6, 'write': 3, '.': 22, 'output': 11, '>': 28, '{': 20, 'IOException': 19, '': 8, 'throws': 17, 'int': 14, ',': 12, 'Stream': 10, 'Output': 9, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 193, '}': 119, ';': 59, ')': 39, 'runnable': 38, '(': 6, 'Callback': 97, 'add': 96, '.': 68, 'task': 64, '{': 40, 'else': 120, 'execute': 114, 'pool': 112, ',': 11, 'key': 44, 'put': 105, 'Tasks': 67, 'loader': 15, 'IOProvider': 63, 'Async': 61, '': 7, 'new': 46, '=': 45, 'null': 78, '==': 77, 'if': 74, 'get': 69, 'world': 10, 'z': 30, 'x': 24, 'Queued': 42, '>': 37, '<': 34, 'Consumer': 33, 'int': 23, 'IO': 14, 'Cube': 13, 'World': 9, 'ICubic': 8, 'Load': 5, 'queue': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 87, ';': 86, ')': 34, 'available': 21, '.': 70, 'return': 57, '{': 56, '(': 31, '': 13}
{')': 9, 'e': 8, 'Event': 7, '': 5, '(': 4, 'public': 0}
{'}\n': 46, '{': 8, ')': 7, '(': 6, 'Message': 4}
{'}\n': 27, ';': 26, ')': 10, 'l': 9, '(': 5, 'remove': 2, '.': 21, 'listeners': 20, '{': 11, 'Listener': 4, 'Change': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 50, ';': 20, ')': 7, 'current': 12, '(': 6, 'Log': 4, 'Request': 3, '': 2, 'new': 26, 'get': 17, '.': 16, 'RLOG': 15, '=': 13, '{': 8, 'static': 1, 'public': 0}
{'}\n': 43, '}': 28, ';': 27, ')': 10, '{': 11, 'e': 33, '': 2, '(': 6, 'catch': 29, 'STR': 24, '_': 23, ',': 22, 'str': 9, 'decode': 19, '.': 18, 'URLDecoder': 17, 'try': 12, 'String': 3, 'Decode': 5, 'static': 1, 'public': 0}
{'}\n': 428, '}': 44, ';': 101, ')': 8, 'ex': 124, ',': 41, 'snd': 199, ':': 19, 'fst': 182, '?': 186, 'First': 32, 'fail': 49, '(': 7, 'Exceptionally': 415, 'Completed': 343, 'check': 297, 'v1': 68, 'Normally': 401, 'Invoked': 379, 'Not': 378, 'assert': 264, '.': 23, 'r3': 164, 'r2': 150, 'r1': 136, 'h3': 327, 'Exception': 346, 'Wrapped': 345, 'With': 344, 'h2': 282, 'h1': 249, 'g': 110, 'f': 31, 'then': 253, 'm': 18, '=': 92, '>': 90, '': 10, '<': 87, 'Future': 86, 'Completable': 85, 'final': 83, 'call': 269, 'complete2': 232, 'True': 265, 'Incomplete': 298, 'complete1': 216, 'null': 79, 'Boolean': 214, 'Callable': 211, '!': 201, 'Integer': 67, 'Subtract': 134, 'new': 34, 'CFException': 123, '{': 12, 'NUM': 77, '_': 39, ']': 37, '[': 36, 'for': 13, 'BOOL': 40, 'boolean': 30, 'values': 24, 'Mode': 17, 'Execution': 16, 'Throwable': 11, 'throws': 9, 'Completion': 6, 'Then': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 440, ';': 145, ')': 54, '(': 8, '}': 426, 'i': 219, 'Element': 346, 'add': 345, '.': 227, '{': 319, '++': 233, 'length': 228, '<': 225, 'NUM': 222, '_': 221, '=': 174, 'for': 217, '': 1, 'new': 48, ',': 72, 'Model': 52, 'List': 51, 'Default': 50, ']': 40, '[': 39, 'int': 25}
{'}\n': 57, ';': 43, ')': 42, '(': 34, 'close': 53, 'null': 35, ',': 36, 'Tables': 33, 'get': 32, '.': 31, '=': 29, 'rs': 28, 'Set': 27, 'Result': 26, '': 8, 'Data': 14, 'Meta': 13, 'public': 0}
{'}\n': 92, ';': 44, ')': 14, '(': 4, 'notify': 85, 'Change': 83, 'On': 82, 'Notify': 81, 'm': 18, 'if': 16, '}': 76, 'collection': 13, 'All': 3, 'add': 2, '.': 27, 'Objects': 68, '{': 15, 'Lock': 64, 'synchronized': 61, 'NUM': 36, '_': 35, '!=': 21, 'size': 40, '&&': 50, 'null': 22, ':': 37, '?': 8, '==': 32, 'Data': 29, 'Delegate': 20, 'Event': 19, '>': 12, 'T': 11, '': 5, 'extends': 9, '<': 7, 'Collection': 6, 'void': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 12, 'Name': 11, 'log': 10, '+': 22, 'PREFIX': 21, '': 8, '(': 7, 'remove': 18, '.': 17, 'List': 6, 'File': 5, 'current': 14, '{': 13, 'String': 9, 'Current': 4, 'void': 2, 'static': 1, 'public': 0}
{')': 26, '': 8, '(': 15}
{'}\n': 144, ';': 39, ')': 13, 'S': 44, '': 9, '(': 8, 'cleanup': 131, 't': 110, ',': 26, 'Statement': 12, 'sql': 11, 'STR': 25, '_': 24, 'format': 22, '.': 16, 'String': 10, 'Throwable': 109, 'surface': 113, '{': 14, 'catch': 106, '}': 70, 'execute': 6, '=': 45, 'try': 71, 'return': 67, 'error': 61, 'logger': 15, 'null': 56, '==': 55, 'if': 51, 'get': 46, 'final': 40, 'trace': 17, 'synchronized': 2, 'static': 1, 'public': 0}
{'}\n': 27, ';': 26, 'length': 25, '.': 24, 'buf': 17, '(': 3, 'write': 2, '{': 12, ')': 8, ']': 6, '[': 5, 'void': 1, 'public': 0}
{'}\n': 62, '}': 41, ';': 40, ')': 20, '': 2, '{': 21, 'e': 48, 'Exception': 47, 'Encoding': 46, 'Unsupported': 45, '(': 6, 'catch': 42, 'STR': 38, '_': 37, ',': 36, 's': 35, 'encode': 33, '.': 32, 'URLEncoder': 31, 'return': 29, 'try': 27}
{'}\n': 556, ';': 465, ')': 209, 'BOOL': 535, '_': 534, ',': 18, '(': 7, '.': 260, 'connection': 11, 'Id': 61, 'Module': 60, 'raw': 59, 'TABLE': 265, 'TYPES_': 325, 'EXPRESSION_': 263, 'RAW_': 323, '': 9, 'Names': 259, 'CTable': 258, 'format': 316, 'String': 233, 'final': 8, 'int': 20, 'CConnection': 10, 'static': 1}
{'}\n': 20, ';': 19, ')': 8, '.': 13, 'Currency': 2, 'return': 10, '{': 9, '': 1, 'public': 0}
{'}\n': 98, '}': 31, ';': 30, '.': 26, 'Float': 25, '': 13, 'return': 23, ')': 9, 'else': 76, '(': 5, '{': 10, 'INFINITY': 15, 'if': 11, 'float': 2, 'static': 1, 'public': 0}
{'}\n': 58, ';': 36, 'Share': 5, ',': 32, ')': 12, '(': 8, '.': 26, 'File': 31, '': 14, '{': 13}
{'}\n': 40, '}': 39, ';': 20, ')': 7, ']': 36, 'NUM': 35, '_': 34, '[': 33, 'new': 14, '(': 6, '.': 28, '{': 8, '': 9, 'junk': 12, 'void': 1, 'private': 0}
{'}\n': 163, ';': 32, 'v1': 34, '-': 141, 'v2': 40, 'return': 158, '}': 157, ')': 18, 'emin': 63, 'emax': 75, '(': 5, '*=': 138, 'min': 111, 'max': 125, 'amax': 99, ',': 10, '.': 66, 'Math': 114, '': 6, '=': 23, 'double': 2, 'final': 20, 'amin': 87, 'i': 48, 'Max': 80, 'get': 67, 'addit': 14, 'Min': 68, 'exist': 9, '{': 19, '++': 58, 'dim': 22, '<': 54, 'NUM': 37, '_': 36, 'int': 21, 'for': 45, 'Dimensionality': 26, 'Same': 25, 'assert': 24, 'Comparable': 8, 'Spatial': 7, 'enlargement': 3, 'static': 1, 'public': 0}
{'}\n': 17, ';': 16, ')': 6, '(': 5, 'Get': 3, 'can': 2, 'return': 8, '{': 7, 'boolean': 1, 'public': 0}
{'}\n': 72, ';': 27, ')': 13, '(': 9, 'String': 5, 'to': 67, '.': 66, 'sb': 58, 'return': 64, '=': 18, 's': 12, 'NUM': 34, '_': 33, '{': 14, '': 4, 'strip': 6}
{'}\n': 170, ';': 67, ')': 18, 'actual': 17, ',': 10, 'expected': 13, 'message': 9, '(': 6, '.': 85, 'null': 52, '{': 19, 'String': 8, '': 7, 'Equals': 5, 'assert': 3, 'void': 2}
{'}\n': 26, ';': 17, ')': 11, '(': 3, '.': 19, 'th': 10, '{': 12, 'Throwable': 9, '': 4, ',': 7}
{'}\n': 115, ';': 114, ')': 43, 'Plural': 104, 'prefix': 49, ',': 10, 'Singular': 99, '(': 5, 'Prefix': 60, 'Entry': 61, '': 7, '{': 44, 'String': 8, 'final': 6}
{'}\n': 29, ';': 28, ')': 8, 'TIME': 26, 'WARNED_': 25, 'EXPIRATION_': 24, 'PASSWORD_': 23, '': 14, '.': 11, 'Type': 19, 'Operation': 18, 'State': 17, 'Policy': 16, 'Password': 3, '(': 7, 'add': 12, 'operations': 10, '{': 9, 'Time': 6, 'Warned': 5, 'Expiration': 4, 'void': 1, 'public': 0}
{'}\n': 119, '}': 48, ';': 85, ')': 13, '(': 8, '{': 14, 'e': 91, 'Exception': 90, '': 17, 'catch': 87, ']': 76, '[': 75, 'Object': 74, 'new': 72, ',': 29, 'STR': 28, '_': 27, 'Method': 64, 'invoke': 21, '.': 20, 'Helper': 19, 'Invoker': 18, 'try': 15}
{'}\n': 86, ';': 26, ')': 14, '(': 6, 'String': 3, 'to': 81, '.': 63, 'sb': 30, 'return': 78, '}': 70, 'STR': 25, '_': 24, 'append': 64, '{': 15, '++': 59, 'i': 42, '-': 51, 'Chars': 13, 'total': 12, '<': 48, 'NUM': 45, '=': 23, 'int': 11, 'for': 39, 'Builder': 29, '': 2, 'new': 32, 'str': 9, 'null': 20, '==': 19, 'if': 16, ',': 10, 'pad': 4, 'static': 1, 'public': 0}
{'}\n': 25, ';': 14, ')': 7, '.': 18, 'flag': 6, '=': 12, '{': 8, '(': 4, 'void': 1}
{'}\n': 226, ';': 78, 'result': 224, 'return': 71, '}': 79, ']': 10, 'NUM': 58, '_': 57, ',': 7, 't': 21, 's': 11, '=': 144, 'S': 16, ')': 35, 'n': 6, '(': 4, 'Value': 74, 'Return': 73, 'get': 72, '{': 36, '<': 67, '+': 56, 'T': 26, 'Index': 15, 'end': 14, 'min': 51, '.': 50, 'Math': 49, '': 48, 'if': 46, 'int': 5, '[': 9, 'char': 8, 'kernel': 2, 'double': 1, 'protected': 0}
{'}\n': 68, ';': 55, 'conn': 37, 'return': 65, ')': 9, 'autocommit': 8, '(': 6, 'Commit': 60, 'Auto': 59, 'set': 58, '.': 57, 'Connection': 2, '': 1, '{': 13, 'SQLException': 12, 'throws': 10, 'boolean': 7, 'open': 3}
{'}\n': 18, ';': 17, 'BOOL': 16, '_': 15, '{': 6, ')': 5, '(': 4}
{'}\n': 25, ';': 24, ')': 12, 'l': 11, '(': 6, 'Listener': 5, 'add': 2, '.': 16, 'm_text': 14, '{': 13, '': 7, 'void': 1, 'public': 0}
{'}\n': 85, '}': 84, ';': 32, ')': 17, '(': 5, 'Changed': 80, 'on': 79, '.': 34, 'Observer': 71, 'm': 53, '{': 18, 'null': 73, '!=': 72, 'if': 63, 'info': 23, 'add': 2, 'Infos': 56, 'View': 4, 'Footer': 3, 'Selectable': 16, 'is': 15, '=': 24, 'data': 12, 'v': 8, 'view': 35, 'Info': 22, 'Fixed': 20, '': 6, 'new': 25, 'boolean': 14, ',': 9, 'Object': 11, 'void': 1, 'public': 0}
{'}\n': 35, ';': 33, ')': 25, '(': 4, 'String': 6, '': 5, 'static': 1, 'public': 0}
{'}\n': 87, '}': 86, ';': 35, ')': 17, 'Class': 7, ',': 10, ']': 15, 'i': 56, '[': 14, 'names': 16, '(': 4, 'put': 2, '.': 21, 'To': 37, '_aliases': 71, '{': 18, '++': 68, 'length': 27, '<': 62, 'NUM': 30, '_': 29, '=': 57, 'int': 55, 'for': 53, 'Names': 39, 'Canonical': 38, 'STR': 33, '>': 28, 'True': 23, 'is': 22, 'Check': 20, '': 6, 'String': 13, 'final': 5, 'void': 1, 'protected': 0}
{'}\n': 30, ';': 29, ')': 20, 'STR': 27, '_': 26, '(': 7, 'append': 24, '.': 23, 'ddl': 19, '{': 21, 'Builder': 18, 'String': 17, '': 8, ',': 11, 'column': 14, 'Column': 3, 'table': 10, 'Table': 9, 'Stmt': 6, 'Increment': 5, 'Auto': 4, 'write': 2, 'void': 1, 'protected': 0}
{'}\n': 124, '}': 123, ';': 20, ')': 19, '(': 18, 'STR': 112, '_': 111, ',': 46, 'TAG': 109, 'LOG_': 108, '': 10, 'e': 105, '.': 24, 'Log': 103, '{': 9, 'KEY': 62, 'put': 55, 'editor': 27, 'edit': 31, 'preferences': 13, '=': 14, 'Editor': 26, 'Preferences': 12, 'Shared': 11, 'get': 15, 'void': 1}
{'}\n': 163, '}': 83, ';': 38, ')': 26, 'height': 25, ',': 10, 'width': 22, 'c': 13, 'g': 9, '(': 5, 'Separator': 151, 'Line': 142, 'paint': 2, '{': 27, 'Seperators': 143, 'Paint': 126, 'is': 140, 'if': 39, 's': 86, 'fill': 133, '.': 33, 'color': 30, 'set': 125, 'BORDER': 120, '': 6, 'Size': 117, 'Corner': 116, 'NUM': 80, '_': 79, 'y': 19, 'x': 16, 'Rectangle': 93, 'Round': 92, 'create': 91, 'Generator': 89, 'shape': 88, '=': 31, 'Shape': 85, 'Blue': 75, 'get': 34, 'Green': 68, 'Red': 61, 'Color': 29, 'new': 54, 'DISABLED': 49, 'State': 46, 'Control': 45, 'Common': 44, '==': 42, 'type': 41, 'Background': 3, 'int': 15, 'JComponent': 12, 'D': 8, 'Graphics2': 7, 'void': 1, 'private': 0}
{'}\n': 247, '}': 85, ';': 46, ')': 33, 'STR': 45, '_': 44, '(': 7, 'Exception': 37, 'Upgrade': 36, '': 8, 'new': 182, 'throw': 215, '{': 38, 'SMSException': 229, 'catch': 208, 'ssoe': 212, 'SSOException': 211, 'Name': 11, '.': 50, 'ss': 89, 'Type': 22, 'schema': 21, ',': 12, 'Schema': 16, 'sub': 15, 'service': 10, 'Service': 87, 'get': 91, '=': 43, '+': 63, 'Method': 42, 'class': 41, 'message': 51, 'debug': 49, 'Enabled': 52, 'if': 47, 'String': 9, 'throws': 34, 'add': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 67, ';': 32, 'tokens': 11, 'return': 59, '}': 58, ')': 18, '(': 5, 'next': 53, '.': 27, 'it': 23, 'String': 2, '': 1, 'append': 45, '{': 42, 'Next': 38, 'has': 37, 'while': 33, 'Iterator': 22, 'list': 28, 'Tokens': 26, 'product': 25, '=': 24, 'List': 21, 'Product': 4, 'encode': 3, 'private': 0}
{'}\n': 18, ';': 17, 'return': 11, '{': 10, ')': 9, '(': 8, 'public': 0}
{'}\n': 34, ';': 21, ')': 13, '(': 5, '.': 17, 'resource': 3, 'clear': 18, '{': 14, '>': 11, '': 1, '<': 8}
{'}\n': 387, ';': 27, ')': 11, '(': 8, 'String': 3, 'As': 382, 'contents': 381, '.': 36, 'Buffer': 35, '_text': 34, 'return': 377, 'Ptr': 23, 'out': 22, 'Length': 371, 'Current': 40, 'set': 369, '}': 350, 'i': 100, 'char': 28, '=': 24, ']': 30, '++': 107, '[': 29, 'Buf': 32, 'STR': 334, '_': 25, '+': 89, 'Hex': 340, 'to': 339, 'Integer': 337, '': 2, 'Error': 331, '_report': 330, ':': 137, 'default': 328, 'break': 165, 'NUM': 26, '&': 109, '|': 151, '>': 307, '-=': 286, 'in': 46, '<<': 147, 'case': 134, '{': 20, 'code': 114, 'switch': 129, '!=': 124, 'if': 121, 'codes': 61, 'int': 9, 'end': 85, '<': 94, 'len': 10, 'for': 82, '_input': 49, 'byte': 73, 'final': 1, 'Lengths': 70, 'Unit': 69, 'Utf8': 68, 's': 67, 'Constants': 65, 'Smile': 64, '+=': 54, 'Segment': 41, 'Get': 39, 'And': 38, 'empty': 37, 'IOException': 14, 'throws': 12, 'Name': 7, 'Unicode': 6, 'Short': 5, '_decode': 4, 'private': 0}
{'}\n': 76, '}': 69, ';': 40, 'return': 65, '{': 17, ')': 16, 'cn': 11, '(': 7, '.': 33, 'if': 18, 'Class': 9, '': 2, 'static': 1, 'private': 0}
{'}\n': 96, ';': 29, ')': 16, '(': 5, 'String': 2, 'to': 91, '.': 54, 'builder': 21, 'return': 88, '}': 87, 'STR': 73, '_': 72, '+': 71, 'Value': 78, 'get': 67, 'entry': 51, 'Key': 68, 'append': 63, '{': 17, 'Set': 56, ':': 52, '>': 50, '': 1, ',': 47, '<': 44, 'Entry': 43, 'for': 37, 'Builder': 20, 'new': 23, '=': 22}
{'}\n': 27, ';': 26, ')': 6, '.': 10, '(': 5, 'sort': 4, 'Collections': 9, '': 8, '{': 7, 'public': 0}
{'}\n': 114, ';': 55, 'Array': 9, 'new': 35, 'return': 110, 'Add': 27, 'To': 8, 'event': 105, '=': 37, ']': 6, 'length': 45, '.': 44, ')': 28, 'array': 16, ',': 17, 'NUM': 64, '_': 63, '(': 10, 'arraycopy': 59, 'System': 57, '': 2, '+': 46, '[': 5, 'Bean': 4, 'Event': 3, '{': 29, 'add': 7, 'static': 1, 'public': 0}
{'}\n': 130, ';': 35, ')': 17, '(': 5, 'String': 3, 'to': 125, '.': 30, 'result': 22, 'return': 122, 'length': 31, 'c': 16, ',': 9, 'i': 37, 'substring': 66, 'append': 62, '}': 103, 'a': 8, 'Of': 48, 'index': 47, '=': 23, 'j': 43, '+': 84, 'b': 12, '{': 18, '>=': 56, 'while': 53, 'int': 36, 'NUM': 40, '_': 39, '': 2, 'new': 24, 'replace': 4, 'static': 1, 'public': 0}
{'}\n': 467, ';': 38, 'BOOL': 465, '_': 24, '=': 32, 'Super': 462, 'Called': 461, 'm': 19, '}': 273, ')': 15, 'Pos': 422, 'transform': 421, ',': 8, 'child': 70, '(': 5, 'Page': 3, '.': 120, 'Transformer': 335, 'Height': 64, 'Client': 440, 'get': 33, '/': 227, 'Y': 31, 'scroll': 30, '-': 218, 'Top': 41, 'float': 9, 'final': 28, 'continue': 135, 'Decor': 20, 'is': 132, 'lp': 112, 'if': 17, 'Params': 111, 'Layout': 110, '': 97, 'i': 82, 'At': 103, 'Child': 21, 'View': 98, '{': 16, '++': 93, 'Count': 22, '<': 88, 'NUM': 25, 'int': 6, 'for': 79, 'Scroll': 34, 'null': 337, '!=': 299, 'Pixels': 14, 'offset': 10, 'position': 7, 'Scrolled': 4, 'On': 319, 'Offset': 283, 'Bottom': 51, 'And': 308, '+=': 190, 'break': 173, 'Measured': 222, 'padding': 40, 'height': 61, ':': 166, 'BOTTOM': 242, 'Gravity': 146, 'case': 175, 'max': 214, 'Math': 212, 'VERTICAL': 206, 'CENTER_': 205, 'TOP': 180, 'default': 165, 'vgrav': 139, 'switch': 160, 'MASK': 151, 'GRAVITY_': 150, 'VERTICAL_': 149, '&': 144, 'gravity': 143, '!': 129, 'Padding': 44, '>': 23, 'on': 2, 'void': 1, 'protected': 0}
{'}\n': 169, '}': 154, ';': 36, ')': 9, 'Button': 7, ',': 149, 'Animator': 99, 'button': 39, '(': 8, 'enable': 157, '{': 10, 'else': 155, 'disable': 144, 'Invisible': 42, 'Be': 41, 'Should': 40, 'if': 90, 'Appear': 129, 'new': 112, '.': 20, 'Factory': 110, ':': 121, 'Disappear': 115, '?': 107, '=': 16, '': 68, 'final': 11, 'Update': 77, 'should': 76, 'Currently': 57, 'Is': 56, '!=': 84, 'boolean': 12, 'INVISIBLE': 72, 'View': 69, '==': 30, 'Visibility': 64, 'get': 21, 'Disabled': 51, '||': 48, 'Reached': 15, 'Page': 14, 'last': 13, 'size': 33, 'pages': 31, 'NUM': 28, '_': 27, '+': 26, 'Item': 23, 'Current': 22, 'Pager': 19, 'view': 18, 'In': 5, 'Variables': 4, 'Member': 3, 'reflect': 2, 'void': 1, 'private': 0}
{'}\n': 264, ';': 9, 'Value': 26, 'Type': 25, 'Content': 24, 'original': 12, '=': 16, 'm': 17, 'Name': 15, 'Id': 14, 'App': 13, '}': 243, ')': 5, '(': 4, 'String': 11, 'get': 165, '.': 85, 'Decoder': 108, 'pdu': 96, 'equals': 230, 'True': 151, 'assert': 150, 'STR': 199, '_': 48, '+': 140, ',': 135, 'TAG': 196, 'LOG_': 195, '': 10, 'd': 192, 'Log': 190, 'res': 8, 'index': 157, 'Application': 128, 'XWap': 127, 'decode': 175, 'Value32': 166, 'int': 22, 'NUM': 49, '-': 145, 'Len': 144, 'Header': 133, 'Wsp': 106, 'Start': 134, 'seek': 126, 'new': 37, 'PDU': 99, 'create': 98, ']': 95, '[': 94, 'byte': 93, 'Int': 87, 'next': 86, 'rd': 35, '{': 6, '++': 62, 'i': 46, '<': 52, 'for': 43, 'Random': 34, 'boolean': 7, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 110, ';': 25, 'result': 84, 'return': 78, '}': 54, ')': 14, '(': 5, 'delete': 102, '.': 21, 'file': 13, '{': 15, 'Existing': 18, 'is': 3, '!': 95, 'if': 93, 'Write': 89, 'can': 88, '=': 19, 'boolean': 2, 'BOOL': 43, '_': 42, 'e': 59, 'Exception': 74, 'Found': 73, 'Not': 72, 'File': 12, '': 7, 'catch': 55, 'IOException': 58, 'close': 50, 'output': 32, 'try': 26, ',': 41, 'Stream': 31, 'Output': 30, 'new': 34, 'exists': 22, 'final': 10, 'Null': 9, 'Non': 8, '@': 6, 'Writable': 4, 'static': 1}
{'}\n': 8, ')': 6, '(': 5, 'Priority': 4, '': 1, 'public': 0}
{'}\n': 218, ';': 147, 'idm': 90, '=': 174, ')': 135, '.': 138, '': 54, 'STR': 142, '_': 141, '(': 67, 'logger': 137, '{': 136, 'Idm': 56, 'Accessor': 57}
{'}\n': 102, ';': 20, ')': 7, 'tmp': 12, '(': 4, 'Multiply': 97, 'pre': 96, 'c': 22, ',': 49, 'NUM': 48, '_': 47, 'set': 45, '.': 26, 's': 33, '-': 66, 'theta': 6, 'sin': 38, 'Math': 25, '': 9, '=': 13, 'double': 5, 'cos': 27, 'D': 11, 'Matrix3': 10, 'new': 14, '{': 8, 'rotate': 2, 'void': 1, 'public': 0}
{'}\n': 43, ';': 32, ')': 11, '(': 6, 'start': 4, 'return': 33, 'get': 28, '.': 27, '=': 24, 'service': 22, '': 1, '{': 12, 'Service': 2, 'Factory': 5, 'Host': 3, 'public': 0}
{'}\n': 187, '}': 82, ';': 47, ')': 36, 'msg': 157, '(': 34, 'offer': 181, '.': 63, 'outbox': 119, 'this': 173, ',': 108, 'Ref': 62, '>': 156, '<': 153, 'Message': 152, 'Wake': 90, 'Pipe': 44, '': 41, 'new': 159, '=': 59, 'T': 155, 'Null': 143, 'Non': 142, 'require': 141, 'Objects': 139, '{': 37, 'Create': 127, 'Or': 126, 'current': 125, 'Amp': 118, 'Outbox': 117, 'try': 114, 'New': 53, 'state': 45, 'Old': 46, 'Set': 104, 'And': 103, 'compare': 102, '_state': 60, '!': 97, 'while': 95, 'to': 89, 'return': 80, 'is': 74, 'if': 68, 'get': 64, 'do': 55, 'State': 42, 'In': 29, 'wake': 1, 'void': 0}
{'}\n': 478, ';': 148, '(': 7, ')': 77, 'Constraints': 6, 'reduced': 411, '': 1, 'targets': 68, ',': 15, 'Factory': 409, 'type': 408, 'Af': 405, 'reduce': 404, 'To': 14, 'assigned': 13, 'Type': 11, 'Return': 22, 'A': 373, 'F2': 372, 'new': 90, 'add': 368, '.': 367, '>': 67, '<': 63, 'List': 305, 'Linked': 92, '=': 89, 'AFConstraint': 261, '{': 78, 'null': 154, '!=': 153, 'if': 149, 'final': 8, 'Variable': 66, 'Set': 62, 'Annotated': 10, 'boxed': 21, 'Mirror': 12, 'Assignment': 5, 'create': 4}
{'}\n': 73, ';': 33, 'return': 70, ')': 20, '_': 26, 'plain': 17, '(': 5, '=': 37, 'STR': 27, ',': 8, 'static': 1, 'public': 0}
{'}\n': 109, ';': 90, 'this': 94, '}': 91, ')': 34, 'Partitions': 33, '(': 6, '.': 56, '{': 35, '>': 16, '': 1, '<': 10, 'public': 0}
{'}\n': 32, ';': 31, 'group': 11, '.': 26, '{': 13, ')': 12, ',': 9, '': 1, '(': 5}
{'}\n': 70, ';': 69, ')': 12, 'p_vector': 11, '(': 6, '': 1, '.': 24, '{': 13, 'Int': 10, 'Vector': 9, 'Pla': 2, 'public': 0}
{'}\n': 27, ';': 26, ')': 15, '(': 11, '.': 18, '{': 16, 'command': 14, 'Runnable': 13, '': 12}
{'}\n': 85, ';': 29, ')': 6, '': 8, 'height': 61, '(': 5, '.': 24, 'Math': 72, 'int': 1, 'y': 65, 'size': 44, '=': 12, 'Size': 55, 'get': 18, 'display': 32, 'Point': 43, 'new': 46, 'Display': 31, 'Default': 37, 'wm': 11, 'SERVICE': 27, 'WINDOW_': 26, 'Context': 23, 'Service': 20, 'System': 19, 'Manager': 10, 'Window': 9, '{': 7, 'calculate': 2}
{'}\n': 37, ';': 19, ')': 9, 'ea': 8, ',': 32, 'this': 31, '(': 4, 'Event': 22, 'Action': 7, 'New': 27, 'Game': 21, '': 5, 'new': 24, 'process': 20, 'Element': 15, 'add': 2, '.': 13, 'pending': 11, '{': 10, 'Attack': 6, 'void': 1, 'public': 0}
{'}\n': 254, ';': 28, ')': 7, 'File': 13, '(': 6, 'read': 75, ',': 34, 'STR': 33, '_': 32, 'Equals': 70, 'assert': 29, 'config': 14, 'Overwrite': 159, 'set': 133, '.': 22, 'To': 148, 'Path': 138, 'Absolute': 137, 'get': 23, 'Config': 119, '': 9, 'new': 17, '=': 16, 'Contents': 94, 'file': 85, 'Name': 86, 'Directory': 46, 'create': 56, 'String': 84, 'existing': 53, 'Home': 15, 'is': 45, '&&': 41, 'exists': 38, 'True': 30, 'configuration': 21, '{': 11, 'Exception': 10, 'throws': 8, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 7, 'UTF8': 20, '': 19, '(': 6, 'Bytes': 14, 'get': 13, '.': 12, 'return': 9, '{': 8, ']': 3, '[': 2, 'byte': 1}
{'}\n': 43, ';': 33, ')': 11, '(': 4, 'add': 2, '.': 36, 'listeners': 15, '}': 34, '>': 30, 'Listener': 3, '': 6, '<': 26, 'List': 25, 'Array': 24, 'new': 22, '=': 21, '{': 12, 'null': 17, '==': 16, 'if': 13, 'void': 1, 'public': 0}
{'}\n': 178, ';': 158, ')': 69, '(': 8, '.': 167, 'Expr': 7, '=': 114, 'Tuple': 6, '': 1, '{': 89}
{'}\n': 277, '}': 276, ';': 84, ')': 50, 'n': 27, '(': 58, '.': 230, '_': 69, ':': 77, 'case': 63, 'NUM': 70, '{': 51, 'switch': 52, 'int': 26, 'number': 14, 'String': 13, '': 12, 'static': 1, 'public': 0}
{'}\n': 47, ';': 17, ')': 8, '(': 4, '}': 38, 'remove': 33, '.': 11, 'messages': 10, '{': 9, '>': 25, 'size': 22, 'if': 18, 'add': 2, 'message': 7, '': 5, 'Message': 3, 'void': 1, 'public': 0}
{'}\n': 72, ';': 61, ')': 13, '.': 42, 'container': 12, '(': 9, '{': 14, 'void': 6}
{'}\n': 41, '}': 28, ';': 27, 'return': 20, '{': 19, ')': 16, 'e': 34, 'Exception': 33, 'Parse': 32, '': 2, '(': 7, 'catch': 29, 'parse': 23, '.': 22, 'formatter': 15, 'try': 18, 'Format': 14, 'Date': 3, 'String': 9, 'static': 1, 'public': 0}
{'}\n': 107, ';': 89, ')': 8, '(': 3, '.': 82, 'entry': 62, '}': 90, '{': 9, 'Entry': 59, '': 57, 'void': 1, 'public': 0}
{'}\n': 175, ';': 132, ')': 59, 'null': 153, '(': 54, '': 14, 'Registry': 66, 'new': 108, '=': 101, '{': 60, 'Extensions': 23, 'Extension': 15}
{'}\n': 99, ';': 94, 'val': 10, 'return': 96, '}': 95, ')': 26, 'NUM': 31, '_': 30, '(': 14, '.': 18, '=': 43, '{': 41, 'STR': 39, '==': 37, '-': 29}
{'}\n': 55, ';': 53, 'Completion': 4, ')': 34, '(': 19, 'Auto': 3}
{'}\n': 78, ';': 29, ')': 10, '(': 9, 'elements': 74, '.': 31, 'result': 18, 'return': 71, 'Options': 8, 'list': 7, 'super': 62, 'Collections': 58, '': 1, 'All': 55, 'add': 32, 'STR': 39, '_': 38, ',': 40, 'NUM': 45, 'Option': 5, 'new': 20, '>': 6, '<': 3, 'Vector': 13, '=': 19, '{': 11, 'Enumeration': 2, 'public': 0}
{'}\n': 37, ';': 36, ')': 32, 'Host': 13, 'proxy': 12, '(': 21, 'Property': 20, '.': 18, 'String': 11, '': 10}
{'}\n': 218, '}': 139, ';': 66, ')': 19, 'clazz': 12, ',': 13, 'Name': 58, 'field': 52, 'method': 163, '(': 6, '.': 61, 'Error': 148, '': 7, '{': 46, 'Exception': 143, 'catch': 140, 'Method': 85, 'get': 62, '=': 59, 'custom': 79, 'STR': 154, '_': 153, 'e': 144, 'continue': 137, 'try': 114, 'VALUE': 111, 'ACCESSOR_': 110, 'DEFAULT_': 109, 'Constants': 106, 'equals': 103, '!': 91, '&&': 98, 'Null': 93, 'is': 92, 'if': 89, 'String': 78, 'Type': 68, 'fields': 18, ':': 53, 'Field': 16, 'Mapped': 15, 'for': 47, '...': 17, '>': 11, '?': 10, '<': 9, 'Class': 8, 'Methods': 5, 'verify': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 125, ';': 26, ')': 13, '(': 7, 'String': 3, 'to': 120, '.': 28, 'output': 18, 'return': 117, '}': 116, 'NUM': 37, '_': 36, 'Int': 34, 'next': 33, 'rnd': 31, 'append': 29, '{': 14, '++': 99, 'i': 47, '-': 55, '<': 53, '=': 19, 'int': 8, 'for': 44, '+': 39, 'Builder': 17, '': 2, 'new': 20, 'Positive': 5, 'random': 4, 'public': 1, 'static': 0}
{'}\n': 445, '}': 194, ';': 193, ')': 77, '(': 39, '.': 121, '=': 231, '': 45, '{': 81, '!=': 344, 'if': 103, 'var': 60, 'To': 5, 'public': 0}
{'}\n': 82, ';': 47, ')': 16, 'Text': 41, '.': 39, '': 8, '(': 44, 'get': 40, '=': 28, '>': 23, '<': 20, 'void': 1}
{'}\n': 175, ';': 51, 'res': 108, 'return': 172, '}': 67, ')': 32, 'listener': 153, ',': 9, 'STR': 165, '_': 81, '(': 5, 'Listener': 39, 'add': 161, '.': 45, 'Listeners': 44, 'device': 43, '{': 33, 'listeners': 41, ':': 154, 'IDevice': 2, '': 1, 'for': 148, 'null': 72, '!=': 71, 'if': 52, 'Date': 135, 'new': 115, 'Address': 8, 'Entity': 4, 'By': 112, 'Device': 111, 'learn': 3, '=': 42, 'ipv4': 16, 'NUM': 82, '==': 97, '&&': 73, 'vlan': 12, '<=': 80, 'Value': 77, 'short': 76, 'clear': 62, 'Updates': 31, 'process': 30, '!': 54, 'Ordered': 47, 'get': 46, '>': 40, '<': 36, 'List': 35, 'boolean': 29, 'Port': 27, 'switch': 21, 'Integer': 15, 'DPID': 22, 'Long': 20, 'Short': 11, 'mac': 7, 'long': 6, 'public': 0}
{'}\n': 165, ';': 62, 'return': 162, '}': 63, ')': 44, 'buffer': 100, '(': 24, '.': 138, '{': 45, '=': 89, '!': 48, 'if': 46, 'level': 41, 'int': 29, 'Buffer': 14, '': 13, 'public': 0}
{'}\n': 249, ';': 53, 'return': 245, '}': 52, 'break': 222, ']': 19, 'NUM': 157, '_': 81, '[': 18, 'groups': 150, '=': 58, ':': 165, 'case': 205, '{': 15, ')': 8, 'index': 170, '(': 7, 'switch': 181, ',': 44, 'regex': 109, 'line': 164, 'match': 172, 'int': 169, 'lines': 97, 'String': 2, '': 1, 'for': 160, 'new': 59, 'STR': 82, 'get': 78, '.': 40, 'Properties': 76, 'MDSDialog': 75, 'buf': 57, 'Lines': 100, 'prompts': 88, 'For': 72, 'Wait': 71, 'send': 70, 'Builder': 56, 'MDS_': 42, 'SSHPrompt': 32, 'Exception': 14, 'Controller': 13, 'Device': 12, 'Network': 11, 'throws': 9, 'public': 0}
{'}\n': 47, ';': 19, 'return': 44, '}': 43, '++': 41, 'n': 40, ')': 12, 'c': 11, '(': 5, 'if': 34, '{': 13, 'Array': 29, 'Char': 28, 'to': 27, '.': 26, 'char': 10, 'NUM': 18, '_': 17, '=': 16, ',': 9, 'string': 8, 'String': 7, '': 6, 'static': 1, 'public': 0}
{'}\n': 128, ';': 68, ')': 67, '(': 6, 'Icon': 3, 'Image': 2, '': 1, 'new': 119, 'return': 118, 'dispose': 114, '.': 62, 'g': 71, 'null': 109, ',': 58, 'NUM': 102, '_': 101, 'get': 76, 'icon': 10, 'draw': 91, 'Graphics': 70, '=': 37, 'ARGB': 66, 'INT_': 65, 'TYPE_': 64, 'Buffered': 40, 'add': 4, 'private': 0}
{'}\n': 59, ';': 37, ')': 17, '(': 8, 'Array': 24, 'Byte': 23, 'to': 53, '.': 52, 'buf': 27, 'return': 50, ',': 46, 'Str': 13, 'in': 12, 'All': 6, 'pipe': 38, 'Stream': 11, 'Output': 25, '': 9, 'new': 29, '=': 28, '{': 21, 'IOException': 20, 'throws': 18, 'Input': 10, 'read': 5, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 14, ',': 10, '(': 19, 'search': 3, 'return': 16, '{': 15, 'String': 2, '': 1}
{'}\n': 236, ';': 97, ')': 46, 'NUM': 192, '_': 80, '(': 64, ',': 179, '': 14, 'get': 148, 'cfg': 31, '==': 107, 'if': 57, 'STR': 81, 'Exception': 75, 'new': 71, 'throw': 70, '{': 56, 'Configuration': 30, 'Ignite': 15}
{'}\n': 38, ';': 17, ')': 4, '(': 3, 'start': 34, '.': 8, 'Thread': 19, 'm': 6, '': 22, 'new': 21, '=': 20, '{': 5, 'execute': 2, 'void': 1, 'public': 0}
{'}\n': 35, '}': 34, ';': 33, ')': 14, 'Var': 7, 'env': 12, '(': 8, '.': 27, 'List': 26, '{': 15, 'Env': 6, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 162, ';': 35, ')': 13, 'Num': 38, 'max': 37, '(': 6, 'String': 3, 'to': 155, '.': 23, 'Integer': 153, '': 2, 'return': 60, '}': 64, 'mid': 83, '=': 20, 'min': 66, 'break': 140, '{': 14, '==': 135, 'if': 43, 'else': 129, 'Threshold': 5, 'pass': 99, 'Prob': 18, 'log': 17, '<=': 111, 'lambda': 12, ',': 10, 'Log': 46, 'calc': 4, 'boolean': 98, 'final': 15, 'NUM': 27, '_': 26, '/': 31, '+': 89, 'int': 36, '<': 76, 'while': 72, 'STR': 62, '>': 54, 'score': 8, '-': 28, 'Math': 22, 'double': 7, 'private': 1, 'static': 0}
{'}\n': 71, ';': 23, ')': 11, 'Pos': 27, 'Windows': 42, 'last': 25, ',': 65, 'Unix': 26, '(': 7, 'max': 60, '.': 30, 'Math': 58, '': 8, 'return': 19, 'SEPARATOR': 37, 'WINDOWS_': 52, 'Of': 4, 'Index': 32, 'filename': 10, '=': 28, 'int': 2, 'UNIX_': 36, 'NUM': 22, '_': 21, '-': 20, 'null': 17, '==': 16, 'if': 13, '{': 12, 'String': 9, 'Separator': 6, 'Last': 5, 'index': 3, 'static': 1, 'public': 0}
{'}\n': 680, ';': 35, ')': 9, '(': 3, 'Bucket': 415, '.': 7, '': 1, '_': 32, 'NUM': 33, ',': 282, 'create': 473, 'List': 192, '=': 25, 'Integer': 242, '>': 174, '<': 169, 'STR': 156, 'VM': 37, 'get': 29, 'host': 24, 'Host': 23, '{': 20, 'void': 14, 'public': 13, 'Test': 6, '@': 0, 'class': 8, 'Flaky': 5, 'Category': 2}
{'}\n': 114, ';': 50, 'result': 53, 'return': 111, '}': 110, ']': 5, 'i': 43, '[': 4, '(': 8, '=': 44, '{': 60, ')': 59, '++': 58, 'length': 55, '.': 54, '<': 52, 'NUM': 46, '_': 45, 'int': 42, '': 13, 'static': 1}
{'}\n': 32, ';': 31, ')': 8, 'URI_': 22, '': 5, '(': 4, 'resolve': 19, '.': 18, 'Url': 17, '_base': 16, 'delete': 2, '{': 13, 'Exception': 12, 'Isilon': 11, 'throws': 9, 'id': 7, 'String': 6, 'void': 1, 'public': 0}
{'}\n': 115, ',': 23, '(': 38, 'put': 98, '.': 75, 'Map': 96, ';': 94, ')': 93, '=': 72, 'String': 9, '': 8}
{'}\n': 28, ';': 27, ')': 15, '(': 5, '.': 20, 'extent': 8}
{'}\n': 324, '}': 156, ';': 61, 'null': 154, 'return': 153, ')': 60, '.': 66, '{': 308, 'e': 306, 'Exception': 305, '': 1, '(': 42, 'catch': 302, 'new': 39, '_': 110, '=': 38, 'cache': 36, 'Stream': 186, 'File': 35, 'STR': 111, 'exists': 67, 'if': 62, 'String': 8}
{'}\n': 46, ';': 45, ')': 7, '(': 3, 'File': 2, '.': 38, '': 4, 'throws': 8, 'file': 6}
{'}\n': 74, ';': 21, 'return': 64, '}': 63, ')': 6, 'PERMISSION_': 57, '': 52, '.': 26, 'Manager': 54, 'Package': 53, '==': 51, 'i': 17, '(': 5, 'get': 40, 'Permission': 44, 'User': 43, 'm': 24, 'Perms': 25, 'if': 35, '{': 7, '++': 32, 'size': 27, '<': 23, 'NUM': 20, '_': 19, '=': 18, 'int': 16, 'for': 14, 'boolean': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 7, '(': 3, 'execute': 2, '.': 10, 'executor': 9, '{': 8, 'Runnable': 5, '': 4, 'void': 1}
{'}\n': 45, ';': 23, ')': 8, '(': 7, 'if': 24, '.': 19, '=': 17, 'raw': 16, 'private': 0}
{'}\n': 23, ';': 22, ')': 10, 'field': 9, '(': 5, 'add': 18, '.': 17, 'Attribute': 16, '{': 11, 'Field': 8, '': 7, 'final': 6}
{'}\n': 27, '}': 26, ';': 25, ')': 9, 'token': 8, '(': 5, '.': 20, '{': 10, 'String': 7, '': 6}
{'}\n': 80, ';': 24, 'ret': 20, '(': 7, '.': 36, 'Math': 69, '': 68, ')': 17, ']': 10, 'i': 28, '[': 9, '-': 55, '{': 18, '++': 40, 'length': 37, '<': 34, 'NUM': 23, '_': 22, '=': 21, 'int': 27, 'for': 25, 'double': 2, ',': 12, 'static': 1, 'public': 0}
{'}\n': 66, '}': 65, ';': 18, ')': 8, 'buf': 7, ',': 43, 'cb': 52, '(': 3, 'Blocks': 55, 'cell': 54, 'Array': 51, 'Byte': 5, '': 4, 'for': 47, 'Key': 42, 'primary': 41, 'Int': 13, '.': 11, 'Enabled': 26, 'Block': 25, 'Row': 24, 'is': 23, 'info': 21, '{': 9, 'Buffer': 6, 'void': 1, 'public': 0}
{'}\n': 123, ';': 101, ')': 30, '': 5, '.': 79, 'Amount': 23, 'debit': 22, ',': 24, '(': 14, '>': 41}
{'}\n': 108, '}': 107, ';': 105, ')': 6, '(': 5, 'Selected': 101, 'is': 100, '.': 72, 'Set': 92, 'Data': 91, 'set': 73, 'Exp': 50, 'm_': 49, '{': 7, 'null': 52, '!=': 51, 'if': 47, 'Links': 4, 'Radio': 3, 'update': 2, 'void': 1, 'private': 0}
{'}\n': 39, ';': 38, ')': 15, '(': 6, 'suffix': 14, 'String': 8, '': 7}
{'}\n': 136, ';': 34, 'properties': 41, 'return': 133, '}': 132, ')': 14, 'props': 92, '(': 10, 'add': 102, '.': 69, 'url': 79, 'Properties': 5, 'load': 94, '=': 30, '': 1, 'Element': 84, 'next': 83, 'resources': 58, 'URL': 56, '{': 18, 'Elements': 72, 'More': 71, 'has': 70, 'while': 66, 'fulluri': 29, 'Resources': 61, 'get': 60, '>': 6, '<': 3, 'Enumeration': 53, 'List': 2, 'Array': 45, 'new': 43, 'uri': 13, '+': 32, '_path': 31, 'String': 12, 'IOException': 17, 'throws': 15, 'find': 7, 'public': 0}
{'}\n': 20, ';': 19, ')': 11, 'entry': 10, '(': 5, '.': 14, '{': 12, '': 6, 'void': 0}
{'}\n': 82, '}': 54, ';': 33, 'return': 70, '{': 24, ')': 32, '': 2, '(': 6, 'STR': 49, '_': 48, '.': 28, '=': 26, 'uri': 25, 'try': 23, 'url': 9, 'URL': 5, 'static': 1, 'public': 0}
{'}\n': 203, ';': 39, ')': 12, 'STR': 23, '_': 22, ',': 73, 'Xml': 20, 'Web': 41, 'src': 19, '(': 11, 'Servlet': 5, 'has': 191, '.': 51, 'Utils': 189, '': 14, 'True': 184, 'assert': 183, 'merge': 79, 'merger': 141, 'Merger': 140, 'new': 56, '=': 21, 'null': 74, 'Bytes': 67, 'get': 66, 'Stream': 61, 'Input': 60, 'Array': 59, 'Byte': 58, 'parse': 52, 'Io': 50, '+': 24, 'String': 18, '{': 16, 'Exception': 15, 'throws': 13, 'With': 8, 'Document': 7, 'Into': 6, 'One': 4, 'Merge': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 45, ';': 44, ')': 6, '(': 17, '': 1, '{': 11, 'Empty': 22, 'is': 21, '.': 20, 'if': 16, 'Exception': 10, 'Interrupted': 9, 'throws': 7, 'RE': 2}
{'}\n': 32, ';': 21, ')': 12, ',': 28, 'id': 7, '(': 18, 'put': 25, '.': 16, '{': 13}
{'}\n': 117, ';': 68, ')': 44, 'key': 43, ',': 26, 'range': 33, 'fix': 25, '(': 18, 'Info': 91, 'Fix': 17, 'Quick': 89, '': 20, 'new': 55, 'add': 101, '.': 100, 'Fixes': 74, 'my': 60, '}': 69, '>': 92, '<': 87, 'List': 86, 'Array': 85, '=': 54, '{': 45, 'null': 50, '==': 49, 'if': 46, 'Offset': 62, 'End': 65, 'Start': 61, 'Range': 32, 'Text': 31, 'Key': 42, 'Display': 41, 'Highlight': 40, 'final': 38, 'Nullable': 29, '@': 19, 'Null': 22, 'Not': 21, 'register': 15, 'void': 14, 'public': 0}
{'}\n': 86, ';': 26, ')': 9, ',': 82, 'parent': 30, '(': 4, 'Children': 79, 'To': 78, 'add': 77, '}': 49, 'NUM': 42, '_': 41, 'Segments': 69, 'Last': 68, 'remove': 67, '.': 20, 'pathname': 34, 'get': 63, 'Cache': 61, 'Entry': 29, 'directory': 59, 'Zip': 28, '': 5, '=': 46, '{': 10, 'else': 50, 'root': 47, '==': 40, 'Count': 37, 'segment': 36, 'if': 32, 'create': 2, 'void': 1, 'protected': 0}
{'}\n': 89, ';': 28, ')': 6, '(': 5, '.': 47, '=': 71, '_': 37, 'addr': 18, 'STR': 38, '': 11, '{': 10}
{'}\n': 141, '}': 69, ';': 68, ')': 22, '(': 4, '': 5, 'new': 133, 'throw': 132, '{': 26, 'e': 129, 'catch': 125, 'Document': 3, '.': 55, 'f': 27, 'locator': 7, 'set': 56, 'if': 36, 'XNIException': 25, 'throws': 23, 'augs': 21, 'Augmentations': 20, ',': 8, 'Context': 15, 'namespace': 16, 'Namespace': 14, 'encoding': 11, 'String': 10, 'XMLLocator': 6, 'start': 2, 'void': 1, 'public': 0}
{'}\n': 120, '}': 67, ';': 66, ')': 40, '(': 47, 'Trace': 98, 'Stack': 97, 'print': 96, '.': 59, 'e': 91, '{': 93, 'IOException': 90, '': 34, 'catch': 87, 'os': 51, 'Stream': 30, 'Output': 29, 'public': 3}
{'}\n': 19, ';': 18, ')': 10, 'observer': 9, '(': 4, 'add': 14, '.': 13, 'observers': 12, '{': 11, 'Observer': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 37, ';': 21, ')': 6, '(': 5, '.': 15, 'heartbeat': 12, '': 8, '{': 7}
{'}\n': 226, ';': 43, ')': 17, 'message': 11, '(': 3, '+': 32, 'header': 25, ',': 7, 'name': 6, 'STR': 205, '_': 30, 'debug': 202, '.': 51, 'log': 192, 'Enabled': 196, 'Debug': 195, 'is': 194, 'if': 190, 'write': 178, 'out': 16, 'NUM': 31, 'LEN': 35, 'COMMAND_': 34, '': 4, 'hash': 142, 'arraycopy': 153, 'System': 151, '=': 26, ']': 10, '[': 9, 'byte': 8, 'length': 76, 'LE': 123, 'Array': 47, 'Byte': 46, 'To': 45, 'uint32': 44, 'Utils': 117, '}': 115, '&': 110, 'i': 67, 'At': 106, 'Point': 105, 'code': 104, '{': 21, '++': 87, '<': 73, '&&': 79, 'int': 66, 'for': 64, 'Magic': 54, 'Packet': 53, 'get': 52, 'params': 50, 'BE': 48, 'new': 27, 'IOException': 20, 'throws': 18, 'Stream': 15, 'Output': 14, 'String': 5, 'serialize': 2, 'void': 1, 'public': 0}
{'}\n': 352, ';': 69, ')': 9, '(': 6, '.': 54, 'key': 46, 'init': 253, 'Instance': 56, 'get': 55, 'SSLContext': 236, '': 1, '=': 49, 'Managers': 231, 'Trust': 162, 'Factory': 45, 'trust': 165, 'Store': 77, 'Manager': 44, ',': 131, 'Key': 43, 'Algorithm': 65, '{': 13, 'throws': 10, 'Ssl': 4}
{'}\n': 80, ';': 20, 'NUM': 78, '_': 77, '=': 18, '.': 16, 'this': 15, ')': 13, '(': 7, 'length': 44, 'source': 12, '{': 14, '': 1, 'public': 0}
{'}\n': 37, ';': 24, ')': 9, 'new': 19, '(': 4, 'add': 27, '.': 26, 'args': 25, '': 1, 'Arg': 2, 'public': 0}
{'}\n': 136, ';': 132, 'return': 133, ')': 18, '(': 9, '.': 68, 'NUM': 110, '_': 109, 'CHARACTER': 79, 'SPC_': 78, 'COMA_': 77, '': 10, 'Constants': 74, 'Common': 73, 'Carbon': 72, 'Mapping': 17, 'Dictionary': 15, 'no': 14, '=': 34, 'String': 27, '{': 19, 'convert': 4, 'static': 1, 'public': 0}
{'}\n': 750, ';': 36, ')': 27, 'saved': 257, ',': 13, 'CONTROL': 272, 'STROKE_': 271, 'KEY_': 270, '': 9, '.': 49, 'Hints': 267, 'Rendering': 262, '(': 8, 'Hint': 263, 'set': 231, 'g2': 12, 'Line': 7, 'axis': 32, 'draw': 5, 'NORMALIZE': 297, 'VALUE_': 295, 'get': 78, '=': 34, 'Object': 256, 'Stroke': 245, 'Paint': 232, '}': 87, 'Y': 176, 'Max': 79, 'Area': 21, 'data': 20, 'Double': 63, 'D': 11, 'Line2': 30, 'new': 57, '{': 28, 'RIGHT': 192, 'Edge': 25, 'Rectangle': 24, '==': 45, 'edge': 26, 'if': 42, 'else': 88, 'LEFT': 145, 'X': 80, 'BOTTOM': 98, 'TOP': 51, 'double': 14, 'null': 35, 'Rectangle2': 18, 'cursor': 15, 'Graphics2': 10, 'Axis': 6, 'void': 4, 'protected': 3}
{'}\n': 88, ';': 40, ')': 18, 'v': 29, ',': 10, '(': 5, 'Path': 81, 'Absolute': 80, 'get': 79, '.': 42, 'To': 9, 'save': 3, 'write': 74, '': 6, 'Size': 67, 'trim': 65, '}': 62, 'header': 17, 'add': 43, '{': 22, 'null': 52, '!=': 51, 'if': 48, 'model': 13, '>': 28, 'Object': 12, '<': 25, 'Vector': 24, 'new': 31, '=': 30, 'Exception': 21, 'throws': 19, 'Instances': 16, 'File': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 117, ';': 106, 'span': 38, '}': 107, ')': 34, '.': 45, '(': 48, '=': 79, '{': 74, 'null': 40, '': 8}
{'}\n': 213, ';': 35, 'Ind': 88, 'min': 87, 'return': 209, '}': 149, 'NUM': 206, '_': 205, '>': 116, ')': 26, 'end': 15, '+': 199, 'begin': 12, '(': 4, '=': 31, '{': 27, '++': 180, '--': 147, 'max': 90, ',': 10, 'swap': 164, '.': 42, 'ind': 9, 'break': 159, '==': 154, 'if': 112, 'rs': 117, 'seek': 105, 'it': 55, 'Value': 53, 'double': 47, 'tpro': 21, '&&': 127, '<': 89, 'while': 85, 'Ele': 96, 'curr': 95, '-': 33, 'int': 1, 'rand': 25, 'Random': 24, '': 5, 'Store': 20, 'Data': 19, 'Double': 18, 'DBIDs': 8, 'Modifiable': 7, 'Array': 6, 'split': 2, 'public': 0}
{'}\n': 64, ';': 63, 'path': 9, ':': 61, ')': 14, '(': 6, 'length': 57, '.': 44, 'prefix': 13, 'substring': 53, '?': 50, 'With': 46, 'starts': 45, 'return': 42, '{': 15, 'String': 3, '': 2, ',': 10, 'Prefix': 5, 'no': 4, 'static': 1, 'public': 0}
{'}\n': 108, '}': 90, ';': 40, ')': 4, '(': 3, 'Trace': 102, 'Stack': 101, 'print': 100, '.': 75, 'e': 95, '{': 12, 'Throwable': 94, '': 6, 'catch': 91, 'qos': 58, ',': 24, 'topic': 52, 'Client': 14, 'sample': 13, 'try': 70, 'NUM': 61, '_': 54, '=': 16, 'int': 57, 'STR': 55, 'String': 51, 'null': 47, '!=': 46, 'if': 41, 'password': 38, 'Name': 36, 'user': 35, 'Mode': 33, 'quiet': 32, 'Session': 30, 'clean': 29, 'Id': 26, 'client': 25, 'url': 23, 'Async': 20, 'Sample': 19, 'new': 17, 'throws': 5, 'void': 1, 'protected': 0}
{'}\n': 16, ';': 15, ')': 7, 'a': 6, '(': 3, '.': 10, 'children': 9, '{': 8, 'IAdaptable': 5, '': 4, 'public': 0}
{'}\n': 118, ';': 27, ')': 16, 'b': 15, ',': 11, 'a': 10, '(': 6, 'Close': 104, 'composed': 109, '.': 20, 'Streams': 48, '': 2, 'on': 103, 'stream': 74, 'return': 100, 'Parallel': 88, 'is': 87, '||': 91, 'split': 44, 'Stream': 4, 'Support': 78, '=': 45, 'spliterator': 60, 'Of': 42, 'Spliterator': 39, 'Concat': 51, 'new': 46, 'Null': 23, 'Non': 22, 'require': 21, 'Objects': 19, '{': 17, 'concat': 5, 'static': 1, 'public': 0}
{'}\n': 33, ';': 32, '(': 6, '.': 20, '{': 14, ')': 13, 'force': 4, 'public': 0}
{'}\n': 87, '}': 55, ';': 37, ')': 19, '(': 4, 'Exception': 76, '': 58, 'new': 74, 'throw': 73, 'e': 70, 'catch': 56, 'if': 38, '{': 23, 'try': 24}
{'}\n': 117, ';': 40, 'BOOL': 115, '_': 114, 'return': 102, '}': 112, ')': 23, 'characteristic': 16, '(': 4, 'Characteristic': 3, 'write': 2, '.': 35, 'Gatt': 27, 'bluetooth': 28, 'value': 22, 'Value': 97, 'set': 96, 'UUID': 12, 'String': 6, 'from': 64, '': 5, 'get': 36, 'service': 11, '=': 30, 'Bluetooth': 26, 'Service': 52, '{': 24, 'null': 46, '!=': 45, 'if': 41, 'address': 7, 'Map': 34, 'm': 31, ',': 8, 'boolean': 1, 'public': 0}
{'}\n': 90, ';': 56, '=': 32, 'Name': 31, '{': 12, 'else': 58, '}': 57, ')': 11, 'full': 30, 'STR': 48, '_': 47, '(': 18, '.': 20, '': 1, 'String': 2, 'public': 0}
{'}\n': 121, ';': 58, 'return': 118, ')': 36, '(': 14, 'close': 114, '.': 80, 'scanner': 79, '}': 111, 'Line': 83, 'next': 94, '{': 87, 'Next': 82, 'has': 81, 'while': 77, '': 6, 'new': 68, '=': 47, 'String': 22, 'file': 18, 'static': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 8, 'element': 7, '(': 3, '.': 12, 'elements': 11, '{': 9, 'Element': 6, 'Json': 5, '': 4, 'public': 0}
{'}\n': 43, ';': 33, ')': 19, 'null': 40, ',': 29, 'stream': 18, '(': 10, 'send': 8, 'return': 34, 'STR': 31, '_': 30, 'Null': 26, 'Non': 25, 'require': 24, '.': 23, 'Objects': 22, '': 1, '{': 20, '>': 7, '<': 3, 'TStream': 12, 'TSink': 2, 'public': 0}
{'}\n': 41, ';': 40, '.': 21, 'sort': 15, '{': 18, ')': 17, 'int': 14, '': 6, 'private': 0}
{'}\n': 29, ';': 28, '_': 26, '{': 24, ')': 23, '': 8, ',': 13, 'ID': 12, 'Entity': 11, 'String': 9, '(': 7}
{'}\n': 44, ';': 43, '(': 5, '.': 25, '': 6, '=': 21, 'Condition': 20}
{'}\n': 206, '}': 186, ';': 43, ')': 7, '(': 6, 'delete': 201, '.': 27, 'out': 23, '{': 19, 'finally': 187, 'destroy': 191, 'src': 49, 'NAME': 66, '': 9, 'Index': 3, 'get': 32, 'f': 107, '=': 24, 'final': 20, '>': 106, '<': 103, 'Future': 102, 'commit': 96, 'UUID': 85, 'random': 87, ',': 11, 'Metadata': 79, 'new': 76, 'register': 73, 'STR': 69, '_': 68, 'String': 64, 'try': 44, 'Properties': 55, 'Store': 52, 'Journal': 48, 'JNL': 41, 'Options': 38, 'Name': 33, 'File': 22, 'Temp': 29, 'create': 28, 'Exception': 14, 'Execution': 17, 'Interrupted': 13, 'IOException': 10, 'throws': 8, 'Data': 5, 'No': 4, 'test_journal_one': 2, 'void': 1, 'public': 0}
{'}\n': 20, ';': 19, 'ldr': 9, '{': 11, ')': 10, 'Loader': 4, 'Class': 7, '': 6, '(': 5, 'static': 1, 'public': 0}
{'}\n': 155, ';': 21, ')': 32, '(': 31, '}': 132, 'String': 3, 'sub': 23, '>': 96, 'if': 75, '{': 60, '==': 78, '=': 18, 'BOOL': 58, '_': 19, 'while': 55, 'NUM': 20, 'length': 30, '.': 29, 'int': 22, '': 2}
{'}\n': 143, ';': 50, 'null': 137, '=': 136, 'Input': 23, 'm': 11, '}': 51, ')': 4, '(': 3, '': 6, 'new': 57, '{': 8, 'else': 52, '.': 30, 'Stream': 24, 'if': 9, 'IOException': 7, 'throws': 5}
{'}\n': 78, ';': 43, ')': 42, '(': 8, 'Array': 30, 'Byte': 29, 'to': 68, '.': 67, 'baos': 33, ',': 57, 'Stream': 32, 'Output': 31, '': 9, 'new': 35, '=': 34, '{': 27, ']': 4, '[': 3, 'byte': 2, 'Bytes': 7, 'static': 1}
{'}\n': 20, ';': 19, 'Prefix': 17, 'name': 8, '(': 13, 'return': 11, '{': 10, ')': 9, 'String': 3, '': 2}
{'}\n': 20, ';': 19, ')': 10, 'handler': 9, '(': 5, 'add': 2, '.': 14, '{': 11, 'Handler': 4, 'Warning': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 12, '_': 24, 'val': 11, ',': 21, '(': 4, '{': 16, 'String': 6, '': 5, 'private': 0}
{'}\n': 257, ';': 32, ')': 12, '(': 8, 'String': 3, 'to': 252, '.': 48, 'Desc': 7, 'return': 248, 'STR': 30, '_': 29, 'append': 66, '}': 79, 'attr': 35, 'QDStrings': 230, 'write': 68, '{': 17, 'else': 80, 'continue': 219, 'ID': 53, 'DESC_': 103, '': 2, 'equals': 201, 'Id': 144, '||': 207, 'NUMERICOID_': 52, 'if': 56, 'get': 49, '=': 23, 'next': 182, 'ae': 159, 'Elements': 172, 'More': 171, 'has': 170, 'All': 164, 'attrs': 11, '>': 158, 'Attribute': 34, 'extends': 155, '?': 154, '<': 133, 'Enumeration': 152, 'Naming': 15, 'for': 148, 'null': 37, 'size': 136, 'count': 40, '++': 77, 'QDString': 120, '!=': 59, '+': 90, 'Exception': 16, 'Configuration': 85, 'new': 24, 'throw': 82, 'OID': 70, 'Numeric': 69, 'NUM': 43, 'int': 39, 'Buffer': 20, 'throws': 13, 'Attributes': 10, 'Def2': 5, 'private': 1, 'final': 0}
{'}\n': 187, '}': 186, ';': 185, ')': 14, '(': 6, 'length': 91, '.': 46, 'buffer': 9, '{': 18, 'Buffer': 8, '': 7, 'public': 3}
{'}\n': 71, ';': 33, ')': 14, 'buf': 13, '(': 6, 'skip': 3, 'get': 27, '.': 26, 'tag': 18, '{': 15, 'Buffer': 12, 'Byte': 11, '': 10, 'Value': 5, 'Member': 4, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 210, ';': 107, ')': 43, 'Bean': 138, '(': 5, '}': 185, '=': 151, '{': 44, 'Event': 10, '': 6, 'if': 126, 'void': 1}
{'}\n': 189, ';': 188, ')': 116, 'Config': 53, '(': 70, 'add': 45, '.': 130, '': 71}
{'}\n': 140, ';': 38, 'NUM': 112, '_': 111, '-': 66, '.': 30, 'insets': 42, ')': 21, '(': 6, 'get': 46, '=': 43, 'left': 69, 'int': 51, 'Insets': 41, '': 40, '{': 22, 'private': 0}
{'}\n': 123, ';': 40, ')': 21, '(': 12, '.': 76, 'files': 84, 'add': 86, 'get': 77, 'filter': 20, ':': 59, 'File': 27, '': 2, 'for': 54, '=': 30, 'new': 31, 'Filter': 19, 'Filename': 18, ',': 16, 'directory': 15, 'Files': 9, 'static': 1, 'public': 0}
{'}\n': 54, ';': 22, ')': 9, '(': 5, 'String': 2, 'to': 49, '.': 24, 'result': 14, 'return': 46, 'STR': 28, '_': 27, 'append': 25, 'Buffer': 13, '': 1, 'new': 16, '=': 15, '{': 10, 'public': 0}
{'}\n': 55, '}': 54, ';': 53, ')': 6, '.': 43, '(': 5, 'listener': 40, '=': 17, '>': 15, 'Listener': 14, 'Change': 13, 'Property': 12, '': 8, '<': 10, '{': 7, 'void': 1}
{'}\n': 479, ';': 477, ')': 67, 'Row': 15, ',': 12, '(': 7, '>': 353, '<': 352, '': 8, 'new': 347, 'Id': 11, 'row': 10, '.': 184, '{': 68, 'Old': 64, 'dimension': 16, 'Dimension': 14, 'String': 9}
{'}\n': 63, '}': 53, ';': 25, ')': 18, '(': 9, 'unlock': 58, '.': 21, 'lock': 20, '{': 19, 'finally': 54, 'instructions': 17, 'Internal': 48, 'return': 45, '=': 31, 'try': 26, '>': 16, 'Instruction': 15, '': 4, '<': 13, 'List': 12, 'final': 10, 'public': 0}
{'}\n': 36, ';': 35, ')': 24, '.': 28, '(': 5, 'Owner': 20, '{': 12, '': 6}
{'}\n': 169, ';': 99, ')': 7, 'Number': 120, 'b': 109, '(': 6, 'To': 162, 'compare': 161, '.': 160, 'a': 10, ',': 18, 'NUM': 17, '_': 16, 'Equals': 153, 'assert': 152, 'Bytes': 11, 'Sign': 102, 'Integer': 118, 'Big': 117, '': 116, 'new': 122, '=': 14, '-': 104, 'int': 100, '}': 98, '{': 8, ']': 13, '[': 12, 'byte': 9, 'Neg': 4, 'Compare': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 715, ';': 20, ')': 7, '}': 200, 'gp': 696, '(': 4, 'Point': 3, 'Grab': 671, '.': 14, 'gpo': 681, '{': 8, 'null': 687, '!=': 686, 'if': 39, 'position': 6, 'Points': 672, 'poly': 13, '=': 12, '': 21, 'proj': 23, 'newys': 350, 'newxs': 335, 'else': 201, 'get': 15, ',': 169, 'NUM': 126, '_': 36, 'Length': 324, 'current': 323, 'ys': 401, 'arraycopy': 166, 'System': 164, '-': 282, '+': 522, 'xs': 328, '<=': 206, '>=': 157, ']': 101, '[': 100, 'int': 5, 'new': 118, 'length': 123, 'STR': 86, 'message': 313, 'Debug': 81, 'newll': 116, 'Location': 294, 'set': 293, 'Position': 156, 'actual': 155, 'll': 121, '/': 196, 'double': 113, 'Projection': 22, 'Type': 11, 'Render': 16, 'render': 10, 'public': 0}
{'}\n': 231, ';': 51, ')': 19, 'NUM': 76, '_': 75, ',': 74, '(': 8, 'Text': 43, '.': 41, '}': 184, '>': 160, 'Cursor': 59, 'null': 35, '!=': 83, 'if': 21, 'Before': 67, 'get': 65, '=': 60, 'Sequence': 57, 'Char': 56, '': 55, '{': 37, 'Connection': 13, 'Input': 12, 'public': 3}
{'}\n': 40, ';': 39, 'return': 25, 'NUM': 17, '_': 16, '{': 11, ')': 10, 'rate': 9, 'double': 2, ',': 7, 'val': 6, '(': 4, 'cdf': 3, 'static': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 14, 'STR': 35, '_': 34, '(': 7, 'singleton': 32, '.': 31, 'Collections': 30, '': 2, ',': 11, 'delimiter': 13, 'file': 10, 'Data': 3, 'In': 21, 'read': 5, 'return': 19, '{': 18, 'IOException': 17, 'throws': 15, 'char': 12, 'File': 9, 'Set': 4, 'static': 1, 'public': 0}
{'}\n': 78, ';': 77, ')': 76, 'NUM': 63, '_': 62, '.': 38, 'String': 3, '': 2, '(': 40, '=': 33, 'generate': 4}
{'}\n': 313, ';': 31, 'BOOL': 30, '_': 29, 'return': 28, '}': 267, ')': 12, 'counter': 122, '(': 5, 'get': 166, '.': 22, 'Set': 36, 'bit': 37, '!': 295, 'if': 14, 'min': 219, '=': 39, 'for': 120, 'Count': 67, 'valid': 66, 'set': 257, 'NUM': 70, 'null': 19, 'rows': 161, 'Path': 8, 'temp': 77, 'Paths': 3, 'For': 168, 'Rows': 167, 'Mapper': 17, 'row': 16, ']': 10, '[': 9, '{': 13, 'paths': 11, 'Tree': 7, '': 6, 'new': 40, 'int': 49, 'Bit': 35, 'else': 32, '||': 20, '==': 18, 'boolean': 1, 'protected': 0}
{'}\n': 27, ';': 16, ')': 9, '(': 5, 'length': 19, '.': 12, 's': 8, '=': 14, 'this': 11, 'str': 13, '{': 10, 'String': 3, '': 1, 'Reader': 4, 'public': 0}
{'}\n': 501, ';': 209, ')': 19, 'UIResource': 444, '': 5, 'instanceof': 442, '(': 4, 'get': 154, '.': 279, 'c': 8, 'STR': 394, '_': 393, ',': 180, 'context': 120, '=': 151, 'style': 228, 'Glass': 30, 'Sea': 29, '{': 20, 'Style': 3, 'update': 2, 'void': 1}
{'}\n': 863, ';': 42, ')': 25, 'Spec': 19, 'Measure': 14, 'height': 22, '(': 15, '+': 651, '=': 30, 'Height': 762, '.': 34, 'if': 658, '}': 626, '{': 26, 'else': 627, 'max': 238, 'Width': 247, 'Measured': 541, 'get': 35, '': 9, ',': 20, 'measure': 317, 'At': 310, 'Child': 309, 'child': 306, 'View': 305, '++': 300, '<': 295, 'NUM': 267, '_': 266, 'int': 16, 'for': 286, 'Mode': 45, 'Size': 84, 'width': 17, 'on': 13, 'void': 12, 'protected': 11, 'Override': 10, '@': 8}
{'}\n': 21, ';': 20, ')': 5, 'NUM': 18, '_': 17, '(': 4, 'wait': 3, '{': 14, 'Exception': 13, 'Interrupted': 12, '': 11, '.': 8, 'lang': 9, 'java': 7, 'throws': 6, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 78, ';': 41, 'this': 76, 'return': 75, ')': 21, 'boost': 13, ',': 11, 'field': 6, '(': 7, 'put': 68, '.': 36, 'Boosts': 45, 'fields': 35, '}': 64, '>': 60, '<': 59, 'Map': 58, 'Hash': 57, 'Float': 56, 'Object': 55, '': 1, 'new': 53, '=': 52, '{': 22, 'null': 47, '==': 46, 'if': 42, 'add': 37, 'float': 12, 'String': 9, 'Builder': 5, 'Query': 4, 'public': 0}
{'}\n': 79, ';': 77, ')': 22, 'Size': 52, 'Buffer': 51, '(': 6, '.': 46, '': 9, 'Stream': 3}
{'}\n': 156, '}': 73, ';': 70, ')': 11, 'NUM': 19, '_': 18, '+': 57, 'i': 10, '': 5, '.': 52, 'Manager': 142, 'Sensor': 3, 'Serial': 140, '*': 32, '(': 4, 'Address': 135, 'Node': 134, 'get': 133, 'String': 62, 'to': 61, 'Integer': 59, 'STR': 56, 'warn': 121, 'log': 51, '{': 12, 'else': 117, '=': 77, 'Used': 103, 'last': 102, '<': 17, 'if': 13, 's': 7, ']': 87, '[': 85, 'Array': 84, 'sensor': 83, 'null': 89, '==': 88, 'BOOL': 79, 'Sensors': 76, 'Active': 75, 'has': 74, 'return': 71, 'error': 53, 'MAXSENSORS': 47, '>': 24, '||': 21, '-': 37, 'int': 9, ',': 8, 'register': 2, 'void': 1, 'public': 0}
{'}\n': 206, '}': 129, ';': 128, ')': 49, 'value': 38, 'Exception': 135, '': 7, 'new': 142, '{': 50, 'Format': 134, 'Number': 133, '(': 6, 'catch': 130, 'Of': 124, '.': 122, 'Integer': 55, 'return': 53, 'try': 51, 'String': 8}
{'}\n': 55, ';': 19, 'count': 47, '=': 9, '_value': 40, ')': 5, '(': 4, 'Set': 27, 'And': 26, 'get': 12, '.': 11, 'long': 7, '{': 6, 'sample': 3, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 92, ';': 91, ')': 29, '(': 27, '.': 78, 'contents': 14, '{': 30}
{'}\n': 111, ';': 61, ')': 60, '(': 36, 'get': 81, '.': 80, '=': 66, '': 5, 'new': 45, 'princ': 25, 'Name': 24, 'Principal': 23, ']': 12, '[': 11, 'public': 0}
{'}\n': 668, ';': 667, ')': 469, 'annotation': 454, ',': 619, '(': 411, 'Type': 565, '.': 483, 'Annotation': 395, '': 416, 'add': 7}
{'}\n': 116, ';': 113, ')': 13, 'pkg': 11, '(': 19, '': 8, '.': 29, '{': 17, 'throws': 14, 'void': 2, 'static': 1}
{'}\n': 78, ';': 40, '.': 31, 'this': 30, '{': 22, ')': 21, ',': 8, '(': 3}
{'}\n': 56, ';': 26, ')': 7, '(': 3, '}': 51, 'NUM': 41, '_': 40, ',': 42, 'path': 6, 'char': 30, 'length': 23, '.': 22, '{': 18, '': 4, 'String': 5}
{'}\n': 270, ';': 263, ')': 7, '(': 6, 'length': 202, '.': 201, 'File': 180, 'Access': 106, 'Random': 105, 'backing': 104, '=': 75, 'long': 46, '{': 33, 'IOException': 10, '': 9, 'throws': 8}
{'}\n': 61, ';': 28, 'BOOL': 53, '_': 52, 'return': 51, ')': 10, ']': 47, 'i': 15, '[': 45, 'TYPES': 25, 'MEDIA_': 24, '': 7, '(': 6, 'equals': 37, '.': 26, 'if': 33, 'length': 27, '=': 16, 'int': 14, 'for': 12, '{': 11, 'String': 8, 'Type': 4, 'is': 2, 'boolean': 1}
{'}\n': 209, ';': 207, ')': 115, 'dependency': 88, '(': 81, 'add': 147, '.': 146, 'dependencies': 137, '{': 116, '': 84, 'Dependency': 67, 'void': 1}
{'}\n': 64, ';': 36, ')': 10, '(': 6, 'Connected': 60, 'is': 3, '.': 24, 'info': 40, '&&': 56, 'null': 55, '!=': 54, 'return': 52, 'Info': 39, 'Network': 4, 'Active': 46, 'get': 25, 'Manager': 14, 'connectivity': 15, '=': 17, '': 7, 'SERVICE': 34, 'CONNECTIVITY_': 33, 'Context': 8, 'Service': 27, 'System': 26, 'context': 9, 'Connectivity': 13, '{': 11, 'Available': 5, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 11, 'NUM': 21, '_': 20, ',': 19, 'r': 10, '(': 7, 'String': 3, '{': 12, 'Random': 9, '': 2, 'Regexpish': 5, 'random': 4, 'static': 1, 'public': 0}
{'}\n': 212, ';': 61, 'Partition': 12, '(': 55, '.': 48, ')': 60, 'Group': 20, 'Key': 19, 'partition': 39, '': 1, 'new': 143, '{': 132, 'Entity': 67, 'Helper': 82, 'Dao': 80, '=': 76}
{'}\n': 13, ';': 12, ')': 6, '(': 5, 'text': 9, 'return': 8, '{': 7, 'String': 2, 'to': 3, '': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 15, '(': 7, 'Memory': 4, 'Low': 3, '{': 16, '': 9}
{'}\n': 42, ';': 23, 'null': 28, 'return': 31, '}': 38, ')': 10, '(': 6, 'get': 34, '.': 33, 'w': 15, '{': 11, '!=': 27, 'if': 24, 'o': 9, 'Reference': 14, '': 1, '=': 16, 'Object': 2, 'Ref': 5, 'Hard': 4, 'extract': 3, 'public': 0}
{'}\n': 20, ';': 19, ')': 9, 'number': 8, '(': 6, 'format': 4, '.': 14, 'Format': 13, 'int': 12, 'return': 11, '{': 10, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 100, ';': 99, ')': 38, 'Size': 90, '.': 62, ',': 71, 'NUM': 70, '_': 69, '(': 32, 'read': 63, 'page': 36, 'return': 40, '{': 39, ']': 21, '[': 20, 'byte': 19}
{'}\n': 68, '}': 51, ';': 46, ')': 17, ',': 11, 'position': 26, '(': 5, '': 19, '{': 21, 'else': 52, 'length': 16, '+=': 48, 'buffer': 40, 'offset': 13, 'value': 10, 'arraycopy': 34, '.': 33, 'System': 32, '>=': 27, '-': 25, 'limit': 24, 'if': 22, 'IOException': 20, 'throws': 18, 'int': 12, ']': 9, '[': 8, 'byte': 7, 'final': 6, 'Bytes': 4, 'Raw': 3, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 125, '}': 124, ';': 42, ')': 12, '(': 5, '.': 34, '': 14, 'backup': 10, '{': 13, 'Backup': 3}
{'}\n': 71, ';': 59, ')': 9, 'response': 37, ',': 18, 'locale': 17, '(': 4, 'Error': 13, 'Binding': 63, 'Tenant': 62, 'Default': 61, 'tenant': 31, 'String': 30, 'to': 52, '.': 44, 'STR': 8, '_': 7, 'info': 45, 'logger': 43, '{': 42, 'IOException': 41, '': 1, 'throws': 39, 'Response': 36, 'Servlet': 35, 'Http': 34, '=': 6, 'value': 5, 'Variable': 22, 'Path': 21, '@': 0, 'Locale': 16, 'void': 11, 'public': 10, 'Mapping': 3, 'Request': 2}
{'}\n': 82, ';': 81, ')': 11, 'State': 4, 'current': 36, ',': 62, 'required': 9, 'STR': 64, '_': 63, 'US': 61, '': 6, '.': 54, 'Locale': 58, '(': 5, 'format': 55, 'String': 53, 'Exception': 16, 'Illegal': 14, 'new': 46, 'throw': 45, '{': 28, 'if': 29, 'throws': 12, 'check': 3, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 70, ';': 25, ')': 5, '(': 4, '}': 56, '.': 14, 'movie': 37, '{': 6, ':': 38, 'Movie': 36, '': 12, 'for': 33, 'synchronized': 7, 'void': 1, 'public': 0}
{'}\n': 49, ';': 33, ')': 19, '(': 6, '.': 26, '': 1, '=': 23, 'Delimiter': 17, 'String': 8, ',': 12, 'public': 0}
{'}\n': 133, ';': 39, 'null': 131, '!=': 130, ')': 10, '(': 6, 'Stats': 4, 'get': 48, '.': 15, 'Listener': 14, 'Message': 13, 'stats': 12, 'return': 121, '}': 103, 'Trace': 116, 'Stack': 115, 'print': 114, 'e': 109, '{': 11, 'Exception': 108, 'Interrupted': 107, '': 7, 'catch': 104, 'NUM': 97, '_': 45, '*': 98, 'sleep': 94, 'Thread': 92, 'try': 89, 'Queue': 49, 'Impl': 82, 'Callback': 81, 'Producer': 80, 'new': 78, ',': 77, 'Name': 50, '+': 47, 'DESTINATION': 69, 'BROKER_': 68, 'STATS_': 67, 'execute': 64, 'Template': 62, 'jms': 61, 'STR': 46, 'LOGGER': 41, 'Destination': 8, 'set': 16, 'Broker': 5, 'poll': 3, 'boolean': 2, 'private': 0}
{'}\n': 45, ';': 43, ')': 9, '(': 5, 'Path': 33, 'pathname': 8, '{': 10, '': 1, 'public': 0}
{'}\n': 106, '}': 84, ';': 33, ')': 12, '(': 6, 'Kind': 20, 'get': 19, '.': 18, 'Ref': 9, 'type': 10, '+': 94, 'STR': 93, '_': 92, 'Exception': 90, 'Argument': 89, 'Illegal': 88, '': 1, 'new': 86, 'throw': 85, 'name': 48, 'return': 30, '{': 13, 'Empty': 75, 'Or': 74, 'Null': 73, 'is': 72, 'Strings': 70, '!': 68, 'if': 66, 'NAMES': 53, 'TYPE_': 27, 'PRIMITIVE_': 51, '=': 49, 'String': 2, ':': 29, 'default': 43, 'ENUM': 37, 'case': 25, 'MESSAGE': 28, 'switch': 14, 'Type': 4, 'Name': 5, 'public': 0}
{'}\n': 290, ';': 43, 'return': 286, ')': 15, ',': 280, '(': 7, 'get': 76, '.': 75, 'States': 241, 'State': 5, '': 1, 'DAO': 185, 'Machine': 13, 'state': 12, 'new': 89, '=': 52, '{': 16, 'public': 0}
{'}\n': 475, '}': 215, ';': 21, ')': 9, 'b': 14, ',': 76, 'x': 176, 'item': 145, '(': 4, 'set': 206, 'breadth': 23, '*': 203, 'f': 401, 'BOOL': 346, '_': 74, 'Visible': 343, 'Start': 445, '.': 71, 'NUM': 75, '>=': 322, '||': 435, '<=': 267, 'if': 242, '/': 200, '-': 35, 'v': 164, ':': 185, '?': 182, '==': 179, '=': 15, 'double': 22, 'VALUE': 172, '': 5, 'Double': 169, 'format': 383, 'm_nf': 381, 'LABEL': 379, 'Item': 144, 'add': 369, 'labels': 8, 'Visual': 6, '{': 10, 'else': 309, 'End': 352, 'r': 255, 'get': 16, 'index': 218, 'continue': 306, '<': 300, 'step': 229, '+=': 271, 'm_hi': 34, 'vlo': 67, 'for': 257, 'int': 254, 'span': 32, 'Step': 233, 'Linear': 232, 'Index': 217, 'reset': 158, 'next': 154, 'iter': 124, 'Next': 137, 'has': 136, 'while': 132, 'tuples': 128, 'Iterator': 123, 'Lib': 84, 'Math': 70, 'm_lo': 36, 'floor': 80, 'pow': 72, 'm_prevlo': 48, 'Breadth': 26, 'Bounds': 18, 'Layout': 3, 'D': 13, 'Rectangle2': 12, 'Table': 7, 'void': 1, 'protected': 0}
{'}\n': 30, ';': 29, ')': 16, '(': 12, 'clear': 6, '.': 19, 'attributes': 18, '{': 17, 'void': 1, 'public': 0}
{'}\n': 31, ';': 18, ')': 8, 'with_name': 7, '(': 4, 'get': 26, '.': 25, '_all': 24, 'return': 16, 'else': 19, 'null': 14, '==': 13, 'if': 10, '{': 9, 'String': 6, '': 5, 'find': 3, 'static': 1, 'public': 0}
{'}\n': 211, ';': 26, 'return': 52, ')': 18, '(': 8, '': 1, '}': 55, '.': 36, '=': 57, '{': 43, 'Name': 12, 'STR': 40, '_': 39, 's': 80, 'String': 10, 'null': 32, '!=': 70, 'if': 27, 'By': 59, 'get': 58, 'equals': 37, 'user': 16, ',': 13, 'system': 11, 'Block': 3, 'New': 5, 'create': 4, 'public': 0}
{'}\n': 45, ')': 42, '.': 21, 'values': 13, '(': 23, '': 1}
{'}\n': 36, ';': 35, '.': 20, 'return': 26, ')': 11, '(': 6, '{': 12, 'regex': 10, 'String': 9, '': 8, 'final': 7, 'Regex': 5, 'public': 0}
{'}\n': 60, ';': 27, ')': 17, 'NUM': 37, '_': 36, ',': 35, '(': 4, 'buffer': 52, 'length': 15, 'Chars': 45, 'get': 44, '.': 43, 'string': 7, ']': 34, 'capacity': 20, '[': 32, 'char': 31, 'new': 30, 'init': 28, 'CAPACITY': 26, 'MIN_': 25, '': 1, '=': 21, 'int': 10, 'String': 6, 'Buffer': 3, 'Char': 2, 'public': 0}
{'}\n': 93, '}': 67, ';': 25, 'NUM': 51, '_': 23, '=': 22, 'Opacity': 63, 'Promo': 3, 'm': 19, 'Px': 29, 'Height': 28, 'BOOL': 24, 'Visible': 21, '{': 9, 'else': 68, 'percentage': 7, ')': 8, 'Content': 46, ',': 49, '*': 43, '(': 5, 'clamp': 40, '.': 33, 'Utils': 38, 'Math': 32, '': 31, 'round': 34, 'is': 12, 'if': 10, 'float': 6, 'Visibility': 4, 'update': 2, 'void': 1, 'private': 0}
{'}\n': 41, ';': 40, ')': 13, '(': 4, 'geometry': 12, '{': 14, 'Geometry': 3, '': 10, ',': 9}
{'}\n': 52, ';': 30, ')': 7, '(': 6, '>': 48, 'Manager': 15, 'Interval': 14, 'Ins': 13, '': 1, ',': 42, 'Node': 41, 'Alloc': 40, '<': 38, 'Map': 37, 'Hash': 36, 'new': 34, '=': 33, 'new_pts': 32, '}': 31, 'flush': 27, '.': 19, '{': 8, 'values': 20, ':': 17, 'for': 9, 'do_after_propagation': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 190, ';': 108, '}': 180, ')': 85, '(': 70, '.': 150, 'add': 151, '{': 148, ':': 144, 'URI': 137, '': 39, 'for': 131, 'null': 115, 'if': 110, 'new': 98, 'uris': 80, 'Set': 48}
{'}\n': 163, ';': 162, ')': 22, 'NUM': 127, '_': 126, '(': 25, 'Height': 106, 'get': 94, '.': 93, 'image': 16, 'Width': 95, ',': 78, 'Image': 15, '': 8, 'new': 40, '{': 23, 'public': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'Init': 3, 'dyn': 2}
{'}\n': 159, ';': 158, ')': 28, '(': 7, '.': 35, '': 4, 'class': 65, 'Option': 20, 'Of': 58, 'none': 57, 'Set': 55, 'Enum': 54, '{': 29, 'options': 22}
{'}\n': 297, '}': 37, ';': 14, ')': 10, 'size': 9, ',': 7, 'origin': 6, 'VERTICAL': 117, '': 55, 'spring': 57, '(': 4, 'Size': 114, 'Child': 264, 'set': 249, '{': 11, 'else': 38, 'height': 135, 'y': 141, '.': 67, 'break': 185, 'baseline': 2, '-': 34, 'ascent': 13, '+': 163, '=': 27, ':': 159, 'default': 234, 'Pref': 122, 'Max': 108, 'min': 173, 'Math': 171, 'DESCENT': 190, 'CONSTANT_': 157, 'case': 155, 'descent': 16, 'ASCENT': 158, 'Behavior': 150, 'Resize': 149, 'Baseline': 94, 'get': 68, 'switch': 143, 'int': 5, 'Preferred': 127, 'Maximum': 113, 'NUM': 103, '_': 102, '>=': 101, 'if': 18, 'BASELINE': 85, '==': 76, 'alignment': 64, '||': 78, 'Alignment': 69, 'Spring': 56, 'for': 53, 'Descent': 45, 'pref': 28, 'Ascent': 29, 'Top': 23, 'To': 22, 'Anchored': 21, 'Layout': 3, 'void': 1, 'private': 0}
{'}\n': 121, ';': 43, 'value': 88, 'return': 34, '}': 44, ')': 24, 'index': 14, '(': 5, 'get': 38, '.': 37, 'Array': 10, 'json': 9, '=': 89, '{': 28, 'Null': 23, 'is': 53, '!': 95, 'if': 29, ',': 11, 'ARRAY': 80, 'FORMAT_': 79, 'VALUE_': 78, 'NULL_': 77, '': 7, 'US': 74, 'Locale': 71, 'format': 68, 'String': 66, 'JSONException': 27, 'new': 61, 'throw': 60, '&&': 49, 'not': 22, 'required': 18, 'throws': 25, 'boolean': 17, 'final': 6, 'int': 13, 'JSONArray': 8, 'read': 3, 'static': 1, 'public': 0}
{'}\n': 102, ';': 101, ')': 28, 'Version': 94, 'Policy': 4, 'storage': 11, '(': 6, 'Storage': 8, 'get': 45, '.': 34, 'Key': 67, ',': 55, '': 7}
{'}\n': 86, ';': 22, 'STR': 33, '_': 32, '+': 53, '.': 76, 'text': 14, '(': 8, ')': 9, 'Buffer': 13, 'String': 5, '': 4, 'new': 16, '=': 15, '{': 10, 'to': 6}
{'}\n': 116, ';': 85, ')': 21, '(': 6, 'size': 110, '.': 89, 'collection': 12, '[': 96, '': 2, 'Array': 5, 'to': 4, 'return': 83, '}': 86, '{': 22, 'if': 23, '>': 11, '?': 10, '<': 9, 'Collection': 8, 'static': 1}
{'}\n': 46, ';': 45, ')': 18, '(': 5, '.': 33, '': 6, '{': 22, 'Files': 17, 'problem': 16, '>': 15, 'File': 14, '<': 12, 'List': 11, ',': 9, 'formatter': 8, 'Formatter': 7}
{'}\n': 35, ';': 34, ')': 19, '(': 4, '.': 28, '': 5, ',': 10, 'graph': 14, '{': 20, 'root': 18, 'V': 9, '>': 13, 'E': 12, '<': 7, 'Hypergraph': 6, 'Distances': 3, 'label': 2, 'void': 1, 'public': 0}
{'}\n': 225, '}': 39, ';': 25, ')': 13, 'BOOL': 94, '_': 36, ',': 92, 'd': 12, '(': 10, 'Impl': 89, 'String': 7, 'to': 8, 'return': 35, '{': 14, 'else': 40, 'NUM': 61, '+': 205, 'i': 111, 'substring': 199, '.': 3, 'str': 85, '++': 193, 'STR': 37, '==': 29, ']': 99, '[': 98, 'chars': 100, '||': 153, 'if': 26, '-': 116, 'Of': 157, 'index': 156, '<': 78, '--': 144, '=': 17, 'c': 121, '&&': 76, '>=': 73, 'while': 123, 'char': 97, 'length': 115, 'int': 110, 'Array': 106, 'Char': 105, '': 6, 'm': 16, 'INFINITY': 32, 'NEGATIVE_': 46, 'POSITIVE_': 31, 'abs': 21, 'Math': 19, 'lang': 4, 'java': 2, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 4, '(': 3, '.': 17, 'line': 7, 'null': 10, '{': 5}
{'}\n': 122, ';': 43, ')': 20, 'cursor': 92, ',': 14, 'buffer': 66, '(': 9, 'parse': 113, '.': 58, 'parser': 19, 'return': 110, 'length': 76, 'value': 13, 'NUM': 101, '_': 40, 'Cursor': 91, 'Parser': 18, 'Save': 54, '': 3, 'new': 34, '=': 52, 'append': 83, 'Buffer': 65, 'Array': 64, 'Char': 63, 'DEFAULT': 60, 'Value': 17, 'Header': 4, 'null': 30, '==': 29, 'if': 26, '}': 44, 'STR': 41, 'Exception': 24, 'Argument': 37, 'Illegal': 36, 'throw': 33, '{': 25, 'Parse': 23, 'throws': 21, 'String': 12, 'final': 1, 'Element': 5, 'static': 2, 'public': 0}
{'}\n': 257, 'return': 253, ')': 33, '(': 10, ',': 199, 'End': 136, 'Start': 39, '}': 215, ';': 34, 'Interval': 6, '': 5, 'new': 167, '{': 139, '=': 40, '.': 29, 'get': 30, 'interval': 13, 'Time': 24, 'Date': 23, 'public': 0}
{'}\n': 89, ';': 28, ')': 6, '(': 5, '.': 47, '=': 71, '_': 37, 'addr': 18, 'STR': 38, '': 11, '{': 10}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'With': 12, 'starts': 11, '.': 10, 'type': 8, '{': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 115, ';': 44, ')': 31, ',': 93, 'STR': 107, '_': 106, '(': 6, '.': 59, 'String': 11, 'json': 48, 'null': 63, 'Array': 47, 'Json': 2, '=': 37, '': 1, 'Object': 3, 'private': 0}
{'}\n': 243, ';': 53, 'Downloaded': 56, 'bytes': 55, 'return': 239, '}': 238, ')': 15, 'file': 181, '(': 5, '>': 232, '<': 231, 'Map': 230, 'Hash': 229, '': 6, 'new': 170, 'add': 225, '.': 22, 'Bytes': 216, 'get': 103, 'Fetcher': 168, 'File': 167, '+=': 210, 'fetch': 203, '=': 57, 'current': 194, 'Generation': 14, 'latest': 13, ',': 11, 'FILE': 188, 'Dir': 10, 'tmp': 8, '{': 19, 'NUM': 59, '_': 58, 'long': 1, 'List': 42, 'LOG': 21, 'Exception': 18, 'throws': 16, 'Files': 4, 'download': 2, 'private': 0}
{'}\n': 195, '}': 185, ';': 45, ')': 10, '(': 7, 'release': 190, '.': 24, 'buffer': 19, '{': 36, 'finally': 186, 'address': 42, 'unsafe': 69, '=': 20, ',': 54, 'get': 25, '': 1, 'if': 83, 'OFFSETOF_': 77, '+': 75, 'int': 65, 'NUM': 63, '_': 62, 'try': 35, 'Buffer': 18, 'Native': 17, 'Buffers': 23, 'throws': 11, 'handle': 9, 'long': 8, 'static': 0}
{'}\n': 57, '}': 56, ';': 29, ')': 28, '(': 27, 'next': 46, '.': 25, 'it': 22, '=': 23, '': 7, '{': 39, 'Next': 35, 'has': 34, 'while': 30, 'iterator': 26, '>': 21, '<': 9, 'void': 1}
{'}\n': 126, ';': 38, 'jp': 30, 'return': 123, '}': 122, ')': 26, '(': 6, '.': 50, 'Selected': 107, 'set': 75, 'al': 25, 'Listener': 24, 'Action': 23, 'add': 97, 'null': 93, '!=': 92, 'if': 89, 'Command': 77, ']': 14, 'j': 42, '[': 13, 'buttons': 15, '': 2, 'new': 62, '=': 31, '{': 27, '++': 54, 'length': 51, '<': 48, 'NUM': 45, '_': 44, 'int': 41, 'for': 39, 'boxlabel': 9, 'JPanel': 3, 'Palette': 33, 'create': 4, ',': 10, 'String': 8, 'static': 1, 'public': 0}
{'}\n': 492, ';': 322, ')': 56, '': 18, ',': 422, 'src': 46, '(': 28, '.': 151, '}': 323, 'NUM': 197, '_': 196, '{': 57, 'length': 152, 'null': 111, 'if': 100, 'static': 1, 'public': 0}
{'}\n': 301, ';': 57, ')': 46, '(': 7, '.': 72, '/': 271, ']': 270, 'i': 116, '[': 268, '=': 61, ',': 18, '{': 47, 'NUM': 119, '_': 118, 'models': 31, ':': 130, 'm': 129, '>': 16, '?': 11, '<': 10, 'Model': 26, 'EMCluster': 25, '': 8, 'for': 65, 'int': 115, 'iditer': 69, 'get': 98, 'advance': 86, 'valid': 80, 'DBIDs': 74, 'iter': 73, 'relation': 17, 'DBIDIter': 68, 'double': 58, 'extends': 12, 'List': 20, 'Vector': 15, 'Number': 14, 'Relation': 9, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, 'null': 15, ':': 23, ')': 10, '(': 6, '.': 18, 'value': 9, '!=': 14, 'return': 12, '{': 11, '': 2, 'static': 1, 'public': 0}
{'}\n': 36, ';': 35, '.': 14, ',': 24, 'values': 10, '(': 22, '=': 16, 'this': 13, '{': 12, ')': 11, ']': 9, '[': 8, '': 1, 'public': 0}
{'}\n': 109, '}': 106, ';': 32, ')': 6, 'c': 101, '(': 20, 'push': 99, '.': 65, 'List': 97, 'work': 96, '{': 7, 'v': 76, ',': 91, 'first': 90, 'Congruence': 88, 'check': 87, '!': 86, 'if': 84, 'next': 80, 'i': 64, '=': 43, 'Vertex': 53, 'Graph': 52, 'Value': 51, '': 10, 'Next': 67, 'has': 66, 'while': 62, '<': 36, 'void': 1, 'private': 0}
{'}\n': 66, ';': 65, ')': 39, 'adapter': 24, '(': 8, '.': 34, 'Adapter': 23, '': 13, 'void': 4}
{'': 6, ')': 10, 'relative': 8, '(': 5, 'File': 4}
{'}\n': 25, ';': 24, '': 5, '{': 11, ')': 10, 'Tree': 6, '(': 4, 'public': 0}
{'}\n': 435, '}': 304, ';': 37, ')': 74, '(': 6, '.': 43, 'String': 8, '': 7, '{': 322, 'if': 307, '=': 78, 'Exp': 23, ',': 128, '_': 34}
{'}\n': 25, '}': 24, ';': 23, ')': 8, 'object': 7, '(': 11, '.': 18, '{': 9, 'Lock': 13, 'm': 12, 'synchronized': 10, 'T': 6, '': 5, 'public': 0}
{'}\n': 44, ';': 34, ')': 12, '(': 5, '.': 38, 'return': 31, '}': 35, '_': 22, '{': 13, 'NUM': 23, '==': 17, 'v2': 11, 'v1': 8, 'if': 14, ',': 9, '': 6}
{'}\n': 18, '{': 17, ')': 16, 'IOException': 14, '': 8, 'Connection': 6, 'url': 10, 'URLConnection': 9, '(': 7}
{'}\n': 232, '}': 122, ';': 40, ')': 19, ',': 12, '(': 6, 'on': 2, '{': 20, 'if': 101, 'XSD_': 136, '': 7, 'element': 133, '.': 32, '=': 28, 'Element': 8, 'schema': 162, 'null': 106, '!=': 105, 'Child': 149, 'Type': 89, 'data': 88, 'qname': 116, 'XSDatatype': 87, 'set': 112, 'Factory': 16, 'void': 1, 'private': 0}
{'}\n': 31, ';': 23, ')': 9, '(': 15, '.': 13, 'Ref': 4, '{': 10, '': 6}
{'}\n': 18, ';': 17, ')': 6, 'STR': 15, '_': 14, '(': 5, 'Property': 12, 'get': 11, '.': 10, 'properties': 9, 'return': 8, '{': 7, 'version': 3, 'String': 2, '': 1, 'public': 0}
{'}\n': 73, '}': 61, ';': 60, ')': 25, 'future': 24, ',': 9, 'entry': 8, '(': 4, 'Query': 3, '{': 26, 'else': 62, 'null': 58, 'Sequence': 32, 'get': 31, '.': 30, 'register': 47, 'session': 14, 'Command': 39, '>': 23, 'if': 27, 'Response': 22, '': 5, '<': 19, 'Future': 18, 'Completable': 17, 'Context': 13, 'Session': 12, 'Server': 11, 'Entry': 7, 'sequence': 2, 'void': 1, 'private': 0}
{'}\n': 39, ';': 38, ')': 21, 'NUM': 30, '_': 29, '(': 13, '.': 25, 'l': 20, 'return': 23, '{': 22, '>': 5, 'T': 4, '': 3, '<': 2, 'List': 15, 'static': 1, 'public': 0}
{'}\n': 73, '}': 72, ';': 70, ')': 10, 'Obj': 9, 'some': 8, 'Bean': 25, 'Map': 24, '': 6, '(': 5, '{': 11, 'instanceof': 16, 'if': 12, 'Object': 7, 'And': 3, 'find': 2, 'void': 1, 'public': 0}
{'}\n': 210, ';': 208, 'Date': 15, ',': 186, ')': 23, '_': 110, '(': 21, '.': 72, '': 1, 'Estimated': 4, '=': 85, '{': 24, 'Completion': 5, 'recalculate': 3, 'Timestamp': 2, 'public': 0}
{'}\n': 23, ';': 22, ')': 11, '.': 16, '{': 12, 'Document': 7, '': 6, 'public': 0}
{'}\n': 200, ';': 136, ')': 26, '(': 7, '.': 37, 'line': 90, '}': 137, 'length': 126, '=': 35, '{': 27, 'pos': 61, 'int': 32, '': 2, ',': 11, 'static': 1}
{'}\n': 52, '}': 50, ';': 26, ')': 7, '(': 10, '.': 34, 'while': 27, 'Queue': 12, '{': 8, 'void': 1}
{'}\n': 181, ';': 69, ']': 13, '[': 12, 'x': 14, 'i': 65, '(': 7, '.': 28, 'Math': 120, '': 47, '=': 66, 'double': 11, '{': 21, ')': 20, '++': 81, 'length': 75, 'NUM': 68, '_': 67, 'int': 64, 'for': 62, ',': 15, 'static': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 12, '(': 6, '.': 19, '': 7, '{': 13, 'File': 8, 'Exist': 5}
{'}\n': 186, '}': 103, ';': 50, '{': 34, ')': 33, '(': 52, '.': 23, 'null': 154, '!=': 54, 'if': 51, 'director': 70, '': 9, 'void': 1, 'public': 0}
{'}\n': 145, ';': 67, ')': 31, '(': 7, 'write': 3, '.': 81, 'out': 20, '}': 123, 'next': 99, 'it': 80, '{': 32, 'Next': 83, 'has': 82, 'list': 51, '': 17, 'Output': 19, 'void': 2}
{'}\n': 21, ';': 20, ')': 9, '(': 4, 'contains': 14, '.': 13, 'return': 11, '{': 10, 'Name': 8, 'attr': 7, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 66, ';': 24, ')': 6, '(': 5, '.': 37, 'Stage': 9, '': 17, '=': 12, '{': 7, 'show': 2, 'void': 1}
{'}\n': 159, ';': 18, ')': 6, 'version': 21, ',': 63, 'id': 14, '(': 5, 'Stream': 71, 'input': 149, '.': 51, 'repo': 68, 'read': 145, 'expected': 40, 'STR': 17, '_': 16, 'Equals': 59, 'assert': 58, 'blocks': 129, '}': 125, 'NUM': 24, '{': 10, ']': 39, '[': 38, 'Long': 119, '': 8, 'new': 30, 'Iterator': 112, 'Same': 111, 'Count': 102, 'Block': 4, 'get': 100, 'Input': 81, 'Array': 80, 'Byte': 79, 'copy': 70, 'length': 66, 'Bytes': 53, 'next': 52, 'r': 28, 'SIZE': 47, 'BLOCK_': 46, 'byte': 37, '=': 15, 'final': 11, 'Random': 27, 'int': 20, 'String': 13, 'IOException': 9, 'throws': 7, 'Stream_full': 3, 'test_copy': 2, 'void': 1, 'public': 0}
{'}\n': 186, ';': 70, ')': 19, '_': 35, 'NUM': 112, '[': 27, '(': 6, '': 7, 'new': 121, '<': 110, 'length': 86, '.': 32, 'parts': 29, 'STR': 36, 'split': 33, '=': 30, ']': 28, 'String': 8, '{': 24, 'static': 1}
{'}\n': 63, '}': 54, '{': 17, ')': 16, 'e': 59, 'Exception': 58, '': 4, '(': 3, 'catch': 55, ';': 32, 'message': 15, ',': 8, 'key': 11, 'filename': 35, 'Addr': 41, 'Remote': 40, 'get': 28, '.': 27, 'request': 24, '=': 25, 'String': 10, 'Request': 5, 'context': 7, 'Servlet': 22, 'Http': 21, 'try': 18, 'Context': 6, 'void': 1, 'protected': 0}
{'}\n': 137, '}': 136, ';': 42, ')': 14, ',': 9, 'STR': 112, '_': 111, '.': 30, 'null': 71, '!=': 74, '(': 4, 'To': 97, '=': 82, '': 5, '{': 15, '==': 70, 'tenant': 18, 'Util': 29, 'Id': 25, 'String': 11, 'add': 2}
{'}\n': 86, '}': 70, ';': 27, ')': 11, 'add': 2, '.': 64, 'Control': 32, 'Edit': 31, 'hex': 30, '{': 12, 'else': 71, '(': 6, 'Listeners': 42, 'Of': 40, 'list': 39, '>': 56, '<': 55, 'List': 54, 'Array': 53, '': 7, 'new': 51, '=': 50, 'null': 17, '==': 16, 'if': 13, 'Listener': 5, 'void': 1, 'public': 0}
{'}\n': 142, ';': 30, ')': 9, '(': 8, 'String': 5, 'to': 6, '.': 76, 'sb': 14, 'return': 134, '}': 72, 'Value': 111, 'get': 90, 'append': 77, 'STR': 80, '_': 35, 'Key': 91, '{': 10, 'else': 73, 'BOOL': 36, '=': 15, 'first': 32, 'if': 60, 'Set': 55, 'entry': 54, ':': 50, '>': 48, '': 4, ',': 45, '<': 42, 'Entry': 41, 'for': 38, 'boolean': 31, 'Builder': 13, 'new': 16, 'public': 3}
{'}\n': 39, ';': 22, '.': 16, '=': 19, ')': 13, 'Client': 10, '': 1, 'client': 6, '(': 3}
{'}\n': 51, 'value': 8, '(': 5, 'Case': 4, 'Lower': 40, 'to': 39, '.': 38, '': 33, 'return': 23, '{': 18, ')': 17}
{'}\n': 14, ';': 13, 'Required': 4, '.': 10, 'this': 9, 'return': 8, '{': 7, ')': 6, '(': 5, 'is': 2, 'boolean': 1}
{'}\n': 97, ';': 47, 'l': 19, ')': 14, '(': 42, '.': 39, '': 4, '=': 20, '{': 15}
{'}\n': 76, '}': 51, ';': 42, ')': 10, 'Rectangle': 4, '(': 5, 'draw': 2, '.': 15, 'g2': 9, 'Paint': 34, 'Outline': 62, 'this': 14, 'set': 33, '{': 11, 'else': 52, 'fill': 26, 'Fill': 39, 'if': 12, 'null': 19, '!=': 18, 'D': 8, 'Graphics2': 7, '': 6, 'void': 1, 'private': 0}
{'}\n': 27, ';': 20, 'cause': 8, '=': 24, '.': 14, 'this': 21, ')': 9, '(': 4, 'Message': 16, 'get': 15, 'super': 11, '{': 10, 'Throwable': 7, '': 1, 'Exception': 3, 'Conversion': 2, 'public': 0}
{'}\n': 46, ';': 45, ')': 26, 'Connectivity': 30, '{': 27, 'Group': 23, 'export': 24, 'Export': 22, '': 8, ',': 20, 'initiator': 10, 'Initiator': 9, '(': 7, 'private': 0}
{'}\n': 246, ';': 100, 'Hyp': 179, 'goal': 178, 'return': 242, '}': 241, ')': 74, 'Space': 238, 'output': 237, ',': 6, 'heuristic': 235, 'scorer': 233, 'featurizer': 231, 'length': 226, '.': 135, 'rule': 221, 'node': 194, 'Id': 28, 'Input': 27, 'source': 26, '(': 98, '>': 9, '<': 3, 'Derivation': 2, '': 1, 'new': 92, ':': 195, '?': 206, '=': 91, '{': 121, 'FV': 8, 'TK': 5, 'for': 183, 'null': 181, 'add': 156, 'List': 78, 'final': 76, 'int': 25, 'private': 0}
{'}\n': 139, ';': 16, ')': 8, '(': 7, 'scale': 134, '.': 38, 'res': 97, ',': 53, 'Scale': 19, 'c': 59, 'STR': 15, '_': 14, 'Equals': 108, 'assert': 107, 'String': 11, 'to': 117, 'mc': 45, 'plus': 102, 'Number': 75, 'a': 12, '=': 13, 'Decimal': 73, 'Big': 72, '': 10, 'Integer': 85, 'new': 47, 'NUM': 22, 'int': 17, 'rm': 33, 'precision': 25, 'Context': 5, 'Math': 4, 'Mode': 32, 'Rounding': 31, '{': 9, 'Plus': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 84, ';': 40, ')': 13, 'children': 27, '(': 7, 'Expression': 79, 'CAbstract': 77, '': 2, 'new': 29, 'return': 74, '}': 73, 'Object': 45, 'child': 46, 'Tree': 11, 'Common': 10, 'convert': 5, 'add': 59, '.': 50, '{': 18, 'Children': 52, 'get': 51, 'ast': 12, ':': 48, 'final': 8, 'for': 41, '>': 26, 'Node': 4, 'IAbstract': 3, '<': 22, 'List': 21, 'Array': 31, '=': 28, 'Exception': 17, 'Recognition': 16, 'throws': 14, 'static': 1, 'private': 0}
{'}\n': 64, ';': 28, ')': 16, '(': 7, '.': 30, 'frame': 20, 'set': 31, '{': 17, '': 13, 'public': 0}
{'}\n': 79, ';': 44, 'this': 77, 'return': 76, 'BOOL': 74, '_': 41, '=': 72, 'Added': 71, 'components': 70, ')': 27, 'params': 26, '(': 5, 'Params': 62, 'Default': 61, 'apply': 49, ',': 16, 'factory': 15, 'Instance': 56, 'Class': 7, 'Factory': 13, 'new': 53, 'Loader': 51, 'Resource': 50, '.': 34, 'STR': 42, 'Null': 37, 'Non': 36, 'require': 35, 'Objects': 33, '': 1, '{': 31, 'IOException': 30, 'throws': 28, '>': 14, 'String': 21, '<': 8, 'Map': 18, 'extends': 10, '?': 9, 'Builder': 2, 'public': 0}
{'}\n': 32, ';': 31, ')': 30, 'radius': 29, '/': 28, 'Radius': 27, 'max': 26, '*': 25, '(': 6, '.': 18, 'Math': 17, '': 16, 'double': 1}
{'}\n': 20, ';': 19, ')': 18, '(': 4, 'Changed': 3, 'void': 1, 'public': 0}
{'}\n': 478, ';': 22, ')': 9, '(': 8, 'String': 5, 'to': 6, '.': 56, 'sb': 14, 'return': 470, '}': 65, 'e': 457, 'Exception': 456, 'Runtime': 463, '': 4, 'new': 16, 'throw': 460, '{': 10, 'Bounds': 455, 'Of': 454, 'Out': 453, 'Index': 452, 'Array': 451, 'catch': 448, 'NUM': 63, '_': 62, ',': 84, 'MINUTE': 224, 'Calendar': 24, 'get': 88, 'Time': 26, 'date': 25, 'Int': 81, 'append': 80, 'STR': 106, 'DAY': 195, 'OF_': 156, 'HOUR_': 193, 'Only': 168, '!': 166, 'if': 43, 'MONTH': 123, 'DAY_': 155, '+': 125, 'YEAR': 94, 'try': 78, 'local': 38, 'Millis': 72, 'In': 71, 'set': 69, '*': 61, 'Value': 58, 'long': 37, 'Shift': 46, 'tz': 45, '+=': 53, 'null': 48, '!=': 47, 'value': 41, '=': 15, 'GMT': 34, 'Gregorian': 30, 'Builder': 13, 'public': 3}
{'}\n': 84, ';': 30, ')': 29, '(': 10, '.': 44, '': 2, '}': 75, 'STR': 68, '_': 37, '{': 17, 'NUM': 38, 'methods': 22, 'Methods': 9}
{'}\n': 253, '}': 210, ';': 46, ')': 29, '(': 8, 'destroy': 247, '.': 38, 'pool': 50, '{': 30, 'null': 52, '!=': 241, 'jedis': 56, 'if': 238, 'finally': 236, 'e': 222, ',': 12, 'STR': 134, '_': 90, 'error': 227, 'logger': 225, 'Exception': 216, 'Encoding': 220, 'Unsupported': 219, '': 1, '|': 217, 'Connection': 215, 'Jedis': 48, 'catch': 211, 'Port': 22, 'Manager': 16, 'server': 21, '+': 124, 'IP': 17, 'docker': 15, 'Server': 170, 'frontend': 131, 'Case': 140, 'Lower': 139, 'to': 138, 'key': 119, '=': 36, 'String': 14, 'Unit': 35, 'Cloud': 34, 'suffix': 33, 'Space': 107, 'Name': 106, 'sub': 105, 'application': 11, 'Sub': 110, 'concat': 109, 'Resource': 99, 'get': 39, 'NUM': 91, 'redis': 77, 'Int': 84, 'parse': 83, 'Integer': 81, 'Ip': 78, 'Config': 73, 'Pool': 49, 'new': 64, 'try': 60, 'IO': 43, 'Suffix': 40, 'Application': 10, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 36, ';': 34, ')': 7, 'Position': 6, 'item': 5, '(': 3, 'remove': 2, '.': 28, '{': 8, 'int': 4}
{'}\n': 71, ';': 36, 'return': 62, ')': 7, 'enemy': 39, '(': 33, 'final': 9, '.': 30, '>': 26, '': 1, '<': 23, '{': 8}
{'}\n': 73, ';': 72, ')': 15, 'destination': 14, '(': 7, '.': 25, '{': 16, '': 12, 'public': 0}
{'}\n': 44, ';': 30, ')': 14, 'Pools': 3, 'storage': 12, '(': 4, '.': 33, 'Storage': 21, '{': 15, 'Pool': 10, '': 5, '<': 7, 'void': 1, 'public': 0}
{'}\n': 49, ';': 25, '(': 6, 'Overlay': 30, 'OVERLAY': 35, 'NO_': 34, '': 33, '==': 32, 'Index': 31, 'Current': 29, 'm': 17, 'if': 26, ')': 15, '.': 19, 'Overlays': 18, '{': 16, 'public': 0}
{'}\n': 107, ';': 106, 'path': 100, '.': 93, 'resource': 41, '(': 28, 'Resource': 19, '{': 71, ')': 70, '': 13, 'public': 0}
{'}\n': 85, ';': 39, ')': 38, '(': 7, 'Token': 52, 'next': 51, '.': 45, 'Int': 47, 'parse': 46, 'Integer': 44, '': 10, '=': 28, 'STR': 37, '_': 36, ',': 35, 'version': 12, 'Tokenizer': 26, 'String': 11, 'new': 29, 'private': 0}
{'}\n': 239, ';': 81, ')': 13, '(': 12, 'elements': 235, '.': 84, 'Vector': 16, 'new': 21, 'return': 231, 'STR': 96, '_': 74, ',': 97, 'NUM': 75, 'Option': 8, '': 1, 'Element': 86, 'add': 85, '+': 121, '>': 9, '<': 6, '=': 23, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 226, ';': 24, ')': 11, '(': 7, 'String': 3, 'to': 221, '.': 36, 'sb': 16, 'return': 218, '}': 216, 'c': 46, 'append': 67, ':': 64, 'default': 207, 'break': 73, 'STR': 63, '_': 30, 'case': 61, '{': 12, 'switch': 56, 'i': 28, 'At': 51, 'char': 45, 's': 10, '=': 17, '++': 42, 'length': 37, '<': 34, 'NUM': 31, 'int': 27, 'for': 25, 'Builder': 15, '': 2, 'new': 18, 'Escape': 6, 'static': 1, 'public': 0}
{'}\n': 161, '}': 160, ';': 65, 'x': 28, ')': 24, '(': 4, '.': 60, ',': 8, '': 5, 'Out': 91, 'zero': 90, 'i': 85, '=': 29, 'get': 61, '<': 41, 'Vec': 6, '{': 25, 'void': 1, 'private': 0}
{'}\n': 98, ';': 97, ')': 13, '+': 94, 'STR': 93, '_': 92, '(': 5, 'Exception': 19, 'Found': 18, 'Not': 17, 'File': 4, '': 1, 'new': 85, 'throw': 84, 'directory': 8, '{': 20, 'exists': 38, '.': 37, 'throws': 14, 'String': 11, ',': 9}
{'}\n': 42, ';': 41, ')': 17, 'null': 37, ',': 11, 'cloud': 15, 'control': 9, '(': 5, 'Results': 4, 'compare': 3, 'return': 27, '{': 26, 'Exception': 22, 'Server': 21, 'Solr': 7, '': 6, 'throws': 18, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 158, '}': 128, ';': 65, 'return': 154, ')': 18, 'ex': 133, ',': 60, '(': 12, 'Message': 147, 'get': 118, '.': 52, '+': 143, 'STR': 142, '_': 141, 'error': 139, 'LOG': 137, '': 5, '{': 19, 'Exception': 132, 'catch': 129, 'node': 73, 'Expression': 17, 'Path': 16, 'x': 15, 'Document': 59, 'xml': 58, 'this': 56, 'select': 53, 'XPath': 51, '=': 30, 'try': 20, 'String': 6, 'Element': 10, 'Get': 9, 'public': 0}
{'}\n': 89, ';': 74, ')': 45, '(': 27, '': 33, 'null': 51, 'ctx': 35, 'if': 47, 'Context': 5, 'static': 1, 'public': 0}
{'}\n': 38, '}': 37, ';': 14, ')': 5, '(': 4, 'Row': 20, 'collapse': 31, '.': 18, 'tree': 17, '{': 6, '++': 25, 'Count': 21, 'get': 19, '<': 16, 'NUM': 13, '_': 12, '=': 11, 'int': 9, 'for': 7, 'Tree': 3, 'void': 1}
{'}\n': 50, ';': 28, ')': 12, '(': 6, '.': 21, '': 7, 'Name': 18, 'display': 17, ',': 36, 'STR': 35, '_': 34, 'Logger': 30, 'String': 16, 'Display': 23, 'get': 22, 'player': 11, '=': 19, 'final': 14, '{': 13, 'Player': 3, 'Client': 9, 'Abstract': 8, 'Cape': 4, 'void': 1, 'static': 0}
{'}\n': 48, '}': 45, ';': 44, ')': 12, 'listener': 11, '(': 6, 'Listener': 5, 'Change': 4, 'Vetoable': 3, 'remove': 2, '.': 36, 'Support': 29, 'vetoable': 28, '{': 13, 'null': 18, '!=': 17, 'if': 14, 'this': 23, 'synchronized': 21, '': 7, 'void': 1, 'public': 0}
{'}\n': 56, ';': 17, 'Prefix': 50, 'Message': 49, 'm_status': 48, ')': 10, '(': 4, '_': 21, '=': 20, 'NUM': 22, 'Samples': 25, 'm_num': 24, '{': 11, '': 1, 'public': 0}
{'}\n': 53, '}': 51, ';': 35, 'break': 49, ')': 10, 'command': 24, '(': 4, 'Command': 3, 'set': 43, '{': 11, 'null': 40, '!=': 39, 'if': 36, 'arg': 16, 'Name': 31, 'Of': 30, 'value': 29, '.': 28, '': 6, '=': 25, 'args': 9, ':': 17, 'String': 7, 'for': 12, '...': 8, 'final': 5, 'parse': 2, 'void': 1, 'protected': 0}
{'}\n': 227, '}': 208, ';': 109, ')': 18, '(': 4, 'Exception': 84, 'Found': 73, 'Not': 72, '': 1, 'new': 191, 'throw': 211, '{': 85, 'else': 209, '.': 15, 'Status': 202, 'Http': 201, ',': 57, 'bookmark': 160, '>': 26, '<': 23, 'Entity': 22, 'Response': 21, 'return': 190, 'save': 185, 'Repository': 95, 'bookmarks': 182, '=': 11, 'Present': 115, 'is': 114, 'optional': 92, 'if': 110, 'username': 42, 'Username': 102, 'By': 98, 'find': 97, 'Optional': 87, 'throws': 66, 'Body': 61, 'Request': 2, '@': 0, 'String': 41, 'STR': 38, '_': 37, 'value': 35, 'Variable': 33, 'Path': 32, 'Bookmark': 25, 'Method': 14, 'method': 10, 'Mapping': 3}
{'}\n': 78, ';': 33, ')': 20, '(': 7, '.': 72, '}': 69, 'text': 11, 'Pos': 15, 'start': 14, '=': 38, 'int': 13, '': 22, 'new': 27, 'end': 18}
{'}\n': 214, ')': 5, '=': 51, ';': 27, '.': 143, ',': 153, '(': 8, '': 35, 'l': 30, '{': 6, 'int': 49, 'NUM': 53, '_': 52, '}': 28, 'is': 9, 'if': 7, 'void': 1, 'public': 0}
{'}\n': 94, ';': 45, 'i': 49, '(': 11, 'args': 26, '=': 34, ']': 5, '[': 4, '{': 65, ')': 64, '++': 63, '.': 57, '<': 23, 'NUM': 52, '_': 51, 'for': 46, 'Object': 3, '': 2, 'new': 35, ',': 15, 'static': 1, 'public': 0}
{'}\n': 59, ';': 18, 'NUM': 57, '_': 45, '-': 55, 'return': 49, '}': 52, 'i': 14, '{': 10, ')': 9, 'BOOL': 46, '==': 44, '(': 5, 'At': 39, 'char': 38, '.': 22, 'source': 8, 'is': 33, 'if': 31, '++': 28, 'length': 23, '<': 20, '=': 15, 'int': 1, 'for': 11, 'String': 7, '': 6}
{'}\n': 40, ';': 39, ')': 15, '(': 10, 'Buffer': 6, 'decode': 4, '{': 20, '': 1, 'throws': 16, 'To': 7}
{'}\n': 256, ';': 251, ')': 189, '(': 10, 'get': 210, ',': 207, 'at': 182, '{': 190, 'int': 11, 'void': 1}
{'}\n': 20, ';': 19, ')': 10, 'point': 9, '(': 3, 'add': 2, '.': 14, '{': 11, '': 5, 'final': 4, 'void': 1, 'public': 0}
{'}\n': 199, '}': 162, ';': 24, ')': 16, 'pstmt': 44, '(': 6, 'close': 191, '.': 48, '{': 17, 'e': 167, ',': 53, 'sql': 52, 'SEVERE': 178, '': 25, 'Level': 175, 'log': 172, 'Exception': 166, 'catch': 163, 'rs': 77, 'next': 90, 'Query': 82, 'execute': 81, '=': 45, 'ID': 72, 'NUM': 67, '_': 66, 'Int': 64, 'set': 63, 'Name': 56, 'Trx': 55, 'get_': 54, 'Statement': 50, 'prepare': 49, 'DB': 47, 'try': 42}
{'}\n': 305, ';': 40, 'NUM': 223, '_': 222, ')': 232, ',': 175, '.': 27, 'src': 103, '(': 6, 'arraycopy': 66, 'System': 64, '': 14, ']': 61, 'len': 58, '[': 55, 'new': 53, '=': 24, 'length': 46, 'int': 35, 'void': 1}
{'}\n': 19, ';': 18, ')': 9, 'value': 8, 'return': 11, '{': 10, 'Object': 7, '': 1, '(': 5, 'String': 2, 'to': 3, 'public': 0}
{'}\n': 130, ';': 31, 'periods': 66, 'return': 127, '}': 126, ')': 21, 'NUM': 40, '_': 39, ',': 55, 'Unit': 17, 'Time': 16, 'date': 18, '(': 13, 'Months': 50, 'plus': 115, '.': 35, 'cal': 25, '=': 26, 'Period': 8, 'create': 98, 'add': 96, '{': 22, '++': 91, 'i': 80, '<': 6, 'int': 79, 'for': 77, 'List': 5, 'Array': 72, 'new': 71, 'Lists': 69, '': 1, '>': 9, 'minus': 49, 'Day': 37, 'set': 36, 'Calendar': 24, 'get': 27, 'Date': 15, 'Periods': 12, 'Rolling': 11, 'generate': 10, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 76, ';': 44, 'counter': 74, 'return': 73, '}': 72, ')': 7, '(': 4, '.': 38, '{': 32}
{'}\n': 214, ';': 213, ')': 44, 'NUM': 185, '_': 184, '-': 183, ',': 13, 'Report': 39, 'delivery': 38, 'read': 35, 'date': 32, 'address': 20, '(': 8, '{': 45, 'boolean': 34, 'Long': 31, '': 2, 'subject': 28, 'String': 19, 'body': 24, 'uri': 16, 'Uri': 3, 'resolver': 12, 'Resolver': 11, 'Content': 10, 'To': 6, 'Message': 5, 'add': 4, 'static': 1, 'public': 0}
{'}\n': 1198, ';': 115, 'BOOL': 1196, '_': 158, '=': 14, 'Initialized': 1193, 'm': 15, '}': 325, ')': 9, 'NUM': 159, 'get': 19, ']': 363, 'Level': 673, 'Zoom': 6, '[': 362, 'By': 671, '(': 8, '{': 10, '++': 180, 'i': 166, '<': 172, 'int': 11, 'for': 163, 'Factor': 329, 'Len': 670, 'Frames': 13, 'num': 12, 'Gain': 313, 'min': 459, '-': 561, 'max': 312, 'range': 557, '--': 541, 'Hist': 361, 'gain': 360, '+=': 489, 'sum': 466, '/': 348, '&&': 478, '>': 311, 'while': 471, 'smoothed': 390, 'if': 304, 'scale': 328, '*': 402, 'Gains': 250, 'new': 365, 'Num': 20, '.': 18, 'File': 17, 'Sound': 16, 'Levels': 7, 'All': 5, 'For': 4, 'Doubles': 3, 'compute': 2, 'void': 1}
{'}\n': 91, '}': 88, ';': 26, ')': 14, '(': 13, '.': 39, 'i': 62, 'if': 72, '=': 52, 'int': 61, 'get': 55, 'Entry': 50, '': 48, '{': 15, 'null': 45, '!=': 44, 'poll': 40, 'queue': 38, 'r': 25, 'Entries': 12, 'Stale': 11, 'expunge': 10, 'private': 8}
{'}\n': 226, ';': 67, ')': 23, '(': 53, '.': 116, '{': 24, '': 5, '}': 180, 'Job': 71, ',': 8, '=': 29}
{'}\n': 193, ')': 26, '(': 8, ';': 52, '': 9, '{': 27, '_': 41, '.': 35, 'Environment': 98, 'external': 60, 'STR': 42, ',': 40, 'TAG': 39, 'if': 28}
{'}\n': 26, ';': 25, ')': 10, '(': 6, '.': 15, 'tab': 18, 'CONNECTIONS': 14, 'TABBED_': 13, '': 7, '{': 11, 'Connection': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 164, ';': 56, ')': 26, '(': 42, '.': 39, 'Math': 107, '': 12, '=': 32, 'Geo': 29, 'double': 84, ',': 16, '{': 27}
{'}\n': 57, ';': 23, 'End': 55, 'buffer': 17, ')': 49, ',': 41, '(': 35, '': 37, '.': 33, '=': 26, 'int': 24, '{': 15, 'void': 1, 'public': 0}
{'}\n': 165, ';': 25, ')': 11, 'rows': 32, ',': 102, 'cmds': 20, ']': 58, 'root': 126, '.': 23, 'orig': 10, '[': 57, 'remap': 56, 'forward': 151, '(': 7, 'Trie': 5, '': 1, 'new': 34, 'return': 144, '>': 19, 'Row': 30, '<': 15, 'List': 14, 'Array': 36, 'orows': 49, 'Gaps': 122, 'remove': 121, '=': 21, 'NUM': 82, '_': 81, '-': 80, 'fill': 110, 'Arrays': 108, '}': 106, 'j': 73, 'get': 98, '{': 12, '--': 90, '>=': 85, 'size': 65, 'int': 55, 'for': 70, 'Sequence': 18, 'Char': 17, 'optimize': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 49, ';': 48, 'Handler': 9, '=': 42, '{': 33, ')': 32, '': 4}
{'}\n': 31, ';': 30, ')': 5, '(': 4, 'get': 26, '.': 25, 'shutdown': 21, '{': 6, 'Shutdown': 3}
{'}\n': 194, ';': 64, ')': 28, 'Entity': 3, 'storage': 17, '(': 59, 'Refresh': 188, 'And': 187, 'save': 186, '.': 101, 'Dao': 184, 'get': 174, 'set': 145, '': 1, 'new': 90, '=': 89, 'Storage': 2, '{': 29, '>': 26, '<': 23, 'List': 22, ',': 20, 'create': 4, 'public': 0}
{'}\n': 56, ')': 14, '(': 5, '.': 36, '{': 15, 'Line': 4, '': 6}
{'}\n': 155, ';': 35, ')': 8, '(': 7, 'get': 51, '.': 50, ',': 103, 'STR': 23, '_': 22, 'Stub': 20, '': 10, 'new': 17, '=': 16, 's': 70, 'Scope': 6, 'Identity': 61, 'Null': 38, 'assert': 36, '{': 12, 'Exception': 11, 'throws': 9, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 43, ';': 33, ')': 19, 'null': 40, ',': 29, 'stream': 18, '(': 10, 'send': 8, 'return': 34, 'STR': 31, '_': 30, 'Null': 26, 'Non': 25, 'require': 24, '.': 23, 'Objects': 22, '': 1, '{': 20, '>': 7, '<': 3, 'TStream': 12, 'TSink': 2, 'public': 0}
{'}\n': 88, ';': 52, ')': 28, ',': 13, 'null': 66, 'method': 55, '(': 7, 'Method': 6, '_': 49, '=': 56, 'STR': 50, 'debug': 47, '.': 46, 'Interpreter': 45, '': 2, 'Error': 32, 'throws': 29, ']': 26, '[': 25, 'String': 19, 'clas': 16, 'Class': 10, 'bcm': 12, 'Manager': 11, 'Bsh': 9, 'static': 1}
{'}\n': 47, ';': 46, ')': 16, 'confidence': 15, ',': 9, 'NUM': 31, '_': 30, 'INSENSITIVE': 38, 'CASE_': 37, '': 1, '.': 22, 'Pattern': 21, ':': 32, '?': 29, 'Sensitive': 12, 'case': 11, 'pattern': 8, '(': 5, 'compile': 23, 'this': 18, '{': 17, 'double': 14, 'boolean': 10, 'String': 7, 'Regex': 3, 'Abstract': 2, 'protected': 0}
{'}\n': 35, ';': 26, ')': 11, '(': 6, '.': 29, 'Loop': 14, 'loop': 17, '': 7, '{': 12, 'private': 0}
{')': 27, 'position': 18, 'int': 17, ',': 16, 'holder': 15, '': 12, 'Holder': 10, 'View': 9}
{'}\n': 91, ';': 43, ')': 15, '(': 6, 'Time': 60, 'get': 86, '.': 58, 'cal': 48, 'return': 83, 'Days': 14, 'num': 13, ',': 11, 'YEAR': 76, 'OF_': 75, 'DAY_': 74, '': 2, 'Calendar': 47, 'add': 68, 'Inst': 10, 'date': 9, 'set': 59, 'Gregorian': 52, 'new': 36, '=': 49, 'final': 45, '}': 44, 'Exception': 40, 'Argument': 39, 'Illegal': 38, 'throw': 35, '{': 16, 'null': 31, '==': 30, '||': 26, 'NUM': 24, '_': 23, '<=': 22, 'if': 17, 'int': 12, 'Date': 3, 'days': 4, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 6, '(': 5, '.': 11, 'capacity': 17, 'NUM': 15, '_': 14, '{': 7}
{'}\n': 34, ';': 24, ')': 12, 'Approximation': 31, 'conservative': 30, '(': 7, 'Object': 9, 'write': 5, '.': 18, 'out': 11, 'External': 6, 'super': 17, '{': 16, 'IOException': 15, '': 1, 'throws': 13, 'Output': 10, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 188, ';': 79, ')': 24, '.': 100, ',': 155, '(': 76, 'Array': 65, 'Byte': 64, 'to': 147, '': 9, 'new': 70, 'close': 115, 'o': 87, 'write': 101, 'Stream': 67, 'Output': 66, '=': 69, 'Exception': 42, 'Object': 5}
{'}\n': 137, '}': 136, ';': 38, '=': 102, 'focused': 48, '{': 10, ')': 7, '(': 34, 'if': 39, '.': 12, 'super': 11, 'void': 1, 'public': 0}
{'}\n': 245, ';': 178, ')': 63, '(': 41, 'Spring': 185, '.': 152, '{': 67, 'void': 1}
{'}\n': 44, ';': 43, ')': 10, 'ATTRIBUTE_': 32, '': 7, '(': 6, 'Value': 29, 'get': 28, '.': 27, 'attributes': 9, '=': 25, '{': 11, 'Attributes': 8, 'Start': 5, 'on': 2, 'void': 1, 'private': 0}
{'}\n': 112, ';': 100, 'length': 98, '.': 82, 'data': 76, '+=': 102, ')': 78, ',': 87, 'NUM': 89, '_': 88, '(': 68, '{': 79, ']': 72, '[': 71, 'byte': 70, 'public': 0}
{'}\n': 228, '}': 45, ';': 44, ')': 22, 'Monitor': 20, 'sub': 128, ',': 17, 'DEPTH_': 220, '': 4, '.': 63, 'IResource': 5, 'Resources': 179, 'provider': 146, '(': 3, ']': 7, 'size': 80, 'list': 161, '[': 6, 'new': 37, 'Array': 190, 'to': 189, '=': 36, 'get': 50, 'table': 48, 'List': 160, 'next': 155, 'iterator': 106, 'Provider': 51, 'SVNTeam': 144, 'NUM': 85, '_': 74, 'monitor': 21, 'Progress': 40, 'Sub': 133, 'IProgress': 19, '{': 27, 'Next': 120, 'has': 119, 'while': 115, 'Set': 58, 'key': 59, 'Iterator': 105, 'STR': 75, 'bind': 97, 'Policy': 95, 'Name': 92, 'Task': 72, 'set': 90, '*': 83, 'begin': 71, 'resources': 8, 'Mapping': 52, 'Map': 47, 'Null': 39, 'null': 32, '==': 31, 'if': 28, 'Exception': 26, 'Team': 25, 'throws': 23, 'void': 1, 'public': 0}
{'}\n': 316, ';': 315, ')': 24, '_': 32, '+': 37, 'STR': 33, '(': 17, '.': 28, '{': 25, 'boolean': 8}
{'}\n': 54, ';': 28, ')': 7, '(': 3, 'equals': 2, '.': 45, 'ID': 38, '': 4, '}': 29, 'BOOL': 27, '_': 26, 'return': 25, '{': 8, 'object': 6, '||': 14, 'null': 13, '==': 12, 'if': 9, 'Object': 5, 'boolean': 1, 'public': 0}
{'}\n': 35, ';': 34, ')': 16, '(': 5, '.': 21, '{': 17, 'Ident': 9, '': 6, 'public': 0}
{'}\n': 81, ';': 20, ')': 7, '(': 6, 'String': 10, 'to': 76, '.': 41, 'text': 12, 'return': 73, 'STR': 68, '_': 59, 'append': 42, 'if': 50, '{': 8, 'Buffer': 11, '': 1, 'new': 14, '=': 13}
{'}\n': 110, '}': 109, ';': 101, ')': 20, 'position': 19, '(': 9, 'Removed': 104, 'Item': 103, 'notify': 102, ':': 90, 'NUM': 67, '_': 66, '-': 87, '?': 85, 'View': 82, 'Header': 81, 'remove': 7, '.': 61, 'list': 16, '{': 21, '>': 15, 'size': 62, 'if': 58, 'int': 18, ',': 17, '<': 12, 'List': 11, '': 10, 'void': 6, 'public': 0}
{'}\n': 18, ';': 17, ')': 11, 'name': 10, '(': 7, 'super': 13, '{': 12, 'String': 9, '': 1, 'public': 0}
{'}\n': 10, ';': 9, '{': 6, ')': 5, '(': 4, 'Gesture': 3, 'public': 0}
{'}\n': 66, '}': 65, ';': 31, ')': 22, 'node': 42, '(': 4, 'add': 60, '.': 59, 'layer': 11, 'Type': 55, ',': 53, 'Network': 50, 'Parent': 49, 'get': 48, 'Neuron': 9, '': 5, 'new': 44, '=': 28, '{': 39, '++': 37, 'i': 27, 'nodes': 21, '<': 7, 'NUM': 30, '_': 29, 'int': 26, 'for': 24, '>': 10, 'List': 6, 'Layer': 3, 'initialize': 2, 'private': 0}
{'}\n': 25, ';': 24, ')': 8, 'x': 22, '.': 13, 'p': 7, ',': 19, 'y': 18, '(': 4, 'atan2': 14, 'Math': 12, '': 5, '{': 9, 'public': 0}
{'}\n': 44, ';': 42, ')': 21, ',': 38, '(': 13, 'Neuron': 8, '{': 22, 'neuron': 19, '': 14, 'void': 1, 'public': 0}
{'}\n': 104, ';': 29, 'cert': 27, '+': 93, '': 2, '(': 41, ')': 44, 'in': 49, 'Certificate': 36, 'generate': 72, '.': 38, 'Factory': 33, 'X509': 66, '=': 34, 'Stream': 48, 'Input': 47, 'new': 51, 'STR': 43, '_': 42, 'Instance': 40, 'get': 39, 'public': 0}
{'}\n': 162, '}': 28, ';': 25, ')': 8, 'Y': 158, 'm': 12, ',': 127, 'X': 155, 'selection': 7, '(': 4, 'Modification': 150, 'Selection': 2, 'handle': 1, '.': 36, 'Handler': 146, '{': 9, 'else': 143, 'BOOL': 24, '_': 23, '=': 22, 'Detected': 109, 'Gesture': 108, 'Tap': 45, 'Was': 106, 'Type': 54, 'TAP': 61, '': 5, 'if': 10, 'Text': 99, 'Selected': 98, 'Notification': 46, 'Invalid': 44, 'unschedule': 89, 'Empty': 38, 'is': 37, '!': 80, 'return': 26, 'States': 66, 'reset': 64, '==': 32, 'schedule': 43, '||': 34, 'null': 33, 'Expand': 14, 'Did': 13, 'String': 6, 'Changed': 3, 'void': 0}
{'}\n': 85, '}': 63, ';': 37, ')': 7, 'e': 68, ',': 13, 'STR': 79, '_': 78, '(': 6, 'Exception': 12, 'Failure': 19, 'Parse': 18, '': 1, 'new': 33, 'throw': 71, '{': 21, 'IOException': 67, 'catch': 64, 'this': 57, 'return': 60, 'Source': 55, 'Input': 54, 'm': 53, 'parse': 5, '.': 32, 'parser': 40, 'SAXParser': 25, 'factory': 27, '=': 28, 'Instance': 34, 'Factory': 26, 'try': 22, 'SAXException': 15, 'Configuration': 11, 'Parser': 4, 'throws': 8, 'Terms': 2, 'public': 0}
{'}\n': 146, ';': 56, ')': 15, '(': 5, 'length': 102, '.': 101, 'value': 9, 'SUPPLIER': 30, 'MSG_': 29, 'STRING_': 23, 'NULL_': 22, '': 7, ',': 20, 'PREDICATE': 24, 'validate': 17, '{': 16, 'String': 8, 'final': 6, 'static': 1, 'public': 0}
{'}\n': 42, ';': 31, 'server': 25, '=': 36, ')': 19, '(': 4, 'if': 10, '{': 9, 'public': 0}
{'}\n': 239, ';': 50, '(': 6, ')': 20, ',': 12, '.': 55, 'Result': 167, 'set': 166, 'get': 62, '=': 110, '': 1, 'throws': 21, 'txn': 19, 'Transaction': 18, 'space': 15, 'template': 11, 'Packet': 3, 'Template': 9, 'Query': 8, 'execute': 4, 'Response': 2, 'private': 0}
{'}\n': 50, ';': 48, ')': 8, '(': 4, 'is': 26, '.': 14, '{': 9}
{'}\n': 186, ';': 108, 'return': 183, ')': 51, 'old': 21, ',': 105, 'NUM': 68, '_': 67, '(': 6, 'arraycopy': 134, '.': 46, 'System': 132, '': 71, '}': 109, '+': 66, '[': 19, 'new': 59, '=': 58, '{': 52, 'length': 47, 'null': 43, 'if': 39, ']': 20}
{'}\n': 117, ';': 34, ')': 33, '.': 44, '(': 6, '': 12, 'Array': 21, 'Byte': 20, 'to': 67, 'Stream': 23, 'Output': 22, 'new': 26, '=': 25, '{': 18, 'public': 0}
{'}\n': 247, ';': 54, 'length': 61, 'return': 55, '}': 59, '_': 43, ']': 7, 'i': 190, '[': 6, 'current': 17, '=': 62, '++': 171, 'result': 26, ')': 27, 'end2': 123, '<': 81, 'start2': 73, 'int': 2, '(': 4, 'for': 187, '{': 28, 'end1': 92, 'STR': 134, 'if': 29, 'Length': 12, '&&': 84, 'previous': 8, 'while': 78, 'start1': 67, 'NUM': 44, ',': 9, 'arraycopy': 39, '.': 38, 'System': 37, '': 36, 'null': 33, '==': 32, 'byte': 5, 'static': 1, 'public': 0}
{'}\n': 189, '}': 188, ';': 34, ')': 20, ',': 12, '(': 4, '=': 48, '_': 101, '{': 21, '+': 134, 'int': 50, '.': 24, 'NUM': 102, 'get': 85, 'Size': 40, 'Text': 39, 'set': 25, 'Paint': 23, 'text': 22, 'Color': 26, '': 5, 'private': 0}
{'}\n': 254, '}': 253, ';': 252, ')': 91, 'table': 83, '(': 36, '.': 246, '{': 92, 'null': 209, '!=': 132, 'if': 129, 'Table': 33, '': 41, 'void': 1}
{'}\n': 32, ';': 18, ')': 5, '(': 4, 'String': 2, 'to': 27, '.': 26, 'sb': 10, 'return': 24, 'Buffer': 9, '': 1, 'new': 12, '=': 11, '{': 6, 'public': 0}
{'}\n': 164, ';': 110, 'len': 16, '-=': 132, 'offset': 119, ')': 17, ',': 11, '(': 6, '.': 39, '{': 34, 'IOException': 20, '': 19, 'throws': 18, 'int': 12, ']': 9, '[': 8, 'byte': 7, 'read': 5, 'public': 3}
{'}\n': 55, ';': 54, ')': 18, 'task': 12, '(': 45, '.': 43, 'List': 30, '{': 19, '': 9, 'void': 4, 'public': 3}
{'}\n': 262, ';': 261, ')': 70, 'page': 65, '(': 12, 'add': 171, '.': 170, 'pages': 165, '{': 71, 'Page': 7, '': 28, 'public': 0}
{'}\n': 295, ';': 81, 'Steps': 71, 'new': 70, 'return': 291, ')': 59, 'Step': 58, 'previous': 57, '(': 14, 'add': 284, '.': 87, '}': 263, 'Id': 250, 'get': 165, 'result': 212, '=': 72, 'token': 53, ',': 23, 'Map': 35, 'volume': 43, 'URIs': 22, 'Initiator': 177, 'compute': 107, 'Group': 26, 'export': 27, 'storage': 49, 'workflow': 32, 'Flow': 221, 'Work': 220, 'Create': 209, 'Mask': 10, 'Export': 9, 'Specific': 216, 'Device': 215, 'generate': 214, 'Result': 211, 'Workflow': 11, 'Gen': 206, '': 1, 'Key': 160, 'STR': 198, '_': 197, 'format': 195, 'String': 5, 'info': 190, '_log': 188, 'Value': 184, 'Entry': 131, 'resource': 143, '>': 6, 'URI': 19, '<': 3, 'List': 2, '{': 63, 'Set': 152, 'entry': 151, 'Initiators': 13, 'To': 109, 'Resource': 108, ':': 145, 'for': 125, 'initiator': 21, 'Compute': 115, 'map': 112, 'Empty': 89, 'is': 88, '!': 84, 'if': 82, 'Array': 75, 'Exception': 62, 'throws': 60, 'System': 48, 'Storage': 47, 'Integer': 41, 'For': 12, 'New': 8, 'create': 7, 'protected': 0}
{'}\n': 56, ';': 16, ')': 10, 'NUM': 53, '_': 52, 'parameter': 32, '(': 5, 'To': 47, 'compare': 46, '.': 45, 'Value': 21, 'this': 20, 'return': 41, 'Percent': 7, '': 6, 'Null': 24, 'not': 23, '=': 22, 'Decimal': 19, 'Big': 18, 'Defined': 13, 'assert': 12, '{': 11, 'Then': 4, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 14, '(': 9, 'String': 23, 'to': 6, '.': 21, 'key': 13, 'URI': 5, 'return': 16, '{': 15, 'Object': 12, '': 1, 'final': 10, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 381, ';': 46, ')': 25, '(': 11, '>': 8, 'INavi': 6, '': 2, '<': 4, 'List': 3, 'Array': 71, 'new': 69, 'return': 100, '}': 103, 'e': 352, 'Exception': 31, 'Data': 30, 'Load': 29, 'Couldnt': 28, 'throw': 355, '{': 32, 'SQLException': 351, 'final': 12, 'catch': 347, 'provider': 16, ',': 17, 'name': 196, 'Id': 181, 'add': 309, '.': 37, 'Functions': 292, 'SQLDatabase': 291, 'Postgre': 82, '=': 68, 'Template': 21, 'Debugger': 20, 'STR': 109, '_': 108, 'Timestamp': 249, 'get': 186, 'Set': 152, 'result': 153, 'Date': 267, 'modification': 266, 'String': 105, 'read': 202, 'SQLHelpers': 83, 'Int': 187, 'int': 179, 'next': 173, 'while': 168, 'BOOL': 164, 'query': 106, 'Query': 159, 'execute': 158, 'connection': 88, 'Result': 151, 'try': 148, 'TABLE': 96, 'Names': 92, 'CTable': 91, '+': 110, 'Table': 86, 'has': 85, '!': 80, 'if': 78, 'check': 38, 'throws': 26, 'Manager': 22, 'debugger': 23, 'SQLProvider': 15, 'Abstract': 14, 'load': 9, 'static': 1, 'public': 0}
{'}\n': 92, ';': 28, ')': 9, '(': 4, 'return': 84, '}': 83, '.': 60, '{': 10, 'List': 19, 'phone': 18, 'for': 47, 'String': 42, '': 1, 'new': 40, '=': 39, 'public': 0}
{'}\n': 47, ';': 17, 'result': 20, 'return': 44, ')': 10, '(': 9, '.': 23, 'remove': 6, 'frontier': 22, '=': 21, 'Node': 5, '': 1, 'Frontier': 8, 'Up': 13, 'clean': 12, '{': 11, 'From': 7, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 30, ';': 21, ')': 9, '(': 5, 'is': 3, '.': 24, 'f': 13, 'return': 22, 'path': 8, 'File': 12, '': 6, 'new': 15, '=': 14, '{': 10, 'String': 7, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 93, ';': 24, ')': 7, 'get': 47, '.': 42, 'val': 29, '(': 3, 'equals': 2, 'Name': 49, 'BOOL': 23, '_': 22, 'return': 21, 'name': 41, 'if': 9, 'object': 6, '': 4, '=': 30, '}': 25, '{': 8, 'instanceof': 14, '!': 11, 'Object': 5, 'boolean': 1, 'public': 0}
{'}\n': 40, ';': 39, ')': 7, '(': 4, '.': 10, '': 1, '=': 19, 'port': 6, 'this': 9, '{': 8, 'int': 5, 'public': 0}
{'}\n': 61, 'Value': 33, 'value': 11, ';': 29, ')': 28, 'variable': 7, '(': 4, '.': 19, '': 5, ',': 8, 'String': 6}
{'}\n': 42, ';': 41, ')': 37, 'lowercase': 39, '(': 11, '.': 31, '': 5, 'String': 6, 'static': 1, 'public': 0}
{'}\n': 145, ';': 59, 'Rep': 34, 'return': 136, '}': 126, ')': 9, '.': 62, '(': 8, 'append': 63, 'STR': 84, '_': 83, '{': 10, 'String': 5, 'to': 6, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 75, ';': 74, ')': 21, 'message': 61, ',': 38, '(': 32, 'get': 52, '.': 30, 'STR': 40, '_': 39, 'US': 37, '': 10, 'Locale': 34, 'format': 31, 'String': 11, '{': 22, 'protected': 0}
{'}\n': 170, ';': 55, 'throwable': 17, 'return': 167, '}': 166, ')': 23, '(': 14, 'Throwable': 7, '.': 69, '{': 27, 'VInt': 142, 'Name': 92, 'String': 71, 'Optional': 85, 'Trace': 30, 'Stack': 12, '=': 36, 'stack': 34, ']': 33, '[': 32, 'Element': 31, '': 3, 'IOException': 26, 'throws': 24, 'Stream': 20, ',': 18, 'T': 4, '>': 8, 'extends': 5, '<': 2, 'static': 1, 'public': 0}
{'}\n': 162, ';': 34, 'Ms': 78, ',': 135, 'MAX_': 127, '': 118, '(': 8, 'min': 121, '.': 24, 'Math': 119, ')': 9, 'NUM': 90, '_': 72, '{': 10, 'public': 0}
{'}\n': 25, ';': 24, ')': 12, 'ID': 11, 'Print': 8, 'AD_': 7, '': 1, '(': 4, '{': 13, 'Format': 9, 'int': 5}
{'}\n': 51, '}': 50, ';': 21, ')': 11, '(': 5, 'Register': 3, '': 1, 'new': 42, 'add': 40, '.': 39, '{': 12, 'final': 6, 'for': 22, '=': 14, 'Values': 4, 'public': 0}
{'}\n': 47, ';': 34, ')': 20, 'null': 41, '(': 8, 'configuration': 35, '_': 31, ',': 30, '.': 24, 'public': 0}
{'}\n': 103, ';': 21, 'Len': 16, 'data': 11, '+=': 99, 'size': 37, ')': 12, ',': 86, 'array': 90, 'NUM': 28, '_': 27, '(': 4, 'arraycopy': 83, '.': 19, 'System': 81, '': 80, 'newcap': 35, 'Capacity': 54, 'ensure': 53, '+': 38, '*': 45, 'int': 8, '=': 17, '}': 33, 'return': 31, '{': 13, '==': 26, 'if': 22, 'length': 20, ']': 10, '[': 9, 'All': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 8, 'length': 27, '.': 11, 'b': 7, ',': 21, 'NUM': 23, '_': 22, '(': 3, '{': 16, 'IOException': 15, '': 14, 'io': 12, 'java': 10, 'throws': 9, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 40, ';': 39, ')': 13, 'Callback': 4, 'scanning': 11, '(': 5, '.': 24, 'Callbacks': 23, 'contains': 25, '&&': 21, 'null': 20, '!=': 19, 'if': 15, '{': 14, 'Scanning': 3, 'Sheeld': 8, 'One': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 77, ';': 36, ')': 24, 'c': 11, ',': 8, 'h': 58, '+': 67, 'y': 64, 'w': 56, 'x': 62, 'Image': 45, 'm_back': 47, '(': 4, 'draw': 44, '.': 31, 'g': 7, 'get': 32, '=': 29, 'bounds': 28, 'JComponent': 10, '': 5, 'Graphics': 6, 'paint': 2, 'void': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 8, '(': 7, 'get': 15, '.': 14, 'Count': 13, '_release': 19, '-': 18, '_acquire': 12, '=': 11, '{': 9, 'sample': 6, 'final': 4, 'public': 3}
{'}\n': 86, ';': 64, ')': 29, '(': 24, 'Value': 71, 'int': 70, '.': 69, 'else': 65, 'BOOL': 63, '_': 62, 'return': 61, '==': 58, 'Integer': 37, '{': 30, 'i': 27, 'boolean': 1}
{'}\n': 17, ';': 16, ')': 6, '(': 5, 'shutdown': 4, '.': 9, 'pool': 8, '{': 7, 'public': 0}
{'}\n': 25, ';': 24, ')': 11, 'ch': 10, '(': 8, 'Identifier': 6, 'Java': 18, 'is': 3, '.': 16, 'Character': 15, '': 14, 'return': 13, '{': 12, 'char': 9, 'Symbol': 5, 'Proposition': 4, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 33, ';': 32, ')': 9, 'Places': 30, 'Frac': 29, 'Output': 20, '': 5, '.': 18, 'Parameters': 17, ',': 15, 'Width': 22, 'Field': 21, '(': 4, 'o': 3, '{': 10, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 144, ';': 18, 'return': 136, '}': 127, 'i': 35, ')': 7, 'NUM': 38, '_': 37, '==': 132, 'skip': 30, '(': 3, 'if': 78, 'break': 125, ']': 122, 'j': 61, '+': 94, 'At': 83, 'char': 82, '.': 14, 'txt': 6, '[': 112, 'right': 111, '-': 44, ',': 108, 'max': 104, 'Math': 102, '': 4, '=': 12, '{': 8, '!=': 87, 'pat': 13, '--': 75, '>=': 70, 'int': 1, 'for': 32, '+=': 49, '<=': 41, 'length': 15, 'String': 5, 'search': 2, 'public': 0}
{'}\n': 66, ';': 26, ')': 25, '(': 5, 'i': 30, 'indices': 51, '.': 38, '++': 42, 'length': 39, '<': 36, 'NUM': 33, '_': 32, '=': 16, 'int': 29, 'for': 27, '': 12, 'new': 17}
{'}\n': 54, ';': 26, ')': 15, 'length': 14, ',': 11, 'NUM': 49, '_': 48, '(': 18, 'substring': 46, '.': 45, 'str': 10, 'return': 24, 'if': 17, 'null': 21, '==': 20, '{': 16, 'int': 13, 'String': 4, '': 3, 'static': 1, 'public': 0}
{'}\n': 80, ';': 78, ')': 25, '(': 19, 'clear': 2, '{': 26, 'void': 1, 'public': 0}
{'}\n': 233, ';': 33, ')': 32, '(': 6, 'get': 206, ',': 79, '{': 187, '': 16, '_': 47, '.': 24, 'groovy': 41, '}': 141, 'new': 80, ']': 86, '[': 83, 'STR': 48, 'if': 34}
{'}\n': 25, ';': 24, ')': 8, '(': 19, '{': 9, 'boolean': 4}
{'}\n': 63, ';': 38, ')': 5, 'intent': 9, '(': 4, 'start': 57, '.': 21, 'STR': 45, '_': 44, '': 7, 'Action': 28, 'set': 27, 'Intent': 8, 'new': 11, '=': 10, '{': 6, 'void': 0}
{'}\n': 109, ';': 47, ')': 21, 'Name': 9, 'File': 50, 'STR': 45, '_': 44, '+': 89, 'separator': 93, '.': 83, '': 6, '(': 5, 'Path': 86, 'Absolute': 85, 'get': 29, 'resources': 51, '=': 52, 'String': 7, 'Type': 13, 'resource': 14, ',': 10, 'cluster': 8, 'Home': 31, 'Cluster': 30, 'Dir': 54, 'Config': 4, 'Resource': 3, '}': 48, 'Exception': 25, 'Configuration': 24, 'new': 39, 'throw': 38, '{': 26, 'null': 35, '==': 34, 'if': 27, 'throws': 22, 'void': 1, 'public': 0}
{'}\n': 49, ';': 15, '(': 4, ')': 9, '{': 10, 'proto': 8, '': 5, 'public': 0}
{'}\n': 63, ';': 38, ')': 29, '(': 8, '.': 20, '': 10, 'Pane': 19, 'm_tabbed': 18, '}': 39, 'get': 26, ',': 30, 'final': 9, 'void': 1, 'private': 0}
{'}\n': 38, ';': 37, ')': 15, '(': 7, 'next': 32, '.': 31, '_r': 30, '*': 29, 'Limit': 10, 'lower': 9, '-': 25, 'upper': 13, '+': 20, 'return': 17, '{': 16, ',': 11, 'Between': 6, 'Random': 4, 'generate': 3, 'static': 1, 'public': 0}
{'}\n': 78, ';': 23, ')': 8, 'class': 21, '.': 12, 'Source': 73, 'Property': 72, 'IItem': 58, '': 1, '(': 7, 'add': 13, 'Types': 11, 'supported': 10, 'Provider': 4, 'Label': 59, 'Content': 32, 'Item': 3, 'ITree': 44, 'IStructured': 30, 'Domain': 17, 'IEditing': 16, '{': 9, 'Factory': 6, 'Adapter': 5, 'public': 0}
{'}\n': 351, '}': 113, ';': 51, ')': 32, ',': 8, 'iter': 28, 'query': 17, 'next': 215, 'right': 10, 'NUM': 131, '_': 130, '+': 124, 'middle': 120, '(': 5, 'kd': 2, '{': 33, '&&': 320, '<': 58, 'if': 34, 'left': 7, 'dist': 69, '.': 46, '==': 264, 'Offset': 55, 'get': 54, 'assert': 256, '<=': 39, 'Computation': 93, 'Distance': 92, 'count': 85, 'split': 135, 'distance': 73, 'norm': 71, '=': 70, 'double': 30, 'dims': 224, '%': 223, 'axis': 13, 'int': 6, 'final': 118, 'delta': 157, 'onright': 188, 'boolean': 176, '>=': 181, 'onleft': 177, 'Value': 162, '-': 37, 'Access': 87, 'Object': 86, 'seek': 47, 'relation': 77, 'O': 16, '': 15, '>': 127, 'return': 115, 'advance': 63, 'for': 43, 'leafsize': 40, 'Iter': 27, 'DBIDArray': 26, 'private': 0}
{'}\n': 345, ')': 91, '}': 126, ',': 10, '(': 90, '.': 102, ';': 72, '{': 58, 'null': 238, 'if': 93, 'get': 287, '': 6, '==': 237, '=': 62, '>': 16, '<': 13, 'Map': 25, 'Object': 31, 'String': 28}
{'}\n': 433, ';': 78, ')': 15, '(': 3, '.': 197, 'client': 36, '=': 164, '': 17, 'STR': 23, '_': 22, 'set': 198, 'Mqtt': 167, 'new': 165, '+': 24, 'connect': 67, 'Id': 42, 'void': 1}
{'}\n': 43, '}': 42, ';': 41, ')': 8, '(': 4, 'String': 27, 'to': 26, '.': 14, 'tracer': 7, '+': 30, 'STR': 32, '_': 31, 'trace': 24, 'LOG': 22, '': 5, '{': 9, 'Tracers': 13, 'cur': 12, 'if': 10, 'Tracer': 3, 'void': 1, 'synchronized': 0}
{'}\n': 61, ';': 36, 'Entries': 27, 'entries': 42, 'NUM': 20, '_': 19, '+': 18, '.': 12, 'int': 6}
{'}\n': 28, ';': 27, ')': 6, 'value': 5, '(': 3, 'Value': 9, 'get': 19, ',': 18, '.': 13, 'Math': 12, '': 11, 'set': 8, '{': 7, 'double': 4, 'void': 1, 'public': 0}
{'}\n': 31, ')': 29, '(': 28, 'Region': 17, 'test': 12, 'void': 11, 'public': 10, 'Test': 9, '': 1, '@': 0, 'Ignore': 2}
{'}\n': 37, ';': 31, ')': 4, '(': 3, '': 1, '<': 25, 'List': 24, 'Array': 23, 'new': 21, '>': 15, '{': 5, 'public': 0}
{'}\n': 57, '}': 24, ';': 23, '': 2, '{': 12, ')': 11, 'String': 8, '(': 6, 'Version': 5}
{'}\n': 86, '}': 85, ';': 57, 'Count': 83, 'm_interval': 82, ')': 13, '.': 29, '(': 7, 'Log': 64, '!': 60, 'if': 58, '{': 18, 'Message': 33, 'get': 30, 'Interval': 10, 'analyzed': 11, 'Exception': 17, 'Ade': 16, '': 1, 'throws': 14, 'IAnalyzed': 9, 'Object': 6, 'incoming': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 65, ';': 43, 'return': 62, '}': 44, 'STR': 42, '_': 41, '{': 20, ')': 16, '(': 8, 'encoding': 15, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 44, ';': 43, ')': 16, '(': 6, 'Set': 39, 'Data': 38, 'get': 25, '.': 24, 'Wrapper': 11, 'Est': 14, ',': 31, 'Im': 28, 'Bayes': 3, 'this': 18, '{': 17, 'Estimator': 4, '': 1, 'Editor': 5, 'public': 0}
{'}\n': 24, ';': 23, ')': 8, 'idx': 7, '(': 5, '.': 18, 'Keys': 12, 'preload': 11, 'null': 14, '{': 9, 'int': 6, 'public': 0}
{'}\n': 36, ';': 22, 'token': 14, ')': 11, ',': 29, '(': 5, 'put': 26, '.': 17, 'Int': 19, '=': 15, '{': 12, '': 6, 'Token': 4}
{'}\n': 184, '}': 181, ';': 30, ')': 10, '(': 6, 'bb': 44, 's': 164, '': 7, '.': 24, '=': 22, 'get': 25, 'Element': 49, 'next': 48, 'e': 21, 'Block': 19, 'Basic': 18, '{': 11, 'Elements': 35, 'More': 34, 'has': 33, 'Blocks': 27, 'ir': 9, '>': 20, '<': 16, 'Enumeration': 15, 'for': 12, 'IR': 8}
{'}\n': 175, ';': 134, ')': 39, '(': 25, '_': 145, 'Time': 76, 'sleep': 75, '.': 108, 'Sleep': 17, '=': 88, '': 54, '{': 42, 'void': 1, 'public': 0}
{'}\n': 78, ';': 77, ')': 19, 'o': 67, '(': 8, '.': 63, 'Array': 47, '': 1, '{': 33, 'Object': 2, 'public': 0}
{'}\n': 30, '}': 29, ';': 28, ')': 10, '(': 4, 'remove': 2, '.': 22, 'Queue': 21, 'Request': 3, 'interrupt': 8, '{': 11, 'Interrupt': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 18, ';': 17, 'BOOL': 16, '_': 15, '=': 14, 'Pending': 13, '{': 11, ')': 10, '(': 9, 'Failed': 8, 'Heatmap': 7, 'on': 6, 'void': 5, 'final': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 136, ';': 134, ')': 91, 'null': 101, ',': 100, '(': 68, '{': 92, '': 72, 'Handling': 50, 'public': 11}
{'}\n': 23, ';': 22, ')': 10, 'field': 9, '(': 6, 'Offset': 5, 'Field': 4, '.': 15, 'UNSAFE': 14, '': 7, 'return': 12, '{': 11, 'long': 2, 'static': 1, 'public': 0}
{'}\n': 65, '}': 44, ';': 35, ')': 12, 'STR': 53, '_': 52, '+': 54, '(': 4, 'Path': 56, 'get': 55, 'IOException': 15, '': 14, 'new': 48, 'throw': 47, '{': 16, 'else': 45, 'b': 11, '.': 27, 'Buffer': 20, 'byte': 8, 'offset': 6, 'int': 31, 'position': 28, 'null': 22, '!=': 21, 'if': 17, 'throws': 13, ']': 10, '[': 9, ',': 7, 'long': 5, 'void': 2, 'synchronized': 1, 'protected': 0}
{'}\n': 28, ';': 27, 'timestamp': 4, '{': 6, ')': 5, '(': 2}
{'}\n': 56, ';': 55, ')': 22, '(': 51, 'super': 24, '{': 23, '': 13, 'BO': 11, 'Package': 10}
{'}\n': 139, ';': 25, 'null': 137, 'return': 132, '}': 135, 'e': 40, ')': 16, ']': 56, 'NUM': 24, '_': 23, '[': 55, 'Coord': 58, '.': 29, 'p1': 15, 'p0': 11, '(': 8, 'if': 67, 'Coordinates': 63, 'get': 48, '=': 22, 'Coordinate': 10, '': 1, 'i': 21, 'edges': 28, 'Edge': 2, '{': 17, '++': 35, 'size': 30, '<': 27, 'int': 20, 'for': 18, ',': 12, 'find': 3, 'public': 0}
{'}\n': 206, ';': 24, ')': 9, 'NUM': 59, '_': 58, '.': 37, '=': 30, '}': 25, '(': 12, 'STR': 100, 'i': 29, 'At': 70, 'char': 69, 'string': 8, 'length': 38, 'int': 28, 'for': 26, 'return': 23, '{': 10, 'if': 11, 'String': 7, '': 6, 'public': 0}
{'}\n': 105, ';': 23, ')': 11, '.': 42, 'Issue': 4, 'health': 9, '(': 5, 'post': 96, 'Bus': 15, 'event': 16, 'Issues': 77, 'Active': 76, 'm': 26, '}': 62, 'return': 60, 'String': 55, 'to': 54, ',': 50, 'STR': 46, '_': 45, '+': 47, 'w': 43, 'LOG': 41, '': 6, '{': 12, 'null': 37, '==': 36, 'Event': 14, 'Health': 7, 'if': 30, 'Lock': 27, 'synchronized': 24, 'void': 2, 'final': 1, 'protected': 0}
{'}\n': 159, ';': 46, '_': 156, '}': 95, ')': 27, '(': 4, 'close': 149, '.': 70, '{': 28, 'null': 144, '!=': 143, 'if': 140, 'ex': 100, ',': 10, '': 5, 'catch': 96, '=': 34, 'Tx': 32, 'Document': 7, 'ODatabase': 6, 'password': 22, 'String': 12, 'user': 18, 'URL': 14, 'db': 13, 'pool': 9, 'Pool': 8, 'static': 1, 'private': 0}
{'}\n': 107, '}': 79, ';': 35, ')': 11, '(': 6, 'agg': 5, 'Val': 10, 'new': 9, '': 1, '=': 27, '{': 12, 'return': 80, 'get': 73, '.': 44, 'buffer': 39, 'add': 69, ']': 20, '[': 19, 'byte': 18, 'instanceof': 17, 'if': 13, 'Object': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 588, ';': 569, ')': 478, 'sender': 462, '(': 438, '.': 507, '': 449}
{'}\n': 49, ';': 28, ')': 10, '(': 5, 'is': 2, '.': 22, 'entity': 8, 'return': 36, '}': 40, 'BOOL': 38, '_': 37, '{': 11, 'null': 33, '==': 32, 'if': 29, 'Name': 9, 'get': 23, 'Entities': 21, 'f': 20, 'Entity': 4, '': 6, '=': 15, 'String': 7, 'boolean': 1, 'public': 0}
{')': 48, 'Event': 16, '': 30, '(': 27, 'void': 1}
{'}\n': 102, ';': 75, ')': 17, 'key': 12, '(': 9, 'add': 6, '.': 92, 'STR': 50, '_': 49, 'Exception': 47, 'Pointer': 46, 'Null': 45, '': 10, 'new': 43, 'throw': 42, 'null': 40, '==': 39, 'if': 36, '{': 18, 'void': 5, 'public': 3}
{'}\n': 60, '{': 9, ')': 8, '(': 35, 'ar': 36, 'tasks': 23, 'Runnable': 18, 'Aborting': 17, '': 16, 'public': 0}
{'}\n': 38, ';': 27, 'buffer': 14, 'return': 35, ')': 9, ',': 31, 'value': 8, '(': 5, 'serialize': 4, 'size': 22, 'allocate': 20, '.': 19, 'Buffer': 3, 'Byte': 2, '': 1, '=': 15, '{': 10, 'T': 7, 'default': 0}
{'}\n': 112, '}': 109, ';': 27, '.': 56, ')': 5, '(': 4, '{': 6, '=': 32, 'i': 42, 'NUM': 34, '_': 33, 'int': 30, 'Submissions': 3}
{'}\n': 1621, ';': 613, '}': 1263, ')': 446, '(': 279, '.': 1045, 'STR': 1322, '_': 1058, '+': 1344, 'value': 409, '{': 447, '': 286, 'Calendar': 166, 'get': 1203, 'format': 664, '=': 558, 'calendar': 534, 'locale': 707, ',': 410, 'Format': 825, 'Date': 824, ':': 890, 'null': 612, '==': 750, 'String': 287, 'to': 169}
{'}\n': 675, '}': 296, ';': 45, 'BOOL': 110, '_': 43, 'return': 108, ')': 18, 'e': 653, ',': 327, 'STR': 665, '(': 13, '.': 37, 'Log': 657, '': 14, '{': 19, 'Exception': 652, 'catch': 649, 'Time': 628, 'Event': 12, 'get': 134, 'event': 17, ':': 42, 'Idx': 158, 'hist': 140, 'Historical': 228, '?': 29, 'Hist': 176, 'processing': 175, 'CANCEL': 618, 'ACTION_': 564, 'Motion': 15, '!=': 576, 'action': 130, '&&': 95, 'UP': 583, 'POINTER_': 595, 'NUM': 44, '-': 599, 'SHIFT': 597, 'INDEX_': 596, '<<': 592, '&': 587, 'MOVE': 565, 'Ids': 400, 'pointer': 23, 'Vals': 216, 'pressure': 269, 'y': 242, 'x': 215, 'Count': 24, 'Touch': 11, 'decode': 537, 'ptr': 362, 'invoke': 38, 'Pressure': 283, 'm_get': 34, 'Float': 418, '=': 25, ']': 220, '[': 217, 'Y': 256, 'X': 229, 'Id': 381, 'Pointer': 35, 'Integer': 32, 'int': 22, '++': 171, 'Pointers': 318, 'num': 317, '<': 180, 'for': 154, 'POINTS': 345, 'TOUCH_': 344, 'MAX_': 343, 'min': 323, 'Math': 321, 'else': 297, '==': 91, '||': 190, 'Supported': 28, 'multi': 26, '!': 96, 'if': 46, 'Len': 141, 'boolean': 9, '<=': 165, '/': 150, 'Size': 147, 'History': 146, 'Action': 135, 'Events': 100, 'Single': 98, 'handle': 97, 'NOTHING': 94, 'MODE_': 93, 'Mode': 70, 'try': 20, 'on': 10, 'public': 8}
{'}\n': 74, ';': 29, ')': 28, 'NUM': 40, '_': 39, '(': 26, 'bit': 9, '': 7, 'new': 44, 'throw': 43, '{': 16, 'if': 30, '.': 23, '=': 20, 'Bit': 3, 'public': 0}
{'}\n': 261, ';': 253, 'BOOL': 259, '_': 168, 'return': 257, '}': 256, 'limit': 91, ')': 161, '(': 81, '.': 206, '{': 162, 'NUM': 169, 'if': 163, '': 84, 'Limit': 39, 'boolean': 1}
{'}\n': 32, ';': 31, 'a': 6, '(': 4, '{': 11, ')': 10, 'b': 9, 'int': 1, ',': 7, 'private': 0}
{'}\n': 24, ';': 23, ')': 12, 'l': 11, '(': 6, 'Element': 19, '.': 17, 'Listeners': 16, 'Model': 4, 'tree': 14, '{': 13, 'Listener': 5, 'Tree': 3, '': 7, 'void': 1, 'public': 0}
{'}\n': 227, '}': 23, ';': 22, ')': 7, 'name': 20, '+': 39, 'STR': 38, '_': 37, '(': 3, 'IOException': 10, '': 1, 'new': 16, 'throw': 32, '{': 11, 'ioe': 182, 'catch': 24, 'DNS': 168, 'host': 70, '=': 15, 'NUM': 121, '.': 49, 'if': 46, 'get': 50, 'uri': 14, 'null': 55, '==': 54, 'Scheme': 51, 'use': 29, ',': 41, 'Exception': 28, 'URISyntax': 27, 'URI': 18, 'try': 12, 'throws': 8, 'URIName': 2, 'public': 0}
{'}\n': 44, ';': 40, 'this': 42, 'return': 41, ')': 22, 'parameters': 21, ',': 10, 'name': 13, 'namespace': 9, '(': 6, 'create': 31, '.': 25, 'View': 5, '': 1, 'add': 4, 'views': 24, '{': 23, 'Expression': 19, 'String': 8, 'Stream': 3, 'Projected': 2, 'public': 0}
{'}\n': 92, ';': 21, 'status': 40, 'return': 89, '}': 88, 'len': 16, '+=': 85, 'Length': 75, 'Recorded': 74, 'm': 70, ')': 13, 'Bytes': 25, 'Of': 24, 'num': 23, ',': 8, 'Recording': 71, 'NUM': 34, '_': 33, 'buffer': 12, '(': 3, 'arraycopy': 63, '.': 19, 'System': 61, '': 4, '{': 14, '==': 55, 'if': 52, 'Status': 43, 'get': 42, '=': 17, 'int': 1, 'read': 2, 'recorder': 7, 'length': 20, ']': 11, '[': 10, 'byte': 9, 'Record': 6, 'Speech': 5, 'protected': 0}
{'}\n': 11, ';': 10, '=': 8, 'candies': 6, '{': 5, ')': 4, '(': 3, 'public': 0}
{'}\n': 757, ';': 306, ')': 169, 'last': 107, ',': 22, 'List': 52, 'transition': 83, 'Transition': 57, 'standard': 59, 'Offset': 56, 'Wall': 741, '(': 6, 'Rules': 3, 'Zone': 2, '': 1, 'new': 729, 'return': 728, '_': 242, '.': 194, 'Standard': 200, '{': 170, '>': 58, 'Rule': 105, '<': 53, 'public': 0}
{'}\n': 118, ';': 46, ')': 8, 'NUM': 18, '_': 17, '>': 63, 'h': 11, '(': 4, '^': 55, 'return': 106, '<<': 51, '+': 98, '+=': 48, '^=': 60, 'Code': 43, 'hash': 3, '.': 41, 'o': 7, ':': 39, '?': 16, 'null': 15, '==': 14, '=': 12, 'int': 2, '{': 9, 'Object': 6, '': 5}
{'}\n': 21, ';': 20, ')': 10, 'Template': 4, '(': 5, 'add': 2, '.': 14, 'Templates': 13, '{': 11, 'String': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 358, ';': 75, '}': 248, ')': 19, '(': 12, 'e': 253, ',': 97, '': 25, '.': 52, 'STR': 266, '_': 265, 'TAG': 263, 'LOG_': 262, 'Log': 257, '{': 20, 'catch': 249, 'Stream': 199, 'File': 197, 'new': 203, '=': 48, 'get': 84, 'this': 96, 'Activity': 94, 'Picker': 93, 'Medias': 92, 'Vector': 91, 'Bitmap': 88, 'For': 87, 'Angle': 78, 'Rotation': 85, 'Utils': 82, 'Image': 81, 'rotation': 77, 'int': 76, 'private': 0}
{'}\n': 77, ';': 27, '.': 43, ')': 16, 'STR': 51, '_': 50, '(': 6, 'get': 44, 'Name': 3, '=': 36, 'name': 15, 'null': 32, '==': 31, 'if': 28, '{': 20, 'Exception': 19, '': 1, 'throws': 17, 'Object': 2, ',': 11, 'server': 10, 'Server': 9, 'MBean': 8, 'Register': 5, 'pre': 4, 'public': 0}
{'}\n': 89, ';': 88, ')': 25, 'NUM': 86, '_': 67, '(': 46, 'group': 83, '.': 32, 'matcher': 53, ',': 69, '': 1, '{': 26, 'String': 4, 'static': 0}
{'}\n': 42, ';': 25, 'return': 39, ')': 10, 'ENDIAN': 36, 'LITTLE_': 35, '': 1, '.': 20, 'Order': 32, 'Byte': 2, '(': 7, 'order': 28, 'allocate': 21, 'Buffer': 3, '=': 16, 'capacity': 9, 'int': 8}
{'}\n': 116, ';': 34, ')': 19, '(': 22, '.': 61, 'collection': 23, '': 11, '}': 35, 'return': 33, '{': 20, 'null': 30, '==': 29, 'if': 21, '>': 16, '<': 13, 'private': 0}
{'}\n': 66, ';': 24, ')': 10, '(': 6, 'length': 17, '.': 16, 's': 9, '+=': 59, 'position': 47, 'this': 40, ',': 36, 'Buffer': 43, 'byte': 42, 'NUM': 22, '_': 21, 'Bytes': 33, 'get': 32, 'arraycopy': 28, 'System': 26, '': 7, '*': 20, 'Capacity': 13, 'ensure': 12, '{': 11, 'String': 3, 'put': 2, 'void': 1, 'public': 0}
{'}\n': 109, '}': 91, ';': 46, ')': 18, 'e': 97, '(': 5, 'XNIException': 21, '': 6, 'new': 101, 'throw': 100, '{': 22, 'SAXException': 96, 'catch': 93, 'Id': 37, 'system': 49, ',': 9, 'public': 0, 'name': 8, 'Decl': 4, 'Entity': 3, 'external': 2, '.': 40, 'Handler': 29, 'f': 27, 'System': 60, 'Literal': 68, 'get': 41, 'identifier': 13, ':': 64, 'Expanded': 59, '?': 55, 'DTDURIs': 54, 'Resolve': 53, '=': 38, 'String': 7, 'Public': 42, 'null': 31, '!=': 30, 'if': 25, 'try': 23, 'throws': 19, 'augs': 17, 'Augmentations': 16, 'Identifier': 12, 'XMLResource': 11, 'void': 1}
{'}\n': 21, ';': 17, '=': 15, '.': 13, 'this': 12, '{': 11, ')': 10, 'alpha': 6, '(': 7, '': 1, 'public': 0}
{'}\n': 90, ';': 44, ')': 20, ',': 85, 'NUM': 39, '_': 30, '+': 82, '(': 16, 'substring': 79, '.': 26, 'signature': 19, '{': 21, 'STR': 31, 'Of': 28, 'index': 27, '=': 24, '}': 45, 'int': 22, 'String': 18, '': 7, 'Signature': 15}
{'}\n': 134, ';': 100, '(': 12, ',': 116, ')': 48, '.': 71, '': 13, 'Ticket': 10}
{'}\n': 50, ';': 49, ')': 11, '_': 17, ',': 8, 'delay': 44, '(': 3, 'Millis': 40, 'Time': 39, 'current': 38, '.': 37, 'System': 36, '': 4, 'Exception': 25, 'Argument': 24, 'Illegal': 23, 'new': 21, 'throw': 20, 'NUM': 18, '<': 16, 'if': 13, '{': 12, 'long': 9, 'task': 7, 'Task': 6, 'Timer': 5, 'schedule': 2, 'void': 1, 'public': 0}
{'}\n': 164, ';': 41, ')': 20, '(': 4, 'draw': 160, 'hs': 95, ',': 7, 'ws': 81, 'NUM': 29, '_': 28, '/': 143, '-': 141, 'ys': 72, 'xs': 63, 'Double': 138, '': 33, '.': 129, 'D': 135, 'Ellipse2': 134, 'new': 32, 'offscreen': 128, 'else': 127, 'y': 9, 'x': 6, 'pixel': 120, '<=': 111, '&&': 114, 'if': 22, 'Axis': 14, 'Minor': 18, 'semi': 12, '*': 88, 'Y': 75, 'factor': 83, '=': 64, 'double': 5, 'Major': 13, 'X': 66, 'scale': 65, 'STR': 39, 'Exception': 36, 'Argument': 35, 'Illegal': 34, 'throw': 31, '<': 27, '{': 21, 'void': 1, 'public': 0}
{'}\n': 36, ';': 25, ')': 13, 'Cursor': 5, 'new': 11, '(': 8, '.': 18, '{': 14, '': 1}
{'}\n': 14, ';': 13, ')': 5, '(': 11, 'lock': 2, '.': 9, 'Lock': 8, '{': 6, 'void': 1, 'public': 0}
{'}\n': 46, ';': 45, ')': 10, '(': 6, '||': 34, 'clazz': 9, '.': 16, '': 7, '{': 11, 'Class': 8, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 42, ';': 41, ')': 17, 'Number': 39, ',': 27, 'Type': 29, 'device': 34, '(': 7, 'get': 32, '.': 22, 'Map': 30, '_device': 28, 'STR': 26, '_': 25, 'format': 23, 'String': 3, '': 2, 'return': 19, '{': 18, 'Guid': 6, 'Native': 5, 'generate': 4, 'static': 1, 'public': 0}
{'}\n': 250, ';': 53, ')': 31, 'this': 37, ',': 10, 'Y': 62, 'delta': 186, '+': 81, 'Translate': 232, 'Model': 155, 'sample': 167, 'X': 40, '(': 7, 'Point': 228, '': 1, 'new': 44, 'height': 18, 'width': 15, 'y0': 24, 'x0': 21, 'Rectangle': 215, 'Buffer': 211, 'data': 210, 'sm': 156, 'Raster': 3, 'return': 201, 'y': 12, '-': 190, '=': 166, 'int': 8, 'x': 9, 'else': 179, 'List': 161, 'band': 160, 'Sample': 154, 'Subset': 171, 'create': 4, '.': 38, 'null': 163, '!=': 162, 'if': 33, '}': 54, 'STR': 51, '_': 50, 'Exception': 48, 'Format': 47, 'throw': 43, '{': 32, 'min': 39, '>': 91, '||': 86, '<': 36, 'Child': 6, 'Writable': 2, 'public': 0}
{'}\n': 271, '}': 270, ';': 159, ')': 12, '(': 4, '.': 104, '{': 13, 'Node': 33, '': 6, 'final': 5, 'get': 139, 'Tree': 32, 'JCriterium': 31, '=': 48, 'void': 1, 'private': 0}
{'}\n': 60, ';': 14, 'NUM': 13, '_': 12, '-': 30, 'k': 10, 'return': 54, ')': 7, 'L': 23, '': 22, '>=': 49, 'p': 16, '(': 4, 'while': 46, '}': 45, 'uniform': 41, '*=': 40, '++': 37, '{': 8, 'do': 34, 'lambda': 6, 'exp': 28, '.': 27, 'Math': 26, '=': 11, 'double': 5, 'int': 2, 'poisson': 3, 'static': 1, 'public': 0}
{'}\n': 428, ';': 133, 'output': 420, 'return': 419, ')': 88, '(': 27, 'STR': 369, '_': 123, 'String': 11, '': 5, 'NUM': 124, '.': 118, '}': 323, 'input': 81, '{': 89, '==': 122, 'if': 109, 'next': 164, '=': 203, 'int': 136, 'length': 119, 'public': 0}
{'}\n': 24, ';': 23, ')': 11, 'sound': 9, '(': 6, '.': 16, 'Sounds': 15, 'builtin': 14, '{': 12, 'Identifier': 10, 'String': 8, '': 7, 'Sound': 4, 'boolean': 1}
{'}\n': 19, ';': 18, ')': 10, '(': 9, 'iterator': 15, '.': 14, 'return': 12, '{': 11, 'iterate': 7, '>': 6, 'String': 5, '': 1, '<': 3, 'Iterator': 2, 'public': 0}
{'}\n': 119, ';': 33, ')': 9, 'key': 8, '(': 5, '.': 39, 'STR': 31, '_': 30, 'Exception': 28, 'Pointer': 27, 'Null': 26, '': 6, 'new': 24, 'throw': 23, 'null': 21, '==': 20, 'if': 17, '{': 16, 'void': 2}
{')': 6, '(': 5, 'Shutdown': 4, 'is': 3, 'boolean': 2, 'public': 0}
{'}\n': 251, ';': 44, 'mn': 48, '': 221, 'Width': 111, 'Center': 152, 'View': 151, 'NUM': 75, '_': 74, '/': 121, ')': 8, 'Ring': 110, '(': 4, '-': 107, '=': 82, '.': 16, '{': 9, 'void': 1, 'private': 0}
{'}\n': 65, '}': 64, ';': 48, ')': 28, 'date': 14, '(': 40, '.': 58, 'Format': 33, 'return': 55, '{': 29, 'synchronized': 49, 'Zone': 27, 'time': 26, ',': 15, 'locale': 22, 'format': 18, 'Date': 32, 'get': 37, '=': 36, 'Simple': 31, '': 12, 'String': 17, 'static': 1, 'public': 0}
{'}\n': 16, ';': 15, 'algorithm': 7, '=': 13, '.': 11, 'this': 10, '{': 9, ')': 8, 'String': 6, '': 1, '(': 4, 'protected': 0}
{'}\n': 471, ';': 24, ')': 5, '(': 4, 'add': 58, 'NUM': 253, '_': 252, 'Weight': 459, 'Resize': 458, 'set': 263, '.': 57, 'Location': 441, 'Divider': 440, 'Minimum': 447, 'get': 446, 'BOOL': 415, 'Expandable': 430, 'Touch': 429, 'One': 428, ',': 228, 'Panel': 11, 'top': 10, 'SPLIT': 412, 'VERTICAL_': 411, '': 8, 'Pane': 397, 'JSplit': 396, 'new': 13, '=': 12, 'final': 7, 'JPanel': 9, 'SOUTH': 234, 'Layout': 20, 'Border': 19, 'button': 240, 'Button': 303, 'm_save': 302, 'Empty': 268, 'Grid': 249, 'Top': 29, 'inner': 28, '{': 6, 'Gui': 3, 'create': 2, 'void': 1, 'private': 0}
{'}\n': 51, ';': 49, ')': 17, 'Control': 11, '.': 28, '{': 18, '': 9, 'final': 5}
{'}\n': 68, ';': 67, ')': 30, 'Length': 18, 'content': 17, '.': 52, '(': 20, '{': 31, '': 4, 'public': 0}
{'}\n': 145, ';': 143, ')': 84, 'response': 72, '(': 4, 'add': 126, '.': 125, '{': 85, 'Response': 3, '': 5, 'void': 1}
{'}\n': 171, '}': 169, ';': 168, ')': 8, '(': 4, 'Info': 141, '.': 136, 'api': 109, 'stream': 52, '{': 9, '': 42, 'if': 10, 'void': 2, 'synchronized': 1}
{'}\n': 132, '_': 30, 'STR': 119, '{': 10, ')': 9, 'DEBUG': 108, '': 6, '(': 5, ';': 24, 'remove': 1, '.': 17, 'm': 15, 'index': 13, 'Bucket': 69, 'if': 25, 'NUM': 31, 'view': 8, 'Child': 20, 'Of': 19, 'Callback': 16, '=': 14, 'int': 12, 'View': 2}
{'}\n': 83, ';': 30, ')': 6, '(': 3, 'i': 48, '.': 64, '{': 62, '<': 54, 'NUM': 42, '_': 41, '=': 49, 'int': 47, 'for': 45, '': 1}
{'}\n': 117, ';': 23, ')': 8, 'TAG': 21, '': 4, ',': 19, 'ns': 18, '(': 3, 'Tag': 16, 'end': 108, '.': 14, 'serializer': 7, 'get': 63, 'ATTR': 31, 'start': 15, '{': 12, 'IOException': 11, 'throws': 9, 'Serializer': 6, 'KXml': 5, 'serialize': 2, 'void': 1}
{'}\n': 21, ';': 20, 'Info': 4, 'resolve': 9, '.': 14, '{': 12, ')': 11, '': 1, '(': 5, 'public': 0}
{'}\n': 56, '}': 39, '{': 8, ')': 7, 'e': 44, '': 4, '(': 3, 'catch': 40, ';': 38, '.': 30, 't': 6, 'void': 1, 'public': 0}
{'}\n': 163, ';': 41, ')': 40, '-': 158, 'length': 53, '.': 52, 'bytes': 51, 'i': 44, '(': 24, '': 114, 'NUM': 36, '_': 35, '[': 63, ']': 65, '{': 58, '<': 50, '=': 18, 'for': 42, 'String': 4}
{'}\n': 62, ';': 30, 'BOOL': 40, '_': 39, 'return': 38, ')': 14, '(': 9, '.': 25, 'packet': 20, '}': 42, '{': 15, 'null': 35, '==': 34, 'if': 31, 'First': 27, 'poll': 26, 'Queue': 24, 'Msg': 23, 'send': 22, '=': 21, 'Packet': 19, 'Server': 18, '': 1, 'data': 13, 'Buffer': 12, 'Byte': 11, 'Data': 8, 'write': 7, 'boolean': 6, 'final': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 434, ';': 38, 'BOOL': 427, '_': 84, 'return': 430, ')': 7, '(': 3, 'To': 423, 'Need': 422, 'set': 421, ',': 309, '=': 389, '.': 81, '{': 8, '}': 88, 'NUM': 308, 'y': 221, 'point1': 192, 'x': 215, 'if': 9, 'proj': 6, 'STR': 85, 'fine': 82, 'logger': 80, 'DEBUG': 77, '': 4, 'Projection': 5, 'boolean': 1}
{'}\n': 121, ';': 36, '_': 77, 'return': 60, '}': 99, '{': 14, ')': 13, ']': 56, 'i': 33, '[': 54, '(': 6, 'equals': 50, '.': 49, 'object': 9, 'if': 15, '=': 34, 'int': 32, 'for': 30, 'Object': 8, '': 7}
{'}\n': 29, ';': 25, 'this': 27, 'return': 26, ')': 15, ',': 12, 'offset': 11, '(': 9, 'insert': 8, '.': 2, 'internal': 17, '{': 16, 'int': 10, 'Buffer': 7, 'String': 6, '': 5, 'lang': 3, 'java': 1, 'public': 0}
{'}\n': 59, ';': 40, '.': 50, ')': 19, '(': 4, ',': 8, '=': 29, '': 5, 'Destination': 3, 'void': 1}
{'}\n': 59, ';': 57, ')': 12, 'event': 11, '(': 7, '.': 17, 'Event': 6, 'Type': 19, 'get': 18, 'Project': 24, '{': 13, '': 8}
{')': 10, 'Click': 5, 'Mouse': 4, 'on': 3, 'protected': 0}
{'}\n': 1006, '}': 152, ';': 151, ')': 53, 'int': 245, '(': 42, '=': 359, 'Height': 513, 'm': 86, '{': 128, 'Events': 239, 'Allday': 89, '/': 561, 'max': 246, 'Day': 238, 'HEIGHT': 257, 'EVENT_': 441, 'ALLDAY_': 440, 'UNEXPANDED_': 439, 'MIN_': 260, '': 254, '*': 436, 'Max': 87, '.': 362, 'Math': 361, 'HOURS_': 261, '-': 253, 'HEADER_': 256, 'DAY_': 255, 'All': 237, 'if': 195, 'Count': 91, 'Event': 90, 'Unexpanded': 88, 'void': 1}
{'}\n': 541, ';': 454, ')': 151, '(': 146, '.': 437, '': 50, 'null': 283, '==': 282, 'if': 228, '{': 152, 'ranges': 92, '>': 59, 'Range': 57, 'Affinity': 56, 'File': 55, 'Igfs': 54, '<': 52}
{'}\n': 59, ';': 16, 'BOOL': 52, '_': 22, 'return': 50, '}': 54, ')': 6, 'NUM': 23, 'i': 9, '(': 5, 'At': 41, 'Element': 40, 'get': 11, '.': 32, 'model': 31, 'Item': 35, 'Selected': 12, 'set': 33, '{': 7, '&&': 24, '-': 21, '!=': 20, 'if': 17, 'Index': 13, '=': 10, 'int': 8, 'Notification': 4, 'show': 2, 'boolean': 1, 'public': 0}
{'}\n': 43, ';': 42, ')': 12, '(': 7, 'Int': 37, 'write': 5, '.': 35, 'out': 11, '{': 16, 'IOException': 15, '': 1, 'throws': 13, 'Output': 10, 'Object': 9, 'External': 6, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 70, ';': 51, ')': 10, 'Node': 9, 'input': 8, '(': 5, 'Id': 24, 'get': 40, '.': 31, '}': 52, 'node': 48, '+': 36, 'STR': 35, '_': 34, 'warning': 32, 'log': 30, '{': 11, 'if': 12, 'BNode': 7, '': 6, 'Input': 3, 'add': 2, 'void': 1}
{'}\n': 197, '}': 93, ';': 64, ')': 10, '(': 4, 'SQLState': 132, 'get': 123, '.': 105, ',': 17, 'Code': 125, 'Error': 124, 'Exception': 16, 'Connect': 20, 'Couldnt': 13, '': 6, 'new': 113, 'throw': 112, 'log': 106, 'Functions': 104, 'CUtility': 103, '{': 25, 'SQLException': 98, 'final': 5, 'catch': 94, 'configuration': 9, 'try': 65, 'Driver': 15, 'check': 26, 'Load': 14, 'throws': 11, 'Configuration': 8, 'CDatabase': 7, 'static': 1, 'public': 0}
{'}\n': 535, ';': 62, 'return': 532, '}': 84, 'break': 510, ')': 15, ']': 66, 'NUM': 284, '_': 109, '[': 65, 'groups': 277, '(': 10, 'add': 407, '.': 72, ':': 298, 'case': 326, '{': 22, 'index': 303, 'switch': 321, ',': 76, 'regex': 192, 'line': 297, 'match': 305, '=': 35, 'int': 302, 'lines': 180, 'String': 30, '': 1, 'for': 293, 'new': 52, 'STR': 110, 'get': 129, 'Properties': 127, 'MDSDialog': 126, 'buf': 89, 'Lines': 183, 'prompts': 67, 'Timeout': 169, 'default': 168, 'For': 164, 'Wait': 163, 'send': 162, 'to': 139, 'Id': 14, 'vsan': 13, 'cmd': 100, 'Builder': 88, 'THAN': 83, 'GREATER_': 82, 'SSHPrompt': 64, 'POUND': 75, '>': 6, '<': 3, 'Exception': 21, 'Controller': 20, 'Device': 19, 'Network': 18, 'throws': 16, 'Integer': 12, 'show': 7, 'public': 0}
{'}\n': 227, '.': 66, ';': 39, ')': 18, '(': 13, 'Buffer': 158, 'STR': 53, '_': 52, '}': 123, 'token': 76, '=': 28, 'if': 93, 'null': 90, 'Token': 81, 'next': 80, 'st': 43, 'String': 41, '': 5, '{': 73, 'Tokens': 69, 'More': 68, 'has': 67, 'while': 63, ',': 51, 'Tokenizer': 42, 'new': 29, 'static': 1, 'public': 0}
{'}\n': 298, ';': 42, ')': 27, 'm': 29, '(': 34, '.': 20, 'NUM': 242, '_': 133, '=': 80, 'Scroll': 110, 'Fast': 109, '}': 104, '/': 269, '{': 74, '++': 250, 'num': 226, 'int': 7, 'Item': 218, '': 16, 'Section': 111, 'section': 123, 'State': 100, 'if': 65, 'Apps': 18, ',': 15, 'void': 1, 'private': 0}
{'}\n': 31, ';': 30, ')': 7, '(': 6, 'properties': 12, '{': 11, 'Exception': 10, '': 9, 'throws': 8, 'void': 1}
{'}\n': 297, '}': 165, ';': 61, ')': 27, 'e': 170, '(': 4, 'String': 6, 'Error': 188, 'get': 80, 'Exception': 219, 'AMConsole': 218, '': 5, 'new': 216, 'throw': 215, ',': 9, 'STR': 68, '_': 67, 'warning': 207, '.': 79, 'debug': 205, 'Ex': 178, 'params': 43, 'Event': 156, 'log': 155, 'Id': 8, 'universal': 7, '{': 38, '=': 44, ']': 42, '[': 41, 'Repo': 234, 'catch': 166, 'SSOException': 169, 'SSOToken': 85, 'User': 84, 'Identity': 81, 'Utils': 78, 'amid': 74, 'AMIdentity': 73, 'service': 12, 'void': 1, 'public': 0}
{'}\n': 274, '}': 125, ';': 39, ')': 23, '(': 9, 'zero': 178, '.': 32, 'Address': 3, '': 2, 'return': 113, 'unexpected': 237, 'Exception': 162, 'record': 161, 'env': 12, 'err': 254, 'System': 252, 'Trace': 249, 'Stack': 248, 'print': 247, 'JNI': 28, 'trace': 27, 'if': 25, '{': 24, 'Throwable': 236, 'catch': 233, 'Buffer': 131, 'copy': 130, 'BOOL': 110, '_': 36, ',': 13, 'Copy': 21, 'is': 20, 'Star': 103, 'Bool': 102, 'set': 101, 'Helpers': 99, 'JNIGeneric': 98, 'IN_': 144, 'BYTES_': 143, 'LOG_': 142, '<<': 140, 'size': 75, 'Array': 7, 'source': 57, 'As': 118, 'object': 117, 'Magic': 115, 'memcopy': 186, 'Memory': 85, 'Error': 169, 'Of': 167, 'Out': 166, 'new': 164, 'Zero': 154, 'Malloc': 137, 'sys': 33, 'Call': 134, '=': 59, 'else': 126, 'Move': 90, 'Never': 89, 'will': 88, 'Manager': 86, 'length': 80, 'int': 14, 'JREF': 16, 'array': 15, 'JNIRef': 68, 'get': 67, ']': 56, '[': 55, 'try': 52, 'GC': 48, 'To': 47, 'Down': 46, 'JNICount': 45, 'check': 44, 'Entrypoints': 42, 'Runtime': 41, 'STR': 37, 'Write': 34, 'VM': 31, 'JNIEnvironment': 11, 'Elements': 8, 'Get': 5, 'static': 1, 'private': 0}
{'}\n': 458, ';': 257, 'return': 201, '}': 258, 'NUM': 244, '_': 243, '(': 161, '.': 186, 'text': 185, '{': 170, ')': 169, 'position': 175, 'if': 171, 'else': 259, '+': 242, ',': 240, 'Char': 151, 'Next': 129, '': 109, 'public': 3}
{'}\n': 160, '}': 95, ';': 34, ')': 5, 'transfer': 57, '(': 4, 'add': 153, '.': 62, 'Transfers': 3, 'Available': 15, 'm': 14, 'US': 146, 'TIMEOUT_': 145, '': 7, ',': 84, 'STR': 83, '_': 40, 'this': 138, 'Processor': 136, 'Buffer': 99, 'buffer': 100, 'ENDPOINT': 130, 'USB_': 129, 'Handle': 126, 'Device': 125, 'Transfer': 28, 'Bulk': 119, 'fill': 118, 'Usb': 9, 'Lib': 8, 'Size': 111, 'Direct': 107, 'allocate': 106, 'Byte': 98, '=': 24, 'final': 96, 'MEM': 92, 'NO_': 91, 'ERROR_': 90, 'Exception': 10, 'new': 25, 'throw': 75, '{': 11, 'null': 18, '==': 17, 'if': 12, 'alloc': 63, '++': 52, 'x': 38, 'SIZE': 49, 'POOL_': 48, 'BUFFER_': 47, 'TRANSFER_': 46, '<': 30, 'NUM': 41, 'int': 37, 'for': 35, '>': 31, 'Queue': 29, 'Linked': 27, 'throws': 6, 'prepare': 2, 'void': 1, 'private': 0}
{'}\n': 174, '}': 42, ';': 41, ')': 15, 'right': 121, '_': 87, '+': 153, 'left': 33, '(': 32, 'if': 96, 'return': 40, '{': 16, '.': 23, '': 8, 'private': 0}
{'}\n': 156, ';': 72, ')': 35, '(': 69, 'Id': 89, '.': 65, '': 1, '=': 54, ',': 21, 'boolean': 32}
{'}\n': 22, ';': 21, ')': 6, '(': 5, '.': 9, '{': 7, 'remove': 2, 'void': 1}
{'}\n': 21, ';': 17, 'this': 19, 'return': 18, ')': 7, 'STR': 15, '_': 14, '(': 6, 'add': 12, '.': 11, 'Fields': 10, 'delete': 3, '{': 8, 'Name': 5, 'Builder': 2, '': 1, 'public': 0}
{'}\n': 135, '}': 133, ';': 34, ')': 21, 'NUM': 33, '_': 32, '.': 117, '(': 6, '': 14, '++': 91, 'j': 78, '<': 36, '=': 31, 'int': 29, 'for': 27, '{': 26, 'i': 30, 'void': 1, 'private': 0}
{'}\n': 36, ';': 34, ')': 11, '(': 5, 'lifecycle': 21, '{': 12, 'void': 1, 'public': 0}
{'}\n': 106, '}': 67, ';': 21, ')': 6, 'e': 72, ',': 30, 'msg': 77, '(': 3, 'Exception': 71, 'App': 97, 'Net': 96, '': 8, 'new': 13, 'throw': 93, 'error': 86, '.': 23, 'log': 84, '+': 81, 'STR': 19, '_': 18, '=': 12, 'String': 35, '{': 7, 'catch': 68, 'return': 63, 'elem': 11, 'Elem': 58, 'invoke': 57, 'server': 55, 'try': 53, 'Child': 26, 'New': 25, 'add': 24, 'force': 5, 'to': 34, 'Boolean': 32, 'Element': 10, 'Na': 9, 'boolean': 4}
{'}\n': 294, ';': 293, 'BOOL': 292, '_': 291, 'return': 290, '{': 269, ')': 268, '(': 263, 'State': 231, 'Store': 62, 'Auto': 50, 'boolean': 1}
{'}\n': 30, ';': 29, 'bytes': 28, 'return': 27, '{': 10, ')': 9, 'Bytes': 4}
{'}\n': 143, ';': 60, ')': 33, '(': 28, 'Time': 90, 'get': 56, '.': 55, 'cal': 51, 'format': 85, 'Format': 63, 'Date': 62, 'Simple': 69, '': 8, 'new': 67, '=': 52, 'Instance': 57, 'Calendar': 50, '{': 34, 'String': 9}
{';\n': 20, 'IOException': 19, '': 12, 'throws': 17, ')': 16, 'Stream': 14, ',': 11, '(': 6, 'abstract': 1, 'protected': 0}
{'}\n': 133, ';': 61, 'stmt': 62, 'return': 130, ')': 60, 'STR': 67, '_': 66, ',': 12, '': 1, '.': 26, 'Mode': 121, 'Print': 120, 'Values': 117, '(': 7, 'Spec': 110, 'Column': 109, 'print': 108, 'append': 64, 'get': 76, 'Name': 16, 'Object': 78, 'Database': 77, 'conn': 74, 'Change': 40, 'Row': 39, 'String': 2, 'Buffer': 3, 'private': 0}
{'}\n': 31, ';': 30, ')': 10, 'STR': 19, '_': 18, '(': 6, 'With': 16, 'ends': 15, '.': 14, '||': 21, 'return': 12, '{': 11, 'String': 8, '': 7, 'boolean': 2}
{'}\n': 36, ';': 35, ')': 14, 'h': 13, '(': 9, '.': 19, 'Handlers': 18, 'Channel': 17, 'connected': 16, '{': 15, 'Handler': 5, 'OFChannel': 4, '': 10, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 85, ';': 52, ')': 27, 'BOOL': 67, '_': 37, '(': 11, '.': 31, '=': 49}
{'}\n': 19, ';': 18, ')': 9, 'arg': 8, '(': 5, 'add': 2, '.': 13, '{': 10, '': 6, 'void': 1, 'public': 0}
{'}\n': 404, '}': 296, ';': 90, ')': 72, ',': 52, '(': 7, '.': 106, 'i': 363, '{': 268, '!=': 165, 'length': 126, '_': 166, 'NUM': 167, 'eoln': 59, 'null': 211, 'if': 207, '=': 77, '': 30, 'String': 40, 'charset': 41}
{'}\n': 27, ';': 16, ')': 9, '(': 4, 'length': 23, '.': 12, 'namespace': 8, '=': 14, '{': 10, '': 6, 'public': 0}
{'}\n': 167, ';': 38, 'mat': 42, 'return': 164, 'NUM': 50, '_': 49, '=': 31, ']': 3, 'n': 30, '[': 2, '}': 155, ')': 27, ',': 17, 'dist': 54, '(': 8, 'SVValue': 148, 'Theoretical': 147, 'get': 95, 'i': 62, 'y': 129, '.': 34, '-': 101, 'NNPoints': 26, '': 4, 'pow': 90, 'Math': 78, 'abs': 85, '+': 48, 'x': 100, 'sqrt': 80, '{': 28, '++': 72, '<': 20, 'int': 29, 'for': 59, 'double': 1, 'new': 44, 'size': 35, '>': 24, 'Point': 23, 'Kriging': 22, 'List': 19, 'Variogram': 10, 'Coef': 7, 'Calc': 5, 'private': 0}
{'}\n': 139, '}': 61, ';': 19, ')': 10, 'in': 16, '(': 5, 'close': 54, '.': 46, '': 2, '{': 11, 'finally': 128, 'e': 69, ',': 80, 'STR': 79, '_': 78, 'Exception': 68, 'Runtime': 75, 'new': 24, 'throw': 72, 'IOException': 111, 'catch': 62, 'Found': 67, 'Not': 66, 'Class': 88, 'File': 32, 'o': 43, 'return': 58, 'Object': 3, 'read': 47, '=': 17, 'Path': 9, 'file': 8, 'Stream': 15, 'Input': 14, 'try': 20, 'null': 18, 'String': 7, 'deserialization': 4, 'static': 1, 'public': 0}
{'}\n': 147, ';': 42, ')': 8, 'STR': 88, '_': 87, '+': 89, '/': 100, 'Sec': 99, 'Per': 98, 'Insts': 97, 'm_av': 96, 'Count': 91, 'm_instance': 90, '=': 48, '(': 4, 'Millis': 26, 'Time': 25, 'current': 24, '.': 23, 'System': 22, '': 5, '{': 9, 'log': 7, 'Logger': 6, 'public': 0}
{'}\n': 30, ';': 29, ')': 9, '(': 4, '.': 14, 'Matchers': 13, 'include': 12, '{': 10, 'Path': 7, '': 6, 'final': 5, 'public': 0}
{'}\n': 89, ';': 88, ')': 55, 'null': 72, '(': 42, 'generate': 9, '{': 56, 'num': 51, 'int': 43, 'Units': 10, '>': 8, 'Summary': 7, 'Mech': 6, '': 1, '<': 4, 'List': 3, 'Array': 2, 'public': 0}
{'}\n': 30, ';': 29, ')': 13, 'a2': 12, ',': 9, 'a1': 8, '(': 5, 'List': 22, 'as': 21, '.': 20, 'Arrays': 19, '': 2, 'return': 15, '{': 14, 'Automaton': 3}
{'}\n': 74, '}': 72, ';': 20, ')': 10, '(': 4, '{': 11, 'if': 59, 'Selection': 49, 'get': 29, '.': 28, 'Model': 27, '=': 25, '': 5, 'e': 9, 'Event': 8, 'List': 6, 'Changed': 3, 'void': 1, 'public': 0}
{'}\n': 820, ';': 335, 'Data': 357, 'new': 79, '}': 615, ')': 72, '(': 51, 'num': 239, 'Int': 559, 'next': 558, '.': 358, '{': 471, 'Instances': 34, '<': 458, ',': 84, '': 33, '=': 78}
{'}\n': 109, ';': 49, ']': 33, 'length': 54, '.': 53, '[': 31, 'splits': 52, ')': 14, '_': 73, '(': 43, '{': 15, '=': 38, '': 16}
{'}\n': 75, ';': 36, ')': 10, '(': 4, 'Chronology': 70, 'get': 63, '.': 31, 'Instant': 22, 'i': 21, 'Field': 40, 'type': 42, '=': 23, 'Object': 3, 'read': 2, 'oos': 9, 'Type': 41, 'Time': 39, 'Date': 27, '': 5, 'Local': 26, '{': 20, 'Exception': 19, 'Found': 18, 'Not': 17, 'Class': 16, ',': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'void': 1, 'private': 0}
{'}\n': 112, ';': 36, 'return': 108, '.': 42, '(': 19, 'if': 18, '_': 61, 'user': 14, '}': 37, '{': 32, ')': 31, 'String': 13, '': 12, 'User': 4, 'private': 0}
{'}\n': 18, ';': 17, ')': 5, '(': 4, 'Byte': 14, 'read': 2, '.': 12, 'dis': 11, 'return': 10, '{': 9, 'IOException': 8, '': 7, 'throws': 6, 'public': 0}
{'}\n': 99, ';': 55, 'return': 96, ')': 25, 'length': 24, ',': 65, 'NUM': 91, '_': 90, '(': 7, '.': 57, ']': 4, '[': 3, 'byte': 2, 'new': 43, '=': 42, '': 27, '{': 37, 'int': 23}
{'}\n': 22, ';': 21, ')': 9, 'emote': 8, '(': 5, '.': 14, 'Emotes': 13, 'ignored': 12, '{': 10, '': 6, 'public': 0}
{'}\n': 20, ';': 19, ')': 9, 'name': 8, '(': 5, 'contains': 15, '.': 14, 'Allowed': 4, 'return': 11, '{': 10, 'Name': 7, '': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 190, ';': 188, 'root': 71, 'return': 95, '{': 86, ')': 85, '(': 81, 'String': 14, '': 13, 'public': 8}
{'}\n': 136, ';': 19, ')': 9, '(': 8, 'signum': 131, '.': 67, 'Number': 42, 'a': 12, ',': 51, 'NUM': 25, '_': 24, 'STR': 123, 'Equals': 120, 'assert': 102, '}': 18, ']': 15, 'i': 86, '[': 14, 'Bytes': 5, 'r': 28, '==': 110, 'res': 57, 'True': 103, '{': 10, '++': 99, 'length': 68, '<': 92, '=': 16, 'int': 20, 'for': 83, 'Array': 79, 'Byte': 78, 'to': 77, 'byte': 11, 'new': 44, 'Sign': 4, 'Integer': 40, 'Big': 39, '': 38, 'Zero': 6, 'Constructor': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 21, ',': 13, '(': 3, 'return': 26, '{': 25, '': 4, 'Address': 17, 'Socket': 16, 'Inet': 15, 'int': 1}
{'}\n': 120, ';': 119, ')': 11, '(': 95, '.': 38, 'Input': 60, 'Transcoder': 59, '': 4, 'new': 57, '=': 56, 'input': 55, '{': 19}
{'}\n': 29, ';': 28, ')': 9, '(': 8, 'Document': 5, '.': 22, 'return': 11, '{': 10, '': 4, 'public': 3}
{'}\n': 54, ';': 49, 'NUM': 7, '_': 6, 'return': 50, 'Core': 30, 'sas': 29, '(': 3, 'Good': 39, 'Sas': 24, 'check': 14, '{': 35, ')': 20, 'int': 22, ',': 8, 'Set': 25, '__sce': 23, 'public': 21, 'BOOL': 19, '=': 5, 'Interrupt': 16, 'Inside': 15, 'version': 9, 'nid': 4, 'HLEFunction': 2, '': 1, '@': 0}
{'}\n': 157, '}': 124, ';': 33, ')': 16, '(': 10, 'Message': 136, 'get': 29, '.': 94, 'e': 130, ',': 50, 'STR': 146, '_': 145, 'ERROR': 143, 'TYPE_': 142, '': 11, 'CCAlert': 139, 'Alert': 135, 'Inline': 134, 'set': 42, '{': 22, 'Exception': 21, 'AMConsole': 128, 'catch': 125, 'Context': 119, 'Request': 4, 'To': 115, 'forward': 114, 'vb': 68, 'Map': 26, 'Session': 44, 'Pg': 105, 'pass': 104, 'Trail': 100, 'Page': 43, 'unlock': 98, 'class': 95, 'Bean': 67, 'View': 66, 'List': 6, 'Handler': 5, 'SOAPBinding': 61, 'SCSAML2': 60, '=': 28, 'values': 27, 'Hash': 53, 'ATTRIBUTE': 49, 'PROPERTY_': 48, 'Attribute': 45, 'Profile': 37, 'Save': 36, 'Before': 35, 'on': 34, 'Values': 30, 'try': 23, 'Control': 20, 'Model': 19, 'throws': 17, 'event': 15, 'Event': 14, 'Invocation': 13, 'Tbl': 3, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 71, ';': 44, ')': 28, 'int': 19, '(': 6, ',': 9, 'y': 11, 'x': 8, 'Line': 48, 'draw': 3, '.': 46, 'gx': 45, 'size': 20, 'double': 7, 'void': 2, 'static': 1}
{'}\n': 274, ';': 45, ')': 31, '(': 43, '.': 91, '=': 68, 'int': 211, ',': 207, 'Object': 200, 'write': 199, 'Serializer': 197, 'Data': 64, '': 11, 'size': 187, 'Size': 183, '{': 100, 'do': 99, 'Stream': 66, 'Output': 65, 'Heap': 63}
{'}\n': 190, ';': 31, ')': 29, '(': 28, '}': 160, '++': 163, 'Index': 61, 'column': 52, 'add': 135, '.': 26, '{': 14, '!': 119, 'if': 117, 'Column': 69, ':': 73, 'Data': 71, 'Meta': 70, '': 68, 'for': 66, 'NUM': 64, '_': 63, '=': 20, 'int': 51, 'Names': 40}
{'}\n': 127, ';': 36, ')': 13, '(': 5, 'Class': 24, 'get': 32, '.': 31, 'instance': 8, '+': 113, 'STR': 112, '_': 82, 'name': 12, 'Exception': 19, 'Field': 2, 'Such': 17, 'No': 16, '': 1, 'new': 104, 'throw': 103, '}': 86, '{': 20, 'e': 98, 'catch': 91, 'field': 55, 'return': 87, 'BOOL': 83, 'Accessible': 72, 'set': 79, 'is': 71, '!': 68, 'if': 66, 'Declared': 60, 'clazz': 28, '=': 29, 'try': 51, 'Superclass': 46, 'null': 39, '!=': 38, '>': 27, '?': 26, '<': 25, 'for': 21, 'throws': 14, 'String': 11, ',': 9, 'Object': 7, 'find': 3, 'static': 0}
{'}\n': 16, ';': 15, ')': 6, '(': 5, '{': 7, 'void': 1}
{'}\n': 164, ';': 39, 'Prec': 35, 'reduced': 34, 'return': 160, '}': 107, ')': 31, 'NUM': 104, '_': 37, '(': 6, 'Year': 82, 'Of': 81, 'Day': 99, 'append': 60, '.': 43, 'bld': 12, 'STR': 145, 'Literal': 142, '{': 32, 'day': 80, 'Type': 21, 'Field': 20, 'Time': 9, 'Date': 8, '': 7, 'remove': 44, 'fields': 23, 'if': 40, 'else': 108, 'BOOL': 38, '=': 36, 'extended': 26, ',': 13, 'Separator': 89, 'year': 52, 'boolean': 2, 'ISO': 30, 'strict': 29, '>': 22, '<': 16, 'Collection': 15, 'Builder': 11, 'Formatter': 10, 'Ordinal': 5, 'By': 4, 'date': 3, 'static': 1, 'private': 0}
{'}\n': 28, ';': 27, ')': 12, '_': 24, 'val': 11, ',': 21, '(': 4, '{': 16, 'String': 6, '': 5, 'private': 0}
{'}\n': 66, ';': 60, 'return': 62, ')': 31, '(': 13, '.': 37, 'Ends': 50, 'sequence': 35, 'Number': 44, 'page': 43, 'Starts': 36, '{': 32, 'int': 14, 'Range': 5, 'Page': 3, 'public': 0}
{'}\n': 91, ';': 56, 'list': 46, 'return': 88, ')': 38, '(': 28, 'add': 77, '.': 76, '>': 24, '<': 31, 'List': 27, 'Array': 50, '': 11, 'new': 48, '=': 47, '{': 39, 'collection': 37, 'Object': 17, 'Item': 16, 'Dimensional': 15, 'Collection': 30, 'as': 25, 'static': 9, 'public': 8}
{'}\n': 24, ';': 23, ')': 12, '(': 7, 'bytes': 19, '.': 18, 'source': 11, 'aliases': 6, 'return': 14, '{': 13, 'Builder': 10, 'XContent': 9, '': 1, 'Request': 5, 'Index': 3, 'public': 0}
{'}\n': 106, ';': 86, ')': 29, ',': 8, 'Number': 12, 'Name': 22, 'Table': 3, 'linked': 20, 'Db': 21, '(': 4, '.': 41, '{': 33, 'String': 6, '': 5, 'type': 16, 'Short': 15}
{'}\n': 545, ';': 108, 'return': 537, ')': 69, 'NUM': 192, '_': 105, ',': 10, '(': 5, 'String': 3, '': 2, '.': 152, '}': 109, '{': 97, 'length': 274, ']': 8, '=': 263, 'byte': 26, 'STR': 106, 'Exception': 103, 'Argument': 102, 'Illegal': 101, 'new': 99, 'throw': 98, '>': 194, 'if': 71, '!=': 159, 'salt': 112, '==': 120, 'int': 50, '[': 7, 'static': 1, 'public': 0}
{'}\n': 49, ';': 30, ')': 13, '(': 4, '.': 35, 'Listeners': 18, 'my': 17, '{': 14, 'null': 20, 'if': 15, 'listener': 12, 'Listener': 3, 'Configuration': 10, '': 6, 'Null': 8, 'Not': 7, '@': 5, 'void': 1, 'public': 0}
{'}\n': 13, '{': 7, ')': 6, '(': 5, 'Open': 4, 'Window': 3, 'do': 2, 'void': 1, 'public': 0}
{'}\n': 57, ';': 20, ')': 12, 'Wake': 30, 'is': 15, ',': 7, 'Queue': 23, 'Priority': 16, 'EXPIRE': 45, 'MAX_': 44, '': 4, 'loader': 11, 'task': 6, '(': 3, 'Impl': 37, 'schedule': 36, 'return': 35, 'BOOL': 19, '_': 18, '=': 17, 'boolean': 1, '{': 13, 'Loader': 10, 'Class': 9, 'Runnable': 5, 'public': 0}
{'}\n': 51, ';': 50, ')': 15, 'y': 14, '(': 4, 'Code': 32, 'Hash': 31, 'identity': 30, '.': 29, 'System': 28, '': 8, '*': 26, 'NUM': 19, '_': 18, '+': 23, 'x': 10, 'hash': 6, '|': 20, 'return': 17, '{': 16, 'Object': 9, ',': 7, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 104, ';': 30, 'return': 101, ')': 13, '(': 8, '.': 41, '': 85, '=': 66, 'double': 2, '{': 14, 'NUM': 51, '_': 27, 'length': 42, 'vector': 22, 'static': 1, 'public': 0}
{'}\n': 163, ';': 113, 'a': 22, '(': 13, '.': 47, ')': 33, '': 3, '>': 5, 'T': 4, '<': 2, '{': 34, 'b': 32, ',': 23, 'static': 1}
{'}\n': 365, ';': 341, '}': 342, '_': 336, '{': 217, ')': 215, '(': 33, '.': 277, '': 37, ',': 162, 'Port': 24}
{'}\n': 97, 'return': 32, ';': 38, ')': 7, '(': 6, '{': 8, 'Exception': 69, 'Location': 68, 'Bad': 67, '': 66, 'catch': 64, '}': 39, 'segment': 57, ',': 49, 'Text': 45, 'get': 26, '.': 25, 'try': 40, 'Length': 27, '>=': 23, 'if': 13, 'public': 3}
{'}\n': 128, '}': 114, ';': 18, ')': 9, '(': 5, 'set': 117, '.': 22, 'Size': 107, 'Preferred': 106, 'get': 23, 'comp': 69, ',': 83, 'max': 98, 'Math': 96, '': 6, '=': 15, 'column': 84, 'row': 82, 'Renderer': 74, 'Cell': 79, 'table': 8, 'prepare': 73, 'Component': 68, '{': 10, '++': 30, 'Count': 25, '<': 20, 'NUM': 17, '_': 16, 'int': 13, 'for': 11, 'JTable': 7, 'adjust': 2, 'void': 1, 'private': 0}
{'}\n': 121, ';': 50, 'return': 117, '}': 116, ')': 29, '(': 48, 'volume': 108, 'add': 106, '.': 61, '{': 30, ',': 20, 'class': 68, 'Volume': 55, '': 1, 'query': 62, 'Client': 60, 'db': 59, '=': 39, '>': 6, '<': 3, 'List': 2, 'Array': 42, 'new': 40, 'public': 0}
{'}\n': 201, ';': 43, 'return': 182, '}': 180, 'i': 47, '{': 75, ')': 30, '(': 7, '.': 38, '': 17, 'if': 76, 'len': 62, '<': 61, '=': 35, 'int': 46, 'for': 44}
{'}\n': 124, ';': 19, ')': 7, 'BOOL': 70, '_': 16, '(': 6, 'Enabled': 67, 'set': 24, '.': 23, 'Button': 83, 'Down': 112, 'index': 20, 'Columns': 46, 'selected': 45, '{': 8, 'Index': 3, 'void': 1, 'private': 0}
{'}\n': 201, ';': 34, ')': 21, '(': 6, '.': 36, '': 1, 'STR': 96, '_': 42, ',': 173, '+': 104, 's': 118, 'String': 99, 'bb': 54, 'get': 56, '=': 27, '{': 22}
{'}\n': 63, ';': 26, ')': 8, '(': 7, 'Message': 50, 'get': 49, '.': 20, 'e': 34, '+': 46, 'STR': 45, '_': 23, 'Log': 38, 'write': 41, 'Writer': 39, '': 18, '{': 9, 'Exception': 33, 'Interrupted': 32, 'final': 30, 'catch': 28, '}': 27, 'NUM': 24, 'sleep': 21, 'Thread': 19, 'try': 16, 'is': 12, 'while': 10, 'void': 1, 'public': 0}
{'}\n': 236, ';': 41, 'content': 11, 'return': 233, ')': 12, '(': 20, '.': 17, '': 2, ',': 23, '_': 21, '=': 15, 'STR': 22, 'replace': 18, '{': 13, 'String': 3, 'private': 0}
{'}\n': 104, ';': 103, ')': 28, '.': 24, '(': 6, '|': 41, 'NUM': 34, '_': 33, 'is': 46, 'return': 19, '{': 18, '': 7, 'int': 2, 'private': 0}
{'}\n': 168, ';': 37, 'return': 164, ')': 36, 'args': 82, '(': 4, '.': 52, 'length': 84, '<': 81, 'i': 75, 'NUM': 63, '_': 62, '=': 26, 'int': 74, 'for': 72, 'null': 42, '==': 41, 'if': 38, '': 16}
{'}\n': 12, ';': 11, 'return': 8, '{': 7, ')': 6, '(': 5, 'Subject': 4, 'public': 0}
{'}\n': 128, ';': 81, 'code': 11, 'return': 125, '}': 124, ')': 8, '(': 7, 'Code': 6, 'hash': 5, '.': 76, 'f': 85, '+=': 94, '{': 9, 'null': 90, '!=': 89, 'if': 83, '=': 12, 'int': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 29, ';': 25, 'this': 27, 'return': 26, ')': 16, 'action': 10, '(': 7, 'add': 5, '.': 20, 'Actions': 19, 'm': 18, '': 1, 'Action': 6, 'public': 0}
{'}\n': 89, '}': 36, ';': 31, '_': 33, 'return': 32, ')': 8, '(': 3, '': 4, 'else': 37, '.': 18, 'if': 14, ',': 50, '=': 43, '{': 13, 'BOOL': 34, 'help': 6}
{'}\n': 11, ';': 10, 'return': 8, '{': 7, ')': 6, '(': 5, 'D': 3, 'Point2': 2, '': 1, 'public': 0}
{'}\n': 61, ';': 41, ')': 13, 'conn': 8, '(': 5, '': 6, '+': 48, 'STR': 47, '_': 46, 'execute': 44, '.': 36, 'stat': 33, 'Statement': 32, 'create': 37, '=': 34, '{': 17, 'SQLException': 16, 'throws': 14, 'Connection': 7, 'void': 2, 'static': 1}
{'}\n': 22, ';': 21, ')': 8, 'category': 7, '(': 4, 'contains': 2, '.': 16, 'return': 10, '{': 9, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 182, ';': 28, 'Source': 7, 'Copy': 6, 'Full': 22, 'is': 3, 'return': 176, '}': 173, 'BOOL': 27, '_': 26, '=': 25, '{': 19, ')': 18, '(': 8, 'Inactive': 159, 'get': 38, '.': 37, 'Volume': 4, 'full': 32, '!': 55, '&&': 53, 'null': 51, '!=': 50, 'if': 44, 'URI': 100, ',': 12, 'class': 135, '': 9, 'Object': 130, 'query': 129, 'Client': 15, 'db': 16, 'next': 115, 'Iter': 76, 'Ids': 34, 'create': 108, 'Next': 94, 'has': 93, 'while': 86, 'iterator': 82, '>': 72, 'String': 30, '<': 69, 'Iterator': 68, 'Empty': 61, 'Copies': 40, 'volume': 11, 'Set': 31, 'boolean': 2, 'Db': 14, 'static': 1, 'public': 0}
{'}\n': 314, ')': 21, 'actual': 119, ',': 11, 'expected': 35, 'message': 10, '(': 7, 'Equals': 6, 'assert': 5, '.': 152, ';': 99, 'NUM': 251, '_': 139, 'STR': 140, '+': 138, '': 8, '{': 22, 'Object': 13, 'String': 9, 'void': 4}
{'}\n': 60, ';': 13, ')': 6, '_': 56, ',': 29, '(': 5, 'get': 26, '.': 9, 'Equals': 21, 'assert': 20, 'quorum': 8, '{': 7, 'Quorum': 3, 'void': 1, 'public': 0}
{'}\n': 133, ';': 36, ')': 15, 'PERMISSIONS': 130, 'REQUEST_': 129, '': 7, ',': 127, 'permissions': 14, '(': 5, 'Permissions': 124, 'request': 2, '.': 61, ']': 13, 'size': 115, 'Request': 26, 'To': 25, '[': 12, 'String': 11, 'new': 28, 'Array': 18, 'to': 104, '=': 27, 'return': 96, 'Empty': 92, 'is': 49, 'if': 47, '}': 68, 'Name': 42, 'permission': 41, 'Granted': 77, 'Pre': 76, 'Permission': 50, 'on': 74, 'Callback': 72, '{': 16, 'else': 69, 'add': 62, 'Declined': 51, ':': 43, 'for': 37, '>': 23, '<': 20, 'List': 19, 'Null': 9, 'Non': 8, '@': 6, 'Explanation': 4, 'After': 3, 'void': 1, 'public': 0}
{'}\n': 38, '}': 19, ';': 18, ')': 7, 'e': 24, ',': 33, 'STR': 32, '_': 31, '(': 4, 'warn': 29, '.': 13, '{': 8, 'Exception': 23, '': 11, 'catch': 20, 'duration': 6, 'sleep': 14, 'Thread': 3, 'try': 9, 'long': 5, 'pause': 2, 'void': 1, 'static': 0}
{'}\n': 48, '}': 19, ';': 18, ')': 8, 'e': 24, ',': 36, '(': 4, 'String': 40, 'to': 39, '.': 13, 'FINE': 35, '': 22, 'Level': 32, 'log': 27, '{': 9, 'IOException': 23, 'catch': 20, 'v': 7, 'println': 3, '_out': 12, 'try': 10, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 31, ';': 30, ')': 29, 'length': 28, ',': 25, 'cbuf': 24, '(': 3, 'read': 2, 'return': 19, '{': 18, 'IOException': 17, '': 16, ']': 7, '[': 6, 'char': 4, 'int': 1, 'public': 0}
{'}\n': 145, ';': 144, ')': 40, 'NUM': 57, '_': 56, '(': 20, '.': 66, '&': 55, 'val': 36, '{': 41, 'public': 0}
{'}\n': 158, '}': 120, ';': 49, '_': 46, 'return': 79, ')': 30, 'unexpected': 125, '(': 9, 'Exception': 33, 'record': 147, '.': 42, 'env': 12, 'err': 142, 'System': 140, '': 3, 'Trace': 137, 'Stack': 136, 'print': 135, 'JNI': 38, 'trace': 37, 'if': 35, '{': 34, 'Throwable': 124, 'catch': 121, 'Obj': 80, 'unwrap': 113, 'Reflection': 111, 'BOOL': 106, ',': 13, 'Reference': 100, 'Type': 99, 'Address': 27, 'arg': 28, 'ID': 24, 'method': 23, 'obj': 15, 'Arg': 88, 'Var': 87, 'With': 86, 'invoke': 85, 'JNIHelpers': 83, '=': 67, 'Object': 65, 'JREF': 16, 'JNIRef': 71, 'get': 70, 'try': 62, 'GC': 58, 'To': 57, 'Down': 56, 'JNICount': 55, 'check': 54, 'Entrypoints': 52, 'Runtime': 51, 'STR': 47, 'Write': 44, 'sys': 43, 'VM': 41, 'throws': 31, 'int': 14, 'class': 19, 'JNIEnvironment': 11, 'V': 8, 'Method': 7, 'Nonvirtual': 5, 'Call': 4, 'static': 1, 'private': 0}
{'}\n': 314, ';': 40, 'return': 310, '}': 164, 'BOOL': 305, '_': 304, '': 6, '.': 266, '(': 5, ')': 25, '=': 32, 'pb': 76, '{': 26, 'Block': 8, 'Program': 7, 'instanceof': 77, 'if': 74, 'else': 165, ',': 10, 'tmp': 31, 'For': 171, ':': 47, 'for': 41, 'String': 12}
{'}\n': 104, ';': 103, 'root': 87, ')': 94, '(': 92, '': 6, 'public': 0}
{'}\n': 212, ';': 97, ')': 114, 'NUM': 29, '_': 28, '(': 99, 'i': 101, ',': 26, '.': 109, '': 142, ']': 18, '[': 17, '{': 9, '++': 113, 'length': 110, '<': 107, '=': 102, 'int': 100, 'for': 98, '-': 27, 'double': 10}
{'}\n': 29, ';': 28, ')': 12, 'get': 23, '.': 17, 'clazz': 11, '(': 5, 'return': 14, '{': 13, '>': 10, '?': 9, '<': 8, 'Class': 7, '': 6, 'static': 1, 'public': 0}
{'}\n': 589, ';': 69, ')': 54, 'Value1': 39, 'Node': 38, 'register': 37, ',': 7, 'address': 59, '(': 13, '>': 10, 'String': 6, '': 2, '<': 4, 'Pair': 3, 'new': 571, 'return': 570, 'dw': 164, 'Mask': 496, 'Bit': 495, 'Word': 494, 'd': 493, 'Var': 88, 'tmp': 87, '++': 162, 'Offset': 101, 'base': 100, 'And': 480, 'create': 157, '.': 62, 'Helpers': 155, 'Reil': 29, 'add': 151, 'instructions': 32, 'index': 73, 'Add': 329, '}': 257, 'Var4': 309, 'qw': 464, 'Var3': 294, 'Var2': 279, 'Sub': 227, 'Value': 53, 'immediate': 51, '+': 384, 'STR': 114, '_': 113, 'NUM': 180, 'Of': 176, 'value': 175, 'Bsh': 158, 'Var1': 138, 'Value2': 46, 'Variable': 65, 'Next': 64, 'get': 63, 'environment': 22, '=': 60, 'final': 14, '{': 55, 'else': 258, 'Condition': 123, 'Zero': 122, 'is': 121, 'bt': 210, 'Bisz': 199, '-': 178, 'wd': 170, 'equals': 111, 'if': 105, 'offset': 16, 'long': 15, 'Instruction': 30, 'List': 26, 'Environment': 21, 'ITranslation': 20, 'ASR': 12, 'static': 1, 'private': 0}
{'}\n': 30, ';': 29, ')': 12, 'name': 11, '(': 8, '.': 23, 'Class': 2, 'return': 20, '{': 19, 'Exception': 18, 'Found': 17, 'Not': 16, '': 1, 'throws': 13, 'String': 10, 'load': 6, '>': 5, '?': 4, '<': 3, 'public': 0}
{'}\n': 16, ';': 15, ')': 6, '(': 5, 'wait': 2, '.': 9, '{': 7, 'For': 3}
{'}\n': 97, ';': 30, 'BOOL': 90, '_': 89, 'return': 88, '}': 92, ')': 13, 'EXTERIOR': 86, '': 9, '.': 23, 'Location': 83, 'loc': 67, '(': 8, 'if': 78, 'p': 54, 'locate': 73, 'Locator': 71, 'Point': 70, 'target': 69, '=': 18, 'int': 66, 'next': 62, 'i': 35, 'Coordinate': 21, '{': 14, 'Next': 46, 'has': 45, 'iterator': 39, 'coords': 17, 'Iterator': 34, 'for': 31, 'Geom': 12, 'test': 11, 'Coordinates': 25, 'get': 24, 'Extracter': 22, 'Component': 20, 'List': 16, 'Geometry': 10, 'Target': 7, 'In': 6, 'Test': 4, 'is': 2, 'boolean': 1, 'protected': 0}
{'}\n': 191, ';': 55, ')': 15, '(': 29, '.': 45, 'e': 120, '': 11, '{': 22, 'Exception': 119, 'catch': 116, '}': 103, 'file': 41, '=': 42, 'File': 40, 'context': 14, 'Context': 13, 'private': 0}
{'}\n': 127, ';': 126, ')': 46, 'Url': 23, 'endpoint': 22, '(': 3, 'this': 80, '{': 47, '': 1, 'public': 0}
{'}\n': 197, 'return': 193, ';': 27, ')': 6, 'STR': 49, '_': 32, '(': 5, '.': 54, '': 1, 'String': 177, '{': 18, 'NUM': 154, '-': 152, '==': 31, 'if': 28, 'else': 90, '}': 42, 'c': 20, 'is': 55, '||': 97, 'Char': 58, 'Start': 57, 'Prefix': 56, 'Util': 53, 'Turtle': 52, 'Point': 24, 'Code': 23, '=': 21, 'int': 19, 'Exception': 17, 'RDFParse': 12, ',': 10, 'IOException': 9, 'throws': 7, 'parse': 3, 'Value': 2, 'protected': 0}
{'}\n': 22, ';': 21, ')': 6, '(': 5, 'Default': 17, 'get': 16, '.': 15, 'Zone': 14, 'Time': 2, '': 1, ',': 11, 'this': 8, '{': 7, 'Collection': 4, 'Series': 3, 'public': 0}
{'}\n': 68, ';': 43, 'list': 33, 'return': 65, ')': 25, 'e2': 20, '(': 13, 'add': 46, '.': 45, 'e1': 16, '>': 5, '<': 2, 'List': 7, 'Array': 37, '': 3, 'new': 35, '=': 34, 'E': 4, '{': 26, ',': 17, 'of': 12, 'static': 1, 'public': 0}
{'}\n': 69, ';': 28, ')': 14, 'str': 18, ',': 11, 'name': 10, '(': 7, 'Attribute': 6, 'set': 61, '.': 22, 'current': 59, 'NUM': 47, '_': 36, '-': 54, 'length': 51, 'substring': 44, '=': 19, 'STR': 37, 'With': 34, 'ends': 33, 'if': 29, 'value': 13, 'String': 9, 'to': 23, '': 1, '{': 15, 'add': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 141, ';': 95, ')': 18, '(': 4, 'return': 133, ',': 9, 'Name': 48, 'application': 47, '.': 15, '}': 117, '+': 102, 'STR': 8, '_': 7, 'debug': 87, 'logger': 76, '{': 73, 'Enabled': 80, 'Debug': 79, 'is': 78, 'if': 74, 'Exception': 65, 'Check': 68, '': 1, 'Service': 64, 'throws': 62, '@': 0, 'String': 46, 'final': 44, 'Variable': 43, 'Path': 42, 'Body': 22, 'Response': 21, 'Method': 14, 'Request': 2, '=': 6, 'method': 10, 'value': 5, 'Mapping': 3}
{'}\n': 316, ';': 30, ')': 21, 'draw_path': 313, '(': 3, '.': 78, 'g2': 285, ',': 10, 'D': 260, '': 4, '=': 46, 'NUM': 179, '_': 178, 'new': 152, 'board_to_screen': 91, 'coordinate_transform': 77, 'double': 19, 'return': 29, 'null': 27, '==': 26, 'p_color': 25, 'if': 23, '{': 22, 'p_translucency_factor': 20, ']': 8, '[': 7, 'Pla': 5, 'void': 1, 'public': 0}
{'}\n': 24, '{': 23, ')': 22, 'source': 21, 'D': 20, 'Point2': 19, '': 1, ',': 11, 'Info': 15, 'Rendering': 14, 'Plot': 13, 'factor': 10, 'double': 9, '(': 8, 'Axes': 7, 'Domain': 6, 'zoom': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 27, ';': 26, ')': 6, 'm': 8, '(': 5, 'Challenge': 3, '.': 17, '=': 12, 'Due': 9, '{': 7, 'void': 1, 'private': 0}
{'}\n': 30, ';': 29, ')': 7, 'class': 26, '.': 16, 'Flags': 24, '': 1, '(': 10, 'Of': 18, 'none': 17, 'Set': 15, 'Enum': 14, 'this': 9, '{': 8, 'public': 0}
{'}\n': 246, ';': 87, 'return': 241, '}': 239, ')': 22, '(': 51, 'NUM': 206, '_': 205, 'Image': 2, '=': 78, '.': 102, 'awt': 28, ',': 115, 'get': 103, '': 1, '{': 23}
{'}\n': 55, ';': 29, '_': 52, ')': 9, '(': 8, 'Trace': 46, 'Stack': 45, 'print': 44, '.': 16, 'e': 39, '{': 10, '': 34, 'catch': 31, '}': 30, 'try': 11, 'static': 1, 'public': 0}
{'}\n': 57, '}': 56, ';': 27, 'STR': 53, '_': 25, 'buffer': 9, ']': 16, 'index': 23, '[': 15, '++': 35, 'NUM': 26, '(': 5, ')': 18, ',': 10, '': 6}
{'}\n': 87, ';': 23, 'BOOL': 79, '_': 29, 'return': 77, '}': 81, '{': 12, ')': 11, 'Type': 5, 'file': 9, '(': 7, 'Supported': 6, 'File': 4, 'is': 3, '.': 35, 'writer': 48, 'if': 63, 'i': 27, 'get': 17, 'providers': 15, 'Writer': 47, 'Midi': 18, '': 13, '=': 16, '++': 41, 'size': 36, '<': 33, 'NUM': 30, 'int': 8, 'for': 24, 'Writers': 20, 'List': 14, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 512, '}': 78, ';': 77, ')': 19, '(': 3, 'Done': 169, 'write': 177, '.': 39, 'RWLock': 100, 'm': 99, '{': 26, 'finally': 163, 'if': 27, '': 4, '=': 83, 'has': 383, 'File': 238, 'filepath': 95, 'new': 65, 'filehandle': 239, 'Debug': 143, 'null': 33, '==': 32, 'Key': 82, 'obj': 10, 'Property': 116, 'get': 115, 'Map': 113, 'Name': 11, 'try': 107, 'Request': 103, 'read': 102, 'String': 9, 'Case': 89, 'Lower': 88, 'to': 87, 'STR': 75, '_': 59, 'Exception': 69, 'Argument': 68, 'Illegal': 67, 'throw': 64, 'NUM': 60, 'length': 40, '||': 35, 'SSOException': 25, ',': 7, 'SMSException': 22, 'throws': 20, 'token': 6, 'SSOToken': 5, 'void': 1, 'public': 0}
{'}\n': 179, ';': 21, ')': 5, '': 1, '.': 15, '(': 19, '=': 10, 'get': 16, 'ds': 22, 'map': 9, 'String': 27, '{': 6}
{'}\n': 111, ';': 92, ')': 17, 'List': 25, 'view': 15, '(': 4, '.': 67, '': 12, '=': 59, '{': 18, 'View': 13, 'void': 1}
{'}\n': 83, ';': 77, 'return': 79, '}': 78, ')': 9, 'STR': 55, '_': 23, '.': 18, 'path': 8, '(': 5, 'NUM': 24, 'At': 38, 'char': 37, 'Letter': 33, 'is': 32, 'Character': 30, '': 6, '&&': 16, 'if': 11, '{': 10, 'String': 7}
{'}\n': 110, ';': 104, 'return': 106, '}': 105, ')': 6, '(': 5, '.': 81, 'Schema': 44, 'MAcct': 68, '': 67, '=': 53, 'm_acct': 39, '==': 15, 'if': 8, '{': 7}
{'}\n': 47, ';': 21, 'attrs': 13, 'return': 44, ')': 4, '(': 19, '.': 23, 'Attribute': 32, 'Impl': 12, 'Attributes': 0, '': 6, 'new': 15, '=': 14, '{': 9, 'throws': 5}
{'}\n': 108, ';': 48, 'return': 105, ')': 47, '(': 43, '.': 67, 'input': 30, '[': 3, 'byte': 2, 'new': 38, '=': 59, 'Stream': 27, 'Input': 26, 'File': 10, '': 24, 'Binary': 6, ']': 4, 'static': 1, 'public': 0}
{'}\n': 173, ';': 37, ')': 7, 'Solutions': 24, 'expected': 23, '(': 4, 'Test': 167, 'Decode': 166, 'Encode': 165, 'do': 164, '}': 87, 'add': 82, '.': 54, 'IV': 71, 'blob': 150, '>': 22, '': 1, '<': 18, 'Constant': 68, 'new': 26, ',': 65, 'STR': 6, '_': 5, 'var': 60, 'Var': 58, 'set': 55, 'Id': 75, 'term': 74, 'Set': 21, 'Binding': 48, 'List': 17, '=': 25, 'IBinding': 20, 'final': 15, '{': 14, 'Array': 28, 'test_stream': 10, 'void': 9, 'public': 8, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 18, ';': 17, ')': 9, 'condition': 8, '(': 4, 'add': 2, '.': 12, '{': 10, 'Condition': 7, '': 5, 'void': 1, 'public': 0}
{'}\n': 275, '}': 268, ';': 27, ')': 11, 'Length': 45, 'gap': 44, '+': 56, 'i': 63, '(': 5, 'get': 85, '.': 20, 'value': 83, ',': 8, 'State': 79, 'set': 78, '{': 12, '++': 75, 'Index': 3, 'max': 36, '<=': 70, 'Min': 15, 'rm': 14, '=': 17, 'int': 6, 'for': 60, 'NUM': 58, '_': 57, '-': 51, 'Max': 30, 'index1': 10, 'index0': 7, 'Math': 19, '': 18, 'min': 21, 'Interval': 4, 'remove': 2, 'void': 1, 'public': 0}
{'}\n': 89, ';': 33, ')': 9, 'get': 82, '(': 5, 'Event': 3, 'Events': 41, '=': 37, '}': 34, '.': 14, '{': 10, '': 18, 'if': 11, 'List': 4, 'void': 1}
{'}\n': 23, '{': 11, ')': 10, '(': 9, 'Disk': 6, '': 1, 'public': 0}
{'}\n': 178, ';': 89, ')': 57, '(': 15, '.': 71, '{': 67, '_': 119, '=': 81, 'if': 68, 'Directory': 10, 'is': 72, 'file': 70, '': 43, 'File': 44, 'delete': 3, 'static': 1}
{'}\n': 70, ';': 62, '.': 46, ')': 14, 'count': 13, ',': 8, 'bytes': 53, 'offset': 10, 'buffer': 7, '(': 3, 'arraycopy': 47, 'System': 45, '': 44, '_': 39, '{': 15, 'int': 9, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 31, ';': 30, 'BOOL': 28, '_': 27, '(': 4, '.': 16, 'Regs': 15, 'Rop': 14, 'reserved': 13, '{': 12, ')': 11, 'int': 5, ',': 8, 'rop': 6, 'Reserved': 3, 'private': 0}
{'}\n': 94, '}': 93, ';': 92, ')': 7, 'Resolver': 23, '': 21, '.': 17, '(': 6, 'Resource': 22, 'new': 20, 'add': 18, 'List': 12, 'resolver': 11, '{': 14, 'synchronized': 9, 'register': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 123, '}': 81, ';': 24, 'BOOL': 79, '_': 18, 'return': 47, ')': 11, 'e': 87, ',': 113, '(': 5, 'Message': 110, 'get': 31, '.': 15, 'error': 105, 'LOG': 14, '': 7, '{': 12, 'Enabled': 97, 'Error': 96, 'is': 95, 'if': 90, 'Exception': 86, 'catch': 83, ':': 46, 'default': 75, 'method': 10, 'Challenge': 50, 'Auth': 69, 'Proxy': 68, 'process': 2, 'REQUIRED': 64, 'AUTHENTICATION_': 63, 'PROXY_': 62, 'SC_': 44, 'Status': 32, 'Http': 8, 'case': 38, 'WWWAuth': 49, 'UNAUTHORIZED': 45, 'Code': 33, 'switch': 27, 'try': 25, 'STR': 19, '+': 20, 'trace': 16, 'Method': 9, 'final': 6, 'Response': 4, 'Authentication': 3, 'boolean': 1, 'private': 0}
{'}\n': 62, ';': 59, ')': 9, '.': 42, '(': 3, 'Byte': 20, '{': 10, 'byte': 7}
{'}\n': 6, '{': 5, ')': 4, '(': 3, 'Pipeline': 2, 'public': 0}
{'}\n': 1558, '}': 90, ';': 55, ')': 33, '(': 8, 'draw': 5, '.': 60, 'g2': 12, '': 9, 'null': 1045, '!=': 1044, 'Stroke': 1256, 'set': 1011, 'Plot': 16, 'Paint': 290, 'get': 61, 'marker': 26, '=': 48, ',': 13, 'X': 251, 'Max': 261, 'Area': 32, 'data': 31, 'Min': 250, 'Double': 244, 'D': 11, 'Line2': 193, 'new': 238, 'line': 236, 'value': 57, 'Java2': 152, 'To': 151, 'return': 88, '{': 34, 'contains': 82, 'range': 68, '!': 79, 'if': 35, 'Range': 6, 'Value': 20, 'vm': 47, 'double': 56, 'Marker': 7, 'instanceof': 38, 'Rectangle2': 29, 'Axis': 21, 'plot': 17, 'Graphics2': 10, 'void': 4, 'public': 3}
{'}\n': 61, ';': 60, ')': 30, '(': 37, '.': 35, '': 24, 'acceptable': 18, 'private': 0}
{'}\n': 42, '}': 32, ';': 31, ')': 8, '(': 4, 'unlock': 37, '.': 21, 'lock': 35, '{': 9, 'finally': 33}
{'}\n': 427, ';': 81, ')': 7, ',': 408, 'NUM': 410, '_': 180, ']': 407, '[': 149, '.': 40, '}': 82, '(': 3, '=': 32, '{': 8}
{'}\n': 196, ';': 55, ')': 23, 'STR': 53, '_': 52, ',': 14, 'null': 42, '(': 8, 'Tag': 48, 'end': 58, '.': 32, 'out': 22, '}': 69, ']': 12, 'i': 133, '[': 11, 'val': 13, 'attribute': 90, 'start': 47, '{': 37, '++': 144, 'N': 104, '': 15, '<': 139, 'NUM': 136, '=': 105, 'int': 102, 'for': 130, 'String': 16, 'to': 122, 'Integer': 120, 'length': 108, 'final': 2, 'name': 17, '!=': 84, 'if': 38, 'return': 67, '==': 41, 'IOException': 36, 'io': 33, 'java': 31, 'Exception': 29, 'Parser': 28, 'Pull': 27, 'Xml': 7, 'throws': 24, 'Serializer': 21, 'Array': 6, 'write': 4, 'void': 3, 'static': 1, 'public': 0}
{'}\n': 136, '}': 134, ';': 77, ')': 25, 'Name': 95, 'User': 94, 'new': 93, '(': 6, 'set': 124, '.': 49, 'commit': 112, '{': 26, 'Value': 73, 'get': 65, 'entry': 44, ':': 45, 'Info': 19, 'Commit': 18, 'Log': 17, '': 7, 'for': 27, 'New': 98, '=': 64, 'NUM': 88, '_': 87, '>': 20, 'size': 83, 'List': 14, 'Names': 67, 'String': 11, '<': 9, 'Set': 51, 'Map': 8, ',': 12, 'Entry': 30, 'By': 4, 'Username': 3, 'unify': 2, 'void': 1, 'private': 0}
{'}\n': 74, '}': 57, ';': 56, ')': 41, '{': 24, 'e': 62, 'SQLException': 61, '': 13, '(': 12, 'catch': 58, 'try': 43, 'connection': 15, 'Connection': 14}
{'}\n': 134, '}': 61, ';': 27, ')': 5, 'iae': 116, ',': 82, 'STR': 78, '_': 77, '+': 79, '(': 4, 'error': 75, '.': 14, 'Debug': 73, '': 1, '{': 6, 'Exception': 68, 'Access': 114, 'Illegal': 113, 'catch': 62, 'ie': 92, 'Instantiation': 90, 'cnfe': 69, 'Found': 67, 'Not': 66, 'Class': 11, 'Instance': 57, 'new': 56, 'clz': 32, 'Generator': 10, 'ITimestamp': 51, '=': 12, 'Timestamp': 46, 'secure': 45, 'timestamp': 9, 'Name': 38, 'for': 37, 'try': 28, 'GENERATOR': 25, 'TIMESTAMP_': 24, 'SECURE_': 23, 'Constants': 20, 'Log': 19, 'Property': 16, 'get': 15, 'lmanager': 13, 'String': 8, 'ELFFormatter': 3, 'public': 0}
{'}\n': 40, '}': 39, ';': 38, ')': 12, 'input': 22, '(': 7, 'read': 5, 'return': 32, '{': 16, 'Stream': 21, 'open': 26, '.': 25, 'url': 11, '=': 23, 'Input': 20, '': 9, 'try': 17, 'IOException': 15, 'throws': 13, 'URL': 10, 'final': 8, 'static': 1, 'public': 0}
{'}\n': 90, ';': 27, 'net': 63, 'return': 87, 'id': 29, '=': 13, 'ID': 83, 'network': 82, '.': 20, ')': 8, '(': 7, 'add': 75, 'Ids': 41, 'used': 40, 'Network': 4, '': 2, 'new': 14, '}': 58, 'Int': 34, 'next': 33, 'random': 12, '{': 9, 'contains': 43, 'while': 38, 'int': 28, 'Millis': 23, 'Time': 22, 'current': 21, 'System': 19, 'Random': 11, 'init': 5, 'static': 1, 'public': 0}
{'}\n': 77, ';': 34, '(': 6, 'format': 67, '.': 66, '': 2, 'return': 18, ')': 9, 'NUM': 16, '_': 15, 'bytes': 8, '/': 31, 'STR': 20, '<': 14, 'if': 11, '{': 10, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 130, ';': 129, ')': 48, 'FLAG_': 100, '': 13, '.': 83, 'Intent': 25, 'Pending': 22, ',': 70, 'NUM': 91, '_': 90, '(': 8, 'Service': 85, 'get': 84, 'new': 64, '=': 63}
{'}\n': 198, ';': 195, ')': 87, 'b': 77, '(': 16, '.': 158, 'a': 42, 'null': 142, '{': 88, '': 25, ',': 43}
{'}\n': 23, ';': 22, ')': 9, '(': 3, '.': 15, 'configs': 11, '{': 10, '': 4, 'void': 1, 'public': 0}
{'}\n': 591, '}': 210, ';': 209, ')': 58, '(': 37, '': 38, 'new': 535, '{': 69, 'IP': 57, '.': 155, 'Address': 404, 'STR': 196, '_': 195, 'if': 70, '=': 261, 'String': 39, 'Exception': 66, 'Argument': 65, 'Illegal': 64}
{'}\n': 443, ';': 61, 'sel': 254, 'return': 440, '}': 138, ')': 18, 'Spacing': 97, 'horizontal': 96, '-': 111, '(': 6, 'Left': 13, 'get': 68, '.': 27, 'View': 2, 'reference': 284, ',': 10, 'NUM': 113, '_': 33, 'Start': 105, 'column': 104, 'fill': 336, 'Right': 17, 'Or': 360, 'Views': 358, 'adjust': 291, '+': 35, 'Rows': 88, 'num': 87, '{': 19, 'else': 139, 'Bottom': 121, 'From': 120, 'Stack': 119, 'm': 57, '!': 117, 'if': 20, 'Pixel': 212, 'Selection': 5, 'right': 231, 'left': 210, 'Edge': 65, 'Fading': 70, 'For': 292, 'Reference': 288, '=': 67, 'BOOL': 274, ':': 266, 'End': 109, '?': 263, 'Column': 257, 'make': 256, 'Length': 66, 'fading': 64, 'children': 12, 'int': 7, '': 1, 'max': 184, 'Math': 182, '%': 133, 'inverted': 142, 'Count': 147, 'Item': 146, 'Position': 59, 'selected': 78, 'Horizontal': 69, 'final': 62, 'Num': 91, 'Selected': 82, 'First': 58, 'POSITION': 55, 'FIRST_': 54, 'M_': 53, 'RIGHT': 47, 'CHILDREN_': 46, 'STR': 34, 'TAG': 31, 'i': 28, 'Log': 26, 'DEBUG': 23, 'private': 0}
{'}\n': 148, ';': 27, ')': 11, '(': 14, 'Tile': 6, 'Shape': 5, '': 4, 'new': 79, 'return': 138, '.': 90, 'Int': 62, 'Pla': 60, '=': 38, 'if': 13, '{': 12, 'public': 3}
{'}\n': 244, '(': 33, '}': 186, ';': 64, '{': 173, ')': 40, '!=': 207, 'if': 204, 'File': 26, '': 14, '.': 50, 'Factory': 49, '=': 69, 'get': 30, ',': 24}
{'}\n': 102, '}': 59, ';': 46, 'Value': 29, 'default': 28, 'return': 55, ')': 30, 'exception': 83, '(': 6, 'Exception': 82, 'log': 90, '.': 40, 'Functions': 88, 'CUtility': 87, '': 8, '{': 31, 'Format': 81, 'Number': 80, 'final': 7, 'catch': 76, 'String': 12, 'setting': 23, 'parse': 68, 'try': 62, 'else': 60, 'null': 52, '==': 51, 'if': 47, 'Name': 24, 'get': 41, 'Settings': 18, 'raw': 17, '=': 37, ',': 13, '>': 16, '<': 10, 'Map': 9, 'Setting': 5, 'create': 3, 'static': 1}
{'}\n': 195, ';': 41, 'null': 28, 'return': 51, '}': 63, 'item': 181, '.': 18, 'reg': 145, ')': 10, ',': 178, 'tmpl': 9, '(': 6, 'Attributes': 175, 'match': 174, '&&': 173, 'now': 78, '>': 171, 'Expiration': 170, 'lease': 169, 'if': 12, 'slen': 90, '%': 122, 'srand': 109, '+': 158, 'i': 129, 'get': 154, 'services': 66, 'Reg': 144, 'Svc': 143, '': 1, '=': 35, '{': 11, '++': 139, '<': 135, 'NUM': 103, '_': 102, 'int': 89, 'for': 126, '==': 101, 'size': 94, 'Millis': 85, 'System': 81, 'long': 77, 'Types': 20, 'service': 19, 'Services': 69, 'matching': 36, 'List': 65, 'next': 54, 'iter': 34, 'Next': 47, 'has': 46, 'Items': 37, 'Iter': 33, 'Item': 32, '!=': 27, 'ID': 26, '||': 22, 'Empty': 15, 'is': 14, 'Template': 8, 'Do': 5, 'lookup': 4, 'private': 0}
{'}\n': 123, ';': 23, ')': 14, 'size': 13, ',': 11, 'tasks': 10, '(': 7, 'After': 6, 'run': 5, '.': 43, 'super': 113, 'return': 105, '}': 109, 'BOOL': 107, '_': 21, 'N': 95, 'Seq': 94, 'get': 44, 't': 35, '>': 96, 'Task': 34, 'this': 92, 'if': 49, '{': 15, 'Reg': 67, 'other': 68, 'equals': 83, 'reg': 81, 'Proxy': 66, '=': 20, '': 1, 'Lookup': 61, 'instanceof': 52, '||': 57, 'Listener': 55, 'Register': 54, 'i': 19, 'Cache': 33, '++': 29, '<': 25, 'NUM': 22, 'int': 12, 'for': 16, 'List': 9, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 118, ';': 16, ')': 28, 'data': 19, '.': 24, '': 6, '(': 27, '}': 62, '{': 37, 'String': 57, 'get': 25, 'null': 15, '=': 14}
{'}\n': 51, ';': 50, ')': 19, '(': 6, 'get': 35, '.': 34, '': 24, 'array': 12, ']': 11, '[': 10, 'double': 9, 'public': 0}
{'}\n': 91, '}': 77, ';': 26, 'STR': 60, '_': 59, '{': 9, 'else': 78, ')': 8, '(': 4, '.': 42, 'path': 7, 'null': 14, 'if': 10, '': 5, 'static': 1}
{'}\n': 227, ';': 47, ')': 27, '(': 18, '.': 41, '}': 179, 'group': 65, '+': 170, 'STR': 45, '_': 44, '': 29, 'String': 59, 'debug': 42, 'void': 1, 'private': 0}
{'}\n': 196, '}': 181, ';': 33, ')': 32, ',': 9, 'file': 8, '(': 4, 'Line': 3, '{': 42, ':': 74, 'String': 11, '': 5, 'for': 69, 'split': 51, '.': 26, '=': 48, ']': 46, '[': 45, 'Writer': 7, 'Print': 6, 'void': 1, 'protected': 0}
{'}\n': 202, ';': 13, 'moved': 9, 'return': 37, '}': 127, 'APList': 155, 'new': 51, '=': 10, 'Points': 20, 'attachment': 19, '.': 15, 'this': 14, ')': 6, '(': 5, 'values': 185, 'Map': 81, 'All': 74, 'add': 73, 'null': 27, '!=': 67, 'if': 22, '>': 47, 'Point': 4, 'Attachment': 3, '': 41, '<': 43, 'List': 42, 'Array': 53, ',': 85, 'STR': 138, '_': 11, 'info': 135, 'log': 133, '{': 7, 'BOOL': 12, 'size': 110, 'ap': 48, '||': 28, '==': 26, 'APMap': 94, 'get': 93, 'Empty': 33, 'is': 32, 'APs': 17, 'old': 16, 'boolean': 1, 'update': 2, 'protected': 0}
{'}\n': 132, ';': 131, ')': 127, '(': 68, '.': 93, 'Wraps': 83, 'my': 91, '>': 79, 'Impl': 78, 'Wrap': 77, 'Soft': 76, '': 72, '<': 74, 'List': 73, 'public': 0}
{'}\n': 30, ';': 29, 'STR': 14, '_': 13, '+': 15, ')': 10, '(': 6, 'format': 19, '.': 18, 'return': 12, '{': 11, 'String': 3, '': 2, 'public': 0}
{'}\n': 41, ';': 36, 'string': 8, 'return': 38, '}': 37, ')': 12, 'length': 18, ',': 9, 'NUM': 32, '_': 31, '(': 5, 'substring': 29, '.': 17, '{': 13, '>': 21, 'if': 14, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 61, ';': 50, '_': 32, '}': 55, ')': 8, 'legion': 7, '(': 4, 'Legion': 46, '{': 9, 'get': 38, '.': 25, 'NUM': 33, 'Millis': 28, 'Time': 27, 'current': 26, 'System': 24, '': 5}
{'}\n': 91, ';': 37, ')': 22, 'STR': 78, '_': 77, '+': 79, 'self': 6, 'to': 10, '(': 4, 'Exception': 75, 'Runtime': 74, 'Groovy': 73, '': 8, 'new': 71, 'throw': 70, 'else': 69, '}': 67, 'i': 48, 'call': 62, '.': 20, 'closure': 25, '{': 27, 'to1': 29, '=': 30, 'float': 5, 'for': 45, 'if': 38, 'Value': 34, 'Closure': 14, 'class': 21, 'Param': 19, 'First': 18, 'Params': 15, '@': 12, ',': 7, 'Number': 9, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 118, ';': 29, ')': 8, 'CONSENT': 115, '': 5, '.': 18, 'Constants': 24, 'SAML2': 11, '(': 4, 'Attribute': 20, 'get': 19, 'element': 7, '=': 16, 'consent': 103, 'DESTINATION': 100, 'URI': 88, 'destination': 87, 'Str': 62, 'Instant': 61, 'issue': 60, 'Issue': 79, 'validate': 30, 'INSTANT': 75, 'ISSUE_': 74, 'String': 59, 'version': 37, 'Version': 53, 'VERSION': 49, 'Id': 15, 'request': 14, 'ID': 27, '{': 13, 'Exception': 12, 'throws': 9, 'Element': 6, 'parse': 2, 'void': 1, 'protected': 0}
{'}\n': 128, ';': 39, ')': 12, 'is': 78, '(': 8, 'File': 106, '}': 89, 'Stream': 84, '=': 21, '': 14, 'new': 63, '{': 16, 'if': 40, 'IOException': 15, 'throws': 13}
{'}\n': 36, ';': 35, ')': 7, '(': 3, 'Changed': 32, 'Set': 31, 'Data': 30, 'notify': 29, 'item': 6, 'add': 2, '.': 15, 'items': 14, '{': 8, 'T': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 180, '}': 179, ';': 137, ')': 33, '(': 67, '.': 114, 'Name': 126, 'get': 115, 'Share': 12, 'Cifs': 11, '': 8, 'new': 62, '=': 61, '{': 34}
{'}\n': 85, '}': 63, ';': 37, ')': 7, 'e': 68, ',': 13, 'STR': 79, '_': 78, '(': 6, 'Exception': 12, 'Failure': 19, 'Parse': 18, '': 1, 'new': 33, 'throw': 71, '{': 21, 'IOException': 67, 'catch': 64, 'this': 57, 'return': 60, 'Source': 55, 'Input': 54, 'm': 53, 'parse': 5, '.': 32, 'parser': 40, 'SAXParser': 25, 'factory': 27, '=': 28, 'Instance': 34, 'Factory': 26, 'try': 22, 'SAXException': 15, 'Configuration': 11, 'Parser': 4, 'throws': 8, 'public': 0}
{'}\n': 20, ';': 16, 'this': 18, 'return': 17, ')': 6, 'STR': 14, '_': 13, '(': 5, 'add': 11, '.': 10, 'Fields': 9, 'delete': 3, '{': 7, 'Builder': 2, '': 1, 'public': 0}
{'}\n': 62, ';': 37, ')': 6, 'Id': 52, 'deterministic': 51, '+': 50, 'STR': 49, '_': 48, ',': 23, 'ID': 46, '': 15, '(': 5, 'Attribute': 43, 'set': 42, '.': 17, 'Dom': 13, 'document': 21, 'Element': 19, 'add': 18, 'DSSXMLUtils': 16, '=': 14, '{': 10, 'incorporate': 2, 'void': 1, 'protected': 0}
{'}\n': 89, ';': 21, 'mean': 3, 'return': 86, 'length': 34, '.': 33, 'inds': 13, '/=': 81, '}': 79, ']': 7, 'i': 25, '[': 6, 'data': 8, '+=': 70, ')': 14, 'STR': 66, '_': 19, '(': 4, 'Exception': 63, 'Argument': 62, 'Illegal': 61, '': 42, 'new': 59, 'throw': 58, 'N': 47, 'Na': 46, 'is': 45, 'if': 40, '{': 15, '++': 37, '<': 31, 'NUM': 20, '=': 18, 'int': 10, 'for': 22, ',': 9, 'static': 1, 'public': 0}
{'}\n': 9, ';': 8, 'pointer': 7, 'return': 6, '{': 5, ')': 4, '(': 3, 'public': 0}
{'}\n': 272, ';': 38, 'result': 235, 'return': 269, ')': 10, ',': 243, 'nclients': 246, 'do': 3, '=': 18, 'Result': 2, '': 1, 'final': 15, '.': 21, 'Options': 32, 'Test': 5, '(': 6, 'Property': 28, 'get': 27, 'properties': 9, 'parse': 22, 'Int': 47, 'Integer': 44, 'int': 40, 'TIMEOUT': 35, 'Long': 20, 'timeout': 17, 'long': 16, '{': 14, 'Exception': 13, 'throws': 11, 'Properties': 8, 'Comparison': 4, 'public': 0}
{'}\n': 230, ';': 17, ')': 4, '(': 3, 'String': 96, 'to': 224, '.': 19, 'sb': 98, 'Text': 220, '}': 186, 'return': 93, 'Message': 210, 'get': 27, 'e': 191, ',': 37, '': 6, 'Level': 199, 'log': 194, '{': 5, 'Exception': 190, 'catch': 187, 'close': 182, 'in': 113, 'count': 150, 'NUM': 146, '_': 38, 'cbuf': 140, 'append': 170, '>': 164, 'read': 159, '=': 10, 'while': 152, 'int': 149, ']': 139, '[': 138, 'char': 137, 'new': 11, 'File': 61, 'Selected': 130, 'jc': 9, 'Stream': 111, 'Input': 110, 'Reader': 112, 'try': 107, 'Buffer': 97, 'OPTION': 91, 'APPROVE_': 90, 'Chooser': 8, 'JFile': 7, '!=': 84, 'this': 82, 'Dialog': 21, 'Open': 79, 'show': 78, 'if': 74, 'ONLY': 71, 'FILES_': 70, 'Mode': 63, 'Selection': 62, 'set': 20, 'DIALOG': 55, 'OPEN_': 54, 'Type': 47, 'STR': 39, 'Ctx': 34, 'Env': 31, 'Msg': 25, 'Title': 22, 'void': 1, 'private': 0}
{'}\n': 310, '}': 158, ';': 26, ')': 13, 'e': 254, '(': 12, 'SOSFailure': 16, '': 1, 'new': 60, 'throw': 270, ',': 89, 'STR': 25, '_': 24, '+': 33, 'Name': 22, 'method': 21, 'error': 259, '.': 28, 'log': 27, '{': 17, 'Exception': 253, 'Interface': 283, 'Uniform': 282, 'catch': 247, 'Algorithm': 252, 'Such': 251, 'No': 250, '>': 6, 'String': 5, '<': 3, 'List': 2, 'Array': 62, 'return': 216, 'trace': 29, 'Id': 10, 'Cos': 9, 'size': 208, 'null': 103, '!=': 102, '&&': 104, 'Elem': 77, 'cos': 76, 'if': 97, 'get': 109, 'elem': 123, 'add': 148, 'Elements': 111, ':': 124, 'SElement': 122, 'Co': 74, 'for': 118, 'class': 94, 'SList': 75, 'URI': 44, 'COS_': 43, 'Object': 83, 'query': 82, '_client': 80, '=': 23, 'try': 71, 'final': 18, 'throws': 14, 'fetch': 7, 'private': 0}
{'}\n': 25, ';': 24, ')': 10, 'task': 9, '(': 3, 'add': 15, '.': 14, '{': 11, '': 4, 'void': 1, 'public': 0}
{'}\n': 26, ';': 20, 'max': 9, '*': 23, '_scale': 22, 'return': 21, ')': 6, 'NUM': 18, '_': 17, '(': 5, 'Set': 15, 'And': 14, 'get': 13, '.': 12, '_max': 11, '=': 10, 'long': 8, '{': 7, 'Max': 4, 'sample': 3, 'double': 2, 'final': 1, 'public': 0}
{'}\n': 114, ';': 65, ')': 17, '(': 5, '.': 32, ':': 85, 'String': 83, '': 6, 'for': 80, 'Writer': 68, 'Print': 67, 'new': 71, '=': 70, 'pw': 69, 'file': 8, '{': 21, 'IOException': 20, 'throws': 18, ',': 9, 'File': 4, 'write': 3, 'void': 2, 'static': 1}
{'}\n': 129, '}': 73, ';': 72, '{': 24, ')': 18, ',': 11, 'Tag': 6, 'Auth': 5, 'chunk': 9, '(': 7, '.': 47, 'Arrays': 102, '': 20, 'Idx': 10, 'List': 84, 'atag': 83, 'else': 74, 'STR': 70, '_': 31, 'Exception': 23, 'Encryption': 22, 'File': 21, 'new': 63, 'throw': 62, 'CHUNK_': 57, '!=': 49, 'length': 48, '||': 34, 'null': 40, '==': 39, 'NUM': 32, '<': 30, 'if': 25, 'throws': 19, ']': 14, '[': 13, 'byte': 12, 'int': 8, 'Chunk': 4, 'synchronized': 1, 'public': 0}
{'}\n': 92, '}': 91, ';': 57, ')': 22, 'annotated': 36, ',': 53, 'Binder': 14, '(': 11, '>': 8, '<': 1, 'Annotated': 28, '': 2, 'new': 75, 'add': 73, '.': 42, 'Binders': 71, 'object': 70, '{': 23, 'if': 58, 'Type': 4, 'Class': 50, 'Annotation': 3, 'get': 43, '=': 38, 'register': 10, 'void': 9, 'extends': 5, 'public': 0}
{'}\n': 153, ';': 68, 'String': 3, 'return': 149, '}': 128, '{': 13, 'else': 141, ')': 12, '(': 8, '.': 31, '=': 18, 'STR': 47, '_': 36, 'c': 106, 'if': 113, 'char': 105, 'i': 92, 'len': 86, '<': 98, 'int': 91, 's': 11, 'NUM': 37, 'length': 32, '': 2, 'static': 1, 'public': 0}
{'}\n': 60, ';': 37, ')': 7, '(': 33, 'parse': 54, '.': 22, 'builder': 41, 'return': 51, 'Builder': 14, 'Document': 2, 'new': 23, 'factory': 16, '=': 17, '': 1, 'Instance': 24, 'Factory': 15, '{': 11, 'Exception': 10, 'throws': 8}
{'}\n': 19, ';': 18, ')': 10, 'handler': 9, '(': 5, '.': 13, 'directories': 12, '{': 11, 'Handler': 4, 'DTEDDirectory': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 50, ';': 49, ')': 25, '(': 46, '.': 44, '': 7, ',': 35, 'Information': 22, 'public': 0}
{'}\n': 138, ';': 34, ')': 33, 'var': 128, '.': 74, '(': 32, 'Bind': 7, 'Var': 6, 'Snmp': 5, '': 4, 'new': 45, '<': 37, 'Vector': 36, '=': 44, '>': 42, '{': 25}
{'}\n': 195, '}': 178, ';': 59, ')': 48, '(': 8, 'Trace': 190, 'Stack': 189, 'print': 188, '.': 53, 'e': 183, '{': 51, 'Exception': 182, '': 14, 'catch': 179, 'STR': 57, '_': 56, 'info': 54, 'log': 52, 'Line': 166, 'new': 165, 'Writer': 7, '+': 78, 'ID': 119, 'Constants': 115, 'Internal': 114, 'write': 111, 'NAME': 81, 'FILE_': 80, 'Temp': 75, 'Opus': 74, 'MATSim4': 73, 'get': 66, 'module': 21, 'Buffered': 67, 'IOUtils': 64, '=': 62, 'try': 50, 'V3': 20, 'Module': 19, 'Config': 18, 'Parameter': 17, 'Sim': 5, 'Urban': 4, 'init': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 14, 'task': 13, '(': 5, 'add': 20, '.': 19, '{': 15, 'Runnable': 12, '': 10, 'Task': 4, 'void': 2, 'public': 0}
{'}\n': 119, ';': 78, ')': 17, 'entity': 73, '{': 42, '}': 79, '.': 67, '': 13, '(': 9, 'throws': 18, 'static': 1}
{'}\n': 87, '}': 86, ';': 42, ')': 31, 'new': 13, ',': 10, 'Name': 40, 'app': 39, '(': 5, 'put': 77, '.': 35, 'map': 25, '{': 32, 'equals': 68, '!': 64, 'null': 57, '!=': 61, '==': 56, 'old': 8, 'if': 36, 'Null': 37, 'Reject': 34, '': 6, 'String': 4, '>': 24, '<': 18, 'Map': 17, 'Different': 3, 'capture': 2, 'void': 1, 'private': 0}
{'}\n': 370, ';': 67, ')': 56, 'X': 51, 'max': 54, ',': 16, 'min': 50, 'Unit': 47, 'Per': 46, 'Pixels': 45, 'x': 14, 'bottom': 41, 'top': 38, 'left': 35, 'BOOL': 350, '_': 72, 'paint': 32, 'canvas': 28, 'Locations': 24, 'Label': 23, 'Text': 22, '(': 7, 'Labels': 15, 'XText': 337, 'draw': 5, '}': 292, 'Line': 214, '.': 63, 'Color': 199, 'Grid': 91, 'get': 109, 'Renderer': 81, 'm': 80, 'set': 198, '{': 57, 'Y': 92, 'show': 77, 'if': 68, 'Angle': 287, 'XLabels': 6, 'NUM': 73, '/': 235, '*': 181, 'Size': 232, '+': 176, 'label': 151, 'Date': 105, '': 1, 'new': 251, 'format': 107, '-': 128, 'float': 167, '=': 60, 'i': 137, 'round': 156, 'Math': 154, 'long': 150, '++': 147, 'length': 59, '<': 10, 'int': 34, 'for': 134, 'Format': 106, 'Show': 84, 'is': 83, 'boolean': 76, '>': 13, 'size': 64, 'double': 43, 'Paint': 31, 'Canvas': 27, ']': 20, '[': 19, 'Double': 12, 'List': 9, 'void': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 93, ';': 23, 'result': 42, 'return': 21, '}': 24, ')': 12, 'e': 76, '(': 7, 'Exception': 75, 'State': 83, 'Illegal': 82, '': 59, 'new': 80, 'throw': 79, '{': 13, 'Encoding': 74, 'Unsupported': 73, 'catch': 70, 'Name': 64, 'display': 63, '.': 28, 'CHARSET': 61, 'DEFAULT_': 60, '=': 47, 'try': 44, '_': 31, 'NUM': 32, '==': 17, 'length': 29, 'src': 11, 'if': 14, 'null': 18, 'String': 6, 'static': 1, 'public': 0}
{'}\n': 396, '}': 282, ';': 79, 'NUM': 68, '_': 67, '{': 23, ')': 22, '(': 249, 'if': 248, '=': 93, ']': 109, '[': 191, '.': 56, 'region': 37, '': 13, 'final': 12, 'Region': 8, 'static': 1, 'public': 0}
{'}\n': 62, '_': 55, '(': 6, '': 36, 'registered': 28, '{': 8, ')': 7, 'public': 0}
{'}\n': 120, ';': 49, ')': 9, '(': 4, 'close': 99, '.': 44, 'is': 8, 'bb': 54, 'load': 2, 'size': 80, 'fc': 41, 'int': 76, ',': 71, 'NUM': 73, '_': 72, 'ONLY': 70, 'READ_': 69, '': 5, 'Mode': 66, 'Map': 65, 'Channel': 40, 'File': 39, 'map': 58, '=': 42, 'Buffer': 53, 'Byte': 52, 'Mapped': 51, 'get': 45, '{': 23, 'IOException': 12, 'throws': 10, 'Stream': 7, 'Input': 6, 'Binary': 3, 'void': 1, 'private': 0}
{'}\n': 33, ';': 32, 'TYPE': 22, '.': 20, 'Helper': 19, 'Class': 9, '': 8, '==': 16, 'type': 11, 'long_': 21, '{': 13, ')': 12, 'Node': 10, 'static': 1, 'private': 0}
{'}\n': 32, ';': 31, '(': 6, '.': 17, '{': 14, ')': 13, 'public': 0}
{'}\n': 42, ';': 18, ')': 5, 'STR': 24, '_': 23, '(': 4, 'Char': 15, '}': 34, '{': 10, 'next': 12, 'if': 19, '=': 13, 'char': 11, 'Exception': 9, '': 7, 'throws': 6}
{'}\n': 257, ';': 36, 'STR': 247, '_': 82, '(': 6, '{': 97, ')': 67, 'session': 21, 'if': 222, '}': 219, '.': 58, 'get': 181, 'Session': 19, 'NUM': 83, 'size': 78, '': 7}
{'}\n': 60, '}': 52, ';': 32, 'BOOL': 57, '_': 56, 'return': 33, '{': 8, 'else': 53, ')': 7, 'value': 44, '.': 39, 'civ': 23, '==': 37, '(': 3, '&&': 42, 'attribute': 36, 'o': 6, 'Vdt': 16, 'Coverage': 14, '': 4, '=': 24, 'instanceof': 12, 'if': 9, 'Object': 5, 'equals': 2, 'boolean': 1, 'public': 0}
{'}\n': 49, ';': 29, ')': 8, 'file': 7, '(': 3, '': 5, 'new': 40, '.': 15, 'STR': 24, '_': 23, 'Path': 6, 'void': 1, 'public': 0}
{'}\n': 335, ';': 63, ')': 8, '(': 7, 'signum': 330, '.': 249, 'result': 245, ',': 20, 'NUM': 19, '_': 18, 'STR': 322, 'Equals': 319, 'assert': 301, '}': 62, ']': 14, 'i': 285, '[': 13, 'Bytes': 12, 'r': 149, '==': 309, 'res': 257, 'True': 302, '{': 9, '++': 298, 'length': 268, '<': 291, '=': 15, 'int': 133, 'for': 282, 'Array': 278, 'Byte': 277, 'to': 276, 'byte': 10, 'new': 212, 'Number': 210, 'b': 65, 'a': 11, 'Integer': 208, 'Big': 207, '': 206, 'Sign': 135, '-': 17, 'Shorter': 6, 'First': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 41, ';': 36, 'activity': 10, 'return': 38, ')': 6, '(': 5, '=': 11, 'Activity': 2, '': 1, '{': 7}
{'}\n': 50, ';': 28, 'BOOL': 48, '_': 25, '=': 46, 'running': 45, ')': 8, '(': 7, '.': 12, 'timer': 29, 'STR': 26, 'info': 13, 'LOGGER': 11, '': 1, '{': 9, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 42, '}': 27, ';': 26, 'STR': 39, '_': 38, 'url': 8, '(': 5, '{': 22, ')': 9, 'Query': 16, 'get': 15, '.': 14, 'URL': 7, '': 6, 'public': 0}
{'}\n': 37, ';': 36, ')': 17, '(': 7, 'Count': 5, 'get': 30, '.': 29, ',': 25, 'Row': 4, '{': 18}
{'}\n': 87, ';': 86, ')': 4, 'MINUTES': 84, '': 79, '.': 82, 'Unit': 81, 'Time': 80, ',': 65, 'NUM': 24, '_': 23, '(': 3, '{': 5, 'public': 0}
{'}\n': 43, '}': 42, ';': 27, 'null': 40, 'return': 24, ':': 23, 'default': 37, '': 25, 'NUM': 22, '_': 2, 'case': 20, '{': 13, ')': 12, 'Id': 7, 'field': 10, '(': 8, 'switch': 14, 'int': 9, 'Thrift': 6, 'By': 5, 'find': 4, 'Fields': 3, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, 'STR': 10, '_': 9, '+': 11, ')': 6, '(': 5, 'Of': 16, 'value': 15, '.': 14, 'String': 2, '': 1, 'return': 8, '{': 7, 'to': 3, 'public': 0}
{'}\n': 326, ';': 134, ')': 19, 'Path': 302, 'Conf': 301, 'temp': 300, ',': 285, 'STR': 319, '_': 318, '(': 55, 'debug': 316, '.': 136, 'log': 314, 'Array': 309, 'Byte': 308, 'to': 307, 'Content': 87, 'mime': 86, 'write': 298, 'Files': 296, '': 21, ']': 207, '[': 206, 'String': 162, '{': 23, 'new': 107, '=': 106, 'Exception': 22, 'throws': 20, 'final': 11}
{'}\n': 94, ';': 41, 'BOOL': 86, '_': 39, 'return': 84, '}': 89, ')': 31, 'i': 37, '(': 5, 'At': 78, 'char': 77, '.': 26, 'if': 54, '{': 13, '++': 51, '<': 43, 'NUM': 40, '=': 24, 'int': 14, 'for': 34, 'buf': 25, 'String': 7, '': 6, 'boolean': 1}
{'}\n': 85, '}': 75, ';': 38, ')': 19, 'In': 35, 'obj': 11, '(': 6, 'close': 78, '{': 29, 'finally': 76, 'Object': 3, 'read': 70, '.': 69, 'return': 66, 'Bytes': 12, 'Stream': 33, 'Input': 32, 'Array': 55, 'Byte': 54, '': 2, 'new': 44, '=': 36, 'try': 39, 'null': 37, 'Exception': 28, 'Found': 27, 'Not': 26, 'Class': 25, ',': 23, 'IOException': 22, 'throws': 20, ']': 10, '[': 9, 'byte': 8, 'final': 7, 'deserialize': 4, 'static': 1, 'public': 0}
{'}\n': 240, ';': 53, '(': 4, '': 1, 'new': 220, ')': 63, 'get': 195, '.': 74, '=': 154, 'interval': 23, ',': 99, '{': 64, '_': 61, 'if': 54, 'Interval': 2, 'public': 0}
{'}\n': 34, ';': 33, ')': 20, 'dict': 26, 'return': 22, '{': 21, '(': 5, 'public': 0}
{'}\n': 8, '{': 7, ')': 6, '(': 5, 'Item': 4, 'Cart': 3, 'Shopping': 2, '': 1}
{'}\n': 136, ';': 45, ')': 6, ',': 53, '(': 5, '.': 17, '*': 92, '-': 90, 'Width': 19, 'width': 81, 'float': 80, 'NUM': 74, '_': 73, '': 46, 'Height': 27, 'get': 11, 'View': 16, '=': 10, '{': 7, 'void': 1, 'private': 0}
{'}\n': 68, ';': 21, ')': 15, '*': 38, 'NUM': 51, '_': 50, '-': 49, 'n': 18, '(': 5, '/': 45, 'sqrt': 28, '.': 27, 'Math': 26, '': 25, 'size': 7, '=': 19, 'int': 6, '{': 16, 'sample': 3, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 97, ';': 96, ')': 85, '(': 5, '.': 89, 'spans': 77, 'Span': 74, '': 17}
{'}\n': 136, ';': 133, ')': 73, '(': 67, '.': 127, 'Analysis': 52, '{': 76, '': 24}
{'}\n': 154, ';': 41, ')': 15, '(': 14, '.': 47, '}': 133, ',': 53, 'String': 26, '': 25, '{': 16, 'Set': 63, 'entry': 57, ':': 58, '>': 56, '<': 50, 'Entry': 49, 'Map': 46, 'for': 42, '=': 30, 'final': 17}
{'}\n': 12, ';': 11, ')': 5, '(': 4, '{': 6, 'positive': 2}
{'}\n': 47, ';': 46, ')': 22, '.': 16, '{': 32, 'Exception': 31, 'Encoding': 30, 'Unsupported': 29, '': 1, 'io': 26, 'java': 15, 'throws': 23, 'enc': 21, 'String': 20, 'lang': 17, ',': 14, '(': 5, 'public': 0}
{'}\n': 63, ';': 36, '.': 31, '': 5, ',': 12, '(': 4, 'public': 0}
{'}\n': 40, ';': 32, 'return': 34, ')': 17, 'msg': 9, '(': 5, 'decode': 4, '{': 18, 'header': 16, 'int': 15, ',': 10, 'ext': 13, 'Boolean': 12, '': 2, 'Message': 8, 'Abstract': 7, 'String': 3, 'public': 0}
{'}\n': 235, '}': 219, ';': 58, '_': 56, '{': 14, 'else': 220, ')': 10, 'class': 16, '(': 6, '.': 87, 'NUM': 57, '>=': 127, 'Value': 110, 'if': 123, 'example': 9, 'Instance': 8, 'classify': 117, 'rl': 99, '=': 35, 'Element': 104, 'next': 103, 'e': 69, 'List': 67, 'Rule': 66, '': 7, 'Elements': 90, 'More': 89, 'has': 88, 'Decision': 82, 'm_': 81, '>': 68, '<': 64, 'Enumeration': 63, 'Weka': 73, 'new': 71, 'for': 60, 'Exception': 13, 'throws': 11, 'Example': 5, 'private': 0}
{'}\n': 19, ';': 18, ')': 6, 'this': 16, '(': 5, 'Code': 4, 'Hash': 13, 'identity': 12, '.': 11, 'System': 10, '': 9, 'return': 8, '{': 7, 'hash': 3, 'int': 2}
{'}\n': 8, '{': 7, ')': 6, '(': 5, 'IO': 4, '': 1, 'private': 0}
{'}\n': 97, '}': 42, ';': 41, '.': 60, 'Key': 6, '(': 7, 'key': 19, 'ECKey': 12, '{': 23, 'else': 43, 'if': 24, ')': 22, '': 8, 'Chain': 15, '>': 13, '<': 10}
{'}\n': 42, ';': 28, '.': 34, ')': 10, 'NUM': 19, '_': 18, '{': 11, 'data': 9, ']': 8, '[': 7, 'byte': 6, '(': 5, 'public': 0}
{'}\n': 280, ';': 85, ')': 41, '(': 5, '}': 252, '.': 139, 'get': 144, '{': 186, ':': 178, 'group': 177, 'String': 95, '': 6, 'for': 159, 'users': 102, '>': 99, ',': 10, '<': 29, 'Map': 89, '=': 66, 'List': 34, 'config': 13, 'File': 12, 'container': 9, 'Container': 8, 'Local': 7, 'void': 1, 'private': 0}
{'}\n': 46, ';': 45, ')': 26, 'metadata': 25, ',': 13, '(': 9, 'Name': 39, 'get': 38, '.': 37, 'address': 16, 'name': 12, 'Record': 6, 'create': 7, 'return': 28, '{': 27, 'Object': 24, 'Json': 23, '': 1, 'Class': 19, 'String': 11, 'static': 4, 'Ignore': 3, 'Gen': 2, '@': 0}
{'}\n': 33, ';': 19, ')': 5, '(': 4, '.': 24, 'thread': 22, 'Thread': 15, '': 10, '=': 9, '{': 6, 'public': 0}
{'}\n': 175, ';': 69, ')': 35, '(': 7, '.': 121, 'inputtext': 34, ',': 11, 'NUM': 134, '_': 66, 'String': 9, 'set': 130, 'st': 118, 'query': 80, 'Statement': 117, 'prepare': 122, 'connection': 120, '=': 81, 'Prepared': 116, '': 8, 'STR': 67, '+': 84, 'effects': 30, 'style': 26, 'outputparams': 22, 'voice': 18, 'locale': 14, 'inputtype': 10, 'null': 44, '}': 70, 'Exception': 64, 'Pointer': 63, 'Null': 62, 'new': 60, 'throw': 59, '{': 39, '==': 43, '||': 45, 'if': 40, 'SQLException': 38, 'throws': 36, 'Audio': 6, 'synchronized': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 9, 'condition': 8, '(': 4, '.': 12, '{': 10, 'Condition': 3, '': 6, 'final': 5, 'public': 0}
{'}\n': 45, ';': 44, ')': 40, 'buffer': 21, '(': 10, 'get': 37, '.': 36, 'Buffer': 35, 'byte': 18, ']': 20, '[': 19, 'read': 5, 'public': 0}
{'}\n': 190, ';': 16, 'STR': 177, '_': 176, '=': 14, 'Name': 13, 'class': 17, ')': 7, 'null': 15, '==': 50, '(': 6, 'if': 70, '}': 119, '.': 64, '{': 11, 'package': 12, 'break': 76, 'line': 61, 'Line': 23, 'read': 65, 'reader': 26, 'String': 60, '': 9, '||': 52, 'while': 46, 'File': 36, 'input': 39, 'Reader': 25, 'new': 28, 'Number': 24, 'IOException': 10, 'throws': 8, 'Class': 5, 'And': 4, 'Package': 3, 'find': 2, 'void': 1, 'public': 0}
{'}\n': 218, ';': 41, 'VPools': 29, 'Target': 28, 'Protected': 27, 'return': 212, '}': 191, ')': 18, 'ex': 198, ',': 69, 'STR': 206, '_': 70, '(': 12, 'error': 203, '.': 57, '{': 19, 'Exception': 197, '': 2, 'catch': 194, 'Pool': 84, 'Virtual': 10, 'get': 166, 'Setting': 133, 'r': 132, 'add': 179, 'URI': 6, 'Null': 154, 'is': 159, 'Getter': 157, 'Value': 156, 'Column': 155, '!': 152, '&&': 151, '!=': 148, 'null': 147, 'if': 145, 'next': 141, 'Itr': 87, 'Settings': 66, 'v': 83, '=': 30, 'Vpool': 63, 'Next': 122, 'has': 121, 'while': 113, 'BOOL': 71, 'URIs': 53, 'vpool': 50, 'class': 68, 'Objects': 94, 'Iterative': 93, 'query': 58, 'Client': 15, 'db': 16, '>': 7, '<': 4, 'Iterator': 75, 'Type': 60, 'By': 59, 'List': 45, 'try': 42, 'Set': 3, 'Hash': 33, 'new': 31, 'Db': 14, 'Pools': 11, 'fetch': 8, 'static': 1, 'public': 0}
{'}\n': 35, ';': 11, 'sum': 7, 'return': 32, ')': 4, '(': 3, 'Count': 27, 'bit': 26, '.': 18, 'Long': 24, '': 23, '+=': 22, 'for': 12, 'NUM': 10, '_': 9, '=': 8, 'int': 1, '{': 5, 'cardinality': 2, 'public': 0}
{'}\n': 25, ';': 24, ')': 10, 'STR': 19, '_': 18, ',': 20, '(': 6, '.': 14, 'lit': 9, 'return': 12, '{': 11, 'String': 2, '': 1}
{'}\n': 93, ';': 22, ')': 13, 'msg': 7, ',': 8, 'tag': 39, '(': 4, '.': 63, 'Log': 84, '': 5, '}': 59, 'args': 12, 'format': 75, 'String': 6, '=': 28, '{': 14, 'NUM': 67, '_': 66, '>': 51, 'length': 64, 'if': 15, 'return': 21, 'LEVEL_': 53, 'Level': 50, 's': 49, 'caller': 27, 'Tag': 42, 'generate': 41, 'Element': 26, 'Trace': 25, 'Stack': 24, 'Caller': 30, 'get': 29, 'allow': 18, '!': 17, '...': 11, 'Object': 10, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 46, ';': 27, ')': 10, '(': 6, 'Components': 42, 'init': 41, 'STR': 37, '_': 36, 'String': 34, 'get': 33, '.': 18, 'res': 31, 'Title': 29, 'set': 28, 'MODAL': 25, 'DOCUMENT_': 24, '': 1, 'Type': 5, 'Modality': 20, 'Dialog': 17, ',': 15, 'parent': 9, 'super': 12, '{': 11, 'JFrame': 8, 'Key': 3, 'public': 0}
{'}\n': 1247, ';': 466, 'NUM': 434, '_': 433, 'return': 1238, '}': 1242, ')': 12, '(': 7, 'Update': 612, 'execute': 611, '.': 398, 'cstmt': 629, ',': 439, 'Equals': 604, 'assert': 603, 'Time': 478, 'Date': 567, 'test': 475, 'STR': 1024, 'Object': 470, 'set': 399, 'VARCHAR': 529, '': 8, 'JDBCType': 526, 'Int': 400, 'pstmt': 11, 'Statement': 10, 'Callable': 622, '=': 630, '{': 16, 'instanceof': 620, 'if': 617, 'Exception': 15, 'throws': 13, 'Prepared': 9, 'DTTypes': 6, 'Data': 4, 'Test': 3, 'insert': 2, 'int': 1, 'private': 0}
{'}\n': 30, ';': 22, ')': 9, 'listener': 8, '(': 4, '.': 13, 'listeners': 23, 'STR': 20, '_': 19, ',': 18, 'Null': 15, 'not': 14, 'Validate': 12, '': 6, '{': 10, 'L': 7, 'final': 5, 'Listener': 3, 'void': 1, 'public': 0}
{'}\n': 74, '}': 33, '{': 5, ')': 4, 'e': 39, 'Exception': 38, 'Interrupted': 37, '': 18, '(': 3, 'catch': 34, ';': 31, 'sleep': 21, '.': 20, 'Thread': 19, '_': 14, 'run': 2, 'void': 1, 'public': 0}
{'}\n': 47, ';': 32, ')': 14, 'actions': 43, '(': 4, 'Mask': 41, 'get': 35, ',': 18, 'Name': 36, 'init': 33, 'Object': 3, 'Read': 28, 'default': 27, '.': 6, 's': 13, '{': 24, 'Exception': 23, 'Found': 22, 'Not': 21, 'Class': 20, '': 9, 'IOException': 17, 'throws': 15, 'Stream': 12, 'Input': 11, 'io': 7, 'java': 5, 'read': 2, 'void': 1, 'private': 0}
{'}\n': 26, ';': 25, '.': 22, ')': 21, 'Index': 4, '(': 8, 'get': 17, 'int': 1, 'public': 0}
{'}\n': 59, '}': 58, ';': 34, ')': 11, '(': 4, '.': 19, '_': 41, '': 6, 'wb': 10, 'void': 0}
{'}\n': 29, ';': 28, ')': 10, 'OPTIONS': 26, 'NO_': 25, '': 7, ',': 23, 's': 9, '(': 6, 'decode': 5, 'return': 19, '{': 18, 'String': 8, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 90, ';': 88, ')': 7, '(': 4, 'URL': 55, 'to': 54, '.': 53, 'f': 31, '{': 48, 'File': 30, '': 1, 'static': 9, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 248, ';': 38, ')': 9, '(': 5, 'return': 230, '}': 105, '.': 16, '=': 150, '{': 10, '_': 20, 'STR': 21, 'if': 135, 'NUM': 60, '-': 58, 'string': 8, 'String': 7, '': 6}
{'}\n': 151, ';': 118, '}': 143, ')': 32, 'Var': 12, 'env': 39, '(': 49, 'add': 126, '.': 103, 'List': 124, 'Env': 11, '{': 33, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 46, ';': 20, ')': 11, 'caseless': 10, ',': 8, 'i': 16, '(': 4, 'At': 38, '.': 24, 'str': 7, 'length': 25, '<': 22, 'NUM': 19, '_': 18, '=': 17, 'int': 15, 'for': 13, '{': 12, 'boolean': 9, 'String': 6, '': 5, 'Class': 3, 'make': 2, 'void': 1, 'public': 0}
{'}\n': 268, ';': 266, ')': 183, '(': 181, 'Time': 163, '.': 217, '': 213, 'Stamp': 164, '{': 184, 'update': 162, 'void': 1}
{'}\n': 109, ';': 64, ')': 9, '(': 5, '.': 39, 'matcher': 34, '=': 35, 'Matcher': 33, '': 1, '{': 10, 'pattern': 8, 'Pattern': 7}
{'}\n': 89, ')': 6, '(': 5, 'Array': 22, 'Byte': 21, 'to': 76, '.': 75, ';': 70, 'buf': 35, 'len': 47, 'new': 37, '=': 36, 'NUM': 30, '_': 29, 'Stream': 24, 'Output': 23, '': 8, '{': 10, 'IOException': 9, 'throws': 7}
{'}\n': 46, ';': 35, ')': 11, 'Item': 4, 'content': 9, '(': 5, 'add': 2, '.': 39, 'Items': 16, '}': 36, '>': 32, 'Content': 3, '': 6, '<': 28, 'List': 27, 'Array': 26, 'new': 24, '=': 23, '{': 12, 'null': 18, '==': 17, 'if': 13, 'public': 0}
{'}\n': 59, ';': 29, 'b64': 55, ')': 4, '(': 3, '=': 12, 'String': 10, '': 6, '{': 8, 'throws': 5}
{'}\n': 46, '}': 26, ';': 25, ')': 7, '(': 4, 'min': 22, '.': 21, 'Math': 34, '': 33, '=': 32, '{': 28, 'else': 27, 'NUM': 17, '_': 16, 'public': 0}
{'}\n': 121, ';': 119, ')': 31, '(': 25, 'emit': 21, '{': 32, '': 14}
{'}\n': 8, '{': 7, ')': 6, '(': 5, 'Completed': 4, 'public': 0}
{'}\n': 137, ';': 135, ')': 14, '.': 100, 'r': 10, ',': 50, 'NUM': 21, '_': 20, '(': 7, '{': 15, '': 8, 'void': 2, 'public': 0}
{'}\n': 118, ';': 49, ')': 16, 'BOOL': 68, '_': 25, ',': 66, ']': 13, 'NUM': 26, '[': 12, 'Strings': 15, 'code': 14, '(': 9, 'Bytes': 58, 'To': 57, 'codes': 56, '}': 50, 'List': 43, 'as': 42, '.': 22, 'Arrays': 40, '': 2, '+': 38, 'STR': 37, 'Exception': 34, 'State': 33, 'Illegal': 32, 'new': 30, 'throw': 29, '{': 17, '!=': 24, 'length': 23, 'if': 18, 'String': 11, 'Codes': 8, 'Unprintable': 6, 'parse': 5, 'Handler': 4, 'Char': 3, 'static': 1, 'private': 0}
{'}\n': 61, ';': 59, ')': 43, '(': 40, 'pending': 33, '': 29}
{'}\n': 88, ';': 55, ')': 7, '(': 4, 'return': 72, 'max': 63, 'Value': 20, 'end': 23, ',': 17, 'start': 19, '.': 33, 'Math': 32, '': 1, 'min': 34, '{': 26, 'float': 10, 'static': 9, 'public': 8, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 141, ';': 46, ')': 17, '(': 5, 'Connected': 4, 'is': 3, '.': 67, 'Info': 85, 'network': 84, '&&': 109, 'null': 34, '!=': 107, '': 12, 'get': 68, 'BOOL': 45, '_': 44, 'return': 43, '==': 23, 'if': 19, '{': 18, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 52, '}': 51, ';': 43, ')': 7, 'position': 6, '(': 4, 'Item': 3, 'notify': 44, '.': 29, 'List': 14, 'Data': 13, 'm': 26, '{': 8, 'size': 30, '<': 25, '&&': 18, 'NUM': 22, '_': 21, '>=': 20, 'Empty': 15, 'is': 12, '!': 11, 'if': 9, 'int': 5, 'void': 1, 'public': 0}
{'}\n': 99, '}': 98, ';': 33, 'Channel': 24, '': 59, '=': 54, ')': 28, '(': 5, 'offset': 42, ',': 9, 'private': 0}
{'}\n': 766, '}': 151, ';': 44, ')': 17, 'BOOL': 762, '_': 28, '(': 5, 'Bounds': 759, 'Image': 3, 'update': 757, 'Matrix': 4, 'm': 21, 'set': 690, '.': 40, 'View': 688, '{': 18, 'else': 552, 'Animation': 714, 'start': 733, ',': 8, 'Points': 85, 'State': 718, 'End': 717, 'animate': 16, 'if': 19, 'By': 86, 'map': 83, 'Rect': 118, 'crop': 356, 'Window': 692, 'Crop': 686, 'Overlay': 687, 'Zoom': 232, '*': 573, 'Y': 134, 'Offset': 387, 'X': 120, 'offset': 666, 'Translate': 50, 'post': 49, '/': 63, 'height': 10, '+': 589, 'bottom': 630, '-': 54, 'top': 623, 'max': 411, 'Math': 156, '': 113, 'min': 158, '=': 154, 'width': 7, 'right': 588, 'left': 581, 'Bottom': 540, 'get': 58, 'Utils': 115, 'Bitmap': 22, 'Height': 74, 'Top': 521, 'center': 13, 'NUM': 29, ':': 407, '?': 404, '>': 27, 'Right': 457, 'Width': 59, 'Left': 438, 'Center': 119, 'Scale': 194, 'scale': 153, 'Enabled': 233, 'Auto': 231, '&&': 25, '||': 204, '<': 219, 'INSIDE': 216, 'CENTER_': 215, 'Type': 195, '==': 196, 'CENTER': 203, 'FIT_': 202, 'float': 6, 'Rotated': 96, 'Degrees': 95, 'Rotate': 107, 'reset': 41, 'null': 24, '!=': 23, 'boolean': 12, 'apply': 2, 'void': 1, 'private': 0}
{'}\n': 23, ';': 22, ')': 12, 's': 11, '(': 6, 'add': 3, '.': 17, 'Listeners': 16, '{': 13, 'Listener': 5, 'Up': 9, 'Start': 8, '': 7, 'Startup': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 31, ')': 13, '(': 5, '.': 25, 'rsrc': 12, 'null': 19, '!=': 18, 'if': 15, '{': 14, '': 7, 'Nullable': 8, '@': 6, 'Quiet': 4, 'close': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 110, ';': 33, 'return': 106, ')': 32, '(': 10, '': 1, 'final': 54, '>': 41, '<': 4, 'Future': 3, 'Completable': 2, 'new': 45, '=': 44, '.': 28, 'public': 0}
{'}\n': 341, ';': 28, ')': 14, 'STR': 338, '_': 25, ',': 11, 'material': 51, '(': 6, 'Spec': 333, 'Key': 3, 'Secret': 331, '': 2, 'new': 22, 'return': 328, 'Parity': 323, 'odd': 322, 'NUM': 26, '<<': 89, ']': 9, '[': 8, 'Bytes': 20, 'key': 19, 'byte': 7, '=': 21, '>': 104, '&': 100, '|': 92, 'offset': 13, 'bytes': 10, 'arraycopy': 32, '.': 31, 'System': 30, '{': 15, 'int': 12, 'DESKey': 5, 'create': 4, 'static': 1, 'private': 0}
{'}\n': 32, ';': 31, ')': 11, '(': 7, 'return': 16, '{': 15, '': 1, 'Js': 2}
{'}\n': 50, ';': 18, ')': 5, '(': 4, 'String': 2, 'to': 45, '.': 29, 'sb': 10, 'return': 42, 'Text': 35, 'append': 30, 'Builder': 9, '': 1, 'new': 12, '=': 11, '{': 6, 'public': 0}
{'}\n': 855, ';': 47, 'BOOL': 98, '_': 97, 'return': 741, '}': 159, ')': 26, '(': 4, 'Token': 247, 'add': 246, '.': 163, 'tokens': 13, 'XPTRTOKEN_': 255, '': 5, 'Tokens': 12, ',': 10, 'Symbol': 6, 'Table': 7, 'symbol': 8, '=': 78, 'NUM': 191, '-': 771, 'ch': 32, '{': 30, 'else': 767, 'Offset': 21, 'current': 20, 'At': 165, 'char': 164, 'data': 17, 'end': 24, '<': 750, 'if': 147, ']': 203, '[': 201, 'Object': 733, 'new': 731, 'STR': 454, 'Error': 726, 'report': 725, '==': 152, 'scan': 2, '++': 234, ':': 197, 'CHARTYPE_': 195, 'case': 210, 'chartype': 185, 'switch': 205, 'Map': 200, 'ASCIIChar': 199, 'f': 198, 'NONASCII': 196, '?': 193, '>=': 189, 'byte': 184, 'break': 157, 'while': 95, 'null': 79, 'name': 49, 'String': 16, 'int': 19, 'XNIException': 29, 'throws': 27, 'Expr': 3, 'boolean': 1, 'private': 0}
{'}\n': 52, ';': 51, ')': 25, 'Increment': 24, 'output': 19, 'Line': 3, 'Count': 16, '(': 4, '': 9, 'new': 31, '.': 28, '{': 26, 'int': 5, ',': 8, 'File': 12, 'String': 10, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 38, '}': 37, ';': 14, ')': 8, '(': 3, '.': 23, 'share': 24, '_': 12, '=': 11, '{': 9, 'String': 2, '': 1, 'public': 0}
{'}\n': 480, '}': 447, ';': 38, ')': 23, 'maximum': 435, ',': 13, 'minimum': 423, '(': 9, 'Range': 3, '': 2, 'new': 470, 'return': 463, '{': 24, 'else': 467, 'null': 29, 'INFINITY': 73, 'POSITIVE_': 459, '.': 28, 'Double': 69, '==': 454, 'if': 285, 'max': 440, 'Math': 426, '=': 67, 'min': 428, 'N': 417, 'Na': 416, 'is': 415, '!': 411, 'item': 149, 'series': 123, 'get': 154, 'double': 65, 'XValue': 198, '++': 175, 'Count': 150, '<': 170, 'NUM': 167, '_': 35, 'int': 136, 'for': 161, 'Item': 155, 'dataset': 12, 'Key': 124, 'Of': 142, 'index': 141, 'next': 132, 'iterator': 101, 'Comparable': 122, 'Next': 116, 'has': 115, 'while': 111, 'Keys': 18, 'Series': 17, 'visible': 16, 'Iterator': 100, 'STR': 36, 'Permitted': 31, 'Not': 30, 'Checks': 27, 'Param': 26, 'Interval': 22, 'include': 21, 'boolean': 20, 'List': 15, 'Find': 6, 'To': 5, 'iterate': 4, 'static': 1, 'public': 0}
{'}\n': 8, '{': 7, ')': 6, '(': 5, 'Client': 4, '': 1, 'public': 0}
{'}\n': 51, '}': 50, ';': 49, ')': 15, 'attr': 9, '(': 5, '{': 19, '.': 30, ',': 11, '': 6}
{'}\n': 124, ';': 54, ')': 30, 'Map': 4, 'zoning': 36, '(': 5, 'Zoning': 3, 'set': 116, '.': 42, 'mask': 11, '}': 113, 'Wwn': 98, 'Port': 26, 'get': 43, 'Info': 34, 'zone': 60, ',': 12, 'Initiator': 17, 'Name': 89, 'Zone': 33, 'STR': 76, '_': 75, 'info': 73, 'log': 71, '{': 31, 'values': 66, ':': 62, '': 6, 'for': 55, 'Ports': 29, 'storage': 28, 'initiators': 19, 'Initiators': 44, 'Controller': 41, 'Device': 40, 'network': 39, '=': 38, '>': 18, 'Storage': 25, '<': 15, 'List': 14, 'Mask': 10, 'Export': 9, 'Managed': 8, 'Un': 7, 'update': 2, 'void': 1, 'private': 0}
{'}\n': 20, ';': 19, ')': 8, 'm': 15, 'Answer': 13, 'Invitation': 2, '{': 9, '(': 7, 'Status': 3, '': 1, 'public': 0}
{'}\n': 644, ';': 122, 'return': 639, '}': 467, ')': 28, 'NUM': 170, '_': 169, '(': 6, 'Row': 85, '.': 82, '{': 29, 'if': 71, '=': 137, ',': 378, '-': 364, 'Count': 95, 'get': 83, 'table': 9, 'JTable': 8, '': 7}
{'}\n': 110, ';': 44, 'return': 107, '}': 106, ']': 17, '[': 16, 'x': 18, 'y': 81, '(': 8, '.': 78, '': 76, 'NUM': 43, '_': 42, 'i': 40, '{': 56, ')': 31, '<': 46, '=': 41, 'int': 39, 'for': 37, 'double': 13}
{'}\n': 390, ';': 62, '}': 262, '=': 52, ']': 49, '[': 48, 'NUM': 76, '_': 75, '++': 173, ')': 138, '<': 272, 'int': 36, '(': 224, 'for': 263, '.': 133, '{': 158, 'length': 134, 'new': 53, '': 15, 'private': 0}
{'}\n': 261, '}': 258, ';': 186, ')': 57, '(': 56, '.': 217, '{': 232, '=': 74, '>': 49, 'String': 48, '': 44, '<': 46, 'Iterator': 190, 'Set': 45, 'key': 54, 'public': 0}
{'}\n': 65, ';': 58, '}': 59, ')': 19, '.': 34, 'Selector': 49, '(': 8, '': 2, 'Key': 4, 'for': 21, '{': 20, 'null': 18, 'if': 14}
{'}\n': 161, ';': 45, ')': 13, '(': 6, '}': 145, 'next': 141, '.': 83, 'pi': 82, ']': 56, 'NUM': 55, '_': 54, '[': 53, 'coords': 98, 'point': 115, '': 7, 'Segment': 96, 'current': 95, '{': 14, 'Done': 85, 'is': 84, '!': 81, 'while': 79, 'double': 11, 'Path': 31, 'new': 35, 'Iterator': 32, '=': 19, ',': 10, 'static': 1, 'public': 0}
{'}\n': 52, '}': 48, ';': 27, ')': 13, 'NUM': 33, '_': 32, '+': 43, 'lastdot': 17, '(': 6, 'substring': 40, '.': 20, '{': 35, 'if': 28, 'Of': 23, 'Index': 22, 'last': 21, '=': 18, 'int': 16, 'String': 3, '': 2, 'static': 1}
{'}\n': 375, '}': 184, ';': 80, ')': 45, '(': 6, 'dispose': 189, '.': 39, 'g': 199, '{': 46, 'finally': 185, 'Height': 359, 'get': 73, 'Buffer': 22, ',': 12, 'Width': 350, 'NUM': 176, '_': 175, 'Rect': 337, 'fill': 336, 'Background': 329, 'target': 15, 'Color': 152, 'set': 323, 'try': 164, 'Graphics': 198, '=': 68, '': 1, 'BACKGROUND': 303, 'Contents': 42, 'Flip': 41, 'Capabilities': 38, '==': 51, 'Action': 44, 'flip': 5, 'if': 47, 'peer': 11, 'Buffers': 278, 'swap': 277, 'Data': 83, 'OGLSurface': 274, 'return': 248, 'PRIOR': 267, 'else': 195, 'null': 161, 'y2': 34, 'x2': 31, 'y1': 28, 'x1': 25, 'Image': 19, 'draw': 168, 'bbg': 141, 'white': 159, 'black': 154, 'bbsd': 128, 'D': 140, 'Graphics2': 139, 'Sun': 145, 'new': 143, 'Surface': 65, 'vsd': 113, 'sd': 84, 'Screen': 102, 'Off': 101, 'instanceof': 98, 'Primary': 89, 'vsm': 67, 'Manager': 66, 'COPIED': 61, 'int': 24, 'Volatile': 18, 'Component': 14, 'Peer': 10, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 27, ';': 18, 'return': 19, ')': 9, '(': 4, 'add': 13, '.': 12, '{': 10, 'property': 8, '': 5, 'public': 0}
{'}\n': 221, ';': 89, ')': 68, '.': 135, ',': 191, '(': 28, '': 173, 'NUM': 149, '_': 148, '+': 143, '=': 107, 'sum': 114, 'diff': 110, ']': 76, '[': 74, 'double': 6, '{': 69}
{'}\n': 38, ';': 25, ')': 9, '.': 15, '{': 13, 'IOException': 12, '': 5, 'throws': 10, 'Data': 6, '(': 4, 'public': 0}
{'}\n': 71, ';': 70, 'ns': 45, '(': 6, '.': 30, ')': 43, 'String': 12, '': 11}
{'}\n': 186, ';': 21, 'tab': 25, 'return': 183, '}': 150, 'b': 111, '|': 132, ')': 11, 'NUM': 18, '_': 17, '<<': 135, 'g': 96, '(': 7, 'r': 81, '=': 16, ']': 3, '++': 87, 'i': 61, '[': 2, '&': 90, 'j': 67, 'c': 33, 'int': 1, '{': 12, 'ncolors': 10, '<': 75, 'while': 72, 'new': 35, '.': 45, 'try': 41, 'nbytes': 15, 'byte': 30, 'null': 27, '*': 19, 'Table': 6, 'Color': 5, 'read': 4, 'protected': 0}
{'}\n': 103, ';': 102, 'Store': 15, 'Key': 7, '': 1, 'new': 83, 'certificate': 68, ']': 67, '[': 66, 'Certificate': 19, ')': 35, '(': 10, 'Array': 59, 'Char': 58, 'to': 57, '.': 40, '{': 36, 'String': 29, ',': 16, 'private': 25, 'X509': 18, 'key': 14}
{'}\n': 21, ';': 20, ')': 8, 'file': 7, '(': 4, 'contains': 16, '.': 15, 'return': 10, '{': 9, 'File': 6, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 542, ';': 52, ')': 45, '(': 4, 'Size': 37, 'Text': 86, 'Legend': 3, 'get': 104, '.': 56, 'renderer': 12, '+': 75, 'size': 48, 'round': 528, 'Math': 117, '': 5, 'return': 524, '}': 231, 'extra': 294, '+=': 289, 'X': 66, 'current': 65, 'paint': 41, ',': 8, 'NUM': 51, '_': 50, 'Y': 72, 'line': 170, 'text': 195, 'canvas': 7, 'String': 15, 'draw': 2, 'i': 138, 'r': 156, 'Shape': 175, '{': 46, 'calculate': 44, '!': 466, 'if': 53, 'STR': 461, 'nr': 430, 'substring': 452, '=': 49, 'widths': 251, 'Width': 176, 'max': 391, 'BOOL': 440, 'break': 434, 'int': 1, '-': 77, 'width': 30, 'Vertical': 408, 'is': 57, 'right': 24, 'float': 47, 'Exceed': 323, 'left': 21, '&&': 321, '>': 318, 'sum': 275, 'value': 283, ':': 284, 'for': 135, 'Widths': 267, ']': 17, 'length': 123, '[': 16, 'new': 253, 'LTGRAY': 244, 'Color': 221, 'set': 85, 'else': 232, 'Count': 130, 'Renderer': 11, 'Series': 128, '==': 207, 'titles': 18, 'Item': 188, 'Show': 58, 'final': 168, 'At': 163, 'Simple': 153, '++': 149, 'Length': 114, 's': 113, '<': 144, 'min': 119, 'LEFT': 93, 'Align': 87, 'legend': 36, 'height': 33, 'y': 27, 'boolean': 43, 'Paint': 40, 'Default': 10, 'Canvas': 6, 'protected': 0}
{'}\n': 29, ';': 28, ')': 12, 'repository': 10, '(': 16, 'Repository': 3, 'public': 0}
{'}\n': 76, ';': 14, ')': 5, 'BOOL': 12, '_': 11, '(': 4, 'Enabled': 9, 'set': 7, '{': 6, 'Buttons': 3, 'disable': 2, 'void': 1, 'private': 0}
{'}\n': 186, ';': 19, 'return': 182, '}': 181, ')': 9, 'NUM': 26, '_': 25, '(': 5, '.': 116, 'int': 11, '=': 13, 'i': 23, 'num': 41, '{': 10, '++': 36, 'for': 20, 'Number': 4, 'public': 0}
{'}\n': 74, ';': 72, ')': 27, 'start': 13, '(': 25, 'substring': 61, '.': 23, 'str': 9, 'length': 24, 'int': 12, 'String': 8, '': 1}
{'}\n': 209, ';': 45, '(': 121, 'List': 184, '': 36, ')': 91, '=': 48, '}': 146, 'sort': 124, 'get': 119, '.': 118, 'Sort': 99, '{': 92, ']': 57, 'new': 49}
{'}\n': 98, ';': 20, ')': 12, ',': 94, '(': 4, '.': 48, '{': 13, '': 5, 'add': 2, 'void': 1}
{'}\n': 105, '}': 103, ';': 19, ')': 9, '(': 16, 'throw': 90, '{': 10, 'STR': 51, '_': 25, 'i': 23, 'At': 45, 'char': 44, '.': 31, 'value': 8, '==': 49, '++': 37, 'length': 32, '<': 29, 'NUM': 26, '=': 24, 'int': 22, 'for': 20, 'String': 7, '': 1}
{'}\n': 23, ';': 22, ')': 11, 'comparator': 10, ',': 19, '(': 3, 'sort': 2, '.': 15, 'Collections': 14, '': 4, '{': 12, '>': 9, '<': 6, 'Comparator': 5, 'void': 1, 'public': 0}
{'}\n': 28, ';': 21, ')': 7, '(': 3, '.': 23, 'writer': 6, '{': 11, '': 4, 'throws': 8, 'Writer': 5, 'void': 1, 'public': 0}
{'}\n': 128, ';': 78, 'BOOL': 126, '_': 57, 'return': 124, '}': 79, ')': 24, 'STR': 119, '==': 117, 'i': 83, '(': 7, 'At': 69, 'char': 68, '.': 29, 'name': 16, 'length': 91, '{': 75, 'NUM': 58, 'if': 26, 'String': 15, '': 14, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 56, ';': 32, ')': 20, '(': 4, 'Message': 51, 'get': 50, 'add': 48, '.': 47, 'List': 34, 'err': 33, 'NUM': 42, '_': 41, 'Array': 38, '': 1, 'new': 36, '=': 35, 'super': 22, '{': 21, 'Exception': 3, 'PWReset': 2, 'public': 0}
{'}\n': 110, ';': 31, '(': 23, '.': 84, 'Arrays': 83, '': 82, 'array1': 13, '}': 32, 'return': 29, '{': 21, ')': 20, 'null': 26, '==': 25, 'array2': 19, 'if': 22, ']': 12, '[': 11, ',': 14, 'static': 1}
{'}\n': 211, ';': 50, ')': 14, 'state': 100, '.': 45, '': 5, '(': 4, ':': 150, '_': 105, '+': 107, 'STR': 106, 'get': 46, '=': 43, 'return': 36, '!': 18, 'if': 16, '{': 15, 'window': 8}
{'}\n': 358, '}': 347, ';': 162, ')': 137, '(': 82, 'Node': 46, 'get': 172, '.': 171, '=': 168, 'int': 242, '{': 140, '!=': 185, '': 31, 'xctxt': 123, 'Context': 118, 'DTM': 59, 'public': 3}
{'}\n': 111, ';': 31, 'top': 8, 'return': 108, '}': 107, ')': 12, ']': 34, 'i': 68, '[': 33, 'values': 35, '(': 9, 'Local': 5, 'as': 96, '.': 38, 'Packed': 92, '': 1, 'add': 89, '{': 13, '++': 84, 'length': 81, '<': 3, '&&': 76, 'n': 11, 'NUM': 71, '_': 70, '=': 22, 'int': 10, 'for': 65, 'instance': 60, 'Comparator': 58, 'Int': 40, 'Reverse': 56, ',': 54, 'Sort': 51, 'Quick': 50, 'parallel': 49, 'Arrays': 47, 'Array': 25, 'to': 39, 'data': 37, '>': 7, 'List': 2, 'new': 23, 'public': 0}
{'}\n': 67, ';': 23, ')': 10, 'NUM': 46, '_': 45, '(': 6, 'group': 40, '.': 18, 'matcher': 14, 'return': 58, 'signature': 9, ',': 54, 'STR': 53, 'error': 50, 'logger': 48, '!=': 44, 'Count': 41, '&&': 37, 'b': 25, '!': 35, 'if': 33, 'matches': 29, '=': 15, 'boolean': 24, 'RE': 17, 'sig': 16, 'Matcher': 13, '': 2, '{': 11, 'String': 3, 'grab': 4, 'static': 1, 'public': 0}
{'}\n': 53, ';': 52, ')': 23, ',': 43, 'null': 44, '(': 7, '.': 33, '': 1, '=': 26, '{': 24, 'td': 22}
{'}\n': 47, ';': 42, 'return': 44, '}': 43, '{': 11, ')': 10, '(': 9, 'm_': 21, 'Counter': 22, 'final': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 119, ';': 118, ')': 22, '(': 6, 'value': 20, '.': 54, 'Byte': 2, '': 1, 'return': 24, '{': 23, 'String': 10}
{'}\n': 71, ';': 57, 'Append': 22, 'to': 21, '.': 51, '}': 58, ')': 13, '(': 10, '{': 14, 'NUM': 39, '_': 38, '=': 37, '': 1, 'public': 0}
{'}\n': 108, ';': 65, ')': 19, '(': 13, 'Context': 81, 'Request': 12, 'get': 52, 'To': 77, 'forward': 76, '.': 58, 'vb': 71, 'Map': 69, 'Session': 68, 'Pg': 67, 'pass': 66, '': 14, 'Bean': 49, 'View': 48, '{': 20, 'event': 18, 'Event': 17, 'Invocation': 16, 'handle': 10, 'void': 9, 'public': 8}
{'}\n': 22, ';': 21, 'cause': 7, ')': 8, '(': 4, 'Message': 15, 'get': 14, '.': 13, 'super': 10, '{': 9, 'Throwable': 6, '': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 5, '(': 4, 'distance_square': 13, 'sqrt': 11, '.': 10, 'Math': 9, '': 8, 'return': 7, '{': 6, 'distance': 3, 'double': 2, 'public': 0}
{'}\n': 74, ';': 72, ')': 26, 'Test': 29, '(': 12, 'm': 41, 'Run': 30, '{': 27, 'public': 3}
{'}\n': 39, ';': 38, ')': 37, 'this': 35, '(': 18, 'Code': 33, 'Hash': 32, 'identity': 31, '.': 30, 'System': 29, '': 1, 'int': 10}
{'}\n': 162, ';': 23, ')': 9, 'STR': 22, '_': 21, '+': 36, 'msg': 19, '(': 4, 'println': 32, '.': 31, 'debug': 26, 'null': 28, '!=': 27, 'if': 24, '}': 63, 'e': 70, ',': 85, 'Exception': 15, 'Validator': 14, 'Path': 13, 'Cert': 12, '': 5, 'new': 74, 'throw': 73, '{': 16, 'catch': 64, 'Reason': 96, 'Basic': 95, 'NUM': 92, '-': 90, 'cert': 8, 'try': 53, '=': 20, 'String': 18, 'throws': 10, 'Certificate': 7, 'X509': 6, 'verify': 2, 'void': 1, 'private': 0}
{'}\n': 203, ';': 93, 'return': 199, ')': 18, '(': 7, 'digest': 77, '.': 155, 'Digest': 53, 'message': 54, '=': 56, ']': 4, '[': 3, 'byte': 2, 'final': 8, 'Message': 52, '': 9, '{': 40, 'throws': 19, ',': 12, 'static': 1, 'public': 0}
{'}\n': 9, ';': 8, 'rows': 2, 'return': 6, ')': 4, '(': 3, 'public': 0}
{'}\n': 33, ';': 32, ')': 11, ',': 19, '_': 20, 'array': 10, '(': 17, 'byte': 7, 'return': 13, '{': 12, ']': 9, '[': 8, 'static': 1, 'public': 0}
{'}\n': 91, ';': 33, ')': 12, 'wrapper': 21, '(': 7, 'Array': 44, 'Byte': 43, 'to': 42, '.': 35, 'Nano': 10, 'Message': 9, '': 8, 'return': 79, 'Value': 75, 'get': 74, 'checksum': 51, '=': 22, 'payload': 36, 'update': 61, 'CRC32': 50, 'new': 23, 'proto': 11, 'Checked': 5, '{': 13, 'Bytes': 6, 'write': 4, ']': 3, '[': 2, 'byte': 1, 'private': 0}
{'}\n': 170, ';': 83, ')': 13, ',': 7, '(': 4, '.': 69, 'Math': 68, '': 67, 'int': 8, 'scale': 46, '=': 66, '{': 14, 'public': 0}
{'}\n': 36, ';': 35, ')': 15, 'Identifier': 9, 'sound': 8, '(': 5, '.': 22, 'Sounds': 21, 'builtin': 20, '': 6, 'String': 7, 'Sound': 4}
{'}\n': 361, ';': 74, ')': 61, '(': 7, '.': 77, 'return': 281, '}': 266, 'STR': 81, '_': 80, '': 1, 'append': 78, '{': 150, 'if': 139, '+': 82, 'TPLNAME': 90, 'TPLID_': 89, 'TABLE_': 88, 'Constants': 85, 'Generator': 84, 'Buffer': 65, 'String': 64, 'new': 68, '=': 67, 'boolean': 17, 'private': 0}
{'}\n': 61, ';': 23, 'NUM': 22, '_': 21, '-': 57, 'return': 51, '}': 54, 'i': 19, '{': 15, ')': 14, ']': 12, '[': 11, 'table': 13, '(': 5, 'equals': 38, '.': 27, 'name': 8, 'if': 34, '++': 31, 'length': 28, '<': 25, '=': 20, 'int': 2, 'for': 16, ',': 9, 'String': 7, '': 6, 'Name': 4, 'find': 3, 'static': 1, 'public': 0}
{'}\n': 806, ';': 51, 'b2': 128, 'return': 363, '}': 342, ')': 24, '(': 5, 'recycle': 53, '.': 70, 'b1': 557, '{': 25, 'source': 12, '!=': 48, '||': 105, 'if': 93, 'Height': 20, 'target': 15, ',': 9, 'Width': 16, 'NUM': 50, '_': 49, '/': 177, 'dy1': 685, 'dx1': 663, 'Bitmap': 3, 'create': 133, '': 2, '=': 41, '-': 75, 'get': 71, 'max': 170, 'Math': 168, 'int': 14, '&&': 98, 'else': 503, 'BOOL': 611, 'scaler': 8, 'null': 328, 'scale': 39, 'Scale': 495, 'set': 345, '>': 464, '<': 102, 'F': 370, 'bitmap': 368, 'float': 367, 'Aspect': 416, 'view': 427, 'c': 154, 'dst': 255, 'src': 203, 'draw': 319, 'Y': 81, 'X': 67, 'Rect': 202, 'new': 156, 'height': 282, 'width': 264, 'min': 221, '+': 217, 'YHalf': 184, 'delta': 66, 'XHalf': 165, 'Canvas': 153, 'ARGB_8888': 149, 'Config': 146, 'Up': 40, '!': 95, '&': 44, 'options': 23, 'boolean': 38, 'Matrix': 7, 'transform': 4, 'static': 1, 'private': 0}
{'}\n': 66, '}': 65, ';': 64, ')': 27, 'track': 59, '(': 5, '.': 51, '{': 28, 'tracks': 35, 'Track': 3, '': 9}
{'}\n': 21, ';': 20, ')': 6, '(': 5, 'Millis': 14, 'Time': 4, 'current': 3, '.': 11, 'System': 10, '': 9, 'return': 8, '{': 7}
{'}\n': 80, ';': 79, ')': 66, ',': 9, '(': 6, 'Sortable': 38, 'To': 37, '.': 35, 'Utils': 34, 'Numeric': 33, '': 32, 'Bytes': 39, '[': 21, 'byte': 14, 'double': 7, 'static': 1}
{'}\n': 32, ';': 31, ')': 16, 'val': 15, ',': 10, 'off': 12, 'obj': 9, '(': 6, 'Volatile': 5, 'put': 3, '.': 20, 'UNSAFE': 19, '': 7, '{': 17, 'long': 11, 'Object': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 130, ';': 31, ')': 12, '(': 3, 'draw': 126, 'hs': 63, ',': 6, 'ws': 51, 'NUM': 19, '_': 18, '/': 109, '-': 107, 'ys': 42, 'xs': 33, 'Double': 104, '': 23, '.': 95, 'D': 101, 'Ellipse2': 100, 'new': 22, 'offscreen': 94, 'else': 93, 'y': 8, 'x': 5, 'pixel': 86, '<=': 77, '&&': 80, 'if': 14, 'r': 11, '*': 58, 'Y': 45, 'factor': 53, '=': 34, 'double': 4, 'X': 36, 'scale': 35, 'STR': 29, 'Exception': 26, 'Argument': 25, 'Illegal': 24, 'throw': 21, '<': 17, '{': 13, 'void': 1, 'public': 0}
{'}\n': 75, '}': 46, ';': 16, ')': 7, 'e': 51, ',': 37, '(': 4, 'String': 67, 'to': 66, '.': 14, 'FINE': 62, '': 9, 'Level': 59, 'log': 54, '{': 8, 'IOException': 50, 'catch': 47, 'length': 43, '_newline': 36, 'NUM': 39, '_': 38, 'write': 34, 'out': 11, 'try': 30, 'v': 6, 'print': 25, 'return': 23, 'null': 21, '==': 20, 'if': 17, 'this': 13, '=': 12, 'Writer': 10, 'println': 3, 'void': 2, 'public': 1, 'final': 0}
{'}\n': 66, ';': 16, 'NUM': 24, '_': 23, '+=': 62, 'Written': 61, 'bytes': 60, ')': 7, '>': 32, 'value': 6, '(': 4, 'write': 2, '.': 18, 'out': 17, '&': 22, 'Bits': 13, 'flush': 12, '{': 11, 'IOException': 10, '': 9, 'throws': 8, 'void': 1, 'public': 0}
{'}\n': 171, '}': 161, ';': 38, ')': 25, 'c': 61, '(': 40, 'append': 154, '.': 50, '{': 26, 'if': 86, 'i': 42, 'At': 66, 'char': 60, 'value': 49, '=': 43, 'length': 51, '<': 48, 'NUM': 45, '_': 44, 'int': 41, 'for': 39, 'boolean': 22, 'final': 11, ',': 16, '': 6, 'Builder': 8, 'String': 7, 'static': 1, 'private': 0}
{'}\n': 57, ';': 56, 'button': 26, ')': 14, '(': 6, '{': 15, '': 7, 'Pressed': 4, 'Button': 3, 'public': 0}
{'}\n': 92, ';': 91, ')': 43, '(': 15, '.': 84, 'att': 37, 'String': 47, 'Attribute': 17, '': 5}
{'}\n': 85, ';': 60, ')': 11, 'props': 80, ',': 79, 'prefix': 78, '(': 6, '=': 43, '': 40, 'Property': 55, 'get': 54, '.': 53, 'Consumer': 16, 'property': 15, '{': 12, 'public': 0}
{'}\n': 239, '}': 235, ';': 60, ')': 18, 'Read': 78, 'bytes': 77, ',': 7, 'NUM': 70, '_': 69, 'buf': 64, '(': 3, 'write': 173, '.': 147, 'out': 11, '{': 34, '-': 163, 'read': 148, 'is': 44, '=': 45, 'while': 113, 'int': 76, ']': 63, '*': 71, '[': 62, 'byte': 61, 'new': 46, 'Stream': 10, 'Input': 42, 'Buffered': 41, '': 4, 'IOException': 21, 'throws': 19, 'Output': 9, 'copy': 2, 'public': 0}
{'}\n': 218, ';': 142, ')': 17, '(': 42, 'Fully': 187, 'read': 46, '.': 45, 'Input': 14, 'data': 15, ']': 153, 'NUM': 61, '_': 60, '[': 150, 'byte': 149, 'new': 85, '=': 175, 'Int': 47, '{': 21, 'IOException': 20, '': 6, 'throws': 18, 'Data': 13, 'static': 1, 'private': 0}
{'}\n': 403, ';': 377, 'return': 379, '}': 378, ')': 43, 'annotated': 35, '(': 9, '{': 44, 'Class': 59, '': 1, '>': 30, '<': 26, 'public': 0}
{'}\n': 19, ';': 18, ')': 7, '(': 6, 'Permission': 11, 'denied': 10, '{': 8, 'boolean': 1, 'public': 0}
{'}\n': 72, ';': 39, 'return': 69, '}': 68, ')': 15, '(': 30, 'Cache': 6, '': 1, '=': 55, 'if': 46, 'get': 29, '.': 28}
{'}\n': 22, ';': 21, ')': 11, 'control': 10, '(': 5, 'add': 2, '.': 15, '{': 12, '': 6, 'Control': 3, 'void': 1, 'public': 0}
{'}\n': 263, ';': 206, ')': 158, 'add': 150, '(': 46, 'On': 18, '.': 214, '>': 187, '<': 183, 'Set': 182, 'Hash': 193, '': 16, 'new': 191, '=': 190, 'Add': 17, '{': 159, 'Result': 20, 'Changes': 19}
{'}\n': 279, '}': 177, ';': 22, ')': 5, 'NUM': 69, '_': 68, '<<': 172, 'alpha': 121, '(': 4, '|': 169, '&': 165, ']': 32, '[': 31, 'tmp': 33, ',': 48, 'RGB': 145, 'HSBto': 144, '': 7, '.': 13, 'Color': 3, '=': 10, 'Value': 137, 'argb': 136, 'Offset': 81, 'a': 132, 'clamp': 72, 'int': 120, 'b': 116, 's': 98, 'h': 80, 'float': 30, 'new': 185, '{': 6, 'else': 178, '+': 79, 'Alpha': 128, 'get': 14, 'src': 9, 'null': 27, 'Blue': 59, 'Green': 52, 'Red': 45, 'HSB': 40, 'RGBto': 39, '!=': 26, 'if': 23, 'Name': 20, 'Parent': 19, 'Default': 18, 'ui': 17, 'UIManager': 12, 'rederive': 2, 'void': 1}
{'}\n': 17, ';': 16, ')': 6, '(': 5, 'Get': 13, 'And': 12, '.': 10, 'Count': 9, '_idle': 8, '{': 7, 'Idle': 3, 'on': 2, 'void': 1, 'public': 0}
{'}\n': 96, ';': 32, ')': 9, 'span': 8, '(': 4, 'Added': 91, 'Span': 3, 'notify': 89, 'length': 87, '.': 25, '+=': 84, 'Space': 83, 'total': 82, 'add': 2, 'Key': 21, 'For': 20, 'spans': 19, '}': 72, ',': 66, 'key': 30, 'put': 61, 'Spans': 24, 'cached': 23, '>': 18, '<': 14, 'Set': 13, 'Tree': 12, '': 5, 'new': 46, '=': 22, '{': 10, 'null': 39, '==': 38, 'if': 33, 'get': 26, 'Cache': 6, 'void': 1, 'private': 0}
{'}\n': 60, ';': 19, ')': 7, '(': 3, 'return': 16, '}': 20, 'BOOL': 18, '_': 17, '{': 8, 'obj': 6, 'if': 9, '==': 12, 'Object': 5, '': 4, 'equals': 2, 'boolean': 1, 'public': 0}
{'}\n': 27, ';': 25, ')': 18, '(': 16, 'repaint': 1, '.': 21, '{': 19, 'void': 0}
{'}\n': 72, ';': 71, ')': 37, 'comment': 17, '(': 6, '.': 51, '{': 47, 'String': 16, '': 15}
{'}\n': 126, ';': 33, '}': 119, '++': 50, 'Char': 55, '(': 5, '_': 71, '==': 70, 'if': 65, ')': 24, 'i': 37, 'At': 60, 'char': 53, '.': 44, 'str': 8, '=': 38, '{': 52, 'length': 45, '<': 42, 'int': 36, 'for': 34, 'Builder': 22, 'String': 7, '': 6, 'static': 1, 'public': 0}
{'}\n': 118, ';': 38, 'return': 106, ')': 11, '}': 39, 'STR': 31, '_': 30, 'url': 10, '{': 12, '(': 7, '.': 26, 'if': 23, 'With': 28, 'String': 9, '': 2, 'static': 1}
{'}\n': 41, ';': 33, ']': 19, 'NUM': 31, '_': 26, '[': 18, 'tokens': 17, 'return': 34, ')': 13, '-': 29, ',': 28, 'STR': 27, '(': 8, 'split': 24, '.': 23, 'Out': 12, 'csv': 11, '=': 20, 'String': 3, '': 2, '{': 14, 'Line': 6, 'CSVOutput': 5, 'extract': 4, 'static': 1, 'public': 0}
{'}\n': 14, ';': 13, ')': 4, '(': 3, 'connect': 2, '{': 5, 'void': 1, 'public': 0}
{'}\n': 171, ';': 61, 'BOOL': 164, '_': 59, 'return': 162, '}': 166, ')': 35, ',': 15, '(': 7, 'req': 26, '': 9, '.': 50, '{': 36, 'final': 8, 'Method': 25, 'Servlet': 19, 'Http': 18, 'Request': 12, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 52, ';': 51, ')': 9, 'BOOL': 31, '_': 30, '(': 8, 'Ivr': 2, 'show': 4, '{': 16, 'Exception': 15, 'Controller': 14, 'Device': 13, 'Network': 12, '': 1, 'throws': 10, 'Active': 5, 'public': 0}
{'}\n': 38, ';': 37, 'EMPTY': 36, '': 1, ')': 7, '>': 13, 'K': 12, '<': 10, 'Immutable': 15, '(': 4, 'return': 25, '{': 24, 'empty': 21, 'static': 9, 'public': 8, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 64, '}': 63, ';': 49, ')': 26, '(': 9, 'add': 44, '.': 43, 'Nodes': 42, 'Minus': 41, 'Non': 40, 'Optional': 39, 'non': 38, '{': 27, 'final': 10, ',': 20, 'Node': 17, 'Member': 16, 'IGroup': 15, '': 14, 'void': 1}
{'}\n': 43, ';': 23, ')': 10, '(': 6, 'String': 3, 'to': 4, '.': 37, 'sb': 15, 'return': 35, ',': 28, 'Builder': 14, '': 2, 'new': 17, '=': 16, '{': 11, 'public': 0}
{'}\n': 34, ';': 33, ')': 8, '(': 7, 'Code': 6, 'hash': 5, '.': 28, 'type': 11, 'return': 10, '{': 9, 'int': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 96, '}': 95, ';': 73, ')': 24, '_': 91, 'Category': 18, 'type': 19, '(': 5, 'Vertex': 70, '': 6, 'CLASS': 58, 'Type': 17, ':': 43, 'TRAIT': 42, 'STRUCT': 38, '{': 29, 'Exception': 28, 'Atlas': 7, 'throws': 25, 'force': 23, 'boolean': 22, ',': 11, '.': 15, 'Types': 14, 'Data': 13, 'delete': 2}
{'}\n': 92, '': 2, ';': 52, ')': 33, '(': 21, '.': 65, 'null': 72, '!=': 71, 'Line': 67, 'read': 66, 'in': 25, '=': 26, 'line': 55, 'Reader': 13, 'Buffered': 29, 'new': 27, 'String': 6, 'List': 3, 'static': 1, 'public': 0}
{'}\n': 161, ';': 160, ')': 70, 'cache': 66, ',': 156, 'Ctx': 150, '(': 13, 'Cache': 11, '': 1, 'new': 73, 'Ignite': 23}
{'}\n': 126, '}': 120, ';': 28, '{': 13, ')': 12, '(': 7, '.': 37, '=': 56, 'rt': 31, '': 14, 'static': 1}
{'}\n': 23, ';': 22, ')': 10, '.': 14, 'other': 9, '(': 4, 'To': 3, 'compare': 2, 'return': 12, '{': 11, '': 5, 'int': 1, 'public': 0}
{'}\n': 152, ';': 31, 'Modified': 3, '_is': 61, 'return': 60, '}': 137, 'BOOL': 130, '_': 129, '=': 39, '{': 6, ')': 5, '(': 4, 'is': 2, 'if': 49, '.': 43, 'Interval': 58, '_check': 57, '+': 56, 'Time': 42, 'Check': 54, 'now': 51, 'long': 35, 'boolean': 1, 'public': 0}
{'}\n': 203, ';': 58, 'return': 200, ')': 16, '(': 8, 'Image': 6, '.': 37, '': 1, 'RGB': 56, 'INT_': 55, 'TYPE_': 54, 'Buffered': 19, ',': 12, 'Compatible': 39, 'create': 38, 'Util': 36, '=': 33, '{': 17, 'int': 9, 'protected': 0}
{'}\n': 22, ';': 21, 'return': 10, '{': 9, ')': 8, 'version': 7, '(': 4, 'public': 0}
{'}\n': 94, ';': 29, 'Source': 6, 'data': 67, 'return': 90, ')': 14, 'Copy': 22, 'properties': 13, ',': 85, '(': 10, 'Data': 5, 'H2': 79, 'setup': 78, 'Jdbc': 64, '': 1, 'new': 24, '=': 23, 'Options': 49, 'Pooling': 56, 'reject': 47, 'Unsupported': 48, '}': 46, 'All': 41, 'put': 40, '.': 39, '{': 18, 'null': 34, '!=': 33, 'if': 30, 'Properties': 12, 'SQLException': 17, 'throws': 15, 'create': 7, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 58, ';': 57, 'return': 43, '{': 25, ')': 24, '(': 21, 'locations': 17, '': 9}
{'}\n': 173, ';': 35, ')': 8, '.': 45, 'Controller': 55, 'm': 17, '_': 150, ',': 149, '(': 7, 'width': 137, 'Area': 135, 'Draw': 134, '/': 132, 'Center': 6, 'View': 12, 'current': 39, '-': 126, 'X': 48, 'abs': 121, 'Math': 119, '': 11, 'float': 116, '*': 113, 'MS': 112, 'TIME_': 111, 'CENTER_': 110, 'IN_': 109, 'SNAP_': 108, 'int': 38, '=': 16, 'Time': 101, 'In': 100, 'snap': 99, '}': 97, 'return': 95, '||': 61, 'Scrolling': 58, 'User': 64, 'Is': 63, 'is': 57, 'if': 52, 'get': 46, 'Item': 13, 'final': 10, '[': 20, '{': 9, 'void': 1, 'private': 0}
{'}\n': 72, ';': 71, ')': 46, ',': 55, '(': 13, 'set': 52, '.': 51, 'Objects': 50, 'Meta': 7, '': 48, '{': 47, 'int': 14, 'Object': 8, 'void': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 7, 'word': 6, '(': 3, '.': 12, '{': 8, 'String': 5, '': 4}
{'}\n': 139, ';': 56, ')': 10, '(': 6, 'Menu': 125, 'update': 124, 'Props': 120, 'write': 119, 'return': 117, 'Changes': 115, 'Ignore': 114, 'm_': 58, 'if': 111, 'item': 9, 'remove': 62, '.': 61, 'Items': 60, 'Recent': 4, 'String': 15, 'to': 17, 'from': 14, '=': 13, '{': 11, 'T': 8, '': 7, 'Item': 5, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 105, '}': 87, ';': 26, ')': 6, '(': 5, 'close': 99, '.': 56, 'cleaner': 30, '{': 11, 'null': 32, '!=': 93, 'if': 90, 'finally': 88, '>': 70, 'String': 69, '': 8, '<': 64, 'Callable': 66, 'List': 63, 'Array': 62, 'new': 17, 'invoke': 57, 'e': 15, '=': 16, 'try': 34, 'Cleaner': 29, 'Pool': 21, 'NUM': 24, '_': 23, 'Join': 20, 'Fork': 19, 'Service': 14, 'Executor': 13, 'throws': 7, 'Invoke': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 42, ';': 33, ')': 17, 'name': 28, '(': 4, '.': 20, ',': 9, '{': 18, 'String': 11, '': 5, 'Package': 3}
{'}\n': 18, ';': 17, ')': 7, '{': 11, 'IOException': 10, '': 1, 'throws': 8, '(': 6, 'close': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 214, '}': 213, ';': 29, ')': 15, 'block': 129, '(': 6, 'Object': 103, 'create': 2, '.': 37, 'Client': 100, '_db': 99, 'Uri': 78, 'cg': 77, 'Group': 83, 'Consistency': 82, 'set': 59, 'i': 111, '+': 188, 'name': 9, 'Label': 69, 'URI': 31, 'Id': 39, 'add': 51, 'URIs': 49, 'Block': 3, 'test': 47, 'class': 44, '': 7, 'URIUtil': 36, '=': 23, 'new': 24, '{': 19, '++': 123, 'num': 12, '<=': 117, 'NUM': 114, '_': 85, 'int': 11, 'for': 108, 'volume': 22, 'STR': 86, 'Volume': 21, 'Exception': 18, 'throws': 16, ',': 10, 'String': 8, 'Data': 5, 'void': 1, 'private': 0}
{'}\n': 182, '}': 173, ';': 96, 'BOOL': 179, '_': 68, '=': 177, 'running': 12, ')': 8, '(': 7, '.': 20, 'ep': 101, '{': 9, 'endpoints': 103, ':': 102, 'Endpoint': 100, '': 1, 'for': 97, 'STR': 69, 'info': 21, 'LOGGER': 19, 'if': 10, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 27, ';': 23, 'this': 25, 'return': 24, ')': 9, 'value': 8, '(': 5, 'add': 4, '.': 12, 'values': 11, '{': 10, 'String': 7, '': 1, 'Array': 3, 'Json': 2, 'public': 0}
{'}\n': 137, ';': 34, 'modified': 120, 'return': 31, ')': 10, 'j': 60, '(': 4, 'Size': 36, 'set': 35, 'size': 16, '!=': 124, '=': 49, 'boolean': 1, '}': 46, 'i': 68, 'Quick': 91, 'get': 90, ',': 95, '++': 78, 'NUM': 21, '_': 20, '>=': 101, 'limit': 48, 'To': 88, 'From': 87, 'Of': 86, 'index': 85, '.': 15, 'other': 9, 'if': 12, '{': 11, '<': 74, 'int': 47, 'for': 65, '-': 55, 'BOOL': 33, '==': 19, 'List': 8, 'Abstract': 6, '': 5, 'All': 3, 'retain': 2, 'public': 0}
{'}\n': 24, '{': 6, ')': 5, '(': 4, 'Result': 3, 'void': 1, 'protected': 0}
{'}\n': 113, ';': 30, ')': 18, '(': 21, '.': 93, '}': 31, '=': 51, 'delimiter': 89, '{': 19, 'if': 20, 'String': 7, '': 3, '_': 43, 'return': 42, 'null': 24, '==': 23, 'collection': 17, '>': 5, '<': 2, 'Collection': 12, 'static': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 13, ',': 7, '(': 4, '.': 18, 'Math': 17, '': 16, 'return': 15, '{': 14, 'max': 12, 'float': 2, 'min': 9}
{'}\n': 142, ';': 28, '{': 106, 'else': 133, '}': 132, ')': 62, '(': 7, '.': 47, 'if': 96, '=': 86, 'place': 21, '': 8}
{'}\n': 288, ';': 286, ')': 99, '_': 152, ',': 154, '(': 52, '.': 148, '{': 100, 'qual': 71, '': 17, 'Name': 39, 'String': 18, 'static': 1}
{'}\n': 22, ';': 21, ')': 10, 'ID': 9, 'frame': 8, '(': 5, 'contains': 16, '.': 15, 'Frames': 14, 'return': 12, '{': 11, 'String': 7, '': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 41, ';': 31, ')': 12, 'document': 22, '(': 7, 'Configuration': 6, 'parse': 5, 'return': 32, '.': 25, 'builder': 24, '=': 23, 'Document': 21, '': 1, '{': 19, ',': 16, 'throws': 13, 'xml': 10, ']': 4, '[': 3, 'String': 2, 'public': 0}
{'}\n': 454, ';': 41, 'HSIC': 249, 'emp': 248, 'return': 450, ')': 25, 'NUM': 252, '_': 251, ',': 16, '-': 352, 'm': 24, '(': 37, 'pow': 322, '.': 35, 'Math': 320, '': 11, '/=': 318, '}': 315, 'i': 257, '+=': 272, '{': 26, '++': 267, '<': 263, '=': 32, 'int': 23, 'for': 254, 'double': 1, 'times': 152, 'Matrix': 13, 'Tetrad': 12, 'empirical': 2}
{'}\n': 36, ';': 35, ')': 16, '_': 32, 'File': 9, 'rpf': 8, '(': 3, 'Toc': 20, '': 4, 'void': 1}
{'}\n': 27, ';': 21, ')': 20, '(': 5, 'event': 9, 'Info': 8, 'Event': 7, '': 6}
{'}\n': 109, '}': 107, ';': 68, ')': 17, '_': 54, '(': 5, 'IOException': 85, '': 84, 'File': 22, 'output': 21, 'STR': 55, '{': 11, 'if': 12, 'void': 1, 'private': 0}
{'}\n': 21, ';': 20, ')': 8, 'path': 7, '(': 11, '.': 14, 'Paths': 13, '{': 9, 'String': 6, '': 5, 'Path': 2}
{'}\n': 92, ';': 39, 'return': 89, '}': 40, ')': 5, 'e': 45, '(': 4, 'Message': 60, 'get': 59, '.': 58, '{': 6, '': 43, 'catch': 41, 'try': 13, 'boolean': 1, 'public': 0}
{'}\n': 44, '}': 43, ';': 25, ')': 11, 'Folder': 10, 'src': 9, '(': 5, '{': 12, 'if': 26, 'load': 2, '.': 19, 'File': 14, 'Ignore': 17, '': 7, '=': 15, 'ignore': 13, 'String': 8, 'final': 6, 'void': 1, 'private': 0}
{'}\n': 64, '}': 59, ';': 25, '{': 10, ')': 9, 'arg': 8, '(': 4, '.': 44, 'args': 43, 'if': 11, 'Exception': 22, 'Argument': 21, 'Illegal': 20, '': 6, 'new': 18, 'throw': 17, 'this': 30, '==': 14, 'null': 15, 'BOp': 7, 'final': 5, 'Arg': 3, 'public': 0}
{'}\n': 28, ';': 27, '_': 25, 'val': 11, 'return': 14, '{': 13, ')': 12, 'String': 10, '': 9, '(': 8, 'Like': 4, 'looks': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 35, ';': 22, ')': 9, '(': 4, 'Value': 31, '.': 17, 'attr': 8, 'get': 18, '=': 15, '{': 10, '': 5, 'public': 0}
{'}\n': 154, ';': 20, ')': 8, '(': 4, '.': 29, ',': 76, 'NOTES': 141, 'TABLE_': 140, '': 5, 'db': 13, 'KEY_': 73, 'put': 70, 'values': 59, 'get': 15, 'note': 7, 'Values': 58, 'Content': 57, 'new': 49, '=': 14, 'Date': 51, 'format': 47, 'dt': 45, 'date': 43, 'String': 22, 'Spannable': 36, 'Html': 25, 'to': 30, 'As': 24, 'spannable': 23, 'Database': 12, 'Writable': 16, 'SQLite': 11, '{': 9, 'Note': 3, 'public': 0}
{'}\n': 39, ';': 20, ')': 11, 'Comparator': 33, 'horizontal': 35, ':': 34, 'vertical': 32, '?': 31, 'Vertical': 30, 'is': 29, ',': 28, 'Nodes': 14, '(': 3, 'sort': 24, '.': 15, 'Collections': 22, '': 4, 'n': 10, 'add': 1, '{': 12, '>': 9, 'T': 8, '<': 6, 'Node': 5, 'void': 0}
{'}\n': 52, ';': 21, ')': 12, '(': 6, 'Value': 39, 'New': 46, 'get': 37, '.': 15, 'event': 11, ',': 34, 'Old': 38, 'CHANGE': 33, '': 7, 'ID': 29, 'Change': 5, 'Property': 4, 'fire': 22, 'STR': 19, '_': 18, 'debug': 16, 'log': 14, '{': 13, 'Event': 10, 'Dialog': 3, 'void': 1, 'protected': 0}
{'}\n': 23, ';': 22, ')': 7, '(': 6, 'read': 4, 'return': 12, '{': 11, 'IOException': 10, '': 2, 'throws': 8, 'UTF': 5, 'String': 3, 'final': 1, 'public': 0}
{'}\n': 25, ';': 24, ')': 16, 'i': 15, '(': 4, 'add': 20, '.': 19, 'l': 12, '{': 17, 'int': 14, '': 5, 'List': 7, 'Linked': 6}
{'}\n': 28, ';': 27, ')': 11, '(': 7, '.': 20, 'Manager': 15, 'current': 14, '{': 12, 'c': 10, 'Component': 9, '': 8, 'static': 1, 'public': 0}
{'}\n': 25, ';': 24, '(': 6, '.': 16, 'port': 9, '{': 12, ')': 11}
{'}\n': 26, ';': 25, 'buffer': 9, ',': 19, '(': 16, 'write': 15, '.': 14, '{': 11, ')': 10, '': 1}
{'}\n': 131, ';': 44, ')': 12, 'ID': 11, 'feature': 10, '(': 8, 'Set': 7, 'Is': 6, 'e': 5, '.': 24, 'super': 121, 'return': 30, '}': 119, 'EDEFAULT': 117, 'TYPE_': 116, '': 1, '!=': 33, ':': 29, 'TYPE': 108, 'Package': 23, 'Eip': 22, 'case': 20, '!': 36, 'null': 34, 'Empty': 66, 'is': 65, 'Channels': 57, '&&': 60, 'CHANNELS': 53, '{': 13, 'switch': 14, 'int': 9, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 53, ';': 20, ')': 10, 'EVENT': 50, 'SECTION_': 49, '': 6, '(': 4, 'Event': 46, 'Update': 45, 'fire': 44, 'Comparator': 39, 'Section': 3, 'new': 36, ',': 35, 'sections': 21, 'sort': 32, '.': 22, 'Collections': 30, 'SECTION': 9, 'add': 2, 'return': 19, '==': 15, 'null': 14, 'if': 12, '{': 11, 'final': 5, 'void': 1, 'public': 0}
{'}\n': 267, '}': 149, ';': 147, ')': 47, 'Offset': 35, 'end': 38, ',': 31, 'start': 33, '(': 6, '{': 48, 'else': 234, 'if': 131, '.': 87, 'int': 32, '': 19}
{'}\n': 50, ';': 24, ')': 8, 'size': 13, '.': 16, 'v': 7, ',': 21, '-': 18, 'vector': 32, 'NUM': 20, '_': 19, '(': 4, 'arraycopy': 28, 'System': 26, '': 5, '+': 14, 'For': 11, 'expand': 10, '{': 9, 'All': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 80, '}': 79, '{': 21, ')': 17, 'NUM': 53, '_': 52, '>=': 60, 'length': 57, '.': 47, 'bs': 25, ',': 51, '(': 5, 'read': 48, 'Str': 16, 'in': 9, 'while': 39, ';': 38, ']': 24, 'SIZE': 32, 'BUFFER_': 31, '': 6, '[': 23, 'byte': 22, 'new': 27, '=': 26, 'IOException': 20, 'throws': 18, 'Stream': 8, 'Input': 7, 'void': 2, 'static': 1, 'public': 0}
{';\n': 15, ')': 14, '': 11, '(': 5, 'validate': 3, 'boolean': 2, 'abstract': 1, 'protected': 0}
{'}\n': 139, '}': 138, ';': 45, ')': 11, '(': 7, '': 60, '.': 25, ',': 77, 'NUM': 54, '_': 53, '{': 12, 'size': 26, 'workers': 24, 'public': 0}
{'}\n': 43, ';': 42, 'string': 16, '(': 13, 'List': 4, 'as': 30, '.': 29, 'Arrays': 28, '': 2, '>': 8, '<': 5, 'Array': 3, 'new': 20, 'return': 19, '{': 18, ')': 17, 'String': 7, 'To': 10, 'static': 1, 'public': 0}
{'}\n': 45, '(': 21, '.': 36, '': 1, 'return': 26, '{': 25, ')': 24, 'charset': 16, 'Charset': 4}
{'}\n': 27, ';': 19, ')': 10, 'layer': 9, '(': 4, 'add': 22, '.': 21, 'layers': 20, '{': 11, '': 6, 'Layer': 3, 'void': 1}
{'}\n': 233, ';': 35, 'rules': 42, 'return': 230, '}': 89, ')': 13, 'rule': 212, '(': 9, 'add': 224, '.': 65, 'regex': 173, ',': 17, 'sign': 111, 'Rule': 5, 'create': 214, '=': 27, '': 1, 'STR': 123, '_': 83, '+': 166, 'trace': 198, 'LOG': 186, '{': 22, 'Enabled': 190, 'Trace': 189, 'is': 188, 'if': 75, 'NUM': 84, 'substring': 177, 'line': 57, 'String': 56, 'IOException': 16, 'new': 28, 'throw': 159, ':': 124, 'default': 157, 'continue': 87, 'case': 121, 'break': 130, 'BOOL': 114, 'first': 99, 'switch': 116, 'boolean': 110, 'At': 104, 'char': 98, '==': 82, 'length': 79, 'null': 72, '!=': 71, 'Line': 67, 'read': 7, 'in': 26, 'while': 59, '>': 6, '<': 3, 'List': 2, 'Array': 46, 'reader': 12, 'Reader': 11, 'Buffered': 24, 'Exception': 21, 'Argument': 20, 'Illegal': 19, 'throws': 14, 'Rules': 8, 'private': 0}
{'}\n': 154, ';': 77, 'newcount': 92, '=': 93, 'count': 94, ')': 17, 'len': 16, ',': 11, 'buf': 102, 'off': 13, 'c': 8, '(': 6, 'arraycopy': 137, '.': 32, 'System': 135, '': 69, '}': 78, '{': 18, 'length': 33, '>': 30, 'if': 19, '+': 46, 'int': 12, 'return': 88, 'NUM': 25, '_': 24, '==': 83, 'else': 79, 'Exception': 74, 'Bounds': 73, 'Of': 72, 'Out': 71, 'Index': 70, 'new': 68, 'throw': 67, '<': 23, '||': 27, ']': 10, '[': 9, 'char': 7, 'write': 5, 'void': 4, 'public': 3}
{'}\n': 121, ';': 34, 'return': 118, ')': 17, '(': 31, '.': 72, '=': 40, 'Episode': 6, '': 1, 'new': 41, 'get': 29}
{'}\n': 86, ';': 33, ')': 14, 'Type': 11, 'array': 12, ',': 78, 'Types': 52, 'input': 51, '(': 8, 'Creation': 7, 'Array': 6, '': 2, 'new': 25, 'Operation': 4, 'Term': 67, 'Typed': 3, 'return': 63, 'List': 17, 'type': 22, 'Tuple': 50, '=': 24, 'add': 37, '.': 36, '>': 21, '<': 18, '{': 15, 'create': 5, 'static': 1, 'public': 0}
{'}\n': 157, ';': 28, ')': 10, 'l': 96, '(': 4, '.': 66, 'listeners': 65, 'Exception': 25, 'Argument': 39, 'Illegal': 38, '': 6, 'new': 21, 'throw': 20, 'null': 33, '==': 32, 'if': 12, 'Operation': 24, 'Unsupported': 23, 'Only': 16, 'Read': 15, 'is': 14, '{': 11, 'final': 5, 'void': 1, 'public': 0}
{'}\n': 66, '}': 54, ';': 53, ')': 21, '(': 11, '{': 36, 'pref': 32, '.': 29, '!': 25, 'if': 23, '': 5, 'public': 0}
{'}\n': 74, ';': 17, '}': 68, 'BOOL': 66, '_': 32, '{': 9, ')': 8, '==': 59, 'i': 30, '(': 4, 'At': 54, 'char': 53, '.': 13, 'text': 7, 'if': 43, '++': 40, '<': 36, 'NUM': 33, '=': 31, 'int': 29, 'for': 27, 'length': 23, 'String': 6, '': 5, 'protected': 0}
{'}\n': 21, ';': 20, ')': 9, 'STR': 18, '_': 17, '(': 5, 'With': 15, 'ends': 14, '.': 13, 'desc': 8, 'return': 11, '{': 10, 'String': 7, '': 6, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 41, ';': 21, ')': 10, 'e': 38, ',': 37, '(': 5, 'Length': 34, 'bit': 33, '.': 25, 'n': 31, 'Lengths': 29, 'Key': 3, 'RSAProvider': 27, 'check': 26, 'Factory': 24, 'RSAKey': 23, '': 12, 'encoded': 9, 'decode': 17, '{': 16, 'Exception': 15, 'Invalid': 13, 'throws': 11, ']': 8, '[': 7, 'byte': 6, 'Impl': 4}
{'}\n': 12, ';': 11, 'Authentication': 4, ')': 6, '(': 5}
{'}\n': 84, ';': 19, ')': 8, '(': 7, 'add': 53, '.': 21, 'panel': 12, 'create': 58, 'Box': 27, '': 10, 'AXIS': 38, 'Layout': 23, ',': 31, 'new': 14, 'set': 22, 'JPanel': 11, '=': 13, 'Panel': 6}
{'}\n': 31, ';': 23, ')': 12, '(': 3, 'Line': 2, 'new': 26, '.': 18, 'writer': 7, 'line': 11, 'write': 1, '{': 16, 'IOException': 15, '': 4, 'throws': 13, 'String': 10, ',': 8, 'Writer': 6, 'Buffered': 5, 'void': 0}
{'}\n': 18, ';': 17, ')': 8, 'index': 7, '(': 5, 'get': 13, '.': 12, 'children': 11, 'return': 10, '{': 9, 'child': 3, '': 1, 'public': 0}
{'}\n': 20, ';': 19, '{': 15, ')': 14, '(': 13, 'Value': 6, '': 2}
{'}\n': 102, ';': 21, ')': 10, ',': 58, '(': 6, '.': 28, 'return': 45, '_': 41, '=': 26, '}': 22, '{': 11, 'NUM': 42, '': 2, 'null': 16, 'if': 12, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 48, ';': 22, ')': 13, 'value': 12, '(': 4, 'Value': 43, 'With': 42, 'prepopulate': 41, 'Components': 37, 'init': 36, 'STR': 32, '_': 31, 'String': 29, 'get': 28, '.': 27, 'res': 26, 'Title': 24, 'set': 23, 'parent': 7, 'super': 18, '{': 17, 'IOException': 16, '': 1, 'throws': 14, ']': 11, '[': 10, 'byte': 9, ',': 8, 'JDialog': 6, 'Constraints': 3, 'public': 0}
{'}\n': 73, ';': 30, 'nrows': 6, '=': 51, 'm_size': 69, ')': 14, 'Value': 13, 'default': 12, ',': 7, 'm_values': 50, '(': 4, 'fill': 61, '.': 19, 'Arrays': 59, '': 1, ']': 56, 'capacity': 9, '[': 54, 'new': 22, '}': 49, 'STR': 46, '_': 45, 'Exception': 43, 'Argument': 42, 'Illegal': 41, 'throw': 38, '{': 15, '<': 34, 'if': 31, 'class': 20, 'super': 16, 'int': 5, 'Column': 3, 'public': 0}
{'}\n': 51, '}': 50, ';': 26, 'return': 34, ')': 4, 'STR': 45, '_': 11, '(': 3, 'With': 42, 'starts': 41, '.': 21, 'S': 18, '': 6, 'if': 27, 'null': 32, '==': 31, 'Line': 23, 'read': 1, 'isr': 20, '=': 19, 'String': 16, '{': 8, 'BOOL': 12, 'while': 9, 'IOException': 7, 'throws': 5, 'void': 0}
{'}\n': 51, '}': 50, ';': 26, ')': 7, 'STR': 46, '_': 45, '(': 6, 'Permission': 37, 'Time': 42, 'Joda': 41, '': 9, 'new': 39, 'check': 2, '.': 20, 'sm': 16, '{': 12, 'null': 31, '!=': 30, 'if': 27, 'Manager': 15, 'Security': 10, 'get': 21, 'System': 19, '=': 17, 'Exception': 11, 'throws': 8, 'Converters': 5, 'Alter': 3, 'void': 1, 'private': 0}
{'}\n': 60, ';': 59, ')': 9, 'obj': 8, '(': 3, 'equals': 2, '&&': 30, '||': 15, '==': 13, 'this': 12, 'return': 11, '{': 10, '': 5, 'final': 4, 'boolean': 1, 'public': 0}
{'}\n': 133, ';': 131, ')': 55, '(': 18, '.': 118, 'Time': 100, 'date': 59, '{': 56, 'Change': 15, '': 31, 'void': 1, 'public': 0}
{'}\n': 18, ';': 17, 'Out': 16, '': 1, '(': 7, 'line': 4, 'protected': 0}
{'}\n': 185, ';': 43, ')': 16, '(': 9, 'build': 180, '.': 21, 'bq': 51, 'simplify': 176, 'super': 174, 'return': 173, '}': 44, 'e': 161, 'Lenient': 166, 'Unless': 165, 'rethrow': 164, '{': 17, 'Exception': 160, 'Runtime': 159, '': 1, 'catch': 156, 'SHOULD': 152, 'Occur': 149, 'Clause': 146, 'Boolean': 46, ',': 83, 'add': 140, 'Value': 133, 'get': 114, 'entry': 87, 'Boost': 128, 'set': 65, 'text': 12, 'Key': 115, 'Term': 110, 'new': 6, 'Query': 5, '=': 30, 'try': 97, 'Set': 92, 'weights': 89, ':': 88, '>': 86, 'Float': 85, 'String': 11, '<': 80, 'Entry': 79, 'Map': 76, 'for': 73, 'BOOL': 70, '_': 69, 'Coord': 67, 'Disable': 66, 'Builder': 50, 'locale': 39, 'settings': 20, 'Case': 35, 'Lower': 34, 'to': 33, 'Terms': 24, 'Expanded': 23, 'lowercase': 22, 'if': 18, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 65, ';': 25, 'NUM': 48, '_': 30, '=': 23, 'syscalls': 60, ')': 18, 'STR': 31, '(': 5, 'equals': 54, '.': 21, 'type': 17, 'if': 50, 'calls': 45, 's': 13, 'stmt': 41, 'this': 20, 'm': 9, 'method': 35, 'link': 28, '{': 19, 'String': 16, '': 1, ',': 10, 'Stmt': 12, 'Method': 8, 'Soot': 7, 'Info': 4, 'Chain': 3, 'Call': 2, 'public': 0}
{'}\n': 304, ';': 18, ')': 5, 'STR': 16, '_': 15, ',': 14, 'TAG': 13, '': 7, '(': 4, 'd': 10, '.': 9, 'Log': 8, '+': 164, '}': 42, 'e': 31, '{': 6, 'return': 40, 'File': 25, 'Record': 24, 'm': 23, '==': 22, 'null': 21, 'if': 19, 'void': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 8, 'a': 24, '(': 5, '.': 20, 'Math': 19, '': 18, 'NUM': 12, '_': 11, '/': 13, '{': 9, 'double': 6, 'static': 1, 'public': 0}
{'}\n': 40, ';': 39, ')': 13, '(': 5, 'Exception': 35, 'Argument': 34, 'Illegal': 33, '': 6, 'new': 31, 'throw': 30, 'NUM': 28, '_': 27, '==': 18, 'length': 23, '.': 22, 'string': 8, '||': 20, 'null': 19, 'if': 15, '{': 14, 'String': 7, 'Empty': 4, 'not': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 15, ';': 14, ')': 6, '.': 9, 'contexts': 8, '{': 7, '(': 5, 'public': 0}
{'}\n': 194, ';': 70, 'return': 176, '}': 71, ')': 30, '(': 8, 'List': 94, '{': 31, 'if': 51, '=': 100, 'Object': 3, '': 2, '>': 19, '<': 16, 'new': 101, 'else': 72, 'object': 11}
{'}\n': 31, ';': 30, ')': 14, ',': 21, '_': 24, 'username': 7, '(': 4}
{'}\n': 133, ';': 65, ')': 64, 'Interface': 11, '(': 12, '}': 106, 'network': 83, 'Link': 78, ',': 61, 'get': 52, '=': 51, '': 13, 'State': 23, 'Network': 10}
{'}\n': 99, ';': 98, ')': 39, 'Certificate': 76, '(': 23, '.': 84, '': 7, 'Certificates': 37, ']': 30, '[': 29, 'public': 0}
{'}\n': 205, '}': 204, ';': 70, ')': 21, 'interf': 201, ',': 9, '': 1, '.': 31, '(': 4, '_': 96, 'new': 150, 'throw': 175, '{': 29, 'Address': 7, 'Unsupported': 168, 'null': 123, '!=': 122, 'if': 118, 'INET6': 61, 'Family': 58, 'Protocol': 57, 'Standard': 56, 'Inet6': 51, 'instanceof': 49, 'Inet': 6}
{'}\n': 16, '{': 8, 'IOException': 7, '': 6, 'throws': 5, ')': 4, '(': 3, 'close': 2, 'void': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 9, '(': 6, '.': 18, '': 1, 'return': 11, '{': 10, 'degree': 8, 'Degree': 5}
{'}\n': 45, ';': 44, ')': 16, 'encoding': 15, '(': 6, 'Charset': 14, 'to': 4, '.': 29, 'Charsets': 36, '': 2, ',': 11, 'URL': 31, 'uri': 10, 'String': 3, 'return': 21, '{': 20, 'IOException': 19, 'throws': 17, 'URI': 9, 'static': 1, 'public': 0}
{'}\n': 312, '}': 40, ';': 23, '++': 309, 'Size': 53, 'm': 32, 'data': 11, '=': 16, ']': 36, 'i': 15, '[': 34, 'Data': 10, 'Number': 6, 'field': 5, 'Numbers': 67, 'Field': 9, ')': 12, '-': 231, ',': 7, 'NUM': 29, '_': 28, '+': 138, '(': 3, 'arraycopy': 172, '.': 97, 'System': 170, '': 8, '{': 13, '!=': 233, 'if': 24, 'nvalues': 159, 'nkeys': 146, 'length': 98, 'n': 129, 'new': 148, 'int': 4, 'Array': 133, 'Int': 132, 'ideal': 131, '>=': 27, 'Search': 18, 'binary': 17, '~': 45, 'gc': 101, '&&': 54, 'Garbage': 89, 'return': 83, 'DELETED': 62, '==': 60, '<': 51, 'else': 41, 'put': 2, 'void': 1}
{'}\n': 44, ';': 14, ')': 4, '.': 21, 'insets': 8, ',': 37, 'top': 28, '(': 3, 'Insets': 7, 'get': 10, '=': 9, '': 6, 'void': 0}
{'}\n': 54, '}': 52, ';': 27, ')': 7, 'oldfp': 18, '(': 3, 'remove': 39, '.': 22, 'Filters': 37, 'btxn': 6, 'Exclusion': 36, 'global': 35, '{': 8, 'null': 32, '!=': 31, 'if': 28, 'get': 23, 'Map': 12, 'filter': 11, '=': 19, 'Processor': 17, 'Filter': 16, '': 4, 'synchronized': 9, 'String': 5, 'void': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 12, 'weight': 24, '(': 23, 'add': 2, '.': 15, '{': 13, 'double': 10, 'void': 1, 'public': 0}
{'}\n': 42, ';': 41, 'Id': 10, '(': 14, ')': 11, 'NUM': 24, '_': 23, 'tag': 9, '{': 12, 'Tag': 3, 'public': 0}
{'}\n': 29, ';': 28, ')': 10, '}': 26, '(': 6, 'set': 14, '.': 13, 'socket': 9, 'SSLSocket': 8, '': 7, 'public': 0}
{'}\n': 575, ';': 45, ')': 30, '(': 29, 'Platform': 26, '': 25, 'new': 80, 'return': 317, '}': 46, '{': 31, 'ignored': 295, 'Exception': 53, 'Method': 70, 'Such': 310, 'No': 309, '|': 307, 'Found': 52, 'Not': 51, 'Class': 37, 'catch': 47, 'Provider': 420, 'server': 442, ',': 88, 'client': 419, 'remove': 505, 'get': 150, 'put': 462, 'Boot': 529, 'Jetty': 528, 'With': 527, 'Jdk': 526, 'class': 94, '.': 38, 'SSLSocket': 475, 'STR': 43, '_': 42, 'nego': 366, '=': 79, 'provider': 397, '+': 409, 'Name': 40, 'for': 39, '>': 74, '?': 175, '<': 71, 'String': 120, 'try': 32, 'Protocols': 166, 'Alpn': 151, 'set': 75, 'Protocol': 153, 'Selected': 152, 'Socket': 73, 'Untag': 138, 'Stats': 128, 'traffic': 127, 'Tag': 129, 'Hostname': 105, 'Tickets': 78, 'Session': 77, 'Use': 76, 'Android': 320, ']': 256, '[': 255, 'byte': 254, 'null': 87, 'Optional': 69, 'boolean': 92, 'e': 54, 'find': 27, 'static': 24, 'private': 23}
{'}\n': 204, ';': 51, '(': 14, '.': 110, ')': 23, 'Id': 156, 'get': 111, 'execution': 85, '=': 34, '': 15, '{': 24, 'Execution': 6, 'public': 0}
{'}\n': 311, ';': 309, ')': 97, 'i': 70, '(': 4, 'Num': 71, '{': 98, 'int': 7, 'public': 0}
{'}\n': 216, ';': 29, '}': 57, ')': 18, '(': 13, '.': 182, 's': 168, '_': 47, '=': 23, 'String': 3, '': 2, 'STR': 48, '{': 19, 'a': 32, 'static': 1}
{'}\n': 337, ';': 19, ')': 11, '': 8, ',': 39, 'STR': 18, '_': 17, '+': 36, 'p': 35, '(': 7, 'put': 33, '.': 32, 'd': 10, 'new': 63, 'Which': 106, 'Painter': 94, 'Pane': 100, 'c': 96, 'Lazy': 93, 'ENABLED': 110, 'NUM': 69, 'UIResource': 66, 'Insets': 65, '=': 16, 'String': 14, '{': 12, 'UIDefaults': 9, 'define': 2, 'void': 1, 'private': 0}
{'}\n': 58, ';': 57, ')': 33, 'CG': 32, 'is': 31, ',': 15, 'Status': 28, 'Op': 27, 'update': 26, 'clone': 22, 'storage': 14, 'STR': 44, '_': 43, '(': 11, 'Method': 6, '': 2, '.': 4, 'Workflow': 3, 'new': 36, 'return': 35, '{': 34, 'boolean': 30, 'Boolean': 25, '>': 21, 'URI': 13, '<': 18, 'List': 17, 'Clone': 9, 'static': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 16, 'dsl': 15, '(': 10, 'remove': 6, '.': 21, 'Listeners': 20, 'm_data': 18, '{': 17, 'Listener': 9, 'Source': 8, 'Data': 7, '': 1, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 37, ';': 36, ')': 12, 'length': 11, '(': 5, '.': 16, 'str': 8, 'Math': 20, '': 1, 'substring': 17, 'return': 14, '{': 13, 'int': 10, ',': 9, 'String': 2, 'Str': 4, 'public': 0}
{'}\n': 72, ';': 17, '_': 15, ')': 8, 'i': 13, '(': 7, 'get': 40, '.': 23, 'b': 34, '{': 31, '++': 29, 'size': 24, '<': 19, 'NUM': 16, '=': 14, 'int': 12, 'for': 10, 'Blocks': 6, 'public': 0}
{'}\n': 181, ';': 179, ')': 48, '(': 17, 'get': 89, '.': 88, 'clazz': 42, ',': 102, '{': 49, 'Class': 22, '': 13, 'public': 0}
{'}\n': 69, ';': 54, ')': 25, '(': 6, 'grid': 20, '': 9, 'Grid': 4, 'void': 2, 'public': 0}
{'}\n': 34, ';': 33, ')': 14, 'folder': 12, '(': 5, 'push': 2, '.': 23, 'Folders': 22, 'Template': 3, 'Last': 20, 'my': 19, '{': 18, '': 7, 'Null': 9, 'Not': 8, '@': 6, 'Folder': 4, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 6, '(': 5, '{': 7, 'Depth': 3, 'void': 1, 'public': 0}
{'}\n': 600, ';': 37, ')': 16, 'null': 597, '(': 5, 'Effect': 595, 'Path': 243, 'set': 534, '.': 24, 'Paint': 532, 'Render': 531, 'm': 22, ',': 9, 'cubic': 242, 'draw': 2, 'Canvas': 7, 'Bitmap': 512, 'Pixel': 568, 'To': 187, 'Value': 566, 'path': 565, 'trans': 20, 'STROKE': 560, '': 6, 'Style': 551, 'Color': 535, 'get': 25, 'Set': 13, 'data': 14, '}': 473, 'size': 526, 'Fill': 489, 'Cubic': 508, 'add': 500, 'reset': 492, '{': 17, 'Enabled': 483, 'Filled': 482, 'Draw': 481, 'is': 480, 'if': 475, 'Y': 324, 'phase': 266, '*': 265, 'Val': 319, 'cur': 299, 'XIndex': 62, 'prev': 284, '-': 262, '=': 21, 'NUM': 131, '_': 130, '+': 175, 'Entry': 46, 'minx': 174, 'Math': 140, 'int': 119, 'X': 67, 'For': 61, 'entry': 39, 'Dependency': 33, 'Axis': 32, 'Transformer': 19, 'Chart': 23, 'Data': 12, 'c': 8, 'void': 1, 'protected': 0}
{'}\n': 129, ';': 23, '}': 119, ')': 10, '(': 4, '.': 61, 'event': 44, 'if': 90, 'next': 86, 'iterator': 58, '=': 15, '{': 11, 'Next': 77, 'has': 76, 'while': 72, '>': 57, 'Event': 38, 'Sim': 55, '': 50, '<': 53, 'Iterator': 52, 'public': 0}
{'}\n': 45, ';': 44, ')': 18, '.': 31, '(': 6, '{': 19, 'schema': 16, '': 1}
{'}\n': 336, ';': 220, ')': 7, '(': 6, '.': 287, 'NUM': 33, '_': 32, '=': 224, '': 221, 'new': 225, '}': 74, ',': 50, '{': 8, ']': 142, '[': 141, 'void': 4, 'public': 3}
{'}\n': 398, '}': 393, ';': 182, ')': 63, '(': 59, '.': 259, 'Manager': 43, 'entity': 82, '{': 64, 'if': 185, 'Entity': 42, 'get': 137, '=': 131, '': 68, 'void': 1, 'private': 0}
{'}\n': 103, ';': 35, 'Dir': 7, 'replicator': 13, 'return': 98, '}': 96, ')': 9, '+': 90, 'STR': 53, '_': 52, '(': 8, 'Exception': 86, 'Runtime': 85, 'Server': 84, '': 2, 'new': 60, 'throw': 81, '{': 10, 'Directory': 76, 'is': 75, '.': 27, '!': 70, 'if': 11, 'File': 3, '=': 24, 'null': 17, '==': 16, 'DIR': 33, 'Property': 29, 'get': 28, 'System': 26, 'String': 21, 'Replicator': 5, 'locate': 4, 'static': 1, 'public': 0}
{'}\n': 14, ';': 13, 'data': 7, '=': 11, 'm_data': 10, ')': 8, '': 1, '(': 4, 'public': 0}
{'}\n': 123, ';': 37, ')': 8, '(': 21, '.': 18, '=': 40, 'DD': 17, '': 16, 'NUM': 23, '_': 22, '++': 58, '{': 9, '>': 52, 'Value': 49, 'double': 48, 'while': 44, 'int': 38, 'Of': 20, 'value': 19}
{'}\n': 24, ';': 23, ')': 12, 'f': 11, '(': 9, '.': 2, '{': 13, 'float': 10, 'append': 8, 'String': 6, '': 5, 'lang': 3, 'java': 1, 'public': 0}
{'}\n': 225, ';': 223, ')': 189, '(': 5, 'Path': 204, 'Absolute': 203, 'get': 202, '.': 201, 'file': 183, ',': 199, 'STR': 198, '_': 197, '{': 190, 'File': 7, '': 6, 'void': 3, 'public': 0}
{'}\n': 71, ';': 70, ')': 16, 'track': 15, ',': 12, 'destination': 11, '(': 8, 'Destination': 7, '{': 17, 'Track': 14, '': 4, 'Location': 10, 'test': 6, 'String': 5, 'public': 3}
{'}\n': 143, ';': 142, ')': 84, 'NUM': 107, '_': 106, '-': 105, '(': 80, 'size': 102, '.': 97, 'stack': 96, 'remove': 98, '{': 85}
{'}\n': 78, ';': 19, ')': 5, '(': 4, '.': 49, 'random': 47, 'Random': 2, '': 44, 'return': 17, '}': 20, 'null': 18, '{': 6, '==': 10, 'if': 7}
{'}\n': 20, ';': 19, '(': 4, '{': 9, ')': 8, 'String': 2, '': 1}
{'}\n': 12, '{': 11, ')': 10, '(': 5, 'Before': 3, 'on': 2, 'void': 1, 'protected': 0}
{'}\n': 129, '}': 47, ';': 46, 'null': 97, 'return': 72, '{': 31, ')': 45, 'e': 55, 'Exception': 54, 'Found': 53, 'Not': 52, 'Class': 21, '': 11, '(': 10, 'catch': 48, 'load': 40, '.': 39, 'Loader': 38, 'class': 14, 'try': 30}
{'}\n': 93, ';': 23, 'Data': 31, 'new': 30, '=': 32, 'data': 36, ')': 8, ',': 51, 'length': 38, '.': 17, 'NUM': 53, '_': 20, 'buffer': 71, '(': 3, 'arraycopy': 48, 'System': 46, '': 45, ']': 29, '+': 39, '[': 28, 'byte': 27, '}': 26, 'return': 24, 'STR': 21, 'warning': 18, 'log': 16, '{': 9, 'Final': 13, 'is': 12, 'if': 10, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 91, ';': 90, ')': 14, 'control': 12, '(': 4, '.': 74, '{': 18, '': 10, 'public': 0}
{'}\n': 35, ';': 34, '_': 32, 'Xml': 9, ')': 23, 'Set': 21, '': 8, ',': 17, 'parser': 12, 'Parser': 11, 'Pull': 10, '(': 7}
{'}\n': 104, ';': 49, ')': 19, '(': 5, ',': 14, 'jpeg': 13, 'write': 3, '.': 64, 'exif': 58, '': 15, '{': 23, 'if': 24, 'IOException': 22, 'throws': 20, ']': 12, '[': 11, 'byte': 10, 'public': 0}
{'}\n': 95, ';': 94, 'image': 62, '=': 85, '.': 75, ')': 69, 'Image': 36, '': 20, '(': 33}
{'}\n': 33, '}': 32, ';': 24, ')': 8, 'ext': 7, '(': 4, '.': 18, 'exts': 12, 'Case': 21, 'Lower': 20, 'to': 19, '=': 16, '{': 9, 'synchronized': 10, 'String': 6, '': 5, 'Extension': 3, 'void': 1, 'public': 0}
{'}\n': 52, '}': 28, ';': 27, ')': 8, 'observer': 7, '(': 4, 'add': 2, '.': 38, 'observers': 37, 'contains': 39, '!': 36, 'if': 10, '{': 9, 'this': 31, 'synchronized': 29, 'Exception': 22, 'Pointer': 21, 'Null': 20, '': 5, 'new': 18, 'throw': 17, 'null': 14, '==': 13, 'Observer': 3, 'void': 1, 'public': 0}
{'}\n': 70, ';': 69, ')': 14, 'NUM': 34, '_': 33, ',': 6, ']': 39, 'k': 8, '[': 37, 'Consts': 60, 'norm': 59, '*': 40, 'Norms': 54, 'Sqrd': 53, 'mean': 52, '+': 51, '(': 3, 'K': 43, 'Sum': 42, 'eval': 41, 'ownes': 36, '/': 35, '-': 32, 'max': 25, '.': 19, 'Math': 18, '': 17, 'sqrt': 20, 'return': 16, 'int': 7, 'distance': 2, 'double': 1}
{'}\n': 307, ';': 41, ')': 19, '(': 43, '.': 72, '}': 284, '+': 272, 'STR': 261, '_': 47, 'NUM': 48, '==': 154, 'append': 141, 'result': 139, '{': 20, 'i': 45, '=': 46, 'int': 44, 'for': 42, 'String': 11, '': 6}
{'}\n': 122, '}': 82, ';': 29, ')': 10, '(': 2, 'String': 16, 'Generic': 52, 'to': 51, '.': 24, 'field': 9, 'fields': 21, '{': 11, 'else': 83, ',': 6, 'put': 69, 'count': 43, 'if': 30, 'get': 25, '=': 22, 'Integer': 19, '': 3, 'null': 34, 'owner': 5, 'owners': 23, '>': 20, '<': 14, 'Map': 13, 'Field': 8, 'Object': 4, 'void': 0}
{'}\n': 95, ';': 47, 'result': 56, 'return': 92, '}': 48, ')': 20, '(': 12, 'Dto': 7, 'To': 10, 'transform': 9, 'add': 81, '.': 41, '{': 21, ':': 75, '': 2, 'for': 70, '>': 8, '<': 4, 'List': 3, 'Array': 60, 'new': 30, '=': 57, 'ERROR': 45, 'SERVER_': 44, 'INTERNAL_': 43, 'Status': 40, ',': 38, 'STR': 37, '_': 36, 'Exception': 34, 'Application': 33, 'Web': 32, 'throw': 29, 'null': 26, '==': 25, 'if': 22, 'static': 1, 'public': 0}
{'}\n': 52, ';': 51, '': 1, '(': 5, ')': 28, 'Pool': 16, '.': 24}
{'}\n': 27, ';': 26, ')': 14, 'Listener': 5, 'Properties': 4, 'group': 11, '(': 6, '.': 19, 'Listeners': 18, '{': 15, 'Group': 3, '': 7, 'void': 1, 'public': 0}
{'}\n': 65, ';': 64, ')': 37, 'Comment': 6, 'new': 35, ',': 19, 'Id': 24, 'user': 29, 'comment': 23, 'provider': 12, '(': 7, 'edit': 3, '.': 49, 'Functions': 48, 'SQLComment': 47, 'Postgre': 46, '': 9, '{': 44, 'Exception': 43, 'Data': 42, 'Save': 41, 'Couldnt': 40, 'throws': 38, 'String': 34, 'final': 8, 'Integer': 22, 'SQLProvider': 11, 'Global': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 11, 'STR': 18, '_': 17, '(': 3, '.': 14, '{': 12, 'o': 10, 'Object': 9, '': 4, ',': 7, 'public': 0}
{'}\n': 54, '}': 52, ';': 51, ')': 14, 'Credentials': 13, 'clear': 3, ',': 9, 'NUM': 31, '_': 30, '(': 5, 'get': 42, '.': 25, 'MXSessions': 24, 'm': 23, 'context': 8, 'Session': 35, '{': 15, '>': 29, 'size': 26, 'while': 21, 'synchronized': 1, 'Boolean': 11, '': 6, 'Context': 7, 'Sessions': 4, 'void': 2, 'public': 0}
{'}\n': 99, ';': 40, '_': 57, ')': 14, 'STR': 58, '+': 81, '(': 5, '.': 25, 'debug': 75, '{': 15, 'if': 49, 'ue': 46, 'UMSException': 45, '': 6, 'catch': 42, '}': 41, 'DN': 13, 'Guid': 34, 'new': 32, ',': 9, 'Object': 20, 'get': 26, 'UMSObject': 24, '=': 22, 'po': 21, 'Persistent': 19, 'try': 16, 'String': 11, 'token': 8, 'SSOToken': 7}
{'}\n': 56, ';': 27, 'NUM': 21, '_': 20, ')': 10, '(': 6, '*': 33, '}': 28, 'return': 24, '{': 11, 'if': 12, 'int': 2, 'static': 1, 'private': 0}
{'}\n': 112, '}': 111, ';': 47, ')': 34, 'NUM': 107, '_': 106, ',': 14, 'Memory': 30, 'Max': 29, 'local': 28, 'redundancy': 33, 'Region': 19, 'For': 18, 'Index': 17, 'end': 22, 'start': 16, 'Prefix': 88, 'pr': 87, '(': 9, 'Set': 85, 'Prop': 84, 'Bucket': 83, 'Num': 82, 'Total': 81, 'PRWith': 80, 'Multiple': 79, 'create': 2, 'invoke': 76, '.': 43, 'vm': 12, 'next': 70, 'Iterator': 37, 'node': 38, 'VM': 60, '': 10, '=': 40, '{': 35, 'Next': 54, 'has': 53, 'while': 48, 'iterator': 44, 'List': 11, 'int': 15, 'void': 1, 'private': 0}
{'}\n': 280, '}': 274, ';': 28, '.': 19, '': 1, '{': 16, ')': 11, 'A': 7, 'k': 152, '(': 3, '=': 30, '[': 91, '+': 133, 'int': 105, 'for': 103, 'new': 89, ']': 93, ',': 78, 'min': 72, 'Math': 70, 'Exception': 15, 'Jampack': 14, 'throws': 12, 'Zmat': 5, 'public': 0}
{'}\n': 356, '}': 355, ';': 23, '=': 32, 'Layer': 31, ')': 22, '.': 56, 'Neuron': 14, '(': 4, '': 7, 'new': 33, 'add': 57, 'set': 250, '{': 189, '++': 225, 'j': 212, '<': 26, 'NUM': 176, '_': 175, 'int': 211, 'for': 209, ',': 81, '>': 29, 'List': 25, 'Array': 35, 'Network': 3, 'build': 2, 'void': 1}
{'}\n': 130, ';': 30, 'BOOL': 29, '_': 28, 'return': 27, '}': 125, ')': 19, 'i': 75, '(': 5, 'At': 98, 'char': 97, '.': 53, 'right': 18, '!=': 65, '--': 100, 'left': 13, 'if': 21, '{': 20, 'Index': 8, 'from': 7, '>': 80, 'n': 50, '=': 51, 'int': 6, 'for': 72, 'length': 54, 'null': 36, '==': 24, '||': 38, 'Sequence': 12, 'Char': 11, '': 10, ',': 9, 'Equal': 4, 'are': 3, 'boolean': 2, 'static': 1, 'private': 0}
{'}\n': 14, ';': 13, ')': 5, '(': 4, '.': 9, 'return': 7, '{': 6, 'public': 0}
{'}\n': 236, '}': 132, ';': 22, ')': 10, 'child': 94, '(': 6, 'Node': 5, 'Source': 4, 'Tight': 3, 'add': 2, '{': 11, 'reference': 9, ',': 119, 'Extending': 116, 'is': 85, 'if': 81, 'next': 77, '.': 17, 'iterator2': 186, '=': 32, 'ASTNode': 8, '': 7, 'Next': 63, 'has': 62, 'iterator': 52, 'children': 155, '>': 30, 'extends': 151, '?': 150, '<': 25, 'Iterator': 45, 'for': 42, 'descriptor': 73, 'Property': 28, 'List': 24, 'Child': 86, 'else': 134, '&&': 114, 'null': 113, '!=': 112, 'Structural': 27, 'get': 102, 'Descriptor': 29, 'properties': 31, 'Type': 38, 'For': 37, 'Properties': 36, 'structural': 35, 'Nodes': 16, 'Range': 15, 'f': 12, 'void': 1, 'public': 0}
{'}\n': 65, ';': 31, ')': 9, 'e': 8, '(': 5, 'Disabled': 4, 'Event': 3, 'is': 2, '.': 14, 'super': 55, 'return': 28, 'BOOL': 30, '_': 29, ':': 27, 'Notify': 26, '': 6, 'XConstants': 22, 'case': 20, '{': 10, 'get_type': 15, 'switch': 11, 'XEvent': 7, 'boolean': 1, 'protected': 0}
{'}\n': 35, ';': 34, ')': 8, 'MODAL': 32, 'DOCUMENT_': 31, '': 1, '.': 18, 'Type': 28, 'Modality': 27, ',': 16, 'STR': 23, '_': 22, '(': 4, 'String': 20, 'get': 19, 'res': 17, 'parent': 7, '{': 12, 'JFrame': 6, 'public': 0}
{'}\n': 36, ';': 25, '.': 19, 'pts': 11, ']': 10, '[': 9}
{'}\n': 65, ';': 48, ')': 18, '(': 5, 'Function': 4, '=': 29, '{': 23, 'void': 1, 'private': 0}
{'}\n': 20, ';': 19, ')': 10, 'listener': 9, '(': 4, 'add': 2, '.': 14, 'Listeners': 13, 'm': 12, '{': 11, 'Listener': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 233, ';': 142, ')': 11, '.': 114, '': 13, '(': 5, '_': 134, '+': 133, 'STR': 135, '=': 95, 'String': 68, '{': 63, ',': 8, 'Keeper': 18, 'Zoo': 17, 'Exception': 14, 'throws': 12, 'public': 0}
{'}\n': 130, ';': 23, '': 48, '.': 45, 'Calendar': 14, '(': 34, ')': 11, 'get': 46, '{': 12}
{'}\n': 119, '}': 118, '(': 6, '.': 62, ')': 18, 'Ping': 12, ';': 44, 'null': 28, '==': 27, 'if': 22, '{': 21, 'void': 1, 'private': 0}
{'}\n': 239, ';': 82, ')': 10, 'message': 9, '(': 5, 'info': 105, '.': 104, '': 6, 'STR': 36, '_': 35, '=': 22, '{': 11, 'void': 1}
{'}\n': 64, ';': 62, 'port': 10, ')': 11, '(': 4, '.': 31, '{': 15, 'int': 9, 'boolean': 1}
{'}\n': 61, ';': 60, ')': 10, 'STR': 34, '_': 33, '(': 6, 'equals': 31, '.': 30, 'str': 9, '||': 36, 'return': 12, '{': 11, 'String': 8, '': 7, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 20, 'error': 19, ',': 11, 'member': 10, '(': 6, 'Attempt': 23, 'fail': 22, '{': 21, 'Throwable': 18, '': 7, 'request': 15, 'Request': 4, 'State': 9, 'Member': 8, 'Failure': 5, 'handle': 2, 'void': 1, 'protected': 0}
{'}\n': 142, ';': 28, 'list': 36, 'return': 139, '}': 86, ')': 17, '(': 13, 'unlock': 132, '.': 23, 'Scope': 65, 'identity': 64, '{': 18, 'null': 67, '!=': 66, 'if': 51, 'finally': 119, 'Next': 113, 'To': 56, 'move': 55, 'cursor': 16, 'while': 107, 'BOOL': 102, '_': 101, ',': 100, 'Deep': 10, 'Current': 96, 'load': 8, 'add': 93, 'do': 89, 'try': 87, 'count': 20, 'Room': 81, 'reserve': 80, 'lock': 73, 'First': 57, '>': 7, 'Item': 6, '': 1, '<': 3, 'List': 2, 'Array': 40, 'new': 38, '=': 21, 'Count': 25, 'get': 24, 'int': 19, 'Cursor': 12, 'From': 11, 'All': 9, 'public': 0}
{'}\n': 33, ';': 32, ')': 10, '_': 29, ',': 28, 'utf8': 9, '(': 19, '.': 23, ']': 8, '[': 7, 'byte': 6, 'String': 3, '': 2, 'public': 0}
{'}\n': 87, ';': 44, 'Case': 13, 'lower': 26, 'return': 82, '}': 81, ')': 43, '(': 14, 'Lower': 12, 'to': 67, '.': 62, '{': 58, ':': 50, 'String': 5, '': 1, 'for': 45, '>': 25, '<': 3, 'new': 30, '=': 29, 'To': 11}
{'}\n': 153, '}': 39, ';': 38, ')': 8, 'STR': 30, '_': 29, ',': 31, '+': 144, '(': 7, 'Exception': 12, 'JPlag': 11, '': 10, 'new': 24, 'throw': 23, 'Trace': 129, 'Stack': 128, 'print': 127, '.': 97, 'e': 122, '{': 13, 'IOException': 121, 'catch': 118, '-=': 111, 'Bytes': 17, 'remaining': 16, 'close': 105, 'data': 100, 'file': 54, 'Stream': 45, 'File': 43, '=': 47, 'try': 40, 'if': 14, 'throws': 9, 'Part': 6, 'Next': 5, 'public': 0}
{'}\n': 14, ';': 13, 'return': 9, '{': 8, ')': 7, '(': 6, 'Line': 4, 'public': 0}
{'}\n': 101, '}': 100, ';': 30, '=': 34, 'm_': 9, '{': 6, ')': 5, '(': 4, 'if': 7, 'Of': 11, 'Sum': 10, '.': 42, 'Math': 41, '': 40, 'Weights': 12, '/': 25, 'NUM': 15, '_': 14, '>': 13, 'void': 1}
{'}\n': 58, ';': 57, ')': 29, ',': 54, 'Vendor': 10, 'source': 9, '(': 6, 'get': 32, 'target': 15, 'String': 8, '': 7}
{'}\n': 1279, ';': 481, 'Records': 88, 'shape': 87, 'return': 1275, ')': 78, 'Y': 65, ',': 60, 'X': 59, '(': 10, 'Edge': 869, 'straight': 868, 'All': 866, 'add': 485, '.': 484, 'move': 487, '>': 8, 'Record': 7, 'Shape': 6, '': 2, '<': 4, 'List': 3, 'Array': 92, 'new': 90, '=': 89, '{': 79, 'double': 55, 'static': 1, 'public': 0}
{'}\n': 102, ';': 23, 'imin': 25, 'return': 99, '}': 97, 'i': 34, '=': 16, ']': 10, '[': 9, 'data': 11, 'min': 15, '{': 13, ')': 12, '<': 40, '||': 77, '(': 7, 'N': 22, 'Na': 21, 'is': 54, '.': 19, '': 17, 'if': 49, 'continue': 64, '++': 46, 'length': 43, 'NUM': 29, '_': 28, 'int': 2, 'for': 31, '-': 27, 'Location': 6, 'Valley': 5, 'Global': 4, 'find': 3, 'static': 1, 'public': 0}
{'}\n': 60, '}': 59, ';': 19, ')': 6, 'index': 31, '(': 5, 'View': 53, 'To': 39, 'Selected': 4, 'Row': 16, 'set': 47, 'Index': 10, 'selected': 9, 'Model': 40, 'move': 2, '.': 13, 'data': 33, '=': 11, 'int': 8, '{': 7, 'NUM': 27, '_': 26, '-': 25, '>': 24, 'if': 20, 'get': 14, 'table': 12, 'void': 1, 'protected': 0}
{'}\n': 15, ';': 14, ')': 8, 'backing': 7, '(': 3, '{': 9, '': 4, 'With': 1}
{'}\n': 28, ';': 19, ')': 10, '(': 9, 'shutdown': 7, '.': 13, 'executor': 21, 'STR': 17, '_': 16, 'info': 14, 'logger': 12, '{': 11, 'public': 0}
{'}\n': 91, '}': 87, ';': 62, ')': 35, 'path': 68, '(': 11, 'add': 76, '.': 75, '{': 36, '>': 53, 'String': 52, '': 22, '<': 50, 'List': 49, 'Array': 48, 'new': 46, '=': 45}
{'}\n': 102, '}': 19, ';': 18, ')': 7, '(': 6, 'Key': 37, '': 32, 'case': 31, '{': 8, 'switch': 20, 'return': 17, 'is': 11, 'if': 9}
{')': 332, 'Recurrence': 168, 'Event': 167, '': 18, ',': 21, 'String': 19, '(': 7}
{'}\n': 37, ';': 36, ')': 5, 'z': 33, '(': 4, 'ceil': 3, '.': 14, 'Math': 13, '': 1, 'y': 25, 'x': 17, '{': 6, 'Vector3': 2, 'public': 0}
{'}\n': 34, ';': 33, ')': 16, '(': 9, '.': 22, 'frontier': 21}
{'}\n': 364, ';': 36, ')': 9, '(': 4, 'recycle': 360, '.': 18, 'a': 8, 'Size': 336, 'contour': 335, ',': 32, 'Progress': 28, '': 5, 'styleable': 25, 'R': 23, 'Dimension': 20, 'get': 19, '=': 13, 'Color': 218, 'text': 217, '}': 153, 'NUM': 144, '_': 143, 'Millis': 116, 'delay': 115, '{': 10, '<': 142, 'if': 138, 'Integer': 121, 'Speed': 64, 'spin': 63, 'int': 15, 'Width': 12, 'rim': 37, 'bar': 11, 'Array': 7, 'Typed': 6, 'Attributes': 3, 'parse': 2, 'void': 1, 'private': 0}
{'}\n': 79, ';': 54, 'return': 76, ')': 16, 'length': 32, '.': 31, ',': 11, 'NUM': 63, '_': 62, '(': 6, 'arraycopy': 58, 'System': 56, '': 55, 'a': 10, '{': 17, ']': 4, '[': 3, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 10, '(': 6, 'Instance': 21, 'get': 20, '.': 19, 'Calendar': 8, '': 7, '_calendar': 9, '{': 11, 'static': 1}
{'}\n': 252, ';': 50, '(': 9, ')': 35, '.': 115, 'View': 22, 'get': 143, '': 21, 'view': 25, '=': 82, 'public': 0}
{'}\n': 95, ';': 41, ')': 17, 'Parm': 50, '(': 7, 'Entity': 88, 'For': 87, 'Json': 86, 'get': 30, ',': 12, 'uri': 24, 'create': 80, '.': 29, 'URI': 36, '': 8, 'post': 75, 'Id': 11, 'initiator': 15, 'Initiator': 35, 'Scsi': 34, 'set': 66, 'To': 33, 'Volume': 4, 'Scale': 27, 'new': 52, '=': 25, 'volume': 10, 'IOConstants': 28, 'String': 9, '{': 21, 'Exception': 20, 'throws': 18, 'SCSIInitiator': 6, 'void': 1, 'public': 0}
{'}\n': 17, ';': 16, 'list': 15, '.': 14, '{': 11, ')': 10, '(': 9, 'Collection': 2, '>': 6, 'T': 5, '': 1, '<': 3, 'public': 0}
{'}\n': 201, ';': 150, ')': 33, '(': 6, '.': 184, '-': 116, '=': 102, 'x2': 22, 'x1': 16, 'float': 15, '{': 34, 'y2': 25, ',': 17, 'y1': 19, 'private': 0}
{'}\n': 104, ';': 103, 'block': 20, '{': 59, ')': 30, '(': 29, '': 11, 'public': 3}
{'}\n': 96, ';': 78, 'length': 14, ')': 15, ',': 9, 'offset': 11, '(': 4, '.': 24, 'int': 10, 'b': 8, ']': 7, '[': 6, 'byte': 5, 'void': 2, 'public': 0}
{'}\n': 16, ';': 15, ')': 7, '(': 6, 'clear': 12, '.': 11, 'Callbacks': 5, '{': 8, 'All': 3, 'remove': 2, 'void': 1, 'public': 0}
{'}\n': 123, '}': 46, ';': 45, ')': 14, 'iox': 73, ',': 8, 'UNKNOWN': 87, '': 16, '.': 37, 'Exception': 18, 'TTransport': 17, '(': 3, 'new': 29, 'throw': 28, '{': 19, 'IOException': 72, 'catch': 69, 'len': 13, 'off': 10, 'buf': 7, 'Stream_': 23, 'try': 51, 'STR': 43, '_': 42, 'OPEN': 40, 'NOT_': 39, 'null': 25, '==': 24, 'if': 20, 'throws': 15, 'int': 9, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 85, ';': 84, ')': 42, '(': 18, 'MBean': 53, '': 27, 'Name': 40, 'Object': 28, 'void': 1, 'public': 0}
{'}\n': 101, ';': 96, 'return': 97, 'Shape': 12, '(': 70, '==': 61, '_': 42, 'STR': 43, '=': 29, '{': 24, ')': 23, ',': 18, '': 1}
{'}\n': 49, ';': 43, 'return': 40, '}': 44, 'BOOL': 42, '_': 41, ')': 9, '.': 19, '(': 12, 'file': 8, '!': 17, '||': 16, 'null': 15, '==': 14, 'if': 11, '{': 10, 'File': 7, '': 6, 'is': 2, 'boolean': 1}
{'}\n': 78, ';': 29, 'return': 75, ')': 20, ',': 14, '(': 7, 'arraycopy': 61, '.': 60, 'System': 59, '': 58, 'alen': 24, '=': 33, 'int': 31, 'final': 8, '{': 21, 'a': 13, ']': 12, '[': 11}
{'}\n': 18, ';': 17, ')': 4, '(': 3, 'delete': 2, 'void': 1, 'public': 0}
{'}\n': 49, ';': 48, ')': 22, 'enc': 21, ',': 14, 'bytes': 7, '(': 3, 'Chars': 37, 'To': 36, 'this': 33, '{': 32, 'Exception': 31, 'Encoding': 30, 'Unsupported': 29, '': 1, '.': 16, 'io': 26, 'java': 15, 'throws': 23, 'String': 2, 'lang': 17, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 109, ';': 29, '}': 104, ']': 13, 'i': 25, '[': 12, '=': 26, '{': 39, ')': 38, '<': 31, '(': 5, 'if': 72, 'NUM': 28, '_': 27, '.': 33, '++': 37, 'length': 34, 'int': 11, 'for': 22, '': 6}
{'}\n': 324, '}': 193, ';': 55, ')': 7, '-': 309, '.': 71, '(': 10, '': 155, '{': 8, 'if': 9, ',': 163, 'Math': 156, '+': 109, 'area': 93}
{'}\n': 36, ';': 35, ')': 14, '(': 3, '{': 18, 'IOException': 17, '': 16, 'throws': 15, 'length': 13, 'int': 1, ',': 8, 'offset': 10, 'buffer': 7, ']': 6, '[': 5, 'byte': 4, 'read': 2, 'public': 0}
{'}\n': 123, ';': 38, ')': 25, 'z2': 24, ',': 7, 'z1': 15, '(': 3, 'max': 60, '.': 28, 'Math': 44, '': 1, '=': 31, 'this': 27, 'min': 46, 'y2': 21, 'y1': 12, 'x2': 18, 'x1': 9, 'Name': 30, 'world': 6, '{': 26, 'int': 8, 'Cuboid': 2}
{'}\n': 202, ';': 201, ')': 135, 'log': 109, ',': 171, '.': 154, '(': 85, '': 141, '{': 136, 'double': 76, 'public': 10}
{'}\n': 45, ';': 25, ')': 6, 'STR': 23, '_': 22, '(': 5, '.': 29, 'message': 10, '||': 36, 'return': 27, '}': 26, 'Exception': 20, 'State': 19, 'Illegal': 18, '': 17, 'new': 16, 'throw': 15, '{': 7, 'null': 12, '==': 11, 'if': 8, 'Message': 4, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 54, ';': 52, '{': 39, ')': 38, '(': 36, 'Agent': 23, '': 16, 'private': 0}
{'}\n': 177, ';': 173, ')': 39, '(': 69, '.': 51, 'NUM': 79, '_': 78, 'address': 32, '{': 40, 'String': 27, '': 25}
{'}\n': 544, ';': 193, 'return': 541, ')': 67, ',': 161, '(': 70, '=': 137, 'name': 60, '.': 83, 'if': 69, 'STR': 191, '_': 113, 'NUM': 129, 'Of': 85, 'index': 84, 'String': 42, '': 41, 'final': 25}
{'}\n': 23, ';': 22, ')': 9, '{': 10, '(': 8, 'Persist': 7, 'void': 5, 'public': 4}
{'}\n': 65, ')': 60, '(': 58, 'Lib': 41, '': 34, 'public': 0}
{'}\n': 15, ';': 10, 'null': 9, '=': 8, '_env': 11, '_argv': 7, '{': 6, ')': 5, '(': 4, 'Base': 3, 'Args': 2, '': 1, 'protected': 0}
{'}\n': 92, '}': 45, ';': 35, ')': 17, 'augs': 16, ',': 13, 'Name': 12, 'element': 11, '(': 8, '.': 40, 'Handler': 71, 'Model': 70, 'DTDContent': 69, 'f': 24, '{': 21, 'null': 51, '!=': 50, 'if': 22, 'DTDGrammar': 49, 'Types': 39, 'Element': 38, 'Mixed': 37, 'Decl': 30, 'DTDElement': 29, 'Validation': 25, 'XNIException': 20, '': 1, 'throws': 18, 'Augmentations': 15, 'String': 10, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 53, ';': 32, ')': 20, 'NUM': 50, '_': 49, '(': 4, 'Point': 8, '=': 35, 'center': 24, ',': 10, 'radius': 26, '{': 21, 'int': 18, '': 1}
{'}\n': 60, '}': 40, ';': 39, ')': 12, '(': 8, '': 2, 'new': 22, 'throw': 50, '{': 13, 'e': 47, 'Exception': 46, 'Encoding': 45, 'Unsupported': 44, 'catch': 41, 'STR': 35, '_': 34, 'Bytes': 32, 'get': 31, '.': 30, 'Stream': 27, 'Input': 3, 'Array': 25, 'Byte': 24, 'String': 10, 'static': 1, 'public': 0}
{'}\n': 75, ';': 36, '_': 65, 'return': 53, ')': 12, '(': 7, 'socket': 22, '{': 13, 'final': 8, 'static': 1, 'public': 0}
{'}\n': 464, '}': 45, ';': 42, ')': 18, '(': 8, 'Update': 7, 'For': 457, 'post': 455, 'Loaded': 348, 'is': 112, '.': 33, 'a': 17, 'add': 231, 'cached': 48, '{': 23, 'Next': 212, 'has': 211, 'while': 206, '=': 49, '>': 196, 'String': 195, '': 1, '<': 193, 'Iterator': 192, 'Name': 122, 'get': 53, 'set': 121, 'Identical': 113, '!': 109, 'if': 24, 'else': 98, ',': 13, 'provider': 12, 'put': 80, 'Cache': 51, 'm': 50, 'null': 28, '==': 27, 'Ref': 59, 'return': 43, 'STR': 40, '_': 39, 'TAG': 37, 'w': 34, 'Log': 32, 'Exception': 22, 'Remote': 21, 'throws': 19, 'Identifier': 11, 'Provider': 10, 'on': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 64, ';': 37, ')': 12, 'fis': 27, '(': 7, 'read': 39, 'return': 38, 'Stream': 20, 'Input': 19, 'File': 10, '': 2, 'new': 29, '=': 28, '{': 16, 'IOException': 15, 'throws': 13, 'final': 8, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 50, ';': 26, 'Width': 18, 'tile': 12, 'NUM': 32, '_': 31, '{': 20, ')': 19, '<': 30, '(': 28, 'int': 8, ',': 10, '': 3, 'public': 0}
{'}\n': 64, ';': 62, ')': 24, 'connection': 23, '{': 25, 'Connection': 22, '': 16, 'public': 0}
{'}\n': 140, ';': 83, 'return': 137, '.': 45, ')': 13, '(': 22, '': 2, 'null': 120, 'if': 21, '}': 84, 'e': 89, '+': 100, 'STR': 30, '_': 29, 'Error': 96, 'new': 93, 'throw': 92, '{': 54, 'Exception': 88, 'catch': 85, '=': 58, 'Class': 4, 'Manager': 5, 'Bsh': 3, 'static': 1}
{'}\n': 27, ';': 26, ')': 7, 'TIME': 24, 'LOGIN_': 23, 'LAST_': 22, '': 13, '.': 10, 'Type': 18, 'Operation': 17, 'State': 16, 'Policy': 15, 'Password': 14, '(': 6, 'add': 11, 'operations': 9, '{': 8, 'Time': 5, 'Login': 4, 'Last': 3, 'void': 1, 'public': 0}
{'}\n': 34, ';': 22, ')': 14, '(': 10, 'WORDS': 25, '': 5, 'return': 23, 'text': 13, 'Null': 18, 'Non': 17, 'require': 16, '{': 15, 'String': 6, 'static': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 13, ',': 8, 'field': 7, '(': 4, 'return': 15, '{': 14, 'value': 12, '': 1, 'String': 6}
{'}\n': 35, ';': 34, '_': 28, '(': 7, 'plot': 15, ')': 11, 'if': 13, '{': 12, '': 1}
{'}\n': 139, ';': 43, 'return': 131, '}': 130, ')': 16, '.': 60, '(': 7, '{': 17, '_': 74, 'dashes': 50, 'null': 35, 'if': 30, '>': 13, 'Float': 12, '': 8, '<': 10, 'List': 9, 'Dash': 4, 'private': 0}
{'}\n': 43, ';': 42, ')': 14, '(': 3, '.': 5, 'pattern': 10, ',': 29, '_': 27, '{': 18, 'start': 13}
{'}\n': 334, '}': 319, ';': 172, ')': 68, '(': 64, 'delete': 311, '.': 114, 'file': 263, 'if': 181, '{': 69, ':': 264, '': 45, 'for': 259, '!=': 224, 'null': 185, 'Files': 137, '=': 102, 'files': 86, 'All': 58}
{'}\n': 174, ';': 35, ')': 15, '(': 6, 'to': 168, '.': 115, 'baos': 25, '{': 19, '}': 138, 'b': 105, 'write': 131, 'NUM': 69, '_': 68, '-': 124, '==': 123, 'if': 120, 'read': 116, '=': 26, 'int': 42, 'Stream': 24, 'Output': 23, 'Array': 22, 'Byte': 21, '': 7, 'new': 27, ',': 11, 'public': 0}
{'}\n': 161, ';': 156, ')': 60, 'Name': 45, 'column': 40, '(': 5, '.': 65, '{': 61, 'String': 13, '': 12, 'public': 0}
{'}\n': 265, ';': 227, ')': 168, '(': 167, '.': 209, '_buffer': 212, ',': 220, 'NUM': 219, '_': 218, '{': 200, '': 183, 'private': 0}
{'}\n': 103, ';': 102, 'BOOL': 101, '_': 100, 'return': 99, '{': 92, ')': 91, '(': 86, 'Literal': 80, 'boolean': 17, 'public': 0}
{'}\n': 52, ';': 50, ')': 19, 'len': 13, ',': 8, 'off': 10, 'bytes': 7, '(': 3, '{': 20, 'int': 9, ']': 6, '[': 5, 'byte': 4, 'public': 0}
{'}\n': 57, ';': 36, ')': 11, 'Id': 10, 'service': 9, ',': 31, '(': 5, 'Joined': 4, 'get': 44, '.': 14, 'm_quorum': 42, 'SERVICE_': 29, '': 7, 'Enum': 26, 'Event': 20, 'Quorum': 19, 'Invariant': 21, 'new': 17, 'add': 15, 'm_triggers': 13, '{': 12, 'UUID': 8, 'final': 6, 'assert': 2, 'void': 1, 'public': 0}
{'}\n': 149, '}': 96, ';': 26, ')': 8, '(': 4, '.': 33, 'NUM': 49, '_': 48, 'Element': 35, 'get': 34, '=': 30, '': 60, '{': 9, 'index': 46, 'public': 0}
{'}\n': 177, '}': 105, ';': 48, ')': 27, '(': 5, 'Identifier': 44, 'Parent': 43, 'get': 37, '.': 36, 'connection': 22, ',': 134, 'STR': 156, '_': 155, 'debug': 153, 'logger': 151, 'else': 150, 'Connection': 10, 'api': 109, 'add': 2, 'children': 63, 'put': 125, 'retrieved': 34, 'APIConnection': 30, '': 6, 'new': 83, '=': 33, 'Child': 68, 'set': 97, 'parent': 32, '>': 62, '<': 8, 'List': 86, 'Array': 85, '{': 16, 'null': 53, '==': 77, 'if': 49, 'Collection': 7, '!=': 52, 'Groups': 35, 'Group': 31, ':': 24, 'for': 17, 'void': 1, 'private': 0}
{'}\n': 73, ';': 71, ')': 58, 'shape': 55, '(': 24, 'add': 62, '.': 61, '{': 59, '': 38, 'void': 1, 'public': 0}
{'}\n': 26, ';': 24, ')': 16, 'decoration': 13, '(': 4, 'add': 2, '.': 19, 'decorations': 18, '{': 17, 'Decoration': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 59, '}': 52, ';': 19, 'return': 55, '{': 54, 'else': 53, ')': 18, 'NUM': 39, '_': 38, '(': 6, '.': 30, 'title': 11, 'substring': 36, 'String': 10, '': 1, 'Title': 5}
{'}\n': 500, '}': 473, ';': 55, ')': 30, 'e': 478, ',': 10, '(': 4, 'String': 57, 'to': 112, '.': 20, 'Type': 13, 'op': 15, 'STR': 107, '_': 50, 'error': 483, '_logger': 102, '{': 31, 'Exception': 477, '': 5, 'catch': 474, 'Stage': 91, 'Status': 22, 'Client': 7, 'db': 8, 'Block': 438, 'audit': 441, 'Util': 439, 'Audit': 94, ']': 166, 'NUM': 165, '[': 163, 'Param': 29, 'ext': 28, '=': 37, 'Desc': 78, 'ev': 58, '+': 124, 'info': 104, 'END': 100, 'AUDITOP_': 99, 'Manager': 96, 'Log': 95, 'Description': 84, 'get': 67, 'Ev': 68, 'BOOL': 51, ':': 52, '?': 49, 'status': 23, '==': 46, 'ready': 45, 'Operation': 12, 'boolean': 34, 'try': 32, '...': 27, 'Object': 26, 'Enum': 14, 'Db': 6, 'record': 2, 'void': 1, 'public': 0}
{'}\n': 148, ';': 21, ')': 9, 'val': 8, ',': 132, 'max': 136, '(': 6, '.': 16, 'Math': 127, '': 1, '=': 14, 'min': 124, 'nn': 13, 'n': 17, 'delta_nn': 32, '+=': 59, 'm1': 116, 'm2': 110, '*': 43, 'NUM': 70, '_': 69, '-': 84, 'm3': 92, '+': 73, 'm4': 58, 'this': 15, 'double': 7, 'final': 11, 'delta_nn2': 40, '/': 35, 'delta': 34, '{': 10, 'put': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 13, ';': 12, 'BOOL': 11, '_': 10, '=': 9, 'closed': 8, '.': 7, '{': 5, ')': 4, '(': 3, 'close': 2, 'void': 1, 'public': 0}
{'}\n': 15, ';': 14, ')': 4, '(': 3, 'size': 2, '.': 10, 'm_': 7, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 182, ';': 60, ')': 41, '.': 77, ',': 171, '_': 169, '(': 73, 'write': 137, 'gen': 47, '=': 50, '': 13, 'public': 0}
{'}\n': 310, ';': 54, ')': 23, '(': 17, 'To': 306, 'forward': 305, 'BOOL': 303, '_': 302, '=': 40, ',': 262, '': 18, 'set': 250, 'get': 46, 'Name': 186, '.': 56, 'selected': 87, 'Rows': 94, 'Selected': 93, 'Model': 26, ']': 86, '[': 85, 'Integer': 84, 'Data': 59, 'State': 58, 'restore': 57, 'Child': 47, 'Table': 38, 'CCAction': 37, '{': 29, 'Exception': 28, 'Control': 27, 'throws': 24, 'event': 22, 'Event': 21, 'Invocation': 20, 'Request': 16, 'Button': 14, 'handle': 10, 'void': 9, 'public': 8}
{'}\n': 153, ';': 12, ')': 4, 'Action': 120, 'help': 121, '(': 3, 'JButton': 146, '': 18, 'new': 17, 'Button': 142, 'add': 88, 'Path': 136, 'Help': 127, 'get': 134, '.': 30, 'Panel': 15, 'Show': 126, '=': 16, 'Pane': 86, 'tabbed': 85, 'Content': 112, 'set': 6, ',': 93, 'STR': 10, '_': 9, 'Tab': 89, 'Logic': 95, 'tab': 94, 'Layout': 46, 'network': 23, 'Title': 7, '{': 5, 'init': 2, 'void': 1, 'private': 0}
{'}\n': 62, ';': 16, 'sum': 12, 'return': 53, '}': 52, ']': 7, 'i': 20, '[': 6, '*': 46, '+=': 41, '{': 10, ')': 9, '++': 37, '.': 28, '<': 26, 'NUM': 15, '_': 14, '=': 13, 'int': 19, '(': 4, 'for': 17, 'double': 1}
{'}\n': 20, ';': 19, '+': 17, ')': 5, '(': 4, 'Code': 3, 'hash': 2, '.': 12, '*': 10, 'NUM': 9, '_': 8, '{': 6, 'int': 1, 'public': 0}
{'}\n': 700, '{': 668, ')': 667, '(': 663, 'List': 254, 'archive': 125, 'void': 1, 'public': 0}
{'}\n': 138, ';': 64, ')': 35, '(': 16, '.': 59, '': 9, 'Next': 106, 'Nodes': 82, 'int': 81, 'null': 84, '==': 83, 'if': 79, 'get': 60, 'de': 41, '=': 42, 'Edge': 40, 'Directed': 39, 'Polygonize': 38, '{': 36, 'List': 10, 'private': 0}
{'}\n': 503, ';': 63, 'return': 500, ')': 124, ',': 10, 'NUM': 62, '_': 38, '(': 6, 'arraycopy': 483, '.': 332, 'System': 481, '': 330, '=': 68, ']': 3, '[': 2, '{': 34, '++': 258, 'i': 247, '<': 253, 'int': 246, 'for': 244, 'byte': 1, 'new': 69}
{'}\n': 145, '}': 44, ';': 43, ')': 11, 'e': 119, '(': 5, 'Exception': 18, 'Generic': 22, 'Rcs': 14, '': 6, 'new': 34, 'throw': 33, 'assert': 128, '.': 63, 'Argument': 125, 'Illegal': 124, '{': 24, 'catch': 115, 'Listener': 4, 'rcs': 84, 'Listener2': 107, 'Event': 3, 'remove': 2, 'Api': 28, 'm': 27, 'null': 30, '!=': 98, 'if': 25, 'get': 90, 'Ref': 57, 'weak': 56, '=': 58, 'Sharing': 8, 'return': 77, '==': 29, 'listener': 10, 'Listeners': 62, '>': 55, '<': 50, 'Reference': 49, 'Weak': 48, 'try': 45, 'Available': 17, 'Not': 16, 'Service': 15, ',': 19, 'throws': 12, 'void': 1, 'public': 0}
{'}\n': 80, ';': 33, ')': 7, 'NUM': 77, '_': 30, '(': 61, '.': 59, 'Channel': 58, 'get': 51, '=': 50, '': 9, 'File': 4, '{': 11, 'IOException': 10, 'throws': 8, 'void': 1}
{'}\n': 78, ';': 22, 'BOOL': 21, '_': 20, 'return': 19, ')': 7, 'i': 38, '(': 3, 'At': 65, 'char': 23, '.': 14, 'sa': 6, ']': 25, '+': 58, '[': 24, '--': 51, 'NUM': 43, '>=': 46, '-': 41, '_length': 11, '=': 27, 'int': 30, 'for': 35, '_offset': 33, 'offset': 31, '_buffer': 28, 'buffer': 26, 'length': 15, '!=': 12, 'if': 9, '{': 8, 'String': 5, '': 4, 'matches': 2, 'boolean': 1, 'public': 0}
{'}\n': 50, ';': 38, ')': 30, '(': 28, 'Timer': 43, '{': 31, 'void': 4, 'public': 3}
{'}\n': 182, '}': 174, ';': 93, ')': 32, 'series': 118, '(': 11, 'Series': 10, 'if': 94, '=': 62, '': 43, '{': 33, 'public': 0}
{'}\n': 146, '}': 95, ';': 39, ')': 8, 'NOTIFICATION_': 109, '': 5, '.': 20, 'Event': 101, ',': 58, 'channel': 7, '(': 4, 'Channel': 3, 'new': 98, 'broadcast': 96, 'break': 62, ':': 31, 'default': 91, 'Channels': 33, 'Traffic': 69, 'm': 32, 'TRAFFIC': 66, 'case': 28, 'index': 57, 'Rows': 54, 'Table': 53, 'fire': 52, 'NUM': 50, '_': 49, 'STANDARD': 30, '{': 9, 'Type': 23, 'get': 21, 'switch': 17, 'public': 0}
{'}\n': 123, ';': 21, ')': 10, '(': 5, 'String': 3, 'to': 118, '.': 26, 'sb': 71, 'return': 19, '}': 22, ']': 63, 'i': 89, '[': 60, 'array': 9, 'append': 106, '{': 11, '++': 101, 'length': 27, '<': 95, 'NUM': 30, '_': 29, '=': 72, 'int': 88, 'for': 86, '*': 81, 'Builder': 70, '': 2, 'new': 73, 'final': 67, 'Of': 57, 'value': 56, '==': 15, 'if': 12, 'EMPTY': 39, 'Pool': 36, 'null': 16, 'Object': 7, 'join': 4, 'static': 1, 'public': 0}
{'}\n': 41, ';': 40, '.': 34, '(': 4, 'get': 23, '{': 12, ')': 11, '': 6, 'final': 5, 'Trait': 3, 'boolean': 1, 'public': 0}
{'}\n': 90, ';': 44, ')': 17, '(': 4, 'if': 45, 'else': 67, 'BOM': 50, 'is': 49, '.': 25, 'ID': 40, 'M_': 38, 'get': 26, ',': 34, 'Ctx': 31, 'MProduct': 20, '': 5, '=': 22, '{': 18}
{'}\n': 111, ';': 31, 'top': 8, 'return': 108, '}': 107, ')': 12, ']': 34, 'i': 68, '[': 33, 'values': 35, '(': 9, 'Local': 5, 'as': 96, '.': 38, 'Packed': 92, '': 1, 'add': 89, '{': 13, '++': 84, 'length': 81, '<': 3, '&&': 76, 'n': 11, 'NUM': 71, '_': 70, '=': 22, 'int': 10, 'for': 65, 'instance': 60, 'Comparator': 58, 'Int': 40, 'Reverse': 56, ',': 54, 'Sort': 51, 'Quick': 50, 'parallel': 49, 'Arrays': 47, 'Array': 25, 'to': 39, 'data': 37, '>': 7, 'List': 2, 'new': 23, 'public': 0}
{'}\n': 316, '}': 295, ';': 54, ')': 31, 'e': 300, ',': 11, 'STR': 52, '_': 51, '(': 7, 'XMLException': 35, 'Kettle': 34, '': 1, 'new': 304, 'throw': 303, '{': 36, 'Exception': 299, 'catch': 296, 'stepnode': 10, 'Value': 47, 'Tag': 46, 'get': 45, '.': 44, 'XMLHandler': 43, '=': 41, 'No': 280, 'task': 279, 'Id': 264, 'segment': 263, 'ID': 248, 'partition': 247, 'String': 25, 'Type': 207, 'Anddata': 206, 'level': 205, 'Lens': 189, 'Dim': 188, 'fact': 187, 'aggregator': 154, 'Class': 155, 'Enabled': 139, 'By': 138, 'group': 137, 'Name': 40, 'Size': 72, 'Key': 105, 'And': 104, 'heir': 103, 'Count': 88, 'measure': 87, 'mdkey': 71, 'tabel': 55, 'try': 37, 'throws': 32, 'counters': 30, '>': 18, 'Counter': 28, '<': 14, 'Map': 22, 'databases': 19, 'Meta': 17, 'Database': 16, 'List': 13, 'Node': 9, 'XML': 6, 'load': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 24, ';': 23, ')': 9, '(': 4, 'Short': 20, 'Unsigned': 19, 'read': 2, '.': 17, 'din': 8, '=': 15, 'reference': 14, '{': 13, 'IOException': 12, '': 5, 'throws': 10, 'Input': 7, 'Data': 3, 'void': 1, 'public': 0}
{'}\n': 64, ';': 16, 'res': 12, 'return': 61, '}': 60, ']': 51, 'i': 20, '[': 49, '{': 10, ')': 9, '<': 26, 'NUM': 23, '_': 22, '=': 13, 'int': 19, '(': 18, 'for': 17, 'public': 0}
{'}\n': 28, ';': 27, ')': 14, '(': 5, 'variance': 22, 'sqrt': 20, '.': 19, 'Math': 18, '': 17, 'return': 16, '{': 15, 'double': 2, 'public': 0}
{'}\n': 51, ';': 31, ')': 6, ',': 38, 'NUM': 40, '_': 39, 'array': 12, '(': 5, 'arraycopy': 35, '.': 13, 'System': 33, '': 32, ']': 30, '[': 28, 'int': 27, 'new': 26, '=': 25, 'length': 14, 'if': 8, '{': 7, 'public': 0}
{'}\n': 27, ';': 26, ')': 11, 'NUM': 21, '_': 20, ':': 22, '?': 19, 'left': 7, '(': 4, 'compare': 3, 'return': 13, '{': 12, 'right': 10, ',': 8, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 258, ';': 48, 'return': 255, ')': 10, 'Length': 246, '_': 43, '(': 16, '.': 161, '+=': 201, '}': 199, ']': 5, '[': 4, 'if': 171, ',': 166, '{': 154, 'NUM': 144, '': 12, 'in': 53, '=': 76, 'byte': 74, 'int': 61, 'Int': 56, '+': 45}
{'}\n': 122, '}': 80, ';': 26, ')': 8, 'e': 86, '(': 4, 'STR': 94, '_': 32, '{': 88, 'Exception': 85, '': 5, 'catch': 81, '.': 11, 'socket': 18, 'Size': 41, 'Buffer': 40, 'set': 29, 'Socket': 23, 'new': 20, '=': 19, 'logger': 7}
{'}\n': 130, ';': 117, 'val': 33, '}': 118, ')': 17, 'NUM': 71, '_': 70, '(': 6, '.': 37, '=': 55, '{': 18, '': 14}
{'}\n': 37, ';': 36, '.': 23, 'Level': 7, ')': 9, '(': 5, 'Value': 25, 'int': 24, 'level': 8, 'if': 11, '{': 10, '': 6, 'is': 3, 'boolean': 2}
{'}\n': 416, '}': 396, ';': 67, ')': 42, 'e': 402, '(': 89, 'Exception': 47, 'Model': 46, 'Java': 45, '': 14, 'new': 406, 'throw': 405, '{': 48, 'Core': 144, 'catch': 397, 'Patterns': 33, 'exclusion': 40, ',': 20, 'inclusion': 32, 'member': 195, 'Folder': 281, '.': 86, 'Level': 134, 'compliance': 156, 'source': 133, 'Name': 205, 'Valid': 230, 'is': 218, 'Util': 227, 'if': 106, 'get': 139, '=': 59, 'String': 132, ']': 29, 'i': 180, '[': 28, 'members': 83, '++': 190, 'length': 100, '<': 186, 'NUM': 111, '_': 110, 'int': 99, 'for': 177, 'BOOL': 151, 'COMPLIANCE': 171, 'COMPILER_': 147, 'Option': 140, 'Project': 116, 'SOURCE': 148, '>': 109, 'folder': 85, 'try': 77, 'throws': 43, 'char': 27}
{'}\n': 23, ';': 22, 'quote': 4, '': 2, '(': 5, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 76, '}': 54, ';': 53, ')': 6, 'e': 59, ',': 71, 'STR': 70, '_': 69, '(': 5, 'Exception': 11, 'Checked': 10, 'Ignite': 9, '': 8, 'new': 63, 'throw': 62, '{': 12, 'IOException': 58, 'catch': 55, 'Buf': 32, 'Net': 31, '.': 27, 'ch': 26, 'try': 13, 'throws': 7, 'void': 1, 'private': 0}
{'}\n': 51, 'mgr': 33, ';': 30, ')': 4, '.': 24, '{': 37, 'null': 35, '(': 3, 'if': 31, '': 9, '=': 7}
{'}\n': 20, ';': 19, ')': 10, 'ic': 9, '(': 5, '.': 13, 'ics': 12, '{': 11, 'Consumer': 4, 'Image': 7, '': 6, 'synchronized': 1, 'public': 0}
{'}\n': 134, '}': 133, ';': 39, ')': 11, ',': 35, 'STR': 119, '_': 118, '(': 4, '.': 30, 'logger': 114, '=': 71, '': 72, 'size': 57, 'Sockets': 55, 'active': 54, 'Aperture': 3, 'target': 16, 'int': 5, 'void': 1, 'private': 0}
{'}\n': 130, '}': 126, ';': 78, ')': 60, ',': 44, '(': 5, '{': 61, 'get': 105, '.': 72, 'invocation': 56, 'Invocation': 33, '': 16}
{'}\n': 273, ';': 27, ')': 6, '_': 53, '(': 5, '.': 20, 'Moves': 45, 'str': 44, 'STR': 75, 'assert': 57, 'BOOL': 54, ',': 52, 'pos': 15, 'List': 39, 'Move': 48, 'get': 47, '=': 16, '': 8, 'Piece': 208, 'NUM': 124, 'Square': 214, 'Position': 14, 'set': 207, 'size': 159, 'Equals': 151, '>': 43, 'String': 42, '<': 40, 'FEN': 22, 'read': 21, 'IO': 19, 'Text': 18, '{': 12, 'Error': 11, 'Parse': 10, 'Chess': 9, 'throws': 7, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 387, '}': 370, ';': 368, ')': 208, 'message': 179, '(': 77, '{': 209, 'NUM': 300, '_': 299, '>': 298, '.': 290, 'if': 221, '': 81, 'Message': 11}
{'}\n': 142, ';': 56, 'results': 44, 'return': 139, '}': 138, '++': 136, 'Number': 59, 'expression': 58, ')': 31, '(': 11, 'add': 129, '.': 81, ',': 16, 'Service': 67, 'Type': 66, 'stream': 68, 'expr': 97, 'Context': 19, 'statement': 20, 'Name': 15, 'view': 14, 'Expr': 27, 'validate': 8, '=': 45, '': 2, '{': 37, 'expressions': 30, ':': 98, 'Node': 28, 'for': 92, 'URI': 84, 'Engine': 83, 'get': 82, 'Impl': 77, 'Stream': 65, 'new': 46, 'NUM': 62, '_': 61, 'int': 57, '>': 29, '<': 25, 'List': 24, 'Array': 48, 'Exception': 36, 'Parameter': 35, 'View': 34, 'throws': 32, 'Statement': 18, 'String': 13, 'static': 1, 'public': 0}
{'}\n': 158, ';': 150, 'return': 152, '}': 151, ')': 19, 'NUM': 101, '_': 57, '(': 11, 'length': 122, 's': 18, ',': 102, 'substring': 96, '.': 38, '=': 93, '{': 25, 'String': 7, '': 6, 'static': 5, 'public': 4}
{'}\n': 165, ';': 28, 'url': 23, 'return': 162, '+': 90, 'STR': 76, '_': 66, 'Name': 89, 'Parameter': 73, '.': 26, 'this': 25, 'series': 15, '+=': 71, ':': 77, '?': 74, 'first': 72, ')': 19, '(': 8, '=': 24, 'prefix': 27, 'String': 5, '': 1, '{': 20, 'int': 14, ',': 13, 'dataset': 12, 'URL': 7, 'generate': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 147, ';': 21, 'BOOL': 20, '_': 19, 'return': 18, '}': 110, '{': 7, ')': 6, 'Expire': 4, 'Idle': 3, 'next': 65, ',': 100, 'idle': 32, '(': 5, 'Set': 96, 'And': 95, 'compare': 94, '.': 12, 'Time': 26, '_thread': 35, '&&': 81, 'now': 23, '<': 59, 'if': 8, 'else': 111, 'Max': 77, '_idle': 48, 'Min': 58, 'Count': 46, 'Timeout': 72, '+': 70, '=': 24, 'long': 22, 'get': 40, 'int': 44, 'Actual': 27, 'Active': 14, 'is': 2, '_lifecycle': 11, '!': 10, 'boolean': 1, 'public': 0}
{'}\n': 242, ';': 28, ')': 9, ',': 216, '(': 4, 'get': 39, '.': 106, 'model': 32, '': 5, 'STR': 134, '_': 133, '=': 33, 'Model': 12, '{': 15, 'Exception': 14, 'Control': 13, 'throws': 10, 'event': 8, 'Event': 7, 'Display': 3, 'begin': 2, 'void': 1, 'public': 0}
{'}\n': 158, ';': 27, ')': 76, ',': 142, '(': 3, 'get': 106, '.': 105, '': 80, 'new': 21, ']': 18, 'NUM': 37, '_': 36, '[': 17, 'byte': 16, '=': 20, 'void': 1}
{'}\n': 83, ';': 20, ')': 6, '(': 16, 'close': 79, '.': 13, 'conn': 23, 'stat': 38, 'STR': 33, '_': 32, 'execute': 49, '': 8, 'Connection': 30, 'get': 29, 'Manager': 27, 'Driver': 26, '=': 24, 'Name': 15, 'for': 14, 'Class': 12, '{': 10, 'Exception': 9, 'throws': 7}
{'}\n': 31, ';': 30, ')': 12, 'group': 11, '(': 8, '.': 25, 'Delete': 7, 'Never': 6, 'To': 5, 'Groups': 21, 'job': 20, 'null': 18, '!=': 17, '{': 13, 'String': 10, '': 9, 'Group': 4, 'Job': 3, 'public': 0}
{'}\n': 140, ';': 50, 'doc': 10, 'return': 137, ')': 39, 'ID': 30, 'nodes_': 29, ',': 11, 'nodes': 24, 'wf': 14, 'Node': 18, 'active': 17, '(': 6, 'Panel': 123, 'Control': 122, 'print': 56, 'Element': 54, 'add': 53, '.': 45, 'b': 42, 'br': 111, 'new': 79, 'Description': 91, 'hr': 80, 'Map': 38, 'image': 37, 'Workflow': 57, 'Body': 47, 'get': 46, '=': 43, 'body': 41, '{': 40, ']': 23, '[': 22, 'int': 16, 'List': 28, 'Array': 27, '': 1, 'MWFNode': 21, 'MWorkflow': 13, 'Doc': 3, 'Layout': 5, 'create': 4, 'private': 0}
{'}\n': 47, '}': 18, ';': 17, ')': 9, 'e': 23, ',': 35, '(': 8, 'String': 39, 'to': 38, '.': 27, 'WARNING': 34, '': 1, 'Level': 31, 'log': 26, '{': 10, 'Exception': 22, 'catch': 19, 'Loop': 14, 'request': 5, 'try': 11, 'Read': 7, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 23, ';': 22, ')': 11, 'field': 6, '(': 16, '{': 12, '': 1, 'Match': 3}
{'}\n': 155, '(': 25, '.': 61, '}': 120, ';': 67, 'f': 90, '{': 89, 'else': 121, ')': 10, 'NUM': 74, '_': 73, '': 12, '=': 17}
{'}\n': 36, '}': 26, ';': 13, ')': 6, '(': 5, 'unlock': 31, '.': 9, 'lock': 8, '{': 7, 'finally': 27, 'try': 14, 'Acks': 4, 'void': 1}
{'}\n': 78, ';': 25, ')': 12, '(': 23, 'String': 3, 'to': 73, '.': 54, 'sb': 17, 'return': 70, '}': 50, 'append': 55, 'STR': 58, '_': 29, '{': 13, 'else': 51, 'BOOL': 30, '=': 18, 'first': 27, 'if': 40, ':': 36, 'for': 32, 'boolean': 26, 'Builder': 16, '': 2, 'new': 19}
{'}\n': 64, ';': 41, 'target': 15, 'return': 61, ')': 16, ',': 11, 'NUM': 51, '_': 50, '(': 6, 'arraycopy': 46, '.': 22, 'System': 44, '': 43, '}': 42, ']': 4, '[': 3, 'byte': 2, 'new': 36, '=': 35, '{': 17, 'length': 23, 'copy': 5, 'static': 1, 'public': 0}
{'}\n': 237, ';': 47, 'Radians': 57, 'distance': 199, ':': 233, 'NUM': 126, '_': 37, '?': 230, ')': 9, '(': 5, 'N': 225, 'Na': 224, 'is': 223, '.': 27, 'Double': 221, '': 6, 'return': 124, 'Math': 54, '=': 52, 'double': 1, '*': 173, '-': 140, '}': 48, '{': 10, 'lon2': 95, '==': 14, 'lon1': 65, '&&': 116, 'lat2': 80, 'lat1': 50, 'if': 11, 'longitude': 76, 'location': 8, 'to': 56, 'latitude': 61, 'this': 59, 'STR': 38, ',': 36, 'ERROR': 35, 'Logger': 26, 'Message': 29, 'log': 28, 'Exception': 23, 'Argument': 22, 'Illegal': 21, 'new': 19, 'throw': 18, 'null': 15, 'Location': 7, 'Distance': 4, 'public': 0}
{'}\n': 218, '}': 190, ')': 25, '': 11, '(': 10, ';': 54, '.': 91, 'reader': 58, 'Reader': 63, 'new': 60, '=': 38, 'null': 39, '{': 29, 'File': 12}
{'}\n': 42, ';': 27, ')': 9, 'operator': 8, '(': 5, 'add': 30, '.': 29, '': 6, 'new': 19, 'Operator': 3, '{': 10, 'void': 1, 'public': 0}
{'}\n': 48, '}': 47, ';': 46, 'Id': 7, 'new': 16, '=': 34, '{': 19, ')': 18, 'old': 11, '(': 8, 'equals': 25, '.': 24, 'if': 20, 'String': 10, '': 1, ',': 13, 'Variable': 6, 'modify': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 23, ';': 22, ')': 6, '(': 5, '': 12, 'new': 11, '=': 10, '{': 7, 'public': 0}
{'}\n': 93, '}': 66, ';': 65, 'null': 64, 'return': 63, '{': 13, ')': 12, 'e': 86, 'Exception': 85, 'Format': 84, 'Number': 83, '': 1, '(': 5, 'catch': 80, 's': 8, '.': 30, 'Integer': 2, 'if': 14, 'String': 7}
{'}\n': 111, '}': 110, ';': 44, ')': 13, 'worker': 59, 'Worker': 9, '(': 4, 'next': 63, '.': 40, 'iter': 37, '=': 38, 'Thread': 10, '': 5, 'final': 29, '{': 14, 'Next': 50, 'has': 49, 'iterator': 41, 'workers': 12, '>': 11, '<': 7, 'Iterator': 31, 'Collection': 6, 'Workers': 3, 'void': 1, 'protected': 0}
{'}\n': 79, ';': 44, 'clone': 8, 'return': 76, '}': 75, ')': 11, '.': 69, '{': 12, '(': 10, '=': 33, '': 1}
{'}\n': 332, ';': 198, 'hc': 183, 'return': 329, '}': 280, 'Code': 135, 'hash': 134, ')': 154, '(': 148, '.': 241, '{': 155, 'if': 201, 'int': 41, '': 37}
{'}\n': 156, ';': 64, '*': 132, ')': 13, '(': 6, '.': 87, '=': 44, 'size': 88, 'Weight': 43, '{': 14}
{'}\n': 106, ';': 27, ')': 14, '(': 6, 'String': 3, 'to': 101, '.': 29, 'sb': 19, 'return': 98, '}': 97, ']': 90, 'i': 57, '[': 88, 'params': 64, 'append': 30, 'STR': 77, '_': 59, '{': 15, '++': 69, 'length': 66, '<': 63, 'NUM': 60, '=': 20, 'int': 56, 'for': 54, 'Buffer': 18, '': 2, 'new': 21, ',': 10, 'Name': 5, 'static': 1}
{'}\n': 148, ';': 18, '_': 145, '=': 54, 'saved': 138, '.': 25, ')': 5, '(': 4, ',': 116, 'Attribute': 24, 'length': 47, '{': 6, 'void': 1}
{'}\n': 115, ';': 34, ')': 15, 'ip': 23, '(': 32, '': 7, '}': 86, 'STR': 53, '_': 52, '.': 48, '+': 68, '{': 60, 'NUM': 58, '-': 56, '!=': 55, 'Of': 50, 'index': 49, 'if': 45, ':': 40, 'String': 11, 'for': 35, '>': 22, '<': 19, 'List': 18, 'Array': 28, 'new': 26, '=': 25}
{'}\n': 30, '{': 10, ')': 9, '(': 4, 'dispose': 2, 'void': 1}
{'}\n': 32, ';': 31, 'return': 21, '{': 20, ')': 19, 'pos': 18, 'Position': 17, 'Parse': 16, '': 4, ',': 13, 'source': 12, 'String': 11, '(': 8, 'Object': 5, 'parse': 6, 'public': 3}
{'}\n': 32, ';': 31, ')': 15, 'BOOL': 29, '_': 28, ',': 27, '(': 14, 'spliterator': 24, 'stream': 13, '.': 21, 'Support': 20, 'Stream': 6, '': 5, 'return': 17, '{': 16, '>': 12, '<': 7, 'public': 3}
{'}\n': 161, ';': 104, 'Mod': 19, '=': 60, '{': 55, ')': 54, ',': 27, '(': 7, '': 1, 'private': 0}
{'}\n': 108, ';': 28, ')': 16, ',': 11, '(': 6, '': 1, 'new': 94, 'height': 89, '.': 23, 'width': 85, 'NONE': 61, 'Constraint': 58, 'Rectangle': 57, 'g2': 15, 'arrange': 4, 'b': 31, '=': 21, 's': 48, 'D': 3, 'Size2': 2, 'Block': 8, 'Blocks': 25, 'get': 24, 'container': 10, 'blocks': 20, 'List': 19, '{': 17, 'Graphics2': 13, 'Container': 9, 'NN': 5, 'protected': 0}
{'}\n': 55, ';': 53, ')': 23, 'Type': 5, 'content': 19, '(': 6, 'Content': 4, 'return': 25, '{': 24, 'String': 8, '': 7, 'static': 1, 'public': 0}
{'}\n': 104, ';': 67, ')': 46, ',': 14, 'issuer': 38, 'Uri': 18, 'application': 17, 'days': 87, '(': 7, 'Certificate': 6, 'generate': 82, 'Key': 36, '': 2, 'get': 63, '.': 26, 'Exception': 51, 'Pair': 37, 'security': 33, 'transport': 31, 'ua': 29, 'opcfoundation': 27, 'org': 25, 'String': 9, 'static': 1}
{'}\n': 187, '}': 151, ';': 31, ')': 19, '(': 13, 'To': 144, 'forward': 181, 'Message': 163, 'get': 44, '.': 95, 'e': 157, ',': 139, 'ERROR': 167, 'TYPE_': 166, '': 14, 'Alert': 162, 'Inline': 161, 'set': 160, '{': 25, 'Exception': 24, 'AMConsole': 155, 'catch': 152, 'Bean': 147, 'View': 146, 'Profile': 145, 'back': 143, 'values': 109, 'Name': 71, 'Config': 137, 'sub': 136, 'model': 36, 'Values': 115, 'Attribute': 80, 'ps': 52, '=': 28, 'Map': 108, 'Session': 79, 'Page': 78, 'String': 68, 'ATTRIBUTE': 64, 'PROPERTY_': 63, 'Child': 60, 'Sheet': 51, 'AMProperty': 50, 'Model': 22, 'BOOL': 30, '_': 29, 'Cycle': 27, 'submit': 26, 'Control': 23, 'throws': 20, 'event': 18, 'Event': 17, 'Invocation': 16, 'Request': 12, 'Button1': 11, 'handle': 10, 'void': 9, 'public': 8}
{'}\n': 67, ';': 46, 'res': 37, ')': 19, '(': 31, '.': 51, 'if': 47, '=': 38, '{': 20, '': 14}
{'}\n': 46, '}': 45, ';': 24, ')': 11, '(': 4, 'next': 40, '.': 20, 'it': 17, 'Undo': 36, 'And': 35, 'find': 34, '{': 12, 'Next': 28, 'has': 27, 'iterator': 21, 'bcme': 10, '=': 18, 'Iterator': 16, '': 5, 'Event': 9, 'Membership': 8, 'Context': 7, 'Bean': 6, 'Removed': 3, 'children': 2, 'void': 1, 'public': 0}
{'}\n': 78, '}': 77, ';': 76, ')': 15, '(': 26, 'Path': 72, 'Absolute': 71, 'get': 70, '.': 31, 'directory': 14, '+': 67, 'STR': 66, '_': 65, 'IOException': 18, '': 12, 'new': 61, 'throw': 60, '{': 19, '!': 29, 'if': 49, 'Directory': 33, 'is': 32, 'throws': 16, 'File': 13, 'static': 1, 'public': 0}
{'}\n': 214, ';': 19, ')': 6, '(': 5, 'String': 2, 'to': 3, '.': 29, 's': 11, 'return': 206, 'milliseconds': 180, 'this': 28, 'append': 75, '_': 32, 'NUM': 33, 'if': 56, '}': 85, 'STR': 52, '{': 7, '+': 50, 'weeks': 30, 'Builder': 10, '': 1, 'new': 13, '=': 12, 'public': 0}
{'}\n': 20, ';': 19, ')': 10, 'name': 9, '(': 6, 'contains': 15, '.': 14, 'return': 12, '{': 11, '': 7, 'Keyword': 5, 'is': 3, 'boolean': 2, 'public': 0}
{'}\n': 23, ';': 22, '(': 6, 'group': 16, '.': 15, 'matcher': 10, 'return': 13, '{': 12, ')': 11, 'Matcher': 9, '': 8}
{'}\n': 85, ';': 34, ')': 17, '&&': 75, '.': 44, '==': 27, 'return': 31, '': 7, '(': 6, '=': 59, '}': 55, 'BOOL': 33, '_': 32, '{': 18, 'Class': 39, 'get': 38, '!=': 42, 'if': 24, 'null': 28, 'Object': 8, 'equals': 5, 'boolean': 4, 'public': 3}
{'}\n': 184, ';': 20, 'type': 8, 'return': 18, '}': 21, ')': 9, '(': 5, 'String': 39, 'to': 174, '.': 25, 'sb': 109, 'Type': 4, 'Element': 158, 'get': 26, 'rename': 1, 'append': 141, 'STR': 84, '_': 83, '{': 10, '--': 136, 'n': 121, 'NUM': 133, '>': 131, 'Dimensions': 126, '=': 41, 'int': 120, 'for': 118, 'Builder': 108, '': 6, 'new': 111, 'ARRAY': 103, '==': 14, 'Sort': 27, 'if': 11, 'else': 89, '+': 82, 'in': 40, 'Internal': 45, 'Name': 46, 'OBJECT': 35, 'null': 15}
{'}\n': 57, '}': 56, ';': 55, ')': 25, '(': 6, '.': 50, 'list': 23, 'Output': 10, 'xml': 9, '{': 29, 'IOException': 28, '': 7, 'throws': 26, '>': 22, '<': 19, ',': 11, 'Name': 15, 'tag': 14, 'String': 13, 'XMLOutput': 8, 'List': 5, 'write': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 33, ';': 14, ')': 8, '(': 4, 'Components': 29, 'init': 28, 'STR': 24, '_': 23, 'String': 21, 'get': 20, '.': 19, 'res': 18, 'Title': 16, 'set': 15, 'parent': 7, 'super': 10, '{': 9, 'JDialog': 6, '': 1, 'DPolicy': 2, 'public': 0}
{'}\n': 87, ';': 66, ')': 34, '(': 4, '.': 48, 'cache': 43, '': 5, 'get': 49, '=': 45, '>': 42, '<': 39, 'Collection': 38, '{': 35}
{'}\n': 266, ';': 54, ')': 22, 'STR': 52, '_': 51, ',': 13, 'null': 41, '(': 8, 'Tag': 47, 'end': 57, '.': 31, 'out': 21, '{': 36, '++': 161, 'i': 150, 'N': 103, '': 14, '<': 156, 'NUM': 153, '=': 104, 'int': 101, 'for': 147, 'String': 15, 'to': 121, 'Integer': 119, 'attribute': 89, 'length': 107, 'val': 12, 'final': 2, '}': 68, 'name': 16, '!=': 83, 'if': 37, 'start': 46, 'return': 66, '==': 40, 'IOException': 35, 'io': 32, 'java': 30, 'Exception': 28, 'Parser': 27, 'Pull': 26, 'Xml': 7, 'throws': 23, 'Serializer': 20, ']': 11, '[': 10, 'Array': 6, 'write': 4, 'void': 3, 'static': 1, 'public': 0}
{'}\n': 100, '}': 29, ';': 28, ')': 17, 'Running': 16, 'If': 15, 'Interrupt': 14, 'may': 13, '(': 6, 'cancel': 2, '.': 44, 'Handle': 37, 'request': 39, 'Tag': 81, 'get': 80, 'equals': 75, 'TAG': 5, '': 7, 'if': 19, '{': 18, 'List': 33, ':': 41, 'Request': 36, 'for': 30, 'null': 24, '!=': 54, 'values': 45, 'Map': 43, '>': 38, '<': 34, 'return': 27, '==': 23, 'boolean': 12, ',': 11, 'Object': 8, 'By': 4, 'Requests': 3, 'void': 1, 'public': 0}
{'}\n': 341, ';': 45, ')': 34, ',': 12, '-': 249, '(': 7, 'Line': 296, 'draw': 3, '.': 52, '+': 310, 'NUM': 80, '_': 79, '*': 199, 'padding': 71, 'tw': 155, '=': 50, 'get': 53, 'bounds': 86, 'text': 94, 'Bounds': 92, 'String': 91, 'fm': 49, 'D': 85, 'Rectangle2': 84, '': 8, 'int': 21, 'Metrics': 48, 'Font': 47, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 17, ',': 12, 'subset': 5, '(': 7, '{': 18}
{'}\n': 70, ';': 23, ')': 14, ',': 59, '(': 5, '': 6, '.': 34, 'Queue': 28, 'Work': 27, '{': 15, 'void': 2, 'public': 1}
{'}\n': 95, ';': 26, 'cells': 17, 'return': 92, '}': 91, ')': 11, ',': 87, '(': 7, '': 2, 'new': 82, ']': 5, 'i': 30, '[': 4, 'NUM': 24, '_': 23, '/': 73, '-': 57, '.': 38, '{': 12, 'length': 39, '<': 36, '=': 18, 'int': 29, 'for': 27, 'Cell': 14, 'String': 9}
{'}\n': 128, ';': 63, ')': 21, 'return': 118, '(': 4, '.': 16, '': 1, 'Y': 48, 'get': 17, 'center': 75, '-': 74, 'X': 71, '=': 14, 'double': 64, 'D': 12}
{'}\n': 45, ';': 20, ')': 11, 'this': 42, '(': 3, 'println': 40, '.': 30, 'out': 7, '}': 37, 'STR': 34, '_': 18, 'print': 31, '{': 12, '++': 26, 'i': 16, 'indent': 10, '<': 22, 'NUM': 19, '=': 17, 'int': 9, 'for': 13, ',': 8, 'Print': 5, '': 4, 'list': 2, 'void': 1, 'public': 0}
{'}\n': 159, ';': 12, ')': 4, 'Action': 126, 'help': 127, '(': 3, 'JButton': 152, '': 17, 'new': 54, 'Button': 148, 'add': 44, 'Path': 142, 'Help': 133, 'get': 140, '.': 21, 'Panel': 15, 'Show': 132, '=': 16, 'Pane': 92, 'tabbed': 91, 'Content': 118, 'set': 6, 'layout': 51, ',': 29, 'STR': 10, '_': 9, 'Tab': 95, 'Logic': 42, 'tab': 41, 'Layout': 57, 'Current': 70, 'this': 63, 'BOOL': 61, 'Main': 56, 'CREATE_': 37, 'Type': 34, 'Props': 32, 'Competitive': 18, 'network': 27, 'Properties': 19, 'create': 22, 'Title': 7, '{': 5, 'init': 2, 'void': 1, 'private': 0}
{'}\n': 201, ';': 200, ')': 115, '(': 6, 'List': 179, 'empty': 178, '>': 177, 'Extension': 176, '': 2, '<': 174, '.': 173, 'Collections': 172, ',': 11, 'Cert': 16, 'URI': 37, 'responder': 38, 'check': 5, 'Exception': 135, 'Validator': 134, 'Path': 133, 'IOException': 125, 'X509': 8, 'issuer': 15, 'Certificate': 9, 'cert': 10, 'Status': 4, 'Revocation': 3, 'static': 1, 'public': 0}
{'}\n': 246, '}': 113, ';': 36, ')': 13, '(': 8, 'Alpha': 10, '.': 18, '': 2, 'return': 215, 'Composite': 3, ':': 158, '{': 14, 'else': 114, 'NUM': 103, '_': 102, 'get': 19, 'if': 45, 'public': 0}
{'}\n': 124, ';': 84, ')': 36, '(': 5, '': 1, 'new': 116, 'return': 115, '}': 114, ']': 108, '[': 106, 'List': 72, 'phone': 71, '.': 31, '{': 50, '++': 95, '<': 86, 'NUM': 83, '_': 82, '=': 55, 'int': 79, 'for': 77, 'if': 38}
{'}\n': 73, ';': 28, ')': 14, 'Path': 19, 'new': 45, '(': 6, 'File': 3, '': 2, 'return': 64, '.': 22, 'absolute': 18, '=': 20, 'String': 17, 'get': 23, 'Absolute': 24, 'file': 21, '{': 15, ',': 10, 'static': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 14, 'b': 10, 'a': 7, '(': 5, '.': 19, 'Math': 18, '': 17, 'return': 16, '{': 15, 'double': 6, ',': 8, 'static': 1}
{'}\n': 39, ';': 22, 'this': 37, 'return': 36, ')': 13, 'Bracket': 12, 'open': 4, '(': 5, 'write': 30, '.': 29, 'out': 28, 'empty': 7, 'Value': 19, 'before': 18, '{': 17, 'IOException': 16, '': 1, 'throws': 14, 'String': 10, ',': 8, 'Writer': 3, 'Json': 2, 'private': 0}
{'}\n': 23, ';': 22, 'base': 20, '.': 12, 'this': 18, '(': 4, 'Math': 11, '': 10, 'return': 9, '{': 8, ')': 7, 'double': 1, 'calculate': 2}
{'}\n': 215, '}': 194, ';': 153, ')': 15, '(': 7, '.': 172, '{': 164, ',': 11, 'file': 58, 'Stream': 42, 'Input': 41, 'File': 31, '': 8, 'new': 38, '=': 37, 'fis': 36, 'String': 13, 'public': 3}
{'}\n': 56, ')': 8, '(': 7, '.': 20, 'File': 14, 'zip': 15, '=': 17, '': 10}
{'}\n': 30, ';': 29, 'NUM': 28, '_': 27, '==': 26, ')': 5, '(': 4, 'size': 23, 'return': 7, '{': 6, 'Empty': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 190, ';': 185, ')': 46, '(': 12, 'get': 157, '.': 156, 'Bundle': 35, '': 1, '=': 54, '{': 47}
{'}\n': 31, '}': 30, ';': 16, ')': 4, '(': 3, '.': 10, '{': 5, 'null': 21, '!=': 20, 'if': 17, '': 8, '=': 7, 'void': 1, 'public': 0}
{'}\n': 164, ';': 89, 'args': 11, '=': 77, '.': 84, 'this': 158, 'type': 87, 'Type': 154, 'entry': 82, '}': 122, ')': 12, 'TYPE': 149, 'ENTRY_': 148, 'INVALID_': 118, '': 1, 'Exception': 16, 'Catalog': 2, '(': 4, 'new': 108, 'throw': 107, '{': 42, 'e': 133, 'Bounds': 131, 'Of': 130, 'Out': 129, 'Index': 128, 'Array': 127, 'catch': 124, 'ENTRY': 119, 'size': 102, '!=': 99, 'Value': 96, 'int': 95, 'Args': 76, 'i': 75, 'if': 90, 'get': 85, 'Integer': 74, 'try': 71, 'throws': 13, 'Vector': 10, ',': 8, 'Entry': 3, 'public': 0}
{'}\n': 58, ';': 57, ')': 30, '(': 25, '.': 39, '{': 31, 'count': 12, 'public': 0}
{'}\n': 166, ';': 71, '[': 21, 'stack': 15, '}': 155, 'Stack': 24, 'new': 23, '=': 25, ')': 8, '.': 16, ',': 78, 'NUM': 50, '_': 49, '(': 4, 'arraycopy': 75, 'System': 73, '': 72, ']': 22, '*': 48, 'int': 20, '{': 9, 'length': 17, 'if': 10, 'push': 2, 'void': 1}
{'}\n': 20, ';': 19, ')': 10, '(': 16, 'gossip': 12, '{': 11, 'Gossip': 3, '': 6, 'Member': 4, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, 'Sensitive': 4, '{': 7, 'Case': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 53, ';': 19, 'hash': 5, 'return': 50, ')': 8, '(': 7, 'Code': 6, '.': 14, 'actions': 37, '^=': 27, 'null': 24, '!=': 23, 'if': 20, 'name': 22, 'type': 13, '=': 12, 'int': 4, '{': 9, 'public': 3}
{'}\n': 97, ';': 38, ')': 26, 'get': 90, '(': 6, 'Config': 56, '': 1, '=': 43, '.': 40, 'this': 39, 'Name': 16, 'service': 15, 'map': 25, ',': 12, 'req': 11, 'super': 32, '{': 31, 'Exception': 30, 'AMConsole': 29, 'throws': 27, 'Map': 24, 'String': 14, 'Request': 10, 'Servlet': 9, 'Http': 8, 'Impl': 5, 'Model': 4, 'public': 0}
{'}\n': 59, ';': 28, ')': 10, '.': 47, 'that': 34, '(': 6, 'equals': 5, 'return': 25, '': 7, '=': 35, '}': 29, 'BOOL': 27, '_': 26, '{': 11, 'instanceof': 17, 'obj': 9, '!': 14, 'if': 12, 'Object': 8, 'boolean': 4, 'public': 3}
{'}\n': 117, ';': 49, ')': 27, 'blue': 114, ',': 11, 'green': 112, 'red': 110, 'NUM': 44, '_': 43, '(': 7, 'argb': 99, '.': 37, '': 8, 'Int': 6, 'parse': 38, 'Integer': 36, '=': 31, 'alpha': 30, 'String': 9, 'Color': 5, 'To': 4, 'convert': 3, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 8, '': 1, '.': 16, 'Type': 15, 'Action': 6, '(': 7, 'on': 5, '{': 9, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 57, ';': 34, ')': 15, '(': 5, 'advance': 53, ',': 45, 'node': 14, 'Moment': 42, '': 1, 'new': 25, 'add': 38, '.': 37, 'stack': 36, '}': 35, 'STR': 32, '_': 31, 'Exception': 29, 'Pointer': 28, 'Null': 27, 'throw': 24, '{': 16, 'null': 21, '==': 20, 'if': 17, 'Node': 9, 'public': 0}
{'}\n': 116, '}': 100, ';': 99, ')': 61, 'Name': 15, '+': 110, 'STR': 109, '_': 108, '(': 7, 'SAXException': 106, '': 1, 'new': 104, 'throw': 103, '{': 38, 'else': 101, 'equals': 56, '.': 55, 'q': 19, 'if': 41, 'String': 9, ',': 11, 'local': 14, 'Element': 6, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 14, '{': 6, ')': 5, '(': 4, 'cancel': 2, 'void': 1, 'public': 0}
{'}\n': 59, '}': 51, ';': 50, 'NUM': 56, '_': 27, 'return': 43, '{': 42, 'else': 52, 'm_': 32, ')': 20, 'att': 8, '(': 6, 'Index': 16, '': 1}
{'}\n': 701, ';': 50, 'BOOL': 474, '_': 47, '=': 67, 'Initialized': 36, 'Time': 35, 'm': 34, ')': 30, ',': 15, 'Degrees': 594, 'minute': 652, 'Pm': 75, 'Am': 74, 'Hide': 73, 'context': 6, '(': 3, 'initialize': 2, '.': 41, 'View': 95, 'Selector': 617, 'Radial': 445, 'Minute': 518, 'SIZE': 612, 'STEP_': 611, 'DEGREES_': 610, 'TO_': 609, 'VALUE_': 608, 'MINUTE_': 585, '': 4, '*': 605, 'Minutes': 24, 'initial': 17, 'int': 16, 'Day': 20, 'Of': 19, 'Hours': 18, 'Circle': 94, 'Inner': 641, 'Hour': 28, 'is': 81, 'hour': 593, 'Mode': 29, 'is24': 27, 'HOUR_': 570, 'NUM': 140, '%': 601, 'INDEX': 571, 'Item': 567, 'For': 566, 'Value': 565, 'set': 564, 'invalidate': 111, 'Texts': 305, 'null': 465, 'minutes': 260, 'res': 162, ':': 144, 'inner': 319, '?': 141, 'hours': 174, '}': 53, ']': 173, 'i': 349, '[': 172, 'STR': 48, 'format': 376, 'String': 301, 'hours_24': 217, '{': 31, '++': 360, '<': 138, 'for': 346, 'new': 307, 'Resources': 161, 'get': 166, 'Circles': 127, 'PM': 146, 'AM': 143, '!': 117, 'if': 32, 'Is24': 64, 'Enabled': 84, 'Exploration': 83, 'Touch': 82, 'return': 51, 'TAG': 45, 'e': 42, 'Log': 40, 'boolean': 26, 'Context': 5, 'void': 1, 'public': 0}
{'}\n': 683, '}': 567, ';': 166, ']': 127, 'i': 661, '[': 125, '{': 119, ')': 118, '++': 670, 'NUM': 327, '_': 326, '=': 138, '(': 106, 'if': 168, 'null': 221, '==': 172, '': 7}
{'}\n': 89, ';': 25, 'null': 16, 'return': 42, '}': 48, ']': 38, 'i': 22, '[': 36, 'values': 43, ')': 10, 'keys': 35, '(': 6, 'Case': 71, 'Ignore': 70, 'equals': 69, '.': 68, 'k': 9, 'if': 12, '{': 11, 'NUM': 30, '_': 29, '>=': 28, '--': 26, 'nkeys': 24, '=': 23, 'int': 21, 'for': 19, 'else': 49, '==': 15, 'String': 3, '': 2, 'Value': 5, 'find': 4, 'public': 0}
{'}\n': 59, ';': 30, 'return': 55, '}': 54, '(': 3, 'delete': 47, '.': 46, '&=': 43, 'success': 42, ')': 4, 'BOOL': 28, '_': 27, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'boolean': 1, 'public': 0}
{'}\n': 66, ';': 27, '}': 60, '{': 15, ')': 14, '(': 6, 'Prefix': 5, 'Annotations': 40, 'get': 39, '.': 38, 'Type': 10, 'anno': 12, 'Mirror': 11, 'Annotation': 32, '': 8, 'BOOL': 26, '_': 25, 'Annotated': 9, 'final': 7, 'static': 1, 'public': 0}
{'}\n': 45, ';': 44, ')': 41, '(': 6, 'format': 32, '': 12, 'Format': 4}
{'}\n': 81, ';': 43, '(': 41, '.': 39, 'log': 21, ')': 42, ',': 59, 'Logger': 4, 'Ignite': 3, '': 2}
{'}\n': 36, ';': 35, ')': 19, '.': 28, '(': 10, '{': 20, 'monitor': 18, '': 15, 'static': 1, 'public': 0}
{'}\n': 43, ';': 31, 'STR': 40, '_': 29, '(': 7, 'imdb': 10, '{': 13, ')': 12, '.': 19, 'Utils': 18, '': 8, 'String': 9, 'Id': 6, 'Imdb': 5, 'static': 1, 'public': 0}
{'}\n': 72, ';': 40, ')': 6, 'intent': 41, '(': 5, 'Activity': 36, 'start': 59, '': 8, '.': 37, 'class': 38, ',': 33, 'this': 32, 'Intent': 25, '=': 12, '{': 7, 'void': 1}
{'}\n': 162, ';': 29, ')': 17, 'STR': 85, '_': 22, '(': 3, '.': 49, '}': 73, 'BOOL': 36, '=': 34, 'Line': 33, 'New': 32, 'is': 31, '{': 18, 'NUM': 44, '-': 132, 'length': 50, 'coords': 8, '<': 47, 'i': 41, '&&': 126, '==': 123, 'Per': 121, 'Coordinates': 120, 'max': 119, '%': 118, '+': 114, 'if': 56, ']': 7, '[': 6, 'write': 2, '++': 53, 'int': 10, 'for': 38, 'boolean': 30, '': 4, ',': 9, 'level': 11, 'Coordinate': 5, 'void': 1, 'private': 0}
{'}\n': 58, ';': 30, ')': 17, '(': 6, 'Name': 52, 'get': 26, '.': 25, 'clazz': 16, 'With': 47, 'starts': 46, 'message': 22, '&&': 43, 'Empty': 39, 'is': 3, 'Utils': 36, 'Text': 35, '': 7, '!': 33, 'return': 31, 'Message': 27, 'e': 9, '=': 23, 'String': 21, 'final': 19, '{': 18, '>': 15, '?': 14, '<': 13, 'Class': 12, ',': 10, 'Exception': 5, 'Intended': 4, 'boolean': 2, 'static': 1}
{'}\n': 227, '}': 162, ';': 36, ')': 29, 'diag': 14, ',': 12, 'Col': 39, 'swap': 3, 's': 21, '(': 5, 'Cols': 205, 'source': 11, '{': 30, '!=': 169, 'if': 139, 'Row': 33, 't': 28, 'Rows': 174, 'col': 109, '=': 34, 'row': 94, 'abs': 50, 'Value': 45, 'max': 44, '>': 142, 'Double': 55, 'get': 54, '.': 49, 'Math': 48, '': 6, '++': 103, 'cols': 75, '<': 99, 'long': 13, 'for': 91, 'rows': 64, 'NUM': 89, '_': 88, 'double': 43, 'Count': 70, 'Column': 80, 'Pivot': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 79, ';': 31, 'BOOL': 73, '_': 72, '{': 17, ')': 8, 'Exception': 66, 'Security': 19, '': 18, '(': 7, 'catch': 62, '}': 61, '.': 25, 'AWT': 49, 'Constants': 46, 'Permission': 42, 'check': 41, 'sm': 21, 'null': 36, 'if': 32, 'Manager': 20, 'get': 26, 'System': 24, '=': 22, 'can': 2, 'boolean': 1}
{'}\n': 47, ';': 46, ')': 24, ',': 16, 'Xml': 12, 'activiti': 11, '(': 8, 'For': 32, 'Job': 2, 'create': 3, '{': 28, 'Exception': 27, '': 1, 'throws': 25, 'parameters': 23, '>': 22, 'Parameter': 21, '<': 19, 'List': 18, 'String': 10, 'public': 0}
{'}\n': 115, ';': 89, ')': 16, '(': 11, 'Absolute': 103, 'get': 102, '.': 58, 'Dir': 15, 'root': 14, '': 5, '{': 20, 'File': 13, 'public': 0}
{'}\n': 96, ';': 95, ')': 10, '_': 52, 'ch': 36, '(': 6, 'NUM': 68, '==': 51, '||': 54, '{': 14}
{'}\n': 25, ';': 24, ')': 9, ',': 21, '(': 5, '': 6, 'filename': 8, 'String': 7, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 14, ';': 13, ')': 5, '(': 4, 'Values': 3, '{': 6, 'void': 1, 'public': 0}
{'}\n': 47, ';': 46, ')': 12, 'NUM': 28, '_': 27, 'ACC_': 23, '': 19, '.': 21, 'Opcodes': 20, '&': 18, 'access': 11, '(': 9, 'return': 14, 'is': 3, 'boolean': 2}
{'}\n': 31, ';': 24, '.': 18, ')': 10, '(': 5, 'get': 19, '': 1, '=': 14, '{': 11, 'pool': 9, 'public': 0}
{'}\n': 54, ';': 28, ')': 10, '(': 4, 'Object': 3, 'Read': 24, 'default': 23, '.': 22, 'in': 9, '{': 20, 'Exception': 19, 'Found': 18, 'Not': 17, 'Class': 16, '': 5, ',': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'read': 2, 'void': 1, 'private': 0}
{'}\n': 169, ';': 41, '.': 31, 'seg': 9, 'y': 64, 'p1': 47, 'offset': 20, 'x': 49, '=': 59, ')': 21, '+': 83, 'dx': 80, '(': 5, 'Math': 76, '': 6, 'double': 57, 'p0': 53, '-': 50, 'dy': 58, 'LEFT': 33, 'Position': 30, 'Segment': 8, 'Line': 7, ',': 13, 'void': 1}
{'}\n': 53, ';': 37, 'Count': 50, 'element': 49, ',': 48, 'location': 16, '(': 4, 'Index': 41, 'array': 40, '}': 38, ']': 36, '[': 34, ')': 7, '{': 26, 'if': 19, '': 1, '_': 5, '@': 0}
{'}\n': 265, ';': 264, ')': 205, '(': 92, '.': 237, 'json': 196, '{': 206, 'Json': 112, '': 1, '>': 33, 'Object': 14, '<': 3, 'private': 0}
{'}\n': 209, ';': 34, 'octets': 91, 'return': 206, ')': 15, 'length': 144, '.': 23, ',': 11, 'NUM': 113, '_': 112, '(': 8, 'arraycopy': 108, 'System': 106, '': 12, 's': 20, ']': 5, '+': 145, '[': 4, 'byte': 3, 'new': 139, '=': 21, '{': 16, 'else': 135, '}': 134, 'ATTRIBUTE_': 68, 'MAX_': 67, 'Attribute': 48, 'LENGTH': 69, 'UTF_8': 32, 'Charsets': 29, 'Standard': 28, 'Bytes': 25, 'get': 24, 'String': 13, 'Octets': 7, 'to': 6, 'final': 2, 'static': 1}
{'}\n': 54, ';': 27, ')': 13, '(': 6, 'Value': 50, '.': 31, 'bd': 18, 'return': 46, 'UP': 43, 'HALF_': 42, '': 15, ',': 10, 'Scale': 33, 'set': 32, '=': 19, 'Decimal': 17, 'Big': 16, 'new': 20, '{': 14, 'int': 11}
{'}\n': 18, ';': 17, ')': 7, '(': 6, 'flush': 5, '.': 13, 'out': 12, '{': 11, 'IOException': 10, '': 9, 'throws': 8, 'void': 4, 'public': 3}
{'}\n': 444, ';': 101, ')': 35, 'Files': 26, ',': 13, '(': 33, '.': 328, '': 10, 'new': 72, '}': 315, '_': 197, '=': 71, '{': 245, 'STR': 198, 'File': 22, 'String': 11, '<': 58, '>': 61, 'List': 57}
{'}\n': 45, ';': 25, 'BOOL': 24, '_': 23, 'return': 22, ')': 14, 'Length': 13, 'max': 12, '(': 6, 'length': 30, '.': 29, 'value': 9, 'if': 16, 'null': 20, '==': 19, '{': 15, 'int': 11, ',': 10, 'String': 4, '': 7, 'Valid': 5, 'is': 2, 'boolean': 1, 'static': 0}
{'}\n': 91, ';': 90, ')': 19, '(': 7, '-': 56, 'y2': 18, '.': 26, 'Math': 25, '': 24, '{': 20, 'double': 8, ',': 10, 'x2': 15, 'y1': 12, 'x1': 9}
{'}\n': 52, ';': 22, ')': 8, 'Button': 6, 'clear': 12, '(': 7, 'add': 2, '.': 25, 'Panel': 44, 'button': 43, 'this': 39, 'Action': 27, 'Graph': 4, 'Clear': 3, 'get': 34, 'Actions': 32, 'Plot': 31, '': 10, 'set': 26, 'STR': 20, '_': 19, 'JButton': 11, 'new': 15, '=': 14, '{': 9, 'Data': 5, 'void': 1, 'public': 0}
{'}\n': 56, ';': 55, 'return': 48, ')': 25, '(': 6, '=': 29, 'int': 27, 't': 13, 'public': 0}
{'}\n': 123, ';': 20, ')': 11, '(': 4, '.': 74, '}': 104, 'output': 73, 'i': 16, 'Of': 89, 'value': 88, 'String': 86, '': 8, 'write': 75, 'STR': 78, '_': 18, '{': 28, '++': 26, '<': 22, 'NUM': 19, '=': 17, 'int': 15, 'for': 13, 'void': 1, 'private': 0}
{'}\n': 18, ';': 17, ')': 5, 'SUFFIX_': 14, '': 13, '(': 4, 'contains': 11, '.': 10, 'String': 9, 'type': 8, 'return': 7, '{': 6, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 9, 'notification': 8, '(': 4, 'add': 2, '.': 12, '{': 10, 'Notification': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 187, ';': 59, ')': 41, 'System': 27, 'file': 22, '(': 10, 'datastore': 39, ',': 31, 'host': 130, 'Datastore': 9, '': 17, 'new': 146, 'execute': 144, '{': 42, ':': 131, 'Host': 128, 'for': 125, '_': 97, 'STR': 98, '=': 67, '>': 65, '<': 62, 'List': 61, 'Id': 35, 'datacenter': 34, 'URI': 33, 'Rep': 21, 'Rest': 20, 'Share': 19, 'File': 18, 'Nfs': 8, 'public': 0}
{'}\n': 89, '}': 43, ';': 22, ')': 8, 'increment_size': 25, '(': 4, 'Size': 3, 'increment': 82, '=': 20, 'old_size': 19, ',': 68, 'NUM': 41, '_': 40, 'items': 51, 'temp': 49, 'arraycopy': 65, '.': 64, 'System': 63, '': 45, ']': 48, 'max_size': 14, '[': 47, 'new': 55, 'final': 5, '+': 37, 'i': 7, '{': 9, '<=': 30, 'if': 10, '+=': 24, 'int': 6, '>=': 13, 'check': 2, 'void': 1, 'private': 0}
{'}\n': 45, ';': 17, ')': 12, '(': 3, 'media': 31, '_': 22, 'super': 14, '{': 13, '': 1, ',': 7, 'public': 0}
{'}\n': 259, '}': 131, 'Task': 10, '(': 5, '.': 99, 'm': 87, ';': 107, ',': 222, '': 6, 'new': 215, ')': 25, '_': 127, '{': 26, 'null': 113, '==': 112, 'if': 108, 'Session': 105, 'task': 75, 'get': 100, 'tasks': 14, ':': 76, 'Container': 12, 'Image': 11, 'for': 69, 'Map': 63, '>': 13, '<': 8, 'Set': 7, 'void': 1, 'protected': 0}
{'}\n': 37, ';': 36, 'name': 8, ')': 9, 'NUM': 23, '_': 22, '(': 5, '.': 19, 'is': 12, '{': 10, 'String': 3, '': 2, 'unquote': 4, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 9, '(': 12, '.': 19, 'leader': 13, '{': 10}
{'}\n': 114, ';': 28, 'return': 48, ')': 14, '(': 10, '': 3, 'x': 27, 'Exception': 57, 'Completion': 72, 'instanceof': 19, 'if': 16, 'Cancellation': 56, 'throw': 59, 'null': 46, '==': 45, 'ex': 43, '.': 42, 'r': 18, 'Result': 22, 'Alt': 21, '=': 33, 'Throwable': 26, '{': 24, 'static': 1, 'private': 0}
{'}\n': 310, ';': 18, 'NUM': 308, '_': 206, 'return': 306, '}': 150, ')': 8, '(': 3, 'close': 297, '.': 35, 'writer': 92, '{': 12, 'null': 24, '!=': 23, 'if': 19, 'finally': 286, 'Trace': 265, 'Stack': 264, 'print': 263, 'e': 258, 'IOException': 11, '': 5, 'catch': 253, 'Exception': 257, 'Template': 100, 'flush': 248, ',': 58, 'model': 77, 'process': 239, 'temp': 101, 'Set': 234, 'character': 233, 'File': 133, 'Result': 191, 'new': 190, 'Writer': 91, 'Buffered': 226, 'Files': 211, '=': 49, 'add': 213, 'result': 210, 'STR': 207, '+': 144, 'Id': 154, 'Friendly': 153, 'url': 171, 'Directory': 117, 'get': 36, 'Paths': 195, 'Path': 189, 'final': 4, 'Identifier': 182, 'xref': 32, 'generate': 177, 'gen': 156, 'String': 170, 'Instance': 165, 'Generator': 155, 'Url': 152, 'separator': 135, 'With': 130, 'ends': 129, '!': 125, 'Temp': 116, 'check': 13, 'Marker': 104, 'free': 103, 'Config': 105, 'try': 96, 'Hierarchy': 15, 'entry': 21, 'Protein': 6, 'simple': 47, 'Map': 81, 'Model': 80, 'build': 79, 'Hash': 76, 'Simple': 45, 'protein': 7, 'Of': 55, 'value': 54, 'References': 38, 'Cross': 37, ':': 33, 'Xref': 31, 'for': 27, 'Entry': 14, 'throws': 9, 'write': 2, 'int': 1, 'public': 0}
{'}\n': 241, ';': 240, '_': 31, ',': 33, '}': 44, 'STR': 32, '{': 29, ']': 26, '[': 25, '': 7, 'new': 22}
{'}\n': 646, '}': 551, ';': 438, ')': 262, 'this': 592, '(': 27, ',': 250, 'macro': 239, '{': 263, 'if': 269, '': 28, 'Macro': 3}
{'}\n': 140, ';': 48, '}': 100, ')': 47, ']': 76, 'i': 57, '[': 74, 'contour': 61, '(': 6, '{': 68, 'else': 101, 'NUM': 55, '_': 54, '==': 84, '=': 72, '++': 66, 'length': 63, '.': 62}
{'}\n': 126, '}': 122, ';': 27, ')': 13, '(': 5, 'Element': 69, '.': 21, '': 6, '=': 19, '{': 14, 'i': 31, 'Length': 41, 'get': 22, 'int': 30, 'for': 28, 'parent': 8, 'List': 17, 'Node': 16, 'name': 12, 'String': 11, ',': 9, 'static': 1, 'public': 0}
{'}\n': 59, 'x': 9, '.': 22, '(': 6, 'return': 29, '{': 28, ')': 27, 'RE': 3, '': 2}
{'}\n': 54, ';': 22, 'null': 52, '=': 14, 'Selection': 13, 'old': 12, '}': 48, ')': 8, 'selection': 20, ',': 44, '(': 3, 'Changed': 40, 'fire': 38, '{': 9, 'rv': 24, 'if': 33, 'element': 7, '.': 27, 'boolean': 23, 'Set': 11, 'Hash': 17, '': 5, 'new': 15, 'Object': 6, 'final': 4, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 12, 'evt': 11, '(': 7, 'Moved': 17, 'mouse': 5, '.': 15, 'delegate': 14, '{': 13, 'Event': 10, 'Mouse': 9, '': 1, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 35, ';': 28, ')': 16, '(': 3, 'flush': 31, '.': 19, 'out': 18, 'args': 15, ',': 7, 'format': 10, 'locale': 6, 'printf': 2, '{': 17, '...': 14, 'Object': 13, '': 4, 'String': 9, 'Locale': 5, 'void': 1, 'public': 0}
{'}\n': 104, ';': 28, ')': 8, '(': 7, 'get': 70, '.': 21, 'xpath': 68, ',': 51, 'STR': 26, '_': 25, 'Equals': 46, 'assert': 45, 'dom1': 16, 'dom2': 32, 'compare': 54, 'comparator': 52, 'NUM': 50, '-': 48, 'Dom': 15, 'build': 22, 'Factory': 20, 'Xpp': 14, '': 10, '=': 17, '{': 12, 'Exception': 11, 'throws': 9, 'Sorts': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 9, 'insn': 8, '(': 4, 'add': 2, '.': 12, '{': 10, 'Insn': 7, 'Dalv': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 91, ';': 34, ')': 5, '(': 4, '': 80, 'STR': 32, '_': 31, '.': 10, 'log': 19, 'debug': 29, 'Enabled': 23, 'is': 11, '{': 6, 'void': 1, 'private': 0}
{'}\n': 66, '}': 47, ';': 46, ')': 13, '(': 5, 'Value': 36, 'long': 53, '.': 34, 'b': 12, 'a': 8, 'return': 32, '{': 14, 'else': 48, 'double': 35, 'Point': 19, 'Floating': 18, 'is': 17, '||': 23, 'if': 15, 'Number': 3, '': 2, ',': 9, 'static': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 13, 'OIDs': 12, 'Or': 11, 'name': 10, '(': 5, 'List': 23, 'as': 22, '.': 21, 'Arrays': 20, '': 1, 'Attributes': 4, 'return': 15, '{': 14, '...': 9, 'String': 8, 'final': 6, 'Builder': 2, 'public': 0}
{'}\n': 166, ';': 164, ')': 43, '_': 53, ',': 126, 'null': 127, '.': 48, 'commands': 57, '[': 76, 'String': 75, '': 8, '(': 25, 'STR': 54, 'List': 11}
{'}\n': 123, ';': 38, ')': 11, '(': 6, 'Array': 25, 'Byte': 24, 'to': 117, '.': 62, 'baos': 28, 'return': 114, '}': 85, ',': 108, '_': 104, 'if': 74, 'Stream': 9, 'Output': 26, '': 7, 'new': 30, '=': 29, '{': 15, 'IOException': 14, 'throws': 12, 'Input': 8, ']': 4, '[': 3, 'byte': 2, 'static': 1}
{'}\n': 73, ';': 36, ')': 25, '(': 14, 'return': 62, 'sub': 45, 'subscribe': 57, '.': 29, 'publisher': 24, 'subscriber': 51, 'Subscriber': 40, 'Seq': 39, '': 3, '=': 46, '>': 5, 'T': 4, '<': 2, 'final': 15, 'Null': 32, 'Non': 31, 'require': 30, 'Objects': 28, '{': 26, 'extends': 20, '?': 19, 'Publisher': 13, 'from': 12, 'public': 0}
{'}\n': 83, ';': 34, ')': 27, 'Millis': 26, 'timeout': 25, '(': 4, 'Timeout': 68, 'Socket': 76, 'set': 67, 'BOOL': 72, '_': 63, 'Enabled': 69, 'NUM': 64, '-': 62, 'VALUE': 61, 'MAX_': 60, '': 1, '.': 30, 'Integer': 57, ',': 13, 'Size': 22, 'Message': 9, 'max': 20, 'min': 50, 'Math': 48, '=': 32, 'this': 29, 'prototype': 17, 'handler': 12, '{': 28, 'int': 19, 'Type': 10, '>': 11, '<': 7, 'Listener': 6, 'Protobuf': 2, 'public': 0}
{'}\n': 50, ';': 49, ')': 9, 'notification': 7, '(': 4, '.': 30, '{': 10, '': 5, 'public': 0}
{'}\n': 32, ';': 17, ')': 8, 'Count': 7, 'max': 6, '(': 4, 'log': 26, '.': 11, 'Math': 24, '': 1, '/': 22, '=': 14, 'factor': 18, 'this': 10, '{': 9, 'int': 5, 'Gradient': 3, 'public': 0}
{'}\n': 147, ';': 42, ')': 41, '(': 5, 'close': 143, '.': 45, '}': 139, 'Line': 56, 'new': 55, 'key': 82, 'get': 124, 'Of': 96, 'value': 95, 'String': 14, '': 6, 'write': 3, '{': 26, 'keys': 63, ':': 83, 'double': 60, 'for': 79, 'sort': 74, 'Arrays': 72, '=': 64, ']': 62, '[': 61, 'Writer': 29, 'Buffered': 28, 'IOException': 25, ',': 12, 'Map': 10, 'Hash': 9, 'Double': 8, 'TDouble': 7, 'Histogram': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 45, ';': 44, ')': 30, '.': 34, '': 3, '(': 14, 'Compose': 36, 'then': 35, 'stage': 29, 'return': 32, '{': 31, '>': 5, 'T': 4, '<': 2, 'Stage': 8, 'Completion': 7, 'extends': 20, '?': 19, 'dereference': 13, 'static': 1, 'public': 0}
{'}\n': 35, ';': 34, ')': 13, '(': 5, 'Of': 27, 'value': 26, '.': 20, 'Integer': 24, '': 2, 'plus': 4, 'Plus': 19, 'Number': 3, 'return': 15, '{': 14, 'right': 12, ',': 9, 'left': 8, 'static': 1, 'public': 0}
{'}\n': 103, ';': 50, 'string': 20, 'return': 100, '}': 99, ')': 26, 'Width': 25, 'Text': 24, 'avail': 23, ',': 12, 'fm': 16, 'c': 11, '(': 8, 'String': 3, '.': 59, '': 2, '{': 27, '>': 74, 'if': 28, '=': 55, 'int': 22, '_': 41, 'Metrics': 15, 'Font': 14, 'JComponent': 10, 'clip': 4, 'static': 1, 'public': 0}
{'}\n': 65, ';': 58, 'BOOL': 63, '_': 62, 'return': 61, '}': 59, ')': 8, 'obj': 7, '(': 4, '.': 26, 'actions': 12, '{': 9, 'Change': 19, 'To': 18, 'allow': 17, 'if': 15, 'synchronized': 10, 'Object': 6, '': 5, 'Element': 3, 'boolean': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 10, '(': 6, 'get': 24, '.': 23, 'Class': 20, 'Proxy': 5, 'Cglib': 4, 'is': 3, 'return': 12, '{': 11, '': 7, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 5, '(': 4, 'clear': 15, '.': 14, '_refs': 13, '{': 6, 'References': 3, 'reset': 2, 'void': 1, 'public': 0}
{'}\n': 42, ';': 20, ')': 12, '(': 4, 'Changed': 38, 'Set': 37, 'Data': 36, 'notify': 35, '.': 15, 'Adapter': 33, 'pager': 32, 'Color': 23, 'Background': 22, 'add': 2, 'fragment': 11, 'fragments': 14, '{': 13, 'Fragment': 10, '': 6, 'Null': 8, 'Non': 7, '@': 5, 'Slide': 3, 'void': 1, 'public': 0}
{'}\n': 80, ';': 34, 'fb': 52, 'return': 77, ')': 13, 'NUM': 74, '_': 73, '(': 8, 'position': 71, '.': 23, 'coords': 12, 'put': 64, 'Buffer': 4, 'Float': 3, 'as': 56, 'bb': 18, '=': 19, '': 2, 'Order': 41, 'native': 43, 'Byte': 16, 'order': 37, '*': 30, 'length': 29, 'Direct': 25, 'allocate': 24, '{': 14, ']': 11, '[': 10, 'float': 9, 'create': 5, 'static': 1}
{'}\n': 108, '}': 90, ';': 40, ')': 4, '(': 3, 'Trace': 102, 'Stack': 101, 'print': 100, '.': 75, 'e': 95, '{': 12, 'Throwable': 94, '': 6, 'catch': 91, 'qos': 58, ',': 24, 'topic': 52, 'Client': 14, 'sample': 13, 'try': 70, 'NUM': 61, '_': 54, '=': 16, 'int': 57, 'STR': 55, 'String': 51, 'null': 47, '!=': 46, 'if': 41, 'password': 38, 'Name': 36, 'user': 35, 'Mode': 33, 'quiet': 32, 'Session': 30, 'clean': 29, 'Id': 26, 'client': 25, 'url': 23, 'Wait': 21, 'Async': 20, 'Sample': 19, 'new': 17, 'throws': 5, 'void': 1, 'protected': 0}
{'}\n': 145, '}': 143, '[': 15, ')': 59, ']': 16, 'i': 47, '(': 9, 'Data': 77, 'get': 56, '.': 55, 'img': 12, 'abs': 113, 'Math': 111, '': 10, '{': 71, 'threshold': 84, '>': 83, 'if': 72, '++': 69, ';': 51, 'Height': 64, '*': 60, 'Width': 57, '<': 53, 'NUM': 50, '_': 49, '=': 48, 'int': 19, 'for': 44, 'double': 14, ',': 13, 'n': 20, 'wm': 17, 'Image': 11, 'Band': 8, 'Sub': 7, 'private': 0}
{'}\n': 420, ';': 72, 'return': 416, ',': 140, '.': 262, '(': 43, 'put': 392, ')': 58, 'File': 183, 'Configuration': 66, '': 2, '{': 62, '=': 127, 'Properties': 24, 'new': 64, '}': 73, 'STR': 70, '_': 69, 'Exception': 67, 'throw': 63, 'null': 60, '==': 59, 'Home': 56, 'Cluster': 55, 'get': 54, 'if': 42, 'Tungsten': 23, 'String': 12}
{'}\n': 85, ')': 29, '(': 11, '.': 21, 'Files': 20, ';': 47, 'file': 58, 'private': 0}
{'}\n': 103, '}': 76, ';': 54, ')': 7, 'e': 82, ',': 67, 'STR': 97, '_': 65, '(': 6, 'Exception': 16, 'By': 15, 'Group': 14, 'And': 13, 'Key': 12, 'Sort': 11, 'Carbon': 10, '': 9, 'new': 86, 'throw': 85, '{': 17, 'Interrupted': 80, 'catch': 77, 'DAYS': 73, '.': 50, 'Unit': 70, 'Time': 69, 'NUM': 66, 'Termination': 63, 'await': 62, 'Service': 49, 'Executor': 48, 'Writer': 47, 'Sorter': 45, 'data': 44, 'shutdown': 51, 'try': 18, 'throws': 8, 'Merge': 5, 'Based': 4, 'File': 3, 'start': 2, 'void': 1, 'private': 0}
{'}\n': 48, ';': 47, '.': 28, '(': 6, 'parsed': 14, 'String': 8, '': 1, 'Date': 2}
{'}\n': 248, ';': 118, ')': 60, '(': 55, 'Spring': 124, '.': 114, 'clear': 115, '{': 82}
{'}\n': 260, ';': 42, 'NUM': 215, '_': 214, '(': 6, '.': 44, 'return': 203, ')': 26, 'add': 45, '_refs': 30, 'List': 39, 'Array': 38, '': 17, 'new': 36, '=': 35, 'null': 32, '==': 31, 'if': 28, 'Object': 18}
{'}\n': 448, '}': 216, ';': 63, ')': 47, 'Out': 69, 'Carry': 68, 'shifter': 52, ',': 7, 'Operand': 53, '(': 13, '>': 10, 'String': 6, '': 2, '<': 4, 'Pair': 3, 'new': 428, 'return': 427, 'Size': 131, 'byte': 174, 'Set': 143, 'one': 177, 'tmp': 102, '++': 127, 'Offset': 126, 'base': 125, 'And': 162, 'create': 122, '.': 56, 'Helpers': 120, 'Reil': 29, 'add': 116, 'instructions': 32, 'NUM': 208, '_': 94, '-': 364, 'Value': 39, 'Node': 38, 'immediate': 44, 'decode': 369, 'Integer': 367, 'Of': 205, 'value': 204, 'register': 37, 'Word': 130, 'd': 129, 'Bsh': 123, 'Bits': 320, 'All': 319, 'Mask': 318, 'bit': 317, 'q': 282, '+': 277, 'STR': 95, 'word': 137, 'Variable': 59, 'Next': 58, 'get': 57, 'environment': 22, '=': 54, 'Var2': 238, 'final': 14, 'Var1': 103, '{': 48, 'else': 217, 'One': 142, 'equals': 92, 'if': 86, 'Instruction': 30, 'List': 26, 'Environment': 21, 'ITranslation': 20, 'offset': 16, 'long': 15, 'Immediate': 12, 'static': 1, 'protected': 0}
{'}\n': 24, ';': 23, ')': 9, 'text': 8, '(': 6, 'String': 18, 'to': 17, '.': 16, 'Integer': 15, '': 2, 'plain': 5, 'return': 11, '{': 10, 'Text': 4, 'Plain': 3, 'static': 1, 'public': 0}
{'}\n': 113, ';': 112, '': 11, '.': 26, 'Calendar': 12, '(': 5, 'get': 27, '==': 37, ')': 21, 'MONTH': 35, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 61, ';': 16, ')': 4, 'BOOL': 57, '_': 56, ',': 55, 'observer': 54, '(': 3, 'Observer': 52, 'add': 9, '.': 8, 'ports': 49, 'Names': 18, 'fix': 17, 'Port': 12, 'create': 11, 'managed': 6, '{': 5, 'start': 2, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 7, 'Field': 6, '(': 3, 'Of': 15, 'value': 14, '.': 13, 'String': 12, '': 11, 'sprint': 2, '{': 8, 'void': 1, 'protected': 0}
{'}\n': 145, ';': 37, ')': 20, '(': 9, 'Array': 24, 'Byte': 23, '.': 40, 'return': 124, 'STR': 118, '_': 49, ',': 51, 'TAG': 115, '': 11, 'e': 111, 'Log': 109, 'Bytes': 82, 'NUM': 50, 'Rect': 47, 'new': 29, 'Jpeg': 43, 'To': 42, 'compress': 41, 'Image': 17, 'yuv': 38, 'Stream': 26, 'Output': 25, '=': 28, 'Yuv': 16, 'convert': 4, 'public': 0}
{'}\n': 20, ';': 19, ')': 8, 'value': 7, '(': 16, '.': 13, 'Double': 12, '': 1, 'return': 10, '{': 9, 'public': 0}
{'}\n': 164, ';': 163, 'return': 160, '}': 159, '_': 155, '{': 34, ')': 33, '(': 9, 'Port': 5, 'get': 105, '.': 60, 'port': 31, 'if': 56, ':': 50, '': 10, 'for': 43, ',': 20, '>': 16, '<': 12, 'List': 11, 'private': 0}
{'}\n': 88, ';': 83, '(': 6, 'Event': 5, 'next': 4, '': 1, '.': 29, ')': 7, '_': 17, '{': 8}
{'}\n': 114, '}': 82, ';': 47, ')': 25, '(': 5, 'append': 76, '.': 59, 'buf': 74, ']': 17, 'i': 51, '[': 16, 'STR': 79, '_': 53, '{': 36, 'NUM': 54, 'if': 66, '++': 63, 'length': 60, '<': 57, '=': 41, 'int': 50, 'for': 48, 'points': 21, '': 6, 'public': 0}
{'}\n': 67, '}': 66, ';': 23, ')': 14, '(': 5, 'Item': 27, 'add': 26, '.': 17, 'box': 13, '{': 15, 'List': 44, 'Name': 43, 'By': 42, 'get': 40, '': 6, 'null': 29, 'Items': 20, 'All': 19, 'remove': 18, '>': 12, '<': 9, 'Box': 4, 'JCombo': 7, 'Combo': 3, 'update': 2, 'void': 1, 'public': 0}
{'}\n': 16, ';': 15, '{': 10, ')': 9, 'projects': 8, 'public': 0}
{'}\n': 227, ';': 130, ')': 76, ',': 150, '(': 5, '.': 138, '': 23, 'new': 121, '{': 87, 'comparators': 27, 'Comparator': 25, 'final': 8, 'public': 0}
{'}\n': 32, ';': 30, ')': 22, 'resource': 20, '(': 11, 'add': 2, '.': 25, 'resources': 24, '{': 23, '': 13, 'void': 1}
{'}\n': 27, ';': 26, ')': 25, '_': 23, '(': 5, '.': 20, 'Numeric': 4, 'public': 0}
{'}\n': 488, '}': 148, ';': 82, ')': 70, '(': 53, '.': 50, '': 6, '{': 32, ',': 11, 'STR': 120, '_': 119, 'String': 117, 'get': 65, 'res': 114, 'ex': 417, 'Exception': 416, 'catch': 410, 'Store': 4, 'Key': 3, 'password': 244, 'try': 227, 'File': 7, 'key': 8, '=': 182, 'null': 183, 'format': 112, 'Format': 110, 'Message': 109, 'if': 84, 'Password': 15, 'void': 1, 'public': 0}
{'}\n': 46, '}': 45, ';': 13, 'next': 25, 'return': 42, ')': 9, ',': 38, 'current': 18, '(': 6, 'Set': 35, 'And': 4, 'compare': 33, 'if': 31, '+': 28, '=': 19, 'long': 2, 'get': 20, '{': 10, 'for': 11, 'Get': 5, 'final': 1, 'public': 0}
{'}\n': 50, ';': 49, ')': 26, 'v': 25, '(': 4, 'add': 36, '.': 35, '{': 27, 'Value': 12, '': 10}
{'}\n': 69, ';': 68, ')': 26, '(': 22, 'Properties': 2, '{': 27, '': 1}
{'}\n': 80, ';': 79, ')': 27, 'weight': 39, '(': 23, '.': 52, '{': 28, 'Weight': 4}
{'}\n': 142, ';': 28, ')': 4, 'STR': 22, '_': 21, '(': 3, '.': 18, '}': 29, '_value': 40, '+': 23, 'i': 33, '<': 39, 'NUM': 36, '=': 34, 'int': 32, 'for': 30, 'log': 17, '{': 5, 'if': 6, 'Value': 2, 'void': 0}
{'}\n': 82, ';': 77, 'return': 79, '}': 78, ')': 20, 'index': 56, 'NUM': 49, '_': 31, '(': 9, '.': 14, 'string': 19, '!=': 47, 'STR': 32, 'if': 22, 'String': 6, '': 5, 'public': 0}
{'}\n': 147, ';': 83, ')': 70, '(': 67, 'String': 59, 'to': 129, '.': 104, 's': 103, ':': 89, '': 48, 'for': 84, 'Builder': 74, 'new': 77, '=': 76}
{'}\n': 23, ';': 22, 'base': 20, '.': 12, 'this': 18, '(': 4, 'Math': 11, '': 10, 'return': 9, '{': 8, ')': 7, 'double': 1, 'calculate': 2, 'public': 0}
{'}\n': 56, ';': 55, ')': 12, 'power': 11, '.': 21, '(': 5, 'Math': 44, '': 2, 'return': 14, '{': 13, 'double': 10, ',': 9, 'pow': 4, 'static': 1, 'public': 0}
{'}\n': 52, ';': 23, 'dp': 27, 'return': 49, ')': 7, '(': 6, 'receive': 44, '.': 37, 'Socket': 42, 'length': 38, 'buf': 15, ',': 35, 'Packet': 3, 'Datagram': 2, '': 1, 'new': 17, '=': 16, ']': 14, 'NUM': 21, '_': 20, '[': 13, 'byte': 12, '{': 11, 'IOException': 10, 'throws': 8, 'Receive': 5, 'public': 0}
{'}\n': 15, ';': 14, ')': 7, 'BOOL': 12, '_': 11, '(': 6, 'flush': 5, '{': 8, 'void': 4, 'public': 3}
{'}\n': 98, ';': 63, ')': 12, 'a': 74, ',': 25, 'NUM': 27, '_': 26, '(': 8, '-': 52, '{': 13, 'public': 0}
{'}\n': 34, ';': 33, 'mapper': 21, '.': 25, 'this': 24, '{': 23, ')': 22, '>': 20, '': 1, '<': 13, 'Function': 12, 'public': 0}
{'}\n': 1062, 'return': 1057, ';': 138, ')': 71, 'NUM': 330, '_': 329, '(': 25, 'Element': 825, '.': 384, 'm': 822, ',': 440, 'set': 409, 'Loco': 6, '': 35, '=': 80, 'int': 76, 'Message': 8, 'Net': 7}
{'}\n': 467, '}': 74, ';': 73, ')': 18, '(': 6, 'Exception': 416, '': 24, 'new': 396, ',': 109, 'FINE': 97, '.': 89, 'Level': 94, 'log': 102, '_logger': 88, 'Loggable': 91, 'is': 90, 'if': 30, '{': 29, 'try': 131, 'STR': 123, '_': 122, '+': 121, 'return': 70}
{'}\n': 121, ';': 23, ')': 5, '(': 4, 'String': 2, 'to': 116, '.': 19, 'sb': 36, 'return': 113, '}': 112, 'STR': 78, '_': 77, 'append': 83, '==': 76, 'c': 30, 'if': 73, 'else': 94, 'Literal': 88, 'get': 67, 'cs': 27, 'Character': 69, 'Conversion': 25, '=': 16, 'next': 59, 'e': 15, '{': 6, 'has': 49, 'while': 45, 'Builder': 35, '': 1, 'new': 38, 'char': 29, 'Specification': 26, 'Fmt': 18, 'v': 17, 'sprintf': 3, 'public': 0}
{'}\n': 32, ';': 31, 'type': 13, '(': 5, '.': 19, '{': 15, ')': 14, 'Name': 4, 'String': 2, '': 1}
{'}\n': 77, '{': 69, ')': 68, '(': 66, 'Box': 62, 'Combo': 49, 'update': 46, 'void': 1}
{'}\n': 15, ';': 14, 'STR': 13, '_': 12, 'return': 11, '{': 10, ')': 9, '(': 8, 'Text': 7, 'Tip': 6, 'String': 2, '': 1, 'public': 0}
{'}\n': 85, ';': 29, ')': 16, '(': 27, 'String': 3, 'to': 80, '.': 63, 'buff': 21, 'return': 77, '}': 76, '{': 17, '++': 45, 'i': 33, '<': 39, 'NUM': 36, '_': 35, '=': 22, 'int': 32, 'for': 30, 'Builder': 20, '': 2, 'new': 23, 'public': 0}
{'}\n': 61, ';': 59, ')': 24, 'dist': 53, '(': 5, '.': 35, '': 27, 'return': 26, '{': 25, ']': 12, '[': 11, 'double': 10, 'protected': 0}
{'}\n': 15, ';': 14, ')': 4, '(': 3, '.': 10, 'printer': 9, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'void': 1, 'public': 0}
{'}\n': 72, ';': 71, ')': 8, '(': 4, '{': 9, 'get': 35, '.': 31, 'group': 15}
{'}\n': 288, ';': 114, 'link': 23, 'return': 285, ')': 31, '_': 45, '(': 38, '.': 41, ',': 181, 'NUM': 152, 'substring': 177, '=': 63, 'STR': 46, 'if': 37, 'With': 121, 'ends': 120, '{': 32, 'String': 2, '': 1, 'Url': 5, 'protected': 0}
{'}\n': 82, ';': 24, 'res': 63, 'return': 56, '+=': 76, 'head': 75, ')': 6, 'bytes': 5, ',': 71, 'av': 27, '(': 3, 'min': 68, '.': 67, 'Math': 66, '': 8, '=': 28, 'long': 1, '}': 25, 'NUM': 38, '_': 37, '{': 10, '==': 36, 'if': 11, 'Available': 44, 'make': 43, 'available': 29, 'int': 26, 'new': 17, 'throw': 16, 'closed': 13, 'IOException': 9, 'throws': 7, 'skip': 2, 'public': 0}
{'}\n': 532, '}': 531, ';': 25, 'Text': 4, 'Center': 3, 'm': 17, 'NUM': 218, '_': 217, '/': 510, '-': 506, '+': 498, ',': 493, '.': 19, '(': 5, 'c': 8, '=': 16, '': 6, '{': 10, ')': 9, 'float': 202, 'length': 362, 'center': 14, ']': 129, '[': 126, 'Box': 56, 'Circle': 55, 'get': 20, 'Chart': 18, 'F': 47, 'Point': 46, 'null': 42, '!=': 41, '&&': 38, 'Enabled': 35, 'Draw': 32, 'is': 31, 'if': 26, 'Canvas': 7, 'draw': 2, 'void': 1, 'protected': 0}
{')': 6, '(': 5, 'Callback': 4, 'add': 1, 'void': 0}
{'}\n': 97, ';': 82, ')': 81, '.': 25, 'Panel': 5, '(': 21, 'add': 58, '': 7}
{'}\n': 41, ';': 39, ')': 25, '.': 28, '{': 26, '(': 21, 'Capacity': 11, 'ensure': 10, 'void': 1}
{'}\n': 166, ';': 84, '(': 25, '.': 141, '=': 57, 'Weight': 56, ')': 33, 'Weights': 24}
{'}\n': 56, '}': 55, ';': 54, ')': 25, 'NUM': 33, '_': 23, '(': 6, 'substring': 47, '.': 18, 'Name': 10, 'file': 9, '{': 42, 'STR': 24, 'String': 3, '': 2}
{'}\n': 51, ';': 29, ')': 7, '(': 3, 'This': 47, 'encode': 46, '}': 30, 'STR': 42, '_': 41, 'IOException': 10, '': 4, 'new': 34, 'throw': 33, '{': 11, 'else': 31, 'null': 28, '=': 27, 'Case': 18, 'Ignore': 17, 'equals': 16, '.': 15, 'name': 6, 'if': 12, 'throws': 8, 'String': 5, 'delete': 2, 'void': 1, 'public': 0}
{'}\n': 43, ';': 42, ')': 18, '(': 6, 'List': 38, 'empty': 37, '>': 36, 'String': 35, '': 2, '<': 33, '.': 32, 'Collections': 31, ',': 25, 'Frame': 4, 'data': 10, 'normalize': 5, 'return': 20, '{': 19, 'Data': 3, 'static': 1, 'public': 0}
{'}\n': 345, ';': 66, '_': 334, 'return': 290, '}': 67, ')': 17, ',': 13, '(': 9, 'Parent': 79, 'get': 78, '.': 31, 's': 76, '{': 18, 'null': 123, '!=': 82, 'if': 19, 'Spatial': 11, '': 10, 'static': 1, 'private': 0}
{'}\n': 129, '}': 128, ';': 43, ')': 27, 'tracker': 26, ',': 124, '(': 5, 'next': 121, '.': 47, 'iter': 96, 'Listener': 117, 'Block': 3, '{': 28, 'Next': 110, 'has': 109, 'while': 105, 'iterator': 101, '=': 36, '>': 34, 'OBlock': 33, '': 24, '<': 31, 'Tracker': 25, 'Listeners': 4, 'void': 1, 'private': 0}
{'}\n': 151, ';': 25, ')': 99, '(': 83, 'String': 3, 'to': 146, '.': 94, '}': 80, 'NUM': 88, '_': 33, 'append': 112, '=': 31, '{': 13, '++': 97, 'length': 95, '<': 91, 'int': 84, 'for': 82, 'STR': 34, ',': 35, ']': 9, '[': 8, 'final': 26, '': 2, 'static': 0}
{'}\n': 186, '}': 175, ';': 141, 'original': 9, 'return': 71, '{': 20, '_': 98, ')': 19, '(': 6, '.': 56, 'if': 21, '': 2, 'static': 1}
{'}\n': 23, ';': 22, 'ep': 8, '{': 10, ')': 9}
{'}\n': 116, ';': 23, ')': 10, '(': 9, 'String': 6, 'to': 7, '.': 25, 'buffer': 15, 'return': 108, 'STR': 105, '_': 86, 'append': 26, '': 5, 'new': 17, '=': 16, '{': 11, 'public': 3}
{'}\n': 80, ';': 29, ')': 11, '(': 6, 'Array': 15, 'Byte': 14, 'to': 74, '.': 33, 'Out': 19, 'b': 18, 'return': 70, '}': 49, 'e': 54, '+': 65, 'STR': 64, '_': 38, 'Exception': 61, '': 13, 'new': 21, 'throw': 57, '{': 12, 'catch': 50, ',': 37, 'length': 43, 'data': 10, 'NUM': 39, 'encode': 5, 'encoder': 32, 'try': 30, 'Stream': 17, 'Output': 16, '=': 20, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 256, ';': 148, ')': 147, 'max': 75, ',': 126, 'min': 21, 'X': 64, '(': 6, 'Y': 34, '': 2, 'double': 20}
{'}\n': 476, ';': 212, '.': 208, '=': 210, 'this': 207, 'ID': 172, ')': 202, '(': 4, '': 1, 'payload': 337, ']': 346, 'Length': 345, 'definition': 215, '[': 341, 'byte': 340, 'new': 253, '}': 334, 'msg': 223, '+': 296, 'STR': 265, '_': 264, 'throw': 252, '{': 233, 'null': 231, '==': 230, 'if': 227, 'Definition': 221, 'Message': 3, 'get': 219, 'schema': 8, 'component': 183, 'system': 171, 'int': 112, ',': 25, 'String': 94, 'Schema': 7, 'MAVLink': 2, 'public': 0}
{'}\n': 195, '}': 167, ';': 85, '': 20, '-': 179, '{': 18, 'else': 168, '*': 150, 'NUM': 54, '_': 53, '.': 22, 'Double': 21, ')': 17, 'double': 2, 'x': 7, '<': 57, '||': 55, '>': 52, '(': 4, 'if': 49, 'return': 40, 'INFINITY': 25, '==': 31, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, 'num': 8, ',': 20, '(': 6, 'size': 17, '.': 16, 'chunks': 15, 'Num': 5, 'return': 11, '{': 10, 'Builder': 3, 'Script': 2, '': 1}
{'}\n': 360, ';': 129, ')': 19, '(': 4, 'int': 17, '.': 25, '+': 95, '-': 71, ',': 9, '{': 20, '': 5, 'void': 2}
{'}\n': 472, '}': 471, ';': 19, ')': 9, ',': 163, 'width': 222, '(': 5, 'Image': 440, 'draw': 439, '.': 12, 'g': 8, 'NUM': 167, '_': 166, '/': 347, 'height': 269, '-': 339, 'get': 206, '=': 223, 'x': 330, 'int': 329, 'null': 317, 'Background': 283, 'Width': 249, 'Height': 207, 'Rect': 155, 'Component': 3, 'paint': 2, 'super': 11, '{': 10, 'Graphics': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 36, ';': 18, ')': 9, 'ea': 8, ',': 31, 'this': 30, '(': 4, 'Event': 21, 'Action': 7, 'New': 26, 'Game': 20, '': 5, 'new': 23, 'process': 19, 'Element': 14, 'add': 2, '.': 12, '{': 10, 'void': 1, 'public': 0}
{'}\n': 122, ';': 44, 'value': 90, 'return': 35, '}': 45, ')': 25, 'index': 15, '(': 6, 'get': 39, '.': 38, 'Array': 11, 'json': 10, '=': 91, '{': 29, 'Null': 24, 'is': 54, '!': 96, 'if': 30, 'null': 92, '': 2, ',': 12, 'ARRAY': 81, 'FORMAT_': 80, 'VALUE_': 79, 'NULL_': 78, 'US': 75, 'Locale': 72, 'format': 69, 'String': 67, 'JSONException': 28, 'new': 62, 'throw': 61, '&&': 50, 'not': 23, 'required': 19, 'throws': 26, 'boolean': 18, 'final': 7, 'int': 14, 'JSONArray': 9, 'read': 4, 'static': 1, 'public': 0}
{'}\n': 107, '}': 73, ';': 34, ')': 23, 'e': 79, ',': 14, 'Seconds': 22, 'In': 21, 'by': 17, 'STR': 94, '_': 93, '(': 9, 'format': 91, '.': 27, 'String': 89, '': 10, 'Exception': 78, 'Timeout': 77, 'new': 53, 'throw': 82, '{': 24, 'catch': 74, 'null': 70, 'until': 68, 'wait': 51, 'parent': 13, 'Wait': 50, 'Element': 4, 'Web': 48, '=': 52, 'try': 45, 'Null': 30, 'Not': 29, 'check': 28, 'Preconditions': 26, 'int': 19, 'By': 16, 'Context': 12, 'Search': 11, 'static': 1, 'public': 0}
{'}\n': 123, ';': 33, 'this': 121, 'return': 120, ')': 8, ',': 52, 'STR': 29, '_': 19, '(': 7, 'errors': 58, '+': 86, 'fail': 48, '{': 9, 'NUM': 20, '>': 74, 'if': 10, 'c': 36, 'completions': 38, '=': 37, 'long': 35, '}': 34, '!=': 18, 'Count': 15, 'get': 14, '.': 13, 'done': 12, 'assert': 5, 'Subscriber': 4, 'Test': 3, '': 2, 'final': 1, 'public': 0}
{'}\n': 42, ';': 41, ')': 17, '(': 5, '.': 22, 'video': 10, '': 8, 'public': 0}
{'}\n': 390, ';': 388, ')': 189, '(': 185, '': 171, 'new': 254, 'Account': 175, '{': 192}
{'}\n': 357, ';': 326, '_': 341, '}': 327, ')': 32, '.': 59, '': 17, '(': 16, 'int': 104, '{': 33, 'getter': 39}
{'}\n': 65, '}': 64, ';': 27, ')': 11, '(': 7, '.': 59, 'stream': 19, '{': 15, 'null': 32, '==': 31, 'if': 28, 'Stream': 18, '=': 20, '': 1, 'IOException': 14, 'throws': 12}
{'}\n': 384, ';': 69, '': 215, '.': 61, 'State': 9, '=': 177, 'Transition': 87, ')': 18, '(': 17, '{': 19, 'public': 0}
{'}\n': 50, ';': 22, 'BOOL': 43, '_': 42, 'return': 41, '}': 45, ')': 13, '(': 8, 'cancel': 37, '.': 17, 'Request': 35, 'm': 15, '{': 14, 'Containers': 16, 'if': 23, 'container': 12, 'remove': 2, 'Container': 3, 'Image': 10, '': 9, 'Necessary': 7, 'If': 6, 'Cancel': 5, 'And': 4, 'boolean': 1, 'public': 0}
{'}\n': 37, ';': 36, ']': 11, '[': 10, 'points': 13, ')': 14, '(': 5, '': 1, 'public': 0}
{'}\n': 119, ';': 37, ')': 11, '(': 7, '.': 54, 'Object': 39, '': 16, '=': 28, 'Array': 24, 'Byte': 23, 'to': 89, 'Stream': 26, 'Input': 76, 'new': 29, 'write': 55, 'Output': 25, '{': 21, 'Exception': 20, 'throws': 12}
{'}\n': 53, ';': 22, 'name': 7, '=': 50, '.': 26, 'this': 47, '}': 46, ')': 8, 'STR': 43, '_': 31, '(': 4, 'Exception': 40, 'Argument': 39, 'Illegal': 38, '': 1, 'new': 36, 'throw': 35, '{': 9, 'NUM': 32, '>': 30, 'length': 27, 'if': 23, 'String': 6, 'Entry': 3, 'Zip': 2, 'public': 0}
{'}\n': 201, ';': 31, '}': 191, ')': 43, 'stmt': 36, '(': 4, '': 10, '=': 13, 'rs': 59, '_': 55, 'Query': 53, '.': 39, 'Statement': 41, 'create': 40, '{': 9, 'try': 32, 'public': 0}
{'}\n': 183, ';': 55, ')': 16, '(': 3, 'close': 179, '.': 66, 'in': 39, '}': 159, ',': 7, 'NUM': 108, '_': 107, 'terms': 80, 'Child': 165, 'add': 164, 'ge': 115, '{': 20, 'else': 160, 'Entry': 114, 'Gaz': 113, '': 4, 'new': 41, ']': 79, '[': 78, 'put': 137, 'gaz': 117, 'null': 73, '==': 106, 'if': 89, 'get': 119, '=': 40, 'continue': 99, 'length': 93, 'Length': 97, 'Phrase': 96, 'max': 95, '>': 94, 'line': 58, 'split': 84, 'splitter': 82, 'String': 5, '!=': 72, 'Line': 68, 'read': 1, 'while': 60, 'res': 15, 'Reader': 38, 'Stream': 14, 'Input': 13, 'Buffered': 37, 'IOException': 19, 'throws': 17, 'suffix': 10, 'filename': 6, 'Dictionary': 2, 'void': 0}
{'}\n': 467, ';': 23, ')': 15, '(': 5, 'return': 55, '}': 59, '=': 20, '_': 21, '{': 16, 'Length': 228, 'Wildcard': 116, 'Level': 141, 'one': 140, '+': 224, 'else': 274, 'if': 24, ',': 143, '.': 136, 'Token': 14, 'target': 8, 'int': 17, '==': 33, 'null': 34, 'NUM': 22, 'String': 7, '': 1, 'private': 0}
{'}\n': 52, '}': 50, ';': 49, 'v': 9, ')': 20, '(': 4, '.': 25, '{': 21, 'Vertex': 3, 'Graph': 7, 'Value': 6, '': 5}
{'}\n': 42, ';': 41, ')': 17, '(': 12, 'Set': 2, '.': 34, '': 1, '{': 18, '>': 6, 'String': 5, '<': 3, 'public': 0}
{'}\n': 50, ';': 22, 'NUM': 48, '_': 19, '-': 46, '!=': 45, ')': 6, 'STR': 20, '(': 5, 'Of': 40, 'index': 39, '.': 15, 'Name': 11, 'os': 10, 'return': 35, 'Case': 31, 'Lower': 30, 'to': 29, '=': 12, 'Property': 17, 'get': 16, 'System': 14, '': 8, 'String': 9, '{': 7, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 71, ';': 64, ')': 25, '(': 28, '.': 53, 'throwable': 23, '{': 26, 'Throwable': 9, '': 6}
{'}\n': 23, ';': 22, ')': 6, 'v': 5, '(': 3, 'Of': 17, 'value': 16, '.': 15, 'String': 14, '': 8, 'print': 2, '{': 10, 'IOException': 9, 'throws': 7, 'void': 1, 'protected': 0}
{'}\n': 123, ';': 31, 'Map': 6, 'return': 119, '}': 118, ')': 16, 'support': 109, '.': 59, 'Set': 23, 'item': 25, ',': 105, '(': 15, 'put': 100, '{': 17, 'Sets': 26, ':': 72, 'Item': 22, '': 1, 'for': 65, 'size': 60, '>': 12, '<': 7, 'Hash': 5, 'Open': 4, 'Double': 3, 'Object2': 2, 'new': 47, '=': 27, 'learn': 28, 'List': 19, 'public': 0}
{'}\n': 72, ';': 21, 'BOOL': 20, '_': 19, 'return': 18, '}': 67, ')': 10, 'i': 25, '(': 6, 'At': 57, 'char': 56, '.': 28, 'str': 9, 'is': 3, 'Character': 49, '': 7, '!': 47, 'length': 29, '=': 26, 'int': 24, 'for': 22, 'if': 12, '{': 11, 'String': 8, 'All': 4, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 539, ';': 133, '}': 410, ')': 40, ',': 23, '(': 56, '{': 41, '_': 131, '.': 159, '<': 306, 'if': 67, '+': 251, '': 186, 'header': 44, 'return': 125, 'null': 121, 'item': 59, 'boolean': 34, 'int': 21, 'private': 0}
{'}\n': 59, ';': 29, 'digit': 17, 'return': 56, '}': 55, ')': 11, 'index': 10, '+': 46, 'STR': 45, '_': 26, 'ch': 7, '(': 5, '': 19, 'new': 40, 'throw': 39, '{': 38, 'NUM': 27, '-': 34, '==': 33, 'if': 30, ',': 8, '.': 21, 'Character': 20, '=': 18, 'int': 2, 'char': 6, 'Digit': 4, 'to': 3, 'static': 1}
{'}\n': 32, ';': 31, ')': 21, 'STR': 29, '_': 28, '(': 6, '': 7, 'String': 8, ',': 11, 'loader': 15, 'Loader': 14, 'Class': 13, 'Name': 10, 'lib': 9, 'With': 4, 'Library': 3, 'load': 2, 'void': 1, 'static': 0}
{'}\n': 54, ';': 18, ')': 6, '(': 5, 'elements': 50, '.': 21, 'Vector': 9, 'new': 10, 'return': 46, 'STR': 30, '_': 29, ',': 34, 'NUM': 39, 'Option': 27, '': 1, 'Element': 23, 'add': 22, '=': 12, '{': 7, 'Options': 4, 'list': 3, 'Enumeration': 2, 'public': 0}
{'}\n': 133, '}': 123, ';': 52, ')': 28, '(': 3, 'close': 128, '.': 46, '{': 37, 'finally': 124, 'store': 41, 'try': 96, 'Stream': 83, 'Output': 82, 'File': 5, '': 4, 'new': 86, '=': 42, ',': 8, 'Key': 39, 'Entry': 66, 'set': 64, 'null': 57, 'load': 55, 'Instance': 48, 'get': 47, 'Store': 40, 'Exception': 33, 'throws': 29, 'String': 10, 'Password': 22, 'save': 2, 'void': 1, 'public': 0}
{'}\n': 25, ';': 21, 'this': 23, 'return': 22, ')': 12, 'Builder': 4, 'filter': 10, '(': 6, 'add': 5, '.': 15, 'filters': 14, '{': 13, 'Query': 3, '': 1, 'public': 0}
{'}\n': 185, ';': 13, ')': 9, '(': 2, 'Millis': 181, 'Time': 15, 'current': 179, '.': 21, 'System': 177, '': 19, '=': 18, 'Update': 173, 'last': 172, 'rows': 8, '+=': 97, 'Cumulative': 160, 'Count': 53, 'row': 52, 'time': 4, 'execution': 14, 'Mean': 92, '-': 89, '*': 109, 'M2': 105, 'count': 11, '/': 100, 'double': 84, 'Max': 35, ',': 6, 'max': 41, 'Math': 20, 'Min': 16, 'min': 22, '++': 12, '{': 10, 'int': 7, 'long': 3, 'update': 1, 'void': 0}
{'}\n': 161, '}': 158, ';': 30, ')': 29, '(': 3, '{': 9, '.': 26, 'Bigdata': 92, '': 11, 'new': 15, '=': 14, 'properties': 63, 'void': 1, 'public': 0}
{'}\n': 152, ';': 18, 'result': 15, '}': 55, 'STR': 53, '_': 52, '=': 51, '{': 10, ')': 9, '(': 8, 'm_': 44, 'else': 56, 'null': 47, '==': 46, 'if': 42, 'String': 5, '': 1, 'to': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 141, ';': 37, 'BOOL': 139, '_': 138, 'return': 137, '}': 136, ')': 12, '.': 33, '(': 8, '=': 22, 'if': 96, 'curr_item': 67, 'Brd': 42, '': 17, '{': 71, 'picked_items': 45, ':': 68, 'Item': 18, 'for': 62, ',': 54, 'pick_items': 49, 'r_board': 47, '>': 44, '<': 40, 'Collection': 39, 'Choice': 32, 'Selection': 19, 'Filter': 20, 'new': 23, 'boolean': 2}
{'}\n': 79, ';': 40, 'return': 76, '}': 75, ')': 21, '_': 71, ']': 13, 'i': 44, '[': 12, 'bytes': 14, '(': 10, '=': 26, '{': 22, '<': 49, 'int': 43, 'for': 41, 'length': 34, '.': 33, '': 27, 'byte': 11, 'static': 1}
{'}\n': 28, ';': 27, ')': 10, '.': 22, 'source': 5, '(': 6, 'return': 12, '{': 11, 'Request': 4, 'Create': 2, '': 1, 'public': 0}
{'}\n': 40, '}': 39, ';': 38, ')': 15, '(': 4, 'User': 20, '.': 27, 'user': 21, 'add': 28, '{': 25, 'users': 23, ':': 22, '': 5, 'for': 17, 'Users': 3}
{'}\n': 62, ';': 35, ')': 6, '(': 15, '': 27, 'Set': 25, 'lazy': 24, '.': 12, 'Status': 22, 'drain': 21, '{': 7, 'void': 0}
{'}\n': 109, ';': 59, ')': 36, '(': 5, ',': 75, 'source': 8, '': 6, '}': 60, 'Path': 50, 'Absolute': 49, 'get': 48, '.': 33, '{': 38, 'exists': 34, '!': 30, 'if': 28, 'dest': 20, 'File': 4, 'copy': 3, 'static': 1, 'public': 0}
{'}\n': 201, ';': 27, 'result': 67, 'return': 198, '}': 40, ')': 10, 'ex': 177, ',': 35, 'STR': 37, '_': 36, 'SEVERE': 56, '': 2, '.': 31, 'Level': 53, '(': 6, 'log': 48, '{': 11, 'Exception': 107, 'catch': 41, 'enc': 136, '+': 123, 'info': 164, 'encode': 89, 'URLEncoder': 87, '=': 18, 'try': 28, 'Property': 142, 'get': 141, 'System': 139, 'String': 3, 'e': 45, 'ENCODING': 98, 'Env': 95, 'Encoding': 106, 'Unsupported': 105, 'Array': 14, 'Byte': 13, 'to': 75, 'bos': 17, 'new': 19, 'IOException': 44, 'store': 32, 'pp': 9, 'Stream': 16, 'Output': 15, 'Properties': 8, 'Encode': 5, 'properties': 4, 'static': 1, 'public': 0}
{'}\n': 170, ';': 52, ')': 18, ',': 12, 'attrs': 34, 'STR': 74, '_': 49, 'Ns': 160, '.': 30, 'Namespaces': 157, '': 8, '(': 7, 'Element': 154, 'simple': 153, 'w': 11, '}': 87, 'String': 143, 'to': 142, 'Attribute': 32, 'Writer': 10, 'Xml': 9, 'new': 36, 'add': 63, '{': 22, 'if': 53, 'null': 92, '!=': 91, 'NUM': 50, '>': 33, '<': 26, 'List': 25, 'Array': 24, '=': 35, 'IOException': 21, 'throws': 19, 'Profile': 15, 'ext': 16, 'Extension': 14, 'generate': 5, 'void': 4, 'public': 3}
{'}\n': 104, ';': 28, ')': 8, '(': 7, 'get': 70, '.': 21, 'xpath': 68, ',': 51, 'STR': 26, '_': 25, 'Equals': 46, 'assert': 45, 'dom1': 16, 'dom2': 32, 'compare': 54, 'comparator': 52, 'NUM': 50, '-': 48, 'Dom': 15, 'build': 22, 'Factory': 20, 'Xpp': 14, '': 10, '=': 17, '{': 12, 'Exception': 11, 'throws': 9, 'Name': 6, 'By': 5, 'Elements': 4, 'Sorts': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 78, ';': 33, ')': 10, '(': 5, 'delete': 3, '.': 15, '}': 68, '{': 11, 'Files': 30, 'list': 29, '=': 26, 'files': 25, ']': 24, '[': 23, 'File': 8, '': 7, 'if': 12, 'Directory': 4, 'static': 1}
{'}\n': 36, ';': 35, ')': 34, ',': 7, 'destination': 25, 'source': 23, '(': 3, '': 4, 'public': 0}
{'}\n': 41, ';': 40, ')': 9, 'NUM': 20, '_': 19, '(': 5, 'At': 34, 'char': 33, '.': 14, 'string': 8, 'return': 22, '==': 18, 'length': 15, 'if': 11, '{': 10, 'String': 7, '': 6, 'private': 0}
{'}\n': 14, ';': 13, ')': 5, '(': 4, 'clear': 2, '.': 9, '{': 6, 'Values': 3, 'void': 1, 'public': 0}
{'}\n': 242, ';': 241, ')': 68, 'STR': 167, '_': 166, ',': 83, 'd': 56, '(': 81, 'return': 70, '{': 69, ']': 17, '[': 16, 'byte': 15, 'private': 0}
{'}\n': 102, ';': 51, ')': 16, '(': 6, '.': 32, '{': 38, '}': 52, 'Name': 10, 'get': 59, '=': 41, '': 7, 'STR': 49, '_': 48, 'user': 39, '||': 29, 'null': 28, '==': 27, 'String': 8, ',': 11, 'public': 0}
{'}\n': 59, ';': 57, 'run': 6, '=': 55, 'Exit': 9, 'On': 8, 'finalize': 52, '{': 51, ')': 50, 'boolean': 11, '(': 10, 'Finalizers': 7, 'void': 5, 'static': 4, 'public': 3, 'Deprecated': 2, '': 1, '@': 0}
{'}\n': 112, ';': 19, 'return': 109, ')': 11, '(': 8, '.': 25, '*': 99, '=': 22, ']': 3, 'NUM': 30, '_': 29, '[': 2, 'm_': 81, '': 23, 'double': 1, '/': 38, 'conf': 10, '-': 31, 'Inverse': 27, 'normal': 26, 'Statistics': 24, 'val': 21, 'update': 13, '{': 12, 'Intervals': 7, 'predict': 6, 'public': 0}
{'}\n': 104, ';': 55, ')': 16, 'Hash': 10, '(': 5, 'Case': 98, 'Ignore': 97, 'equals': 96, '.': 23, 'hash': 64, 'return': 56, '}': 60, 'BOOL': 58, '_': 52, 'STR': 53, 'e': 50, 'Log': 48, '': 7, '{': 17, 'null': 33, '==': 32, 'if': 18, 'file': 15, 'get': 66, '=': 65, 'String': 8, 'final': 6, 'Readable': 41, 'is': 24, 'Utils': 22, 'File': 14, '!': 35, '||': 30, 'Empty': 25, 'Text': 21, ',': 11, 'check': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 10, 'key': 9, '(': 6, 'add': 2, '.': 15, 'Names': 14, 'Key': 4, '{': 11, 'String': 8, '': 7, 'Name': 5, 'void': 1, 'public': 0}
{'}\n': 204, ';': 40, ')': 8, ',': 186, '(': 4, '.': 33, 'cs': 51, 'NUM': 47, '_': 46, ']': 64, '[': 29, 'i': 44, '++': 56, 'length': 53, '<': 50, '=': 26, 'int': 18, 'for': 41, '{': 9}
{'}\n': 51, ')': 9, 'value': 8, '(': 12, 'Integer': 42, '': 2, 'new': 40, '.': 37, 'Char': 36, '_by': 35, 'null': 19, 'if': 11, '{': 10, 'String': 3, 'static': 1}
{'}\n': 65, ';': 54, 'return': 32, ')': 15, '.': 48, 'String': 6, '': 5, 'null': 21, 'content': 14, '(': 10, 'if': 17, '{': 16}
{'}\n': 132, ';': 131, ')': 85, ',': 11, 'area': 56, 'g2': 10, '(': 6, 'draw': 5, '{': 86, 'D': 9, 'Rectangle2': 13, '': 1, 'Graphics2': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 56, ';': 48, ')': 32, 'hole': 26, '(': 17, 'add': 2, '.': 50, 'holes': 36, 'List': 45, 'Array': 44, '': 21, 'new': 42, '=': 41, 'null': 38, '==': 37, 'if': 34, 'Ring': 23, 'Linear': 22, 'Hole': 3, 'void': 1, 'public': 0}
{'}\n': 314, ';': 61, ')': 24, '(': 10, 'Component': 14, '.': 147, '': 11, ',': 17, 'register': 80, 'void': 2}
{'}\n': 42, '}': 31, ';': 19, ')': 8, '(': 5, 'unlock': 37, '.': 15, 'Lock': 14, 'cb': 13, '{': 12, 'finally': 32, 'iis': 23, 'return': 22, 'try': 20, 'lock': 16, 'IOException': 11, '': 10, 'throws': 9, 'Input': 3, 'private': 0}
{'}\n': 140, '}': 113, ';': 35, ')': 9, 'ex': 118, ',': 58, 'STR': 133, '_': 132, '(': 8, 'String': 19, 'get': 45, '.': 44, 'res': 127, 'Exception': 13, 'Crypto': 12, '': 11, 'new': 122, 'throw': 121, '{': 14, 'IOException': 117, 'catch': 114, 'SHA1': 64, 'Type': 61, 'Digest': 42, 'Bytes': 55, 'Bit': 5, 'Key': 21, 'public': 0, 'Message': 46, 'Util': 43, 'As': 28, 'Public': 26, 'encode': 25, '=': 24, 'DERBit': 18, 'try': 15, 'throws': 10, 'Id': 7, 'Hash': 6, ']': 3, '[': 2, 'byte': 1}
{'}\n': 92, ';': 91, ')': 60, 'r': 59, '(': 29, 'child': 86, '.': 85, 'p': 46, ',': 9, 'null': 82, 'parser': 35, '>': 15, '<': 2, 'Handler': 20, 'Command': 19, 'Sub': 18, 'Create': 17, '': 3, 'new': 67, 'return': 66, '{': 65, 'Exception': 64, 'Argument': 33, 'throws': 61, 'S': 11, 'C': 4, 'Definition': 51, 'Relation': 50, '?': 42, 'Path': 40, 'Object': 39, 'Managed': 38, 'Parser': 34, 'create': 28, 'Configuration': 7, 'extends': 5, 'Client': 8, 'static': 1, 'public': 0}
{'}\n': 49, ';': 23, ')': 14, 'value': 13, '(': 5, 'Value': 44, 'With': 43, 'prepopulate': 42, 'Components': 38, 'init': 37, 'STR': 33, '_': 32, 'String': 30, 'get': 29, '.': 28, 'res': 27, 'Title': 25, 'set': 24, 'parent': 8, 'super': 19, '{': 18, 'IOException': 17, '': 1, 'throws': 15, ']': 12, '[': 11, 'byte': 10, ',': 9, 'JDialog': 7, 'DSubject': 2, 'public': 0}
{'}\n': 155, ';': 35, ')': 8, '(': 7, 'get': 51, '.': 50, ',': 103, 'STR': 23, '_': 22, 'Stub': 20, '': 10, 'new': 17, '=': 16, 's': 70, 'Scope': 6, 'Identity': 61, 'Null': 38, 'assert': 36, '{': 12, 'Exception': 11, 'throws': 9, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 306, ';': 42, 'figure': 275, 'return': 303, ')': 10, ',': 22, 'elem': 9, '(': 6, 'put': 296, '.': 278, 'Objects': 294, 'element': 293, 'a': 26, 'create': 279, 'factory': 277, '=': 27, 'Figure': 2, '': 1, 'STR': 206, '_': 205, 'Number': 235, 'to': 234, 'double': 231, 'Attributes': 45, 'read': 3, 'Attribute': 20, 'Opacity': 62, 'Transform': 53, 'Core': 44, '>': 25, 'Object': 24, 'Key': 21, '<': 18, 'Map': 17, 'Hash': 16, 'new': 28, '{': 14, 'IOException': 13, 'throws': 11, 'IXMLElement': 8, 'Element': 5, 'private': 0}
{'}\n': 20, ';': 19, ')': 7, 'ID': 17, 'ISSET_': 16, '__': 14, '(': 6, 'get': 12, '.': 11, '__isset_bit_vector': 10, 'return': 9, '{': 8, 'Set': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 208, '}': 207, ';': 206, ')': 91, '(': 64, '.': 125, 'buffer': 90, '': 52, '=': 151, 'this': 121, '{': 104, 'Buffer': 88}
{'}\n': 36, ';': 35, ')': 22, ',': 10, 'style': 12, 'parent': 9, '(': 6, 'this': 24, '{': 23, 'int': 11, '': 1, 'public': 0}
{'}\n': 344, '}': 174, ';': 33, ')': 32, '_': 168, '(': 6, '.': 27, 'set': 302, 'get': 28, 'storage': 71, 'System': 182, ',': 58, 'class': 57, 'Storage': 54, '': 7, 'Object': 51, 'query': 50, 'Client': 48, '_db': 47, '=': 24, '{': 18, 'URI': 20, 'Profile': 9, 'access': 10, 'Access': 8, 'void': 1, 'private': 0}
{'}\n': 55, ';': 26, ')': 6, 'NUM': 21, '_': 20, '&': 49, ']': 37, '[': 34, 'scratch': 18, '(': 5, '|': 42, '<<': 38, 'return': 27, ',': 19, 'Fully': 16, 'read': 3, '{': 14, 'IOException': 13, '': 12, '.': 9, 'io': 10, 'java': 8, 'throws': 7, 'final': 1, 'public': 0}
{'}\n': 308, ';': 53, ')': 27, 'Info': 61, 'Job': 3, 'persisted': 163, ',': 14, 'Handler': 301, 'Change': 300, 'State': 30, 'on': 298, 'Cluster': 192, 'dest': 253, 'src': 191, 'conf': 240, '(': 9, '': 1, 'new': 45, 'extras': 43, 'empty': 214, '.': 55, 'Optional': 212, 'Name': 140, 'get': 138, 'PENDING': 182, 'Status': 179, 'Replication': 2, 'Operation': 175, 'replication': 174, 'Create': 19, 'resilient': 171, 'Store': 169, 'job': 167, '=': 44, 'Persisted': 59, 'add': 134, 'Names': 120, 'partition': 119, '>': 42, '<': 36, 'List': 114, 'Array': 124, 'String': 38, 'Time': 20, 'Entry': 18, 'Log': 12, 'audit': 11, 'to': 73, 'Long': 71, 'KEY': 68, 'TIME_': 96, 'CREATE_': 95, 'ENTRY_': 94, 'LOG_': 65, 'AUDIT_': 64, 'put': 56, 'Id': 13, 'EXTRAS_': 67, 'ID_': 66, 'Map': 35, 'Hash': 47, '{': 33, 'Exception': 32, 'Update': 31, 'throws': 28, 'long': 10, 'Partition': 8, 'For': 6, 'create': 4, 'public': 0}
{'}\n': 276, ';': 57, ')': 68, '(': 4, 'STR': 22, '_': 21, '.': 105, '+': 112, '': 5, 'new': 63, '=': 19, 'String': 6, ',': 23, '{': 13, 'Builder': 60, '}': 56, ']': 17, '[': 16, 'static': 1}
{'}\n': 45, ';': 44, 'context': 30, ',': 7, 'dctx': 17, '(': 13, '{': 32, ')': 31, '>': 10, 'Object': 9, '': 2, 'extends': 26, '?': 25, 'String': 6, '<': 4, 'Map': 3, 'Context': 16, 'Dispatch': 15, 'static': 1, 'public': 0}
{'}\n': 60, ';': 30, ')': 11, '(': 6, 'File': 4, 'is': 3, '.': 18, 'file': 9, '&&': 51, 'exists': 48, 'return': 27, 'Path': 10, '': 7, 'new': 36, '=': 35, '}': 31, 'BOOL': 29, '_': 28, '{': 12, 'Blank': 20, 'if': 13, 'String': 8, 'Exist': 5, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 163, ';': 144, ')': 18, '(': 9, 'NUM': 112, '_': 111, 'stage': 40, '.': 44, '': 10, 'public': 0}
{'}\n': 68, ';': 32, 'return': 65, '}': 64, ']': 4, 'i': 51, '[': 3, '=': 26, ')': 20, '++': 46, '<': 42, 'NUM': 39, '_': 38, '(': 34, 'for': 33, 'k': 30, 'double': 2, 'new': 27, '{': 21, ',': 17, 'static': 1, 'public': 0}
{'}\n': 69, '}': 68, ')': 21, '(': 4, '{': 53, '': 6, '.': 40, 'Bootstrap': 31, '<': 15, 'void': 1}
{'}\n': 115, '}': 111, ';': 56, ')': 20, ',': 107, 'id': 47, '(': 9, '.': 43, '{': 24, 'if': 57, '': 10}
{'}\n': 56, '}': 54, ';': 24, ')': 8, 'STR': 51, '_': 50, '(': 4, 'Message': 48, '.': 17, '{': 9, 'sb': 13, 'save': 2, 'Out': 36, 'Save': 35, 'm_': 15, 'if': 25, 'null': 29, '!=': 28, 'Buffer': 3, 'get': 18, 'History': 16, '=': 14, 'String': 11, '': 10, 'void': 1, 'protected': 0}
{'}\n': 181, ';': 98, ')': 136, ',': 15, 'project': 171, 'Varray': 14, 'Vpool': 36, 'src': 13, '(': 9, 'For': 144, 'vpool': 131, 'Storage': 108, '>': 6, 'Recommendation': 5, '': 1, '<': 3, 'List': 2, 'capabilities': 61, 'Wrapper': 60, 'Values': 59, 'Capability': 58, 'Pool': 34, 'Virtual': 11, 'ha': 52, 'Array': 12}
{'}\n': 154, ';': 153, ')': 77, 'Dir': 33, '(': 59, '.': 128, 'base': 22, 'String': 63, '': 17, 'public': 4}
{'}\n': 44, ';': 43, '.': 15, ')': 11, '_': 20, '(': 7, 'specifier': 14, '{': 12, 'protected': 0}
{'}\n': 211, ';': 210, ')': 192, 'Pool': 150, '': 55, 'Tier': 63, 'String': 101, '(': 72}
{'}\n': 232, '}': 231, ';': 230, ')': 40, '(': 186, '.': 224, '{': 43, 'monitor': 24, 'synchronized': 44, '': 33, 'void': 3, 'static': 1}
{'}\n': 29, ';': 28, 'Level': 10, '(': 6, 'return': 13, '{': 12, ')': 11, 'int': 7}
{'}\n': 173, '}': 20, ';': 19, 'av': 148, 'return': 16, '{': 6, ')': 5, 'NUM': 13, '_': 12, '-': 11, '!=': 10, 'pos': 9, '||': 160, '>': 157, '(': 4, 'if': 7, 'available': 150, '=': 49, 'int': 1, 'Separator': 143, 'find': 142, 'Read': 73, 'bytes': 72, '+=': 22, 'tail': 23, 'msg': 121, 'Exception': 131, 'Stream': 130, 'Malformed': 129, '': 29, 'new': 127, 'throw': 126, 'STR': 124, 'String': 120, 'final': 118, '==': 112, 'Size': 84, 'buf': 83, ',': 35, 'buffer': 34, 'read': 77, '.': 31, 'input': 75, 'for': 57, 'pad': 27, 'head': 25, 'arraycopy': 32, 'System': 30, 'total': 21, 'Available': 3, 'make': 2, 'private': 0}
{'}\n': 240, ';': 49, 'weight': 231, 'Value': 217, 'class': 216, ']': 119, '.': 123, 'm_': 53, '(': 6, 'NUM': 70, '_': 69, '[': 109, '=': 46, ')': 13, '': 121, '*': 116, '{': 14, '}': 85, 'double': 11, 'Train': 74, 'if': 33, ',': 10, 'protected': 0}
{'}\n': 296, ';': 52, 'return': 292, '}': 281, ')': 18, '(': 9, 'group': 252, 'add': 237, '.': 236, 'groups': 97, '{': 27, '++': 90, 'i': 76, 'NUM': 79, '_': 78, '=': 61, 'int': 75, 'for': 73, '>': 6, '': 1, '<': 3, 'List': 2, 'Array': 64, 'new': 62, 'Groups': 8}
{'}\n': 478, ';': 317, 'n': 6, '=': 460, '.': 388, 'this': 387, '}': 319, ')': 7, '_': 13, '+': 291, 'STR': 25, '(': 4, 'Exception': 22, 'Argument': 21, 'Illegal': 20, '': 19, 'new': 18, 'throw': 17, '{': 8, 'NUM': 14, 'if': 9, 'int': 5}
{'}\n': 200, ';': 67, ')': 53, '(': 32, '': 16, 'new': 102, '.': 61, ',': 114, 'NUM': 169, '_': 168, 'get': 62, 'INT_': 121, 'TYPE_': 120, 'Image': 43, 'Buffered': 97, 'height': 113, 'width': 109, '=': 58, 'Icon': 44, 'icon': 45}
{'}\n': 33, ';': 32, '_': 13, 'ch': 9, '==': 25, 'STR': 14, 'return': 12, '{': 11, ')': 10, 'char': 8, '(': 7, 'is': 3, 'boolean': 2}
{'}\n': 17, ';': 16, ')': 8, 'line': 7, '(': 4, 'add': 2, '.': 11, '{': 9, 'String': 6, '': 5, 'Header': 3, 'void': 1, 'public': 0}
{'}\n': 93, ';': 92, ')': 19, 'Name': 18, 'column': 17, '(': 6, 'String': 16, '.': 40, 'Set': 10, 'result': 11, '{': 23, 'SQLException': 22, '': 2, 'throws': 20, 'final': 7, ',': 13, 'Result': 9, 'static': 1, 'public': 0}
{'}\n': 97, ';': 67, ')': 32, '.': 84, 'encoded': 19, '(': 36, 'STR': 65, '_': 64, 'Exception': 49, '': 6, 'new': 45, 'throw': 44, '{': 43, 'String': 14, 'static': 1}
{'}\n': 65, ';': 22, ')': 10, 'ROOT': 61, '': 2, '.': 17, 'Locale': 58, '(': 6, 'Case': 55, 'Lower': 54, 'to': 53, 'suffix': 25, 'get': 18, 'Map': 47, 'mime': 46, 'NUM': 42, '_': 37, '+': 40, 'STR': 38, 'Of': 35, 'Index': 34, 'last': 33, 'name': 14, 'substring': 29, '=': 15, 'String': 3, 'Name': 19, 'file': 9, '{': 11, 'File': 8, 'Type': 5, 'guess': 4, 'static': 1, 'protected': 0}
{'}\n': 249, '}': 248, ';': 29, ')': 7, 'actual': 171, ',': 155, 'expected': 150, '(': 6, 'assert': 189, 'SCORER': 186, 'BULK_': 233, '': 9, '.': 32, 'Mode': 162, 'Match': 127, 'Should': 126, 'Nr': 125, 'min': 124, 'terms': 18, 'scorer': 152, '=': 20, 'VALUES': 166, 'DOC_': 165, 'Scorer': 149, '{': 11, '++': 145, 'length': 139, '<=': 136, 'NUM': 98, '_': 97, 'int': 123, 'for': 121, ']': 85, '[': 84, 'String': 16, 'new': 21, 'Array': 23, 'to': 90, 'List': 13, 'Terms': 5, 'rare': 76, 'as': 39, 'Arrays': 37, 'All': 4, 'add': 33, 'medium': 59, 'common': 42, '>': 17, '<': 14, 'Exception': 10, 'throws': 8, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 5, '(': 4, 'Public': 3, 'is': 2, '.': 10, 'Modifier': 9, '': 8, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 92, ';': 91, ')': 18, 'details': 16, ',': 63, '.': 35, '': 10, '(': 5, 'new': 28, '{': 19, 'String': 11, 'public': 0}
{'': 1, 'formats': 10, ']': 9, '[': 8, 'long': 7, 'Transferable': 2}
{'}\n': 229, '}': 28, ';': 27, ')': 7, 'len': 6, 'byte': 23, '(': 4, 'write': 20, 'NUM': 17, '_': 16, '>': 91, '{': 11, 'else': 29, '<<': 37, '<': 15, 'if': 12, 'IOException': 10, '': 9, 'throws': 8, 'int': 5, 'Length': 3, 'put': 2}
{'}\n': 35, ';': 34, ')': 15, '(': 6, '{': 16, 'family': 9, 'String': 8, '': 7, 'Font': 4, 'void': 1}
{'}\n': 85, ';': 64, ')': 29, ',': 8, '(': 4, 'put': 67, '.': 58, '=': 55, 'String': 16, '': 5, '{': 37, 'value': 21}
{'}\n': 36, ';': 27, ')': 13, 'this': 33, '(': 7, 'format': 6, '.': 17, 'formatter': 12, 'return': 28, 'STR': 25, '_': 24, ',': 23, 'Null': 20, 'Non': 19, 'require': 18, 'Objects': 16, '': 4, '{': 14, 'Formatter': 11, 'Time': 10, 'Date': 9, 'String': 5, 'public': 3}
{'}\n': 29, ';': 28, ')': 13, 'Name': 5, 'class': 25, '(': 24, '.': 19, '{': 14, 'Class': 4, 'Dotted': 3, 'String': 7, '': 2, '@': 1, 'public': 0}
{'}\n': 131, ';': 64, ')': 63, 'Key': 21, 'Public': 20, 'authority': 22, '=': 89, '.': 69, 'this': 84, 'STR': 74, '_': 73, '(': 4, 'String': 71, 'get': 70, 'res': 68, 'Title': 66, 'set': 65, 'parent': 7, 'super': 49, '{': 48, '': 1, ',': 12, 'public': 0}
{'}\n': 102, ';': 33, ')': 5, '(': 4, 'Video': 30, 'play': 2, 'BOOL': 95, '_': 94, '=': 70, 'Called': 41, 'Was': 40, '.': 14, 'iterator': 61, 'Item': 82, 'video': 81, '}': 36, 'Iterator': 76, 'list': 75, 'Videos': 73, 'Tube': 72, 'you': 71, '{': 6, 'has': 63, '!': 60, 'if': 7, 'return': 34, 'restart': 29, 'VIDEO': 19, 'TYPE_': 18, 'MEDIA_': 17, 'YOUTUBE_': 16, '': 12, 'Config': 13, '==': 11, 'Type': 10, 'media': 9, 'void': 1, 'private': 0}
{'}\n': 158, ';': 116, ')': 43, 'params': 42, ',': 18, 'obj': 128, '(': 10, 'invoke': 8, '.': 97, 'return': 119, 'param': 35, 'Method': 74, 'get': 98, '=': 94, 'Exception': 89, '': 6, ']': 34, '[': 33, 'Class': 32, 'Object': 20, 'static': 1, 'public': 0}
{'}\n': 90, '}': 85, ';': 33, 'stream': 37, 'return': 86, ')': 10, '(': 6, '>': 24, '<': 20, 'Reference': 19, 'Weak': 18, '': 2, 'new': 60, ',': 73, 'path': 9, 'put': 70, '.': 28, 'Stream': 4, 'Rotate': 3, '=': 26, '{': 11, 'null': 41, '==': 54, 'if': 51, ':': 48, 'get': 29, 'ref': 25, '?': 42, '!=': 40, 'synchronized': 12, 'create': 5, 'static': 1, 'public': 0}
{'}\n': 86, '}': 85, ';': 43, ')': 19, '(': 9, '.': 77, '{': 66, '++': 64, 'i': 39, 'max': 49, '<': 45, 'NUM': 42, '_': 41, '=': 40, 'int': 38, 'for': 36, 'Numbers': 14}
{'}\n': 34, ';': 33, ')': 11, '(': 4, 'null': 17, 'template': 7, '{': 12, 'String': 6, '': 1, 'public': 0}
{'}\n': 281, ';': 72, 'return': 273, ')': 19, '(': 70, ',': 11, 'buffer': 193, '.': 176, '': 1, 'len': 105, '+': 92, 'length': 55, '=': 66, 'int': 27, '{': 20}
{'}\n': 11, ';': 10, 'BOOL': 9, '_': 8, 'return': 7, '{': 6, ')': 5, '(': 4, 'can': 2, 'boolean': 1, 'public': 0}
{'}\n': 86, ';': 53, ')': 22, '(': 5, 'Exception': 78, '': 6, 'new': 74, 'throw': 73, 'BOOL': 52, '_': 32, 'return': 50, 'STR': 33, 'equals': 41, '.': 18, 's': 8, 'if': 37, 'String': 7, 'Boolean': 4}
{'}\n': 84, ';': 49, ')': 12, 'ID': 11, 'feature': 10, '(': 8, 'Set': 7, 'Is': 6, 'e': 5, '.': 24, 'super': 74, 'return': 29, '}': 72, 'Empty': 68, 'is': 67, '!': 40, '&&': 63, 'null': 34, '!=': 37, ':': 28, '': 1, 'Package': 23, 'Functionblock': 22, 'case': 20, 'name': 36, 'equals': 45, 'EDEFAULT': 32, 'NAME_': 31, '?': 35, '==': 33, 'NAME': 27, '{': 13, 'switch': 14, 'int': 9, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 127, '}': 101, ';': 27, ')': 11, '(': 6, 'Message': 121, 'get': 120, '.': 74, 'ex': 107, '+': 117, 'STR': 116, '_': 32, 'error': 113, 'LOGGER': 111, '': 7, '{': 12, 'IOException': 106, 'catch': 103, '++': 99, 'Number': 30, 'line': 29, ',': 93, 'put': 89, 'Line': 16, 'With': 15, 'Code': 4, 'null': 81, '!=': 80, 'read': 75, 'br': 52, '=': 17, 'while': 68, 'try': 66, 'String': 8, 'sr': 38, 'Reader': 37, 'Buffered': 50, 'new': 18, 'NUM': 33, 'int': 28, '>': 24, '<': 23, 'Map': 5, 'Hash': 21, 'Linked': 20, 'Source': 3, 'initialize': 2, 'void': 1, 'private': 0}
{'}\n': 16, ';': 15, ')': 14, '(': 13, 'U': 4, '': 1, 'public': 0}
{'}\n': 107, ';': 42, ')': 18, '(': 5, '.': 37, 'fields': 96, 'Key': 59, 'Filed': 58, 'object': 8, 'bag': 33, '<': 22, 'Set': 27, '': 6, 'String': 24, 'Generic': 73, 'to': 72, 'Field': 11, ':': 68, 'STR': 67, '_': 66, '?': 65, 'null': 47, '==': 46, '=': 34, '}': 54, '{': 19, 'if': 43, 'get': 38, 'Fields': 36, 'visited': 35, '>': 31, ',': 9, 'Map': 21, 'field': 17, 'Object': 7, 'private': 0}
{'}\n': 27, ';': 26, ')': 14, 'Runnable': 10, 'Info': 9, 'download': 11, '(': 6, '.': 19, 'List': 5, 'Completed': 4, 'm': 16, '{': 15, 'Download': 8, '': 7, 'public': 0}
{'}\n': 344, '}': 201, ';': 77, ')': 44, 'SHOULD': 340, '': 8, '.': 57, 'Occur': 337, 'Clause': 19, 'Boolean': 9, ',': 13, 'phrase': 302, '(': 6, 'add': 2, 'Query': 10, 'main': 11, '{': 49, 'null': 52, '!=': 321, 'if': 50, 'String': 108, 'to': 312, 'Phrase': 4, 'user': 110, 'parse': 306, 'pp': 228, '=': 88, 'NUM': 81, '_': 80, 'Size': 35, 'min': 293, 'BOOL': 280, 'Dismax': 286, 'make': 285, 'Filter': 277, 'Stop': 276, 'Remove': 275, 'set': 265, 'slop': 43, 'Slop': 267, 'fields': 31, 'Boosts': 257, 'Field': 28, 'get': 181, 'tiebreaker': 39, 'NAME': 240, 'FIELD_': 239, 'IMPOSSIBLE_': 238, 'Alias': 246, 'this': 235, 'Parser': 227, 'Edismax': 231, 'create': 230, 'Solr': 225, 'Extended': 224, 'STR': 152, 'append': 149, 'val': 188, 'j': 158, '+': 184, 'i': 124, 'clauses': 21, '++': 142, 'Index': 99, 'last': 97, '<=': 164, 'int': 33, 'for': 121, '-': 103, 'size': 69, '<': 17, 'Builder': 109, 'new': 114, 'shingle': 34, 'final': 7, '==': 53, 'return': 76, '||': 55, 'Empty': 59, 'is': 58, 'Error': 48, 'Syntax': 47, 'throws': 45, 'float': 38, '>': 20, 'Params': 29, 'Collection': 25, 'List': 16, 'Queries': 5, 'Shingled': 3, 'void': 1, 'protected': 0}
{'}\n': 27, ';': 26, ')': 7, '(': 23, 'Binary': 16, 'print': 14, '.': 13, 'Converter': 12, 'Datatype': 11, '': 1, 'return': 9, '{': 8, 'String': 2, 'public': 0}
{'}\n': 554, ';': 25, '(': 4, ')': 5, 'set': 46, '.': 14, 'get': 20, '_': 112, 'Apps': 36, '{': 6, 'void': 1}
{'}\n': 36, ';': 23, 'STR': 16, '_': 15, '(': 4, '.': 12, ')': 5, 'Name': 21, '+': 17, '': 7, 'Snapshot': 3}
{'}\n': 190, ';': 93, ')': 19, '(': 7, '.': 157, 'File': 66, 'log': 85, '': 28, ',': 44}
{'}\n': 136, ';': 61, 'return': 133, '}': 131, ')': 35, ',': 6, '(': 11, 'put': 123, '.': 80, '{': 86, 'if': 110, 'get': 105, '=': 50, 'String': 5, '': 1, '>': 9, '<': 3, 'Map': 2, 'for': 62, 'Hash': 53, 'new': 51, 'public': 0}
{'}\n': 21, ';': 17, 'this': 19, 'return': 18, ')': 7, 'STR': 15, '_': 14, '(': 6, 'add': 12, '.': 11, 'Fields': 10, 'delete': 3, '{': 8, 'Builder': 2, '': 1, 'public': 0}
{'}\n': 125, '}': 124, ';': 80, ')': 9, '(': 22, '.': 33, 'm': 52, 'if': 50, '': 31, '{': 10, 'void': 1}
{'}\n': 149, ';': 45, '=': 136, '}': 46, '{': 13, ')': 37, '': 9, '(': 32, 'Case': 53, 'Ignore': 52, 'equals': 51, '.': 50, 'token': 16, 'void': 1}
{'}\n': 102, ';': 101, ')': 57, '(': 52, 'size': 51, '.': 81, 'urls': 80, '{': 58, 'int': 41, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, 'n': 5, '(': 3, 'skip': 2, '.': 12, '{': 10, 'IOException': 9, '': 8, 'throws': 7, 'public': 0}
{'}\n': 55, ';': 35, ')': 18, ',': 11, '.': 40, '(': 6, 'radius': 17, '=': 23, '{': 19, '': 7}
{'}\n': 109, ';': 41, ')': 13, '(': 8, 'group': 18, '.': 23, '{': 14, 'Group': 11, 'public': 0}
{'}\n': 220, '}': 195, ';': 164, ')': 61, 'STR': 214, '_': 213, '(': 5, '{': 70, 'else': 196, '.': 126, 'protocol': 32, 'List': 116, 'null': 68, 'if': 63, '': 28, 'add': 3, 'void': 2}
{'}\n': 1365, '=': 50, ']': 26, '[': 25, ';': 53, '': 152, ')': 43, 'NUM': 52, '_': 51, '(': 4, 'if': 276, '{': 44, '.': 228, 'Math': 227, '*': 366, '/': 352, '}': 901, 'i': 686, '-': 406, 'double': 24, '<': 526, '+': 300, '>': 279, 'int': 15, 'for': 172, 'n': 16, ',': 23, 'void': 2, 'static': 1}
{'}\n': 222, ';': 84, ')': 35, '(': 21, 'String': 218, 'to': 217, '.': 44, 'buff': 87, '_': 56, 'append': 89, 'STR': 121, 'NUM': 132, '{': 36, 'if': 37, '': 14, 'public': 0}
{'}\n': 118, ';': 65, ')': 33, '(': 11, '.': 44, 'parameter': 22, ',': 24, '_': 54, '': 19, '{': 34, 'String': 20, 'public': 0}
{'}\n': 32, ';': 24, ')': 7, '(': 10, 'Self': 28, 'get': 27, 'return': 26, '}': 25, 'end': 4, '{': 8, 'Empty': 16, 'is': 15, '.': 14, 'Stack': 13, 'tag': 12, '!': 11, 'while': 9, 'T': 3, '': 2, 'final': 1, 'public': 0}
{'}\n': 438, ';': 305, 'Table': 69, '}': 426, ')': 304, ',': 58, '(': 101, '.': 411, 'table': 319, '': 12, 'new': 269, '{': 330, '>': 113, '<': 107, '=': 268, 'Hive': 19, 'Map': 119, 'Spec': 23, 'Object': 20}
{'}\n': 53, ';': 32, ')': 15, '(': 4, '.': 24, 'parse': 33, ',': 10, '': 5, 'Alignment': 20, 'Description': 14, 'encoded': 13, 'String': 12}
{'}\n': 125, ';': 101, ')': 75, '(': 44, 'stream': 68, '.': 81, '{': 76, '>': 11, 'T': 10, '': 9, '<': 8, 'Stream': 16, 'static': 1}
{'}\n': 1823, '}': 232, ';': 231, ')': 65, ',': 12, 'Axis': 37, 'range': 44, 'domain': 38, '(': 7, '.': 276, 'g2': 11, '{': 66, '==': 1346, 'if': 67, 'set': 1252, 'Area': 23, 'data': 22, '=': 274, '-': 593, 'x': 257, 'double': 251, 'y': 733, 'is': 670, '': 1, 'NUM': 483, '_': 482, '/': 600, 'item': 55, 'series': 52, 'YValue': 290, 'get': 71, 'dataset': 49, 'XValue': 278, 'return': 230, 'Item': 6, '!': 70, 'pass': 64, 'int': 51, 'State': 16, 'crosshair': 60, 'Crosshair': 58, 'XYDataset': 48, 'Value': 36, 'plot': 33, 'XYPlot': 32, 'info': 29, 'Info': 28, 'Rendering': 27, 'Plot': 26, 'D': 10, 'Rectangle2': 20, 'state': 17, 'Renderer': 15, 'XYItem': 14, 'Graphics2': 9, 'draw': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 37, ';': 36, ')': 13, 'value': 12, '(': 4, 'String': 7, 'to': 30, '.': 16, 'Double': 28, '': 6, ',': 9, 'name': 8, 'Field': 3, 'write': 2, '{': 21, 'IOException': 20, 'io': 17, 'java': 15, 'throws': 14, 'double': 11, 'void': 1, 'public': 0}
{'}\n': 192, ';': 68, '_': 153, '(': 6, '.': 57, '{': 12, 'NUM': 154, '-': 152, ')': 11, '=': 24, '}': 69, 'Level': 75, '>': 78, 'get': 74, 'creature': 56, 'if': 54, 'Creature': 31, '': 30, 'calculate': 3, 'public': 0}
{'}\n': 233, '{': 105, ')': 104, 'Props': 13, 'new': 52, 'Rep': 11, 'Rest': 10, 'Info': 9, 'Property': 8, '': 7, ',': 14, 'old': 12, '(': 6, 'void': 4, 'public': 3}
{'}\n': 156, ';': 62, ')': 19, '(': 7, 'Deleted': 18, 'Be': 17, 'To': 16, 'Name': 15, 'trait': 14, ',': 11, '.': 49, '': 1, 'String': 9, '=': 84, 'final': 80, '{': 79, '!': 65, 'if': 63, 'STR': 37, '_': 36, 'Exception': 23, 'throws': 20, 'guid': 10, 'Trait': 6, 'delete': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 54, ';': 52, ')': 12, '(': 4, 'add': 2, '.': 31, 'tables': 24, '{': 13, 'Table': 9, '': 8, 'void': 1, 'public': 0}
{'}\n': 131, '}': 113, ';': 31, ')': 12, '(': 4, 'Trace': 125, 'Stack': 124, 'print': 123, '.': 77, 'e': 118, '{': 13, '': 5, 'catch': 114, 'close': 109, 'Writer': 35, 'buffered': 36, 'STR': 90, '_': 28, 'writer': 44, 'Buffered': 34, 'new': 22, '=': 38, ',': 8, 'String': 6}
{'}\n': 48, '}': 28, ';': 27, 'null': 45, 'return': 19, ')': 15, '(': 7, 'Trace': 40, 'Stack': 39, 'print': 38, '.': 37, 'e': 33, '{': 16, 'Exception': 32, '': 2, 'catch': 29, 'u': 10, 'URL': 9, 'slurp': 4, 'try': 17, 'Exceptions': 6, 'URLNo': 5, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 39, ';': 28, ')': 5, '(': 4, 'loader': 20, '{': 6, 'if': 7, 'synchronized': 1}
{'}\n': 27, ';': 17, ')': 11, '(': 4, '{': 12, 'Of': 3, 'index': 2, 'int': 1, 'public': 0}
{'}\n': 241, ';': 90, ')': 19, 'count': 207, '+': 87, 'STR': 33, '_': 32, 'alias': 7, 'Uri': 12, 'type': 11, '(': 4, 'debug': 217, '.': 28, '_log': 215, 'DEBUG': 213, '': 5, 'if': 25, ',': 8, 'Count': 203, 'set': 93, '_parameters': 91, 'Parameter': 97, ':': 117, 'new': 80, 'Exception': 23, 'Message': 22, 'throw': 79, 'NUM': 38, '-': 36, '>': 35, 'Of': 30, 'index': 29, '||': 39, '{': 24, 'throws': 20, 'String': 6, 'Attribute': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 170, '}': 166, ';': 37, ')': 5, '(': 35, '.': 86, '{': 9, '': 1, ':': 51, '>': 19, 'Void': 18, '<': 13, 'Future': 15, 'for': 40, 'get': 115, 'ft': 63, 'add': 87, 'Task': 58, 'new': 23, '=': 22, 'final': 10, 'List': 12, 'Linked': 25, 'Exception': 8, 'throws': 6}
{'}\n': 202, ';': 166, '}': 167, 'params': 48, '=': 116, 'Params': 21, 'extra': 20, ')': 57, '_': 99, '(': 62, '.': 82, 'String': 35, '': 17}
{'}\n': 105, ';': 33, ')': 17, 'STR': 102, '_': 75, '(': 7, 'Exception': 99, 'Argument': 98, 'Illegal': 97, '': 1, 'new': 95, 'throw': 94, '}': 93, 'pop': 88, '.': 26, 'stack': 55, 'String': 2, 'to': 83, 'Integer': 53, 'return': 79, '{': 18, 'NUM': 76, '>': 54, 'size': 71, 'if': 67, 'Id': 4, 'max': 35, ',': 62, 'min': 20, 'Stack': 50, 'get': 57, '=': 22, '<': 51, 'Int': 28, 'int': 19, 'Range': 6, 'From': 5, 'user': 3}
{'}\n': 44, ';': 43, 'Started': 9, 'return': 20, ')': 18, '(': 15, 'is': 8, 'public': 0}
{'}\n': 274, ';': 59, ')': 40, 'FLAG': 186, '': 9, '.': 49, 'Helpers': 159, ',': 13, 'BYTE': 253, 'Size': 132, 'Operand': 175, 'STR': 57, '_': 56, 'NUM': 167, '+': 142, 'offset': 115, '(': 7, 'create': 161, 'Reil': 36, 'add': 155, 'instructions': 39, 'result': 22, '=': 104, 'final': 8, 'Null': 52, 'Not': 51, 'check': 50, 'Preconditions': 48, 'environment': 12, '{': 46, 'Exception': 45, 'Argument': 44, 'Illegal': 43, 'throws': 41, '>': 38, 'Instruction': 37, '<': 34, 'List': 33, 'long': 15, 'Environment': 11, 'ITranslation': 10, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 65, ';': 64, '(': 17, '.': 57, ')': 35, 'graph': 24, '': 20, 'Graph': 16, 'public': 0}
{'}\n': 58, '}': 54, ';': 53, ')': 11, '(': 5, 'type': 9, '.': 36, 'types': 35, '{': 12, '': 6, 'public': 0}
{'}\n': 37, ';': 21, ')': 11, 'Name': 10, 'resource': 9, '(': 6, 'Resource': 5, 'From': 29, 'Properties': 28, 'load': 3, 'All': 25, 'put': 24, '.': 17, 'clear': 18, '{': 15, 'IOException': 14, '': 7, 'throws': 12, 'String': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 52, '}': 28, '{': 12, ')': 11, 'e': 33, '': 7, '(': 6, 'catch': 29, ';': 27, 'close': 24, '.': 23, 'in': 10, 'null': 17, '!=': 16, 'if': 13, 'Stream': 9, 'Input': 8, 'Close': 4, 'safe': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 66, ';': 65, 'transaction': 44, 'return': 36, '{': 20, ')': 6, '(': 5, 'Transaction': 4, 'private': 0}
{'}\n': 46, ';': 15, 'ch': 14, ')': 8, 'NUM': 37, '_': 36, '-': 35, '(': 4, 'Of': 30, 'index': 29, '.': 28, 'skip': 2, 'while': 25, '}': 24, 'read': 20, '=': 19, '{': 12, 'do': 16, 'char': 13, 'IOException': 11, '': 5, 'throws': 9, 'String': 6, 'public': 0}
{'}\n': 179, ';': 27, 'return': 175, 'hash': 59, ')': 18, '.': 117, '^=': 60, 'NUM': 47, '_': 46, '=': 31, 'int': 29, '{': 19, 'key': 15, '(': 7, 'public': 3}
{'}\n': 79, '}': 78, ';': 27, ')': 7, 'STR': 58, '_': 57, '(': 6, 'd': 55, '.': 37, 'Timber': 53, '': 28, ',': 59, '{': 8, 'void': 1, 'public': 0}
{'}\n': 69, ';': 36, ')': 22, 'element': 16, '(': 4, 'Child': 40, 'append': 39, '.': 29, 'Element': 3, 'parent': 11, 'value': 21, '': 5, 'Node': 46, 'Text': 45, 'create': 2, 'doc': 7, 'Name': 17, '=': 27, '{': 23, ',': 8, 'String': 15, 'Document': 6, 'void': 1, 'private': 0}
{'}\n': 192, '}': 191, ';': 43, ')': 22, '(': 5, '.': 38, '{': 23, 'Time': 173, 'Updated': 172, 'App': 171, 'last': 170, 'NUM': 151, '_': 150, 'tag': 14, 'List': 25, '': 7, 'Empty': 51, 'is': 50, 'Seen': 31, 'if': 44, 'get': 39, 'Map': 37, 'Last': 35, '=': 33, '>': 29, 'Long': 28, '<': 26, 'String': 13, ',': 11, 'scope': 10, 'int': 9, 'Scope': 8, '@': 6, 'static': 1, 'public': 0}
{'}\n': 129, '}': 76, ';': 25, ')': 11, '(': 4, 'Antecedent': 124, 'make': 123, '{': 12, '!=': 118, '.': 20, 'variable': 1, 'if': 45, 'set': 65, 'else': 77, 'oper': 10, '=': 17, 'row': 6, 'get': 21, 'List': 19, '_variable': 18, 'Variable': 15, 'Conditional': 14, '': 8, 'String': 9, ',': 7, 'int': 5, 'Changed': 3, 'void': 0}
{'}\n': 43, ';': 42, ')': 12, '(': 4, '+': 23, 'STR': 25, '_': 24, 'name': 7, 'Header': 3, '{': 13, '': 5, ',': 8, 'String': 6, 'add': 2, 'public': 0}
{'}\n': 95, ';': 47, ')': 32, 'redis': 82, '.': 71, '(': 56, '': 17, '{': 33, '>': 30, '<': 27, 'public': 0}
{'}\n': 19, ';': 18, ')': 7, '.': 13, 'return': 9, '{': 8, '': 4, '(': 3, 'Hidden': 2, 'is': 1, 'boolean': 0}
{'}\n': 32, ';': 31, ')': 15, '.': 26, 'Directory': 14, 'Or': 13, 'file': 12, '(': 5, 'Recursive': 4, 'delete': 3, '{': 16, 'File': 11, '': 10, 'static': 1, 'public': 0}
{'}\n': 200, ';': 199, ')': 13, 'Bar': 4, 'JTool': 60, '': 9, '(': 8, 'get': 54, '.': 53, 'c': 12, '{': 14, 'boolean': 1}
{'}\n': 303, ';': 41, 'return': 300, '}': 103, '(': 10, '.': 36, ')': 26, 'Freq': 89, 'doc': 105, ',': 15, 'idf': 219, '=': 34, '{': 30, 'else': 264, 'score': 215, 'word': 63, '': 1, 'new': 113, 'if': 85, '*': 218, 'tf': 74, 'float': 195, 'continue': 101, 'Doc': 156, 'NUM': 92, '_': 91, 'Name': 118, 'field': 117, 'Term': 88, 'ir': 35, 'int': 31, 'min': 87, '<': 4, '&&': 93, '>': 7, 'x': 83, 'get': 78, 'words': 52, 'Set': 68, 'key': 67, ':': 64, 'String': 62, 'for': 59, 'size': 54, 'Docs': 33, 'num': 32, 'IOException': 29, 'throws': 27, 'Queue': 3, 'create': 8, 'Priority': 2, 'private': 0}
{'}\n': 94, '}': 93, ';': 46, ')': 15, '(': 5, 'read': 42, '.': 41, 'ois': 10, '=': 39, 'Exception': 24, 'Found': 23, 'Not': 22, 'Class': 21, '': 6, 'throws': 16, 'Stream': 9, 'Input': 8, 'Object': 4, 'void': 2}
{'}\n': 42, ';': 41, ')': 28, 'status': 8, '(': 6, 'exit': 3, '.': 32, 'System': 31, '': 30, '{': 29, 'int': 7}
{'}\n': 133, ';': 105, '_': 130, ')': 26, '(': 36, '.': 34, '': 32, 'P2': 15, 'Math': 33, '=': 31, 'double': 28, '{': 27, ',': 11, 'P1': 10}
{'}\n': 156, ';': 30, ')': 9, '(': 4, '.': 24, '': 6, '=': 19, 'challenge': 8, '_': 55, '+': 57, 'STR': 56, 'Exception': 14, 'Challenge': 3, 'Malformed': 12, 'new': 49, 'throw': 48, '{': 15, 'Name': 42, 'Scheme': 26, 'get': 40, 'Case': 38, 'Ignore': 37, 'equals': 36, 's': 18, '!': 33, 'if': 31, 'extract': 25, 'Parser': 23, 'Auth': 21, 'String': 7, 'throws': 10, 'final': 5, 'process': 2, 'void': 1, 'public': 0}
{'}\n': 42, ';': 41, ')': 28, 'p': 11, ',': 17, '(': 7, 'Pow': 35, 'mod': 34, '.': 33, 'g': 21, 'return': 30, '{': 29, 'Integer': 4, 'Big': 3, '': 2, 'calculate': 5, 'static': 1, 'public': 0}
{'}\n': 216, ';': 120, 'return': 213, ')': 59, '+': 79, 'STR': 78, '_': 77, '(': 6, '.': 89, 's_log': 203, 'is': 197, '': 7, 'if': 191, 'get': 177, 'cd': 175, 'set': 159, 'Name': 58, 'trx': 57, ',': 10, 'ID': 17, 'Element_': 34, 'Cost': 33, 'M_': 32, 'Org_': 144, 'AD_': 143, 'as': 140, 'Instance_': 102, 'Set': 101, 'Attribute': 100, '=': 125, 'MCost': 122, '{': 60, 'String': 56, 'Decimal': 39, 'Big': 38, 'int': 11, 'static': 1, 'public': 0}
{'}\n': 126, '}': 125, ';': 111, ')': 10, '(': 5, 'undo': 33, '.': 35, '{': 11, 'if': 12, 'Undo': 3, 'void': 1, 'public': 0}
{'}\n': 95, ';': 38, '(': 17, 'problem': 74, '.': 66, '{': 20, ')': 19, '': 9, 'for': 55, 'public': 0}
{'}\n': 106, ';': 33, ')': 14, 'List': 2, 'snapshot': 22, '(': 9, 'unmodifiable': 99, '.': 41, 'Collections': 97, '': 1, 'return': 95, 'Sort': 89, 'tim': 88, 'Util': 86, 'Collection': 85, '}': 83, 'entry': 65, 'Snapshot': 5, 'Progress': 40, 'in': 75, 'add': 73, '{': 15, 'entries': 45, ':': 66, 'Entry': 43, 'In': 39, 'Snapshots': 38, 'for': 56, 'null': 53, ',': 52, 'Name': 13, 'repository': 12, 'current': 47, '=': 24, '>': 6, '<': 3, 'new': 25, 'String': 11, 'public': 0}
{'}\n': 11, ')': 9, 'method': 8, 'Method': 6, '': 5, '(': 4, 'Static': 3}
{'}\n': 96, '}': 95, ';': 63, ')': 36, ',': 12, '': 1, '+': 77, 'h': 31, 'w': 28, 'y': 25, 'x': 22, '(': 8, '.': 54, 'g': 11, 'Placement': 15, 'tab': 14, 'Selected': 35, 'is': 34, '{': 37, 'boolean': 33, 'int': 13, 'Index': 19, 'Graphics': 10, 'Tab': 6, 'paint': 5, 'void': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 110, ';': 89, ')': 36, '.': 101, '': 6, '}': 90, '(': 39, 'Ref': 8, 'Bytes': 7}
{'}\n': 149, ';': 26, ')': 15, 'Interval': 14, 'include': 13, ',': 11, 'dataset': 10, '(': 6, 'Bounds': 5, 'find': 3, '.': 59, 'Utilities': 114, 'Dataset': 113, '': 1, 'return': 24, '}': 27, 'Keys': 45, 'Series': 35, 'visible': 43, 's': 69, 'Key': 103, 'get': 30, 'add': 97, '{': 16, 'Visible': 34, 'is': 85, 'if': 17, '++': 80, 'Count': 56, 'series': 55, '<': 75, 'NUM': 72, '_': 71, '=': 46, 'int': 54, 'for': 66, 'List': 42, 'Array': 49, 'new': 47, 'Only': 36, 'Includes': 33, 'Data': 31, 'null': 21, '==': 20, 'boolean': 12, 'Range': 2, 'protected': 0}
{'}\n': 18, ';': 17, ')': 6, '(': 5, '.': 9, '{': 7, 'Shutdown': 4}
{'}\n': 27, ';': 26, ')': 8, '(': 4, 'DN': 22, 'get': 21, '.': 20, 'role': 7, 'Role': 3, '{': 15, 'SSOException': 14, '': 5, ',': 12, 'AMException': 11, 'throws': 9, 'AMRole': 6, 'void': 1, 'public': 0}
{'}\n': 120, ';': 37, ')': 6, '(': 5, ',': 103, 'write': 2, '.': 32, '=': 67, '{': 10, 'if': 58, 'Styles': 4, 'IOException': 9, '': 8, 'throws': 7, 'void': 1, 'protected': 0}
{'}\n': 74, ';': 51, ')': 31, '(': 23, 'Array': 38, 'Byte': 37, 'to': 67, '.': 66, 'b': 41, '': 27, 'new': 43, ',': 56, 'Stream': 40, 'Output': 39, '=': 42, '{': 35, 'static': 1, 'public': 0}
{'}\n': 146, ';': 21, ')': 7, 'properties': 14, '(': 6, 'Test': 28, 'Comparison': 140, 'do': 139, 'STR': 35, '_': 34, ',': 33, 'REQUESTS': 133, 'LOCK_': 132, 'SORT_': 131, '': 9, '.': 23, 'Options': 29, 'Property': 25, 'set': 24, 'LOCKS': 81, 'PREDECLARE_': 114, 'MAX_': 97, 'MIN_': 80, 'NRESOURCES': 64, 'NTASKS': 48, 'NTHREADS': 32, 'Properties': 13, 'new': 16, '=': 15, '{': 11, 'Exception': 10, 'throws': 8, 'Locking_serialized_low': 4, 'Resource': 3, 'test_single': 2, 'void': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 18, '(': 6, 'run': 22, '.': 21, 'runnable': 11, 'Runnable': 10, '': 9}
{'}\n': 99, ';': 77, ')': 11, '': 7, '}': 78, 'source': 75, '(': 6, 'parse': 73, '.': 72, 'parser': 71, '{': 18, 'try': 36, 'IOException': 17, 'throws': 12}
{'}\n': 373, ';': 112, ')': 47, ',': 358, '(': 33, '.': 133, '}': 259, '_': 82, '{': 64, 'if': 161, 'NUM': 83, '=': 68, 'String': 114, '': 13}
{'}\n': 182, ';': 17, ')': 5, '(': 4, 'signum': 177, '.': 97, 'result': 93, ',': 67, 'NUM': 15, '_': 14, 'Equals': 167, 'assert': 149, '}': 16, ']': 11, 'i': 133, '[': 10, 'Bytes': 9, 'r': 30, '==': 157, 'res': 105, 'True': 150, '{': 6, '++': 146, 'length': 116, '<': 139, '=': 12, 'int': 40, 'for': 130, 'Array': 126, 'Byte': 125, 'to': 124, 'byte': 7, 'new': 60, 'Number': 58, 'b': 19, 'a': 8, 'Integer': 56, 'Big': 55, '': 54, 'Sign': 42, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 63, ';': 53, 'this': 61, 'return': 60, ')': 15, 'Annotation': 57, '(': 9, 'add': 7, 'Name': 30, 'Class': 8, '.': 26, '{': 16, '': 1, 'Instance': 6, 'Bug': 5, 'public': 3, 'Nonnull': 2, '@': 0}
{'}\n': 34, ';': 33, ')': 10, '(': 25, 'format': 9, 'Format': 4, '': 7}
{'}\n': 90, ';': 24, 'Case': 19, 'return': 86, '}': 62, ')': 10, '(': 6, 'Exception': 15, 'Format': 14, 'Number': 13, '': 7, 'new': 77, 'throw': 76, '{': 16, 'NUM': 39, '_': 38, '!=': 71, 'length': 26, '.': 29, 's': 9, 'if': 34, 'else': 63, ',': 57, 'Int': 54, 'parse': 3, 'Integer': 51, '=': 20, '<=': 42, '&&': 40, '>=': 37, 'int': 2, 'UNDEFINED': 23, 'MAP_': 22, 'throws': 11, 'String': 8, 'Map': 5, 'static': 1, 'public': 0}
{'}\n': 55, '}': 38, ';': 29, 'break': 51, ')': 7, '(': 6, 'interrupt': 47, '{': 8, 'e': 44, 'Exception': 43, 'Interrupted': 13, '': 1, 'catch': 39, 'ref': 22, 'remove': 26, '.': 25, '_queue': 24, '=': 23, 'try': 18, 'is': 12, '!': 11, 'while': 9, 'run': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 50, ';': 28, ')': 27, '(': 6, '.': 42, 'Playlist': 4, '': 7}
{'}\n': 236, ';': 117, '_': 71, '}': 208, 'return': 204, ')': 45, 'STR': 72, '(': 48, '.': 51, '+': 73, 'info': 69, 'log': 67, '{': 56, 'exists': 52, '!': 49, 'if': 47, 'file': 43, 'File': 36, '': 40}
{'}\n': 63, ';': 60, ')': 59, 'Row': 7, 'Add': 46, '(': 8, '': 9, ',': 16, 'public': 0}
{'}\n': 75, ';': 52, 'Type': 12, 'Method': 11, 'digest': 33, 'return': 70, ')': 19, 'Algorithm': 58, 'Hash': 66, 'default': 65, '.': 2, 'Playlist': 62, 'Composition': 61, '': 9, '(': 18, 'set': 57, 'Digest': 10, 'schemas': 5, 'smpte_ra': 3, 'org': 1, 'new': 37, '=': 36, '{': 20, 'Default': 14, 'build': 13, 'public': 0}
{'}\n': 77, ';': 47, 'partition': 35, 'return': 74, '}': 73, ')': 27, 'vertex': 52, '(': 19, 'add': 68, '.': 60, 'Sampled': 7, 'is': 61, 'if': 57, '{': 28, 'vertices': 26, ':': 53, 'V': 4, '': 3, 'for': 48, '>': 9, '<': 2, 'Set': 11, 'Hash': 39, 'new': 37, '=': 36, 'Collection': 21, 'Partition': 18, 'create': 16, 'Vertex': 8, 'extends': 5, 'static': 1, 'public': 0}
{'}\n': 26, ';': 17, 'graph': 10, ')': 12, '(': 15, '{': 13, '': 6, 'public': 0}
{'}\n': 163, ';': 68, ')': 59, '(': 17, 'get': 126, '.': 73, 'if': 101, 'i': 64, 'At': 96, 'element': 95, 'Instance': 84, 'Bean': 83, '': 25, '=': 65, '{': 81, '++': 79, 'size': 74, '<': 27, 'NUM': 67, '_': 66, 'int': 63, 'for': 61, '>': 30, 'boolean': 12, 'public': 0}
{'}\n': 172, ';': 132, 'return': 169, ')': 21, '(': 15, '.': 144, 'add': 145, 'args': 112, '>': 11, '': 5, '<': 7, 'List': 6, 'Array': 58, 'new': 47, '=': 46, '{': 22}
{'}\n': 49, ';': 47, ')': 28, '(': 23, 'make': 2, '.': 36, '{': 29, 'void': 1, 'public': 0}
{'}\n': 40, '}': 39, ';': 38, ')': 18, 'count': 17, ',': 12, 'offset': 14, 'node': 11, '(': 6, 'Text': 5, 'Ranges': 28, 'notify': 27, '{': 19, 'null': 24, '!=': 23, 'ranges': 22, 'if': 20, 'int': 13, 'Impl': 10, 'Data': 9, 'Character': 8, '': 1, 'void': 3, 'Override': 2, '@': 0}
{'}\n': 106, ';': 104, ')': 5, '': 1, '.': 35, 'Swarm': 57, '(': 4, 'this': 29, '{': 28}
{'}\n': 26, ';': 25, '.': 15, 'topic': 7, '{': 13, ')': 12, '': 1, 'String': 6, '(': 4, 'public': 0}
{'}\n': 100, ';': 99, ')': 34, 'class': 24, '(': 6, 'From': 47, 'Assignable': 46, 'is': 8, '': 19, 'boolean': 2}
{'}\n': 199, '}': 162, ';': 24, ')': 16, 'pstmt': 44, '(': 6, 'close': 191, '.': 48, '{': 17, 'e': 167, ',': 53, 'sql': 52, 'SEVERE': 178, '': 25, 'Level': 175, 'log': 172, 'Exception': 166, 'catch': 163, 'rs': 77, 'next': 90, 'Query': 82, 'execute': 81, '=': 45, 'ID': 72, 'NUM': 67, '_': 66, 'Int': 64, 'set': 63, 'Name': 56, 'Trx': 55, 'get_': 54, 'Statement': 50, 'prepare': 49, 'DB': 47, 'try': 42}
{'}\n': 88, '}': 78, '{': 11, ')': 7, 'e': 83, '': 81, '(': 6, 'catch': 79, ';': 77, 'close': 5, '.': 73, 'Socket': 39, 'try': 44, 'null': 41, '!=': 40, 'if': 36, 'void': 4, 'public': 3}
{'}\n': 88, ';': 87, ')': 16, '(': 6, 'get': 32, '.': 27, 'b': 15, ',': 11, 'a': 10, 'Math': 26, '': 7, 'X': 33, 'max': 28, 'return': 18, '{': 17, 'static': 1}
{'}\n': 112, ';': 36, ')': 21, 'self': 10, '(': 7, 'Streams': 107, 'close': 106, '}': 59, '{': 22, 'ignore': 65, 'Exception': 64, 'Interrupted': 63, '': 8, 'catch': 60, 'For': 4, 'wait': 3, '.': 54, 'try': 51, 'join': 55, 'terr': 39, 'tout': 25, 'error': 20, ',': 11, 'Stream': 30, 'Error': 43, 'Process': 5, 'consume': 27, '=': 26, 'Thread': 24, 'output': 15, 'Output': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 215, ';': 39, 'null': 193, 'return': 74, ')': 17, '!=': 192, '.': 67, '=': 28, '(': 11, '}': 77, 'e': 27, '{': 18, 'k': 16, '==': 69, 'key': 68, 'if': 63, '>': 9, 'V': 8, '': 7, '<': 6, 'Node': 5, 'long': 15, ',': 14, 'h': 13, 'int': 12, 'find': 10}
{'}\n': 231, ';': 55, 'return': 227, '}': 80, ')': 40, ',': 13, 'edge': 32, 'Area': 21, 'data': 26, 'plot': 20, 'g2': 12, '(': 8, 'Label': 164, 'get': 162, 'draw': 7, '=': 140, '{': 41, 'else': 199, 'Attributed': 163, 'null': 168, '!=': 167, 'if': 56, 'Labels': 143, 'cursor': 15, 'Line': 60, 'Axis': 5, 'Visible': 61, 'is': 58, 'State': 6, '': 1, 'new': 48, 'Info': 37, 'Rendering': 36, 'Plot': 35, 'Edge': 31, 'Rectangle': 30, 'D': 11, 'Rectangle2': 18, 'double': 14, 'Graphics2': 10, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 141, ';': 42, ')': 15, '(': 35, '.': 32, ',': 37, 'Datum': 7, '': 1, 'new': 114, '=': 84, 'URLCrawl': 6, '>': 8, '<': 4, 'List': 3, 'Array': 2}
{'}\n': 60, ';': 59, ')': 28, '(': 27, 'Float': 26, 'next': 15, '.': 34, 'rand': 33, 'float': 10, 'static': 1, 'public': 0}
{'}\n': 92, ';': 60, ')': 19, 'category': 18, '(': 15, '.': 71, '': 16, '}': 61, 'if': 42, '{': 20, 'String': 17, 'Category': 13}
{'}\n': 144, ';': 96, ')': 28, '': 13, '(': 40, '.': 36, 'get': 37, 'm': 22, '=': 65, 'Types': 51, 'Parameter': 50, 'Method': 10}
{'}\n': 102, ';': 100, ')': 40, '(': 39, 'Seconds': 21, '.': 55, 'public': 0}
{'}\n': 64, ';': 10, 'null': 16, '=': 55, 'Listener': 60, 'm': 13, 'Service': 38, ')': 4, '(': 3, '{': 5, '!=': 15, '_': 24, 'if': 11, 'void': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 10, 'listener': 9, '(': 5, '.': 13, 'listeners': 12, '{': 11, 'Listener': 4, 'CSPState': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 55, 'message': 16, '(': 20, ')': 17, '&&': 24, '!=': 22, 'if': 19, '{': 18, 'String': 15, '': 14, ',': 12, 'Text': 5, 'public': 0}
{'}\n': 101, ';': 91, '}': 92, ')': 41, 'get': 74, '.': 55, '(': 20, 'for': 44, '': 31, 'is': 18}
{'}\n': 65, ';': 20, ')': 19, '.': 14, '(': 4, '_': 40, 'void': 1, 'public': 0}
{'}\n': 35, ';': 34, ')': 5, '(': 4, 'File': 21, '{': 16}
{'}\n': 107, ';': 82, '(': 19, '>': 5, 'T': 4, '': 3, '<': 2, 'List': 7, 'Array': 52, 'new': 50, '{': 30, 'else': 84, '}': 83, ')': 29, 'null': 44, 'if': 40, 'static': 1, 'public': 0}
{'}\n': 102, ';': 101, ')': 11, 'listener': 48, '(': 6, '.': 42, 'listeners': 32, '{': 12, '': 7}
{'}\n': 329, '{': 308, ')': 140, 'String': 263, '': 1, 'Variable': 223, 'Path': 222, '@': 0, '<': 203, 'Entity': 202, 'Response': 201, 'public': 199, '(': 4, 'VALUE': 42, 'JSON_': 41, 'APPLICATION_': 40, '.': 25, 'Type': 37, 'Media': 36, '=': 15, 'produces': 32, ',': 18, 'STR': 17, '_': 16, 'value': 14, 'Mapping': 3, 'Request': 2}
{'}\n': 349, ';': 27, ')': 8, '(': 25, '': 4, '.': 20, '_': 144, 'new': 264, '=': 126, 'ext': 213, 'Value': 204, 'Extension': 203, 'get': 202, ']': 109, '[': 108, 'byte': 195, '{': 9, 'Exts': 81, '>': 77, '<': 74, 'String': 14}
{'}\n': 20, ';': 16, 'this': 18, 'return': 17, ')': 6, 'STR': 14, '_': 13, '(': 5, 'add': 11, '.': 10, 'Fields': 9, 'delete': 3, '{': 7, 'Builder': 2, '': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 7, 'limit': 3, '(': 4, 'String': 34, 'to': 33, '.': 23, 'Integer': 26, '': 1, 'field': 28, '>': 27, '<': 13, 'Field': 22, ':': 20, 'LIMIT': 19, 'NO_': 18, '?': 16, 'NUM': 15, '_': 14, 'return': 9, '{': 8, 'int': 5, 'Query': 2, 'public': 0}
{'}\n': 56, ';': 29, ')': 10, '(': 5, 'exists': 41, '.': 40, 'file': 3, 'null': 34, 'File': 19, '=': 21, '': 18, '{': 11, 'Exists': 4, 'boolean': 2, 'public': 0}
{'}\n': 142, ';': 115, ')': 114, '(': 9, 'STR': 61, '_': 35, '.': 50, '': 101, 'payment': 47, ',': 62, 'static': 1}
{'}\n': 97, '}': 71, ';': 70, ')': 69, '(': 7, 'Exception': 77, '': 2, 'new': 82, 'throw': 81, '{': 49, 'catch': 72, 'Charset': 30, 'Bytes': 58, 'return': 50, 'try': 48, 'Name': 22, ',': 11, 'String': 3, 'convert': 4, 'static': 1, 'public': 0}
{'}\n': 112, '}': 91, ';': 58, ')': 72, ',': 84, 'NUM': 56, '_': 55, 'buffer': 50, '(': 63, 'write': 81, '.': 68, 'os': 34, '{': 46, 'read': 69, 'is': 20, '=': 51, 'while': 62, 'int': 59, ']': 49, '[': 48, 'byte': 47, 'new': 52, 'try': 45, '': 17, 'Stream': 19, 'Output': 32, 'Input': 18, 'copy': 3, 'void': 2}
{'}\n': 308, ';': 49, 'name': 8, '=': 257, '.': 223, '}': 62, ')': 9, 'STR': 172, '_': 116, '(': 5, '': 6, '{': 14, 'new': 36, 'throw': 35, 'null': 20, '==': 19, 'if': 15, 'String': 7, 'public': 0}
{'}\n': 254, ';': 53, ')': 31, 'this': 37, ',': 10, 'Y': 62, 'delta': 190, '+': 81, 'Translate': 236, 'Model': 155, 'sample': 168, 'X': 40, '(': 7, 'Point': 232, '': 1, 'new': 44, 'height': 18, 'width': 15, 'y0': 24, 'x0': 21, 'Rectangle': 219, 'Buffer': 215, 'data': 214, 'sm': 156, 'Raster': 3, 'Byte': 208, 'return': 205, 'y': 12, '-': 194, '=': 167, 'int': 8, 'x': 9, 'else': 181, 'List': 30, 'band': 29, 'Sample': 154, 'Subset': 172, 'create': 4, '.': 38, 'null': 163, '!=': 162, 'if': 33, '}': 54, 'STR': 51, '_': 50, 'Exception': 48, 'Format': 47, 'throw': 43, '{': 32, 'min': 39, '>': 91, '||': 86, '<': 36, ']': 28, '[': 27, 'Child': 6, 'Writable': 2, 'public': 0}
{'}\n': 31, 'buf': 10, ')': 24, '(': 4, '.': 21, '': 7, 'Buffer': 3, 'void': 1, 'private': 0}
{'}\n': 105, ';': 102, ')': 30, 'event': 12, '(': 4, 'Event': 3, 'fire': 97, '.': 71, '{': 31, '': 5, 'void': 1, 'public': 0}
{'}\n': 138, ';': 34, 'return': 134, '}': 132, '=': 40, '{': 52, ')': 51, '(': 12, '.': 60, 'null': 33, '==': 102, 'if': 98, 'get': 84, '_': 72, '!=': 69, 'Psi': 6, '': 1, ':': 49, 'for': 43, 'File': 7}
{'}\n': 46, ';': 45, ')': 16, 'string2': 11, '(': 4, 'equals': 38, '.': 24, '!': 32, 'string1': 7, '&&': 22, 'return': 18, '{': 17, 'String': 6, '': 5, ',': 8}
{'}\n': 114, '}': 98, ';': 33, ')': 17, 'con': 24, '(': 4, 'Quietly': 102, 'close': 101, 'cstmt': 37, '{': 21, 'finally': 99, 'execute': 94, '.': 46, 'Size': 16, 'required': 15, ',': 7, 'NUM': 63, '_': 62, 'Int': 60, 'set': 59, 'Content': 12, 'base': 11, 'Bytes': 71, 'id': 6, 'BLOB': 54, 'BINARY_': 53, 'EXECUTE_': 51, '': 19, 'Call': 48, 'prepare': 47, '=': 25, 'try': 41, 'null': 39, 'Statement': 36, 'Callable': 35, 'Manager': 30, 'Driver': 29, 'Via': 28, 'Connection': 23, 'get': 26, 'SQLException': 20, 'throws': 18, 'int': 5, ']': 10, '[': 9, 'byte': 8, 'Blob': 3, 'protected': 0}
{'}\n': 85, ';': 83, ')': 42, '(': 29, '.': 71, 'results': 67, '{': 43, 'length': 20, 'int': 19, 'public': 0}
{'}\n': 19, ';': 15, 'this': 17, 'return': 16, ')': 6, 'STR': 13, '_': 12, '(': 5, 'append': 10, '.': 9, 'statement': 8, '{': 7, 'Null': 4, 'is': 3, 'Statement': 2, '': 1, 'public': 0}
{'}\n': 17, ';': 10, ')': 4, '(': 3, 'clear': 2, '.': 12, 'Queue': 7, 'process': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 357, ';': 318, ')': 33, '(': 25, '.': 71, 'm': 77, 'Station': 70, ',': 92, 'SEARCHED': 219, 'TYPE_': 218, 'STATION_': 217, '': 67, 'Radio': 69, 'Fm': 68, 'Name': 173, 'Context': 78, 'Db': 75, 'To': 74, 'update': 72, '{': 34, 'Favorite': 23, 'void': 1}
{'}\n': 222, '}': 212, ';': 42, ')': 15, '(': 31, 'unlock': 217, '.': 24, 'lock': 47, '{': 16, 'finally': 213, 'Elements': 194, 'new': 193, 'Array': 26, 'set': 201, ',': 134, 'NUM': 83, '_': 82, 'cs': 21, 'arraycopy': 186, 'System': 184, '': 6, '+': 179, 'elements': 65, ']': 20, '[': 19, 'Of': 131, '=': 22, 'length': 77, 'len': 73, 'int': 72, 'get': 67, 'Object': 18, 'try': 59, 'this': 49, 'Lock': 46, 'Reentrant': 45, 'final': 43, 'to': 25, 'c': 14, '>': 13, 'E': 12, 'extends': 10, '?': 9, '<': 8, 'Collection': 7, 'All': 3, 'add': 2, 'public': 0}
{'}\n': 19, ';': 18, ')': 9, '(': 8, 'iterator': 15, '.': 14, 'm_': 12, 'return': 11, '{': 10, '>': 6, 'Capability': 5, '': 1, '<': 3, 'Iterator': 2, 'public': 0}
{'}\n': 850, ';': 849, ')': 702, ',': 216, '(': 133, 'get': 803, 'STR': 786, '_': 785, 'format': 754, '.': 753, 'String': 208, '': 198, '=': 711, '>': 672, '<': 669, 'Ticket': 83, 'void': 2, 'public': 0}
{'}\n': 339, ';': 134, 'return': 331, ')': 10, '(': 6, '': 7, '_': 46, 'NUM': 47, 'str': 9, 'Int': 180, 'parse': 4, '.': 16, 'Integer': 177, '=': 138, 'int': 136, 'STR': 117, 'At': 83, 'char': 82, '==': 38, 'length': 29, '{': 11, 'String': 8, 'public': 0}
{'}\n': 65, 'error': 58, ')': 36, '': 16, '(': 15}
{'}\n': 82, '}': 59, ';': 58, 'Exception': 73, '': 7, ')': 12, '_': 43, '(': 6, 'Code': 51, 'Response': 50, 'get': 49, '.': 48, 'Connection': 24, 'url': 10, 'STR': 44}
{'}\n': 23, ';': 22, ')': 11, 'source': 10, '(': 6, 'add': 18, '.': 17, 'SOURCES': 16, 'RESOURCE_': 15, 'ALL_': 14, '': 7, '{': 12, 'Source': 5, 'Resource': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 24, ';': 15, ')': 5, '(': 4, 'Changes': 3, 'commit': 2, '.': 10, 'Panel': 9, '{': 6, 'void': 1, 'private': 0}
{'}\n': 168, ';': 89, 'return': 165, '}': 131, ')': 9, ',': 160, '(': 3, 'itera_connect': 157, 'if': 69, '.': 43, 'Abit': 75, 'Brd': 74, '': 61, '=': 57, 'instanceof': 72, '{': 10, 'boolean': 1, 'private': 0}
{'}\n': 175, ';': 52, 'return': 171, '}': 131, ')': 11, ',': 126, '(': 6, 'View': 107, '{': 12, '.': 17, 'if': 94, 'm': 105, 'NUM': 100, '_': 99, '': 7, 'Event': 5, 'Motion': 8, 'get': 18, 'ev': 10, '=': 45, ':': 74, 'ACTION_': 72, 'case': 66, '==': 32, 'boolean': 1, 'public': 0}
{'}\n': 31, ';': 20, ')': 10, 'Class': 7, 'target': 8, '(': 4, 'add': 2, '.': 14, 'Classes': 23, 'return': 21, 'this': 18, '{': 11, 'Owl': 6, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 56, ';': 55, ')': 54, 'Index': 21, 'column': 13, '(': 49, '.': 46, 'int': 19, '': 6}
{'}\n': 25, ';': 24, 'Enabled': 21, 'DWMComposition': 20, 'is': 19, 'return': 12, '{': 11, ')': 10, '(': 9, 'public': 3}
{'}\n': 310, '}': 106, ';': 18, ')': 9, '(': 3, 'close': 111, '.': 26, 'check': 229, '{': 13, 'finally': 107, 'commit': 102, 'val': 262, ',': 87, 'NUM': 96, '_': 43, 'Equals': 285, 'assert': 220, '!=': 274, '&&': 277, 'if': 271, 'Value': 21, 'int': 261, 'lit': 249, '=': 24, 'pred': 50, 'subj': 36, 'Literal': 93, 'read': 251, '': 5, 'level': 8, 'begin': 77, 'try': 73, 'Connection': 63, 'get': 27, 'store': 16, 'Failed': 222, 'Not': 221, 'join': 210, 't1': 152, 't2': 175, 'start': 121, 'vf': 23, 'observed': 138, 'By': 155, 'increment': 154, 'Thread': 151, 'Latch': 120, 'Down': 119, 'Count': 118, 'new': 123, 'final': 4, 'prep': 64, 'create': 40, 'add': 84, 'STR': 44, 'IRI': 35, 'Factory': 22, 'clear': 14, 'Exception': 12, 'throws': 10, 'Levels': 7, 'Isolation': 6, 'serializable': 2, 'void': 1, 'private': 0}
{'}\n': 134, ';': 38, 'array': 90, 'return': 131, ')': 16, 'last': 50, '(': 9, 'substring': 96, '.': 22, 'list': 4, 'len': 41, 'if': 71, '}': 111, 'NUM': 53, '_': 52, '+': 107, 'i': 58, '=': 51, ',': 13, '{': 17, 'delimiter': 15, '==': 80, 'At': 76, 'char': 14, '++': 68, '<': 64, 'int': 49, 'for': 55, 'Impl': 35, 'Array': 3, '': 2, 'new': 32, 'length': 23, 'String': 11, 'To': 5, 'static': 1, 'public': 0}
{'}\n': 106, ';': 52, 'min': 24, 'return': 103, '}': 101, 'next': 59, '=': 46, '{': 36, ')': 35, 'NUM': 94, '_': 93, '>': 20, '(': 25, 'To': 88, 'compare': 87, '.': 48, 'if': 83, 'it': 45, 'T': 4, '': 3, 'Next': 68, 'has': 67, 'while': 63, 'iterator': 49, 'collection': 34, 'extends': 5, '?': 16, '<': 2, 'Iterator': 38, 'Collection': 27, 'super': 17, 'Comparable': 14, '&': 8, 'Object': 7, 'static': 1, 'public': 0}
{'}\n': 169, ';': 44, ')': 43, 'SSL': 108, 'is': 107, ',': 122, 'port': 123, 'address': 121, '(': 57, 'Server': 5, 'create': 118, '.': 37, 'Id': 23, '': 20, '=': 67, 'String': 21, 'Heartbeat': 6}
{'}\n': 72, '}': 71, ';': 20, ')': 6, 'NUM': 38, '_': 37, '>=': 66, 'i': 35, '(': 5, 'Of': 55, 'value': 60, '.': 26, 'String': 4, '': 8, 'index': 54, 's': 23, 'True': 50, 'assert': 49, '{': 7, '++': 45, 'SIZE': 18, '<': 41, '=': 13, 'int': 34, 'for': 32, 'to': 27, 'q': 12, 'populated': 14, 'Blocking': 10, 'Linked': 9, 'To': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 93, ';': 92, ')': 14, '(': 10, ',': 58, 'get': 40, 'String': 27, 'title': 21, 'return': 16, '{': 15}
{'}\n': 429, '}': 419, ';': 23, ')': 18, '(': 15, 'destroy': 424, '.': 36, 'store': 13, '{': 9, 'finally': 420, 'commit': 415, ',': 207, '_': 85, 'rw': 46, '': 11, 'new': 81, '=': 14, 'final': 10, 'NUM': 94, 'int': 90, 'BOOL': 86, 'Context': 75, 'Allocation': 82, 'IAllocation': 74, 'Store': 20, 'get': 19, 'RWStore': 45, 'Strategy': 39, 'Buffer': 38, 'RWStrategy': 28, 'try': 24, 'Journal': 12, 'void': 1, 'public': 0}
{'}\n': 82, ';': 22, '}': 76, ')': 8, 'NUM': 21, '_': 20, 'line': 7, '(': 3, '.': 36, '': 1, ',': 45, '{': 9, '=': 18, '-': 19, '==': 13, 'if': 10}
{'}\n': 70, ';': 41, 'return': 67, ')': 17, '(': 8, 'addrs': 16, ':': 48, 'addr': 47, 'Address': 14, 'Inet': 13, '': 2, 'for': 42, 'size': 31, '.': 30, 'new': 25, '=': 24, '{': 18, '>': 15, '<': 11, 'Collection': 10}
{'}\n': 143, ';': 72, ')': 29, 'intent': 76, '(': 5, 'Activity': 86, 'start': 137, '.': 41, '}': 73, 'extras': 28, ',': 9, 'EXTRAS': 129, 'VALUE_': 128, 'KEY_': 127, '': 6, 'Flight': 123, 'Create': 122, 'Extra': 94, 'put': 93, '{': 30, 'null': 37, '!=': 112, 'if': 31, 'Id': 13, 'pilot': 12, 'ID': 103, 'PILOT_': 102, 'ARG_': 101, 'Profile': 4, 'class': 88, 'Intent': 75, 'new': 78, '=': 62, 'User': 55, 'get': 67, 'Map': 20, 'Air': 49, 'Authenticated': 54, 'Valid': 53, 'has': 52, '&&': 47, 'Empty': 43, 'is': 42, '||': 38, '==': 36, '>': 27, 'String': 11, '<': 21, 'Hash': 19, 'Nullable': 17, '@': 15, 'show': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 5, '(': 4, 'Time': 14, 'nano': 13, '.': 12, 'System': 11, '': 10, '=': 9, 'Start': 8, '{': 6, 'public': 0}
{'}\n': 258, '}': 229, ')': 21, '(': 44, ';': 46, '=': 36, '.': 77, 'if': 47, '': 31, 'get': 125, '{': 53, 'Bean': 33, 'null': 51}
{'}\n': 107, ';': 39, ')': 38, '(': 36, '.': 33, 'md': 47, 'get': 34, '{': 24, '': 18, 'private': 0}
{'}\n': 91, '}': 60, ';': 33, ')': 13, 'funnel': 75, '(': 4, '.': 65, '{': 50, '': 5, '>': 10, '<': 7, 'List': 6, 'Funnel': 3, 'void': 1, 'public': 0}
{'}\n': 97, ';': 38, ')': 15, '(': 6, 'substring': 82, '.': 21, 'descriptor': 14, 'type': 10, '_': 25, 'else': 39, 'return': 36, '{': 16, 'String': 3, '': 2, ',': 11, 'Class': 9, 'Ct': 8, 'Parameter': 5, 'static': 1, 'public': 0}
{'}\n': 59, ';': 58, ')': 40, 'clause': 51, '(': 20, 'add': 46, '.': 45, 'Clause': 37, '': 6, 'public': 0}
{'}\n': 184, ';': 42, ')': 28, '(': 7, 'close': 152, '.': 44, 'out': 103, 'flush': 174, 'in': 116, '}': 72, 'e': 147, 'throw': 162, '{': 32, 'IOException': 31, '': 8, 'catch': 143, 'length': 51, 'bytes': 17, ',': 13, 'Content': 4, 'stream': 3, 'try': 128, 'Stream': 102, 'Input': 114, 'Array': 121, 'Byte': 120, 'new': 118, '=': 104, 'Output': 101, 'get': 107, 'response': 12, 'Name': 27, 'file': 26, '+': 91, 'STR': 87, '_': 86, 'Header': 84, 'set': 33, 'null': 59, '!=': 58, 'if': 54, 'Type': 22, 'content': 21, 'Length': 47, 'Cache': 38, 'No': 37, 'Proxy': 36, 'Browser': 6, 'Response': 11, 'throws': 29, 'String': 20, ']': 16, '[': 15, 'byte': 14, 'Servlet': 10, 'Http': 9, 'To': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 84, '}': 44, ';': 21, ')': 7, 'uid': 11, '(': 3, 'remove': 78, '.': 15, 'Map': 28, 'UIDHash': 27, 'locked': 26, '{': 8, 'finally': 72, ',': 67, 'STR': 66, '_': 65, 'warn': 63, 'logger': 61, '': 4, 'catch': 54, 'commit': 49, 'tr': 24, 'try': 45, 'return': 42, 'null': 39, '==': 38, 'if': 35, 'get': 30, '=': 12, 'Transaction': 23, 'key': 6, 'Of': 17, 'value': 16, 'String': 10, 'Object': 5, 'void': 1, 'public': 0}
{'}\n': 57, ';': 56, ')': 16, 'Index': 12, 'end': 53, 'start': 11, '(': 30, '.': 28, '=': 21, 'int': 10, '{': 17, ',': 13, 'public': 0}
{'}\n': 227, ';': 19, ')': 6, 'STR': 69, '_': 68, '(': 5, '': 11, '.': 13, 'log': 64, '}': 120, 'return': 200, '{': 7, 'warn': 114, ',': 25, 'info': 66, 'MS': 59, 'WAIT_': 58, 'SCHEMA_': 57, 'MAX_': 56, '<': 22, 'start': 9, '-': 47, 'Millis': 16, 'Time': 15, 'current': 14, 'System': 12, 'while': 37, 'null': 35, '=': 10, '>': 31, 'String': 24, 'List': 27, 'Map': 21, 'long': 8, 'Agreement': 4, 'Schema': 3, 'public': 0}
{')': 9, '(': 8, 'clear': 7, 'void': 0}
{'}\n': 44, ';': 17, ')': 10, 'get': 37, '.': 13, 'store': 9, '(': 4, '': 1, '=': 15, 'tiles': 18, 'Store': 8, 'Sprite': 7, 'final': 5}
{'}\n': 52, ';': 23, ')': 10, 'i': 13, '(': 6, 'Of': 19, 'value': 46, '.': 17, 'String': 3, '': 2, ':': 42, 'qualifier': 9, '+': 37, 'STR': 39, '_': 15, 'size': 34, 'QUALIFIERS': 16, '?': 30, 'NUM': 29, '-': 27, '==': 26, 'return': 24, 'index': 18, '=': 14, 'int': 12, '{': 11, 'Qualifier': 5, 'comparable': 4, 'static': 1, 'public': 0}
{'}\n': 544, '}': 71, ';': 45, ')': 26, '(': 5, 'exit': 539, '.': 40, 'Context': 112, '': 2, '{': 31, 'finally': 534, 'e': 504, ',': 9, 'msg': 509, 'Exception': 30, 'new': 153, 'throw': 522, 'expr': 16, 'STR': 55, '_': 54, 'format': 514, 'String': 15, '=': 36, 'catch': 500, 'result': 292, 'Result': 367, 'cast': 493, 'return': 360, 'null': 184, 'NUM': 68, 'Function': 418, 'final': 417, 'Scope': 169, 'wrap': 437, 'evaluate': 4, 'cx': 113, 'global': 168, 'Parent': 318, 'set': 124, 'Prototype': 308, 'Object': 3, 'Scriptable': 167, '+': 242, 'wrapped': 366, 'Property': 403, 'put': 256, 'To': 257, 'JS': 374, 'java': 372, 'Undefined': 357, 'instanceof': 355, '||': 353, '==': 351, 'if': 46, 'function': 74, 'self': 12, 'NAME': 263, 'SELF_': 279, 'EXPR_': 261, 'context': 8, 'CONTEXT_': 262, 'i': 190, 'Reader': 209, 'Config': 211, 'engine': 24, 'get': 222, 'Configs': 25, '++': 205, 'size': 200, '<': 20, 'int': 189, 'for': 187, '!=': 183, 'Objects': 175, 'Standard': 174, 'init': 173, 'try': 164, 'Shutter': 151, 'Class': 150, 'All': 157, 'Deny': 156, 'DEPTH': 144, 'STACK_': 143, 'MAX_': 142, 'Depth': 139, 'Stack': 138, 'Interpreter': 137, 'Maximum': 136, 'LEVEL': 130, 'OPTIMIZATION_': 129, 'Level': 126, 'Optimization': 125, 'enter': 118, 'Expr': 35, 'trimmed': 34, 'replace': 101, 'With': 52, 'starts': 51, 'substring': 65, 'trim': 41, 'Utils': 39, 'throws': 27, '>': 23, 'List': 19, 'static': 1, 'public': 0}
{'}\n': 74, ';': 71, ')': 6, 'c': 5, 'String': 53, '': 52, 'STR': 43, '_': 36, '{': 14, '(': 3, 'if': 25, 'char': 4}
{'}\n': 66, ';': 22, ')': 10, 'protocol': 14, '(': 6, 'equals': 40, '.': 17, 'PROTOCOL_': 37, 'URL_': 36, '': 7, '||': 44, 'return': 23, 'Protocol': 19, 'get': 18, 'url': 9, '=': 15, 'String': 13, '{': 11, 'URL': 5, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 73, ';': 26, 'BOOL': 65, '_': 64, 'return': 63, '}': 67, '{': 8, ')': 7, 'DNs': 32, 'selected': 30, '.': 39, 'g': 19, '(': 3, 'equals': 2, '&&': 36, 'null': 34, '!=': 33, 'if': 9, 'o': 6, '': 4, '=': 20, 'instanceof': 12, 'Object': 5, 'boolean': 1, 'public': 0}
{'}\n': 70, '}': 68, ';': 51, ')': 9, 'timestamp': 8, '(': 5, 'Query': 62, 'Timestamp': 4, 'Control': 23, 'get': 59, '.': 21, 'conn': 20, 'Batch': 55, 'add': 54, 'statement': 52, 'Value': 34, 'long': 33, '=': 44, 'current': 38, '{': 13, '!=': 17, 'if': 14, 'supports': 22, '&&': 19, 'null': 18, 'SQLException': 12, '': 6, 'throws': 10, 'Long': 7, 'Set': 3, 'apply': 2, 'void': 1}
{'}\n': 221, ';': 50, '}': 165, ')': 49, '(': 40, 'e': 186, '': 4, '{': 174, 'Exception': 171, 'catch': 166, 'Instance': 159, 'new': 158, '.': 37, 'constructor': 84, 'Class': 33, '=': 34, 'Name': 39, 'class': 12, 'for': 38, ',': 14, 'public': 0}
{'}\n': 393, ';': 119, 'return': 186, ')': 36, '(': 13, 'size': 364, '.': 171, 'list': 362, ',': 22, 'STR': 183, '_': 130, 'info': 180, 'logger': 178, '}': 189, 'add': 323, 'max': 35, 'item': 121, '+': 209, 'current': 31, 'update': 206, 'progress': 27, '{': 43, 'NUM': 131, '==': 199, '%': 196, 'if': 161, '++': 191, 'null': 165, 'Cancelled': 173, 'is': 172, '!=': 164, '': 2, 'final': 14, 'for': 133, '=': 106, 'long': 30, '>': 9, 'Message': 8, 'Mqtt': 7, '<': 4, 'List': 3, 'Array': 109, 'new': 107, 'Updater': 26, 'Progress': 25, 'Log': 12, 'static': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 4, '(': 3, 'Millis': 13, 'Time': 12, 'current': 11, '.': 10, 'System': 9, '': 8, '{': 5, 'void': 1, 'public': 0}
{'}\n': 272, ';': 27, '=': 24, '}': 260, '.': 83, '': 5, ')': 10, '(': 86, 'get': 207, 'new': 105, '{': 20, 'STR': 44, '_': 43, 'int': 21, 'public': 0}
{'}\n': 144, ';': 50, ')': 15, 'fp': 71, 'ip': 61, '(': 11, 'Pointer': 82, 'Frame': 81, 'Caller': 80, 'get': 66, '.': 21, 'Magic': 64, '': 12, '=': 62, 'Address': 13, 'Return': 67, '{': 16, 'VM': 20, 'if': 17, 'Stack': 9, 'static': 4, 'public': 3}
{'}\n': 126, ';': 39, ')': 33, 'Path': 5, 'canonical': 37, ',': 14, 'attributes': 24, 'user': 12, '(': 9, 'Walk': 8, 'fs': 114, 'return': 113, 'Char': 92, '_separator': 91, 'offset': 32, 'file': 28, 'normalize': 80, '=': 79, 'STR': 62, '_': 61, '==': 60, 'At': 56, 'char': 55, '.': 46, '&&': 50, 'length': 47, '<': 17, 'if': 40, 'String': 11, '': 1, '{': 34, 'int': 31, '>': 23, 'Object': 22, 'Map': 16, 'scheme': 7, 'Impl': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 30, ';': 29, ')': 12, '_': 26, '(': 7, '.': 22, 'Type': 5, 'mime': 10, 'null': 18, '{': 13, 'String': 9, '': 8, 'Mime': 4, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 29, ';': 20, 'group': 13, '.': 22, 'this': 16, '{': 15, ')': 14, ',': 9, '(': 4, '': 1, 'public': 0}
{'}\n': 94, ';': 27, ')': 5, ']': 57, 'j': 44, '[': 55, 'i': 23, 'A': 33, '': 32, '(': 4, '.': 34, 'Math': 76, '=': 24, '++': 38, 'length': 35, '<': 29, 'NUM': 26, '_': 25, 'int': 22, 'for': 20, '{': 6, 'public': 0}
{'}\n': 181, ';': 82, ')': 9, ',': 61, 'ATTRIBUTE': 175, 'REMOVE_': 174, '': 5, '.': 24, 'Context': 171, 'Dir': 170, '(': 4, 'Item': 167, 'Modification': 166, 'new': 40, 'add': 162, 'Set': 15, 'mod': 95, '}': 83, 'Hash': 106, '=': 17, '{': 13, 'null': 98, '==': 97, 'if': 93, 'Name': 8, 'attr': 7, 'STR': 79, '_': 78, 'EXISTS': 60, 'VAL_': 73, 'OR_': 58, 'ATTR_': 71, 'SMS_': 70, 'IUMSConstants': 67, 'String': 6, 'Bundle': 63, 'get': 25, 'VALUE_': 59, 'ATTRIBUTE_': 57, 'Code': 54, 'Result': 53, 'Exception': 46, 'Ldap': 45, 'SMSException': 12, 'throw': 38, 'throws': 10, 'Attribute': 3, 'remove': 2, 'void': 1, 'public': 0}
{'}\n': 341, '}': 340, ';': 337, ')': 98, '(': 55, '': 64, 'new': 259, '=': 258, '{': 99, 'null': 134, '==': 133, 'camera': 123, 'if': 103, 'public': 15}
{'}\n': 63, ';': 62, ')': 12, 'STR': 27, '_': 26, ',': 25, '(': 8, 'Option': 7, '': 2, 'new': 15}
{'}\n': 154, ';': 26, ')': 13, 'Opacity': 12, 'maintain': 11, '!': 149, ',': 9, 'RGB': 23, 'new': 30, '(': 5, 'From': 139, 'create': 138, '.': 21, 'Image': 2, 'Encoded': 135, '': 1, 'return': 133, '}': 131, ']': 17, 'width': 42, '*': 118, 'y': 64, '+': 109, 'x': 80, '[': 16, 'rgb': 18, '=': 19, 'X': 95, 'dest': 94, 'NUM': 67, '_': 66, '-': 98, 'int': 15, '{': 14, '++': 74, '<': 70, 'for': 61, 'height': 52, 'Height': 57, 'get': 22, 'image': 8, 'Width': 47, 'length': 38, 'boolean': 10, 'Degrees': 4, 'public': 0}
{'}\n': 393, '}': 138, ')': 17, '': 19, '.': 161, ',': 345, '(': 36, ';': 167, 'NUM': 289, '_': 109, '{': 18, 'if': 170, '=': 24, 'Decimal': 21, 'Big': 20, 'void': 2, 'public': 0}
{'}\n': 152, ';': 21, ')': 5, '(': 4, '.': 15, 'Time': 119, 'Timestamp': 113, '': 7, 'get': 16, 'Key': 32, 'Label': 59, 'Item': 25, 'list': 24, ',': 54, 'Value': 51, 'Integer': 45, 'Pair': 34, 'Name': 33, 'new': 37, '=': 12, 'Calendar': 3, 'private': 0}
{'}\n': 25, ';': 24, ')': 12, '(': 19, '{': 13, 'coordinates': 11, 'Coordinate': 9, '': 1}
{'}\n': 28, '}': 27, ';': 26, ')': 4, '{': 5, 'BOOL': 15, '_': 14, ',': 16, '(': 3, 'Set': 12, 'And': 11, 'compare': 10, '.': 9, 'closed': 8, 'if': 6, 'close': 2, 'void': 1, 'public': 0}
{'}\n': 48, ';': 30, 'BOOL': 29, '_': 22, 'return': 27, '}': 31, '{': 13, ')': 12, 'null': 36, '!=': 35, 'm_listenee': 34, '(': 7, 'if': 14, 'STR': 23, 'equals': 20, '.': 19, 'Name': 11, 'event': 10, '!': 16, 'String': 9, '': 1, 'Allowed': 6, 'connection': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 53, ';': 15, ')': 6, 'quantity': 5, 'Flakes': 2, 'num': 47, '(': 3, 'Num': 44, 'set': 43, '}': 42, '{': 7, 'i': 11, '++': 20, '<': 17, 'NUM': 14, '_': 13, '=': 12, 'int': 4, 'for': 8, 'void': 0}
{'}\n': 45, ';': 33, ')': 18, '(': 5, '.': 39, 'Service': 38, 'Name': 13, 'Resource': 36, 'required': 35, 'return': 34, 'realm': 12, ',': 9, 'policy': 8, 'Map': 26, 'Actions': 25, 'To': 24, 'Type': 22, 'Svc': 21, 'get': 20, '{': 19, 'String': 11, '': 6, 'Policy': 7, 'boolean': 1, 'public': 0}
{'}\n': 46, ')': 19, '(': 4, 'exit': 39, '.': 38, 'System': 37, '': 5, '{': 35, 'args': 18, ']': 9, '[': 8, 'String': 6, 'main': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 79, ';': 65, ')': 15, '(': 4, 'Instant': 74, 'to': 73, '.': 42, 'dt': 36, 'format': 69, 'fmt': 67, 'return': 66, 'u': 14, '+': 49, 'STR': 51, '_': 50, 's': 7, ',': 11, 'null': 46, 'Math': 40, 'parse': 43, 'Parser': 41, 'Date': 35, '': 1, '=': 37, '{': 19, 'Exception': 18, 'throws': 16, 'String': 2, 'protected': 0}
{'}\n': 38, ';': 27, ')': 9, 'File': 6, 'jar': 7, '(': 3, 'Jar': 31, 'STR': 25, '_': 24, ',': 23, '.': 19, '': 5}
{'}\n': 14, ';': 13, ')': 6, '(': 5, '.': 9, '{': 7, 'Emails': 4, 'public': 0}
{'}\n': 71, ';': 46, ')': 9, '(': 5, '': 1, 'get': 40, '.': 12, '=': 24, 'Logger': 35, 'log': 32, 'identity': 30, 'sun': 28, 'com': 26, 'Log': 4, 'public': 0}
{'}\n': 21, ';': 20, ')': 9, 'self': 8, '(': 5, 'Letter': 4, 'is': 3, '.': 14, 'Character': 7, '': 6, 'return': 11, '{': 10, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 30, ';': 29, '+': 19, 'STR': 18, '_': 17, 'return': 16, ')': 14, 'label': 13, 'String': 3, '': 2, '(': 6, 'static': 1}
{'}\n': 98, ';': 96, ')': 29, 'Expr': 18, '(': 5, '.': 77, '{': 49, '': 15, 'public': 0}
{'}\n': 47, ';': 13, 'NUM': 35, '_': 11, '=': 10, '.': 7, 'this': 6, '{': 5, ')': 4, '(': 3, 'public': 0}
{'}\n': 82, ';': 81, 'Part': 33, '.': 63, '(': 13, ')': 28, '': 7, '=': 35}
{'}\n': 658, ';': 64, 'return': 655, '}': 654, '_': 649, 'read': 73, '.': 38, 'reader': 12, '=': 70, ')': 13, '': 7, '(': 6, ':': 449, 'Array': 294, 'Int': 74, 'String': 192, '{': 30, 'throws': 14}
{'}\n': 76, ';': 26, 'ret': 19, 'return': 73, '}': 72, 'i': 30, ']': 53, '[': 48, '{': 16, ')': 15, '<': 36, 'NUM': 33, '_': 32, '=': 20, 'int': 11, '(': 10, 'for': 27, '': 4, 'new': 21}
{'}\n': 159, '}': 78, ';': 24, ')': 12, '(': 26, '_': 54, '.': 19, '{': 13, 'else': 79, 'coll': 70, '': 4, 'null': 29, 'if': 25, 'get': 20, '=': 17}
{'}\n': 92, ';': 90, 'algorithm': 24, '=': 65, '.': 44, 'this': 33, '{': 26, ')': 25, 'String': 23, '': 6, 'Pair': 11}
{'}\n': 47, ';': 46, ')': 31, '(': 4, '.': 40, 'value': 7, '': 5, ',': 8, 'Enum': 3, 'void': 1}
{'}\n': 104, ';': 63, ')': 5, 'null': 61, '(': 4, 'On': 49, 'set': 48, '.': 47, '{': 6, 'Events': 3, 'void': 1}
{'}\n': 157, ';': 123, ')': 111, '(': 66, '.': 145, 'collection': 104, 'return': 113, '}': 125, '{': 112, 'if': 102, '?': 89, '': 52, 'String': 53, ']': 55, '[': 54, 'private': 0}
{'}\n': 71, '}': 70, ';': 31, ')': 22, '(': 7, 'next': 63, '.': 43, 'rand': 15, '+': 60, 'min': 18, ',': 12, 'i': 35, 'set': 55, 'vec': 11, '{': 23, '++': 49, 'Length': 45, 'get': 44, '<': 41, 'NUM': 38, '_': 37, '=': 27, 'int': 34, 'for': 32, '-': 29, 'max': 21, 'delta': 26, 'final': 24, 'Random': 4, '': 8, 'Vector': 10, 'IDouble': 9, 'Uniform': 6, 'fill': 3, 'void': 2, 'public': 1, 'static': 0}
{'}\n': 133, ';': 130, ')': 72, '(': 63, '.': 119, 'return': 74, '{': 73, 'Fetcher': 22, 'static': 1}
{'}\n': 29, ';': 18, 'p_name': 6, '(': 3, '{': 8, ')': 7, 'String': 5, '': 4}
{'}\n': 152, '}': 59, ';': 35, ')': 23, 'Area': 15, 'data': 14, ',': 10, 'marker': 120, 'axis': 76, 'this': 140, 'g2': 9, '(': 5, 'Marker': 119, 'Range': 3, 'draw': 2, '.': 103, 'r': 28, 'next': 128, 'iterator': 100, '': 6, '=': 29, '{': 24, 'Next': 113, 'has': 112, 'while': 108, 'markers': 62, 'Iterator': 99, 'null': 40, '!=': 90, '&&': 92, 'if': 36, 'index': 18, 'Dataset': 82, 'For': 81, 'Axis': 75, 'get': 30, 'Value': 74, 'layer': 22, 'Markers': 4, 'Collection': 61, 'return': 57, '==': 39, 'Renderer': 27, 'Layer': 21, 'int': 17, 'D': 8, 'Rectangle2': 12, 'Graphics2': 7, 'void': 1, 'protected': 0}
{'}\n': 49, ';': 30, ')': 4, '}': 46, 'STR': 45, '_': 44, '{': 5, ']': 42, '[': 41, 'String': 40, '': 1, 'new': 11, '(': 3, 'Events': 36, 'For': 35, 'IDs': 34, 'Mode': 33, 'Mouse': 32, 'set': 6, 'this': 27, 'PCPolicy': 25, 'Reset': 24, 'List': 23, '.': 13, 'policy': 20, 'layer': 18, 'openmap': 16, 'bbn': 14, 'com': 12, 'Policy': 9, 'Change': 8, 'Projection': 7, 'public': 0}
{'}\n': 105, 'BOOL': 98, '_': 82, '(': 4, '.': 37, ')': 12, 'if': 14, 'con': 8, ';': 33, '{': 13, 'Connection': 7, 'Pooled': 6, '': 5, 'protected': 0}
{'}\n': 122, ';': 121, ')': 48, 'max': 78, ',': 43, 'min': 40, '(': 19, '.': 55, 'Math': 54, '': 53, 'float': 15}
{'}\n': 47, ';': 32, ')': 31, 'timeout': 11, '(': 9, '.': 35, 'executor': 34, '': 21, 'long': 10, 'shutdown': 7, 'public': 0}
{'}\n': 118, '}': 48, ';': 47, ')': 8, 'r': 80, '(': 4, 'FTPException': 24, '': 5, 'new': 38, 'throw': 37, '{': 25, 'Code': 103, 'Success': 102, 'is': 101, '.': 68, '!': 33, 'if': 31, 'Timer': 92, 'Noop': 91, 'Auto': 90, 'touch': 89, 'FTPReply': 85, 'read': 84, 'communication': 67, '=': 81, 'STR': 45, '_': 44, 'FTPCommand': 70, 'send': 69, 'Exception': 13, 'State': 12, 'Illegal': 11, 'authenticated': 52, 'connected': 34, 'lock': 28, 'synchronized': 26, ',': 14, 'Reply': 20, 'FTPIllegal': 19, 'IOException': 16, 'throws': 9, 'path': 7, 'String': 6, 'public': 0}
{'}\n': 40, ';': 39, ')': 36, '(': 27, 'get': 24, '.': 23, 'column': 12, '': 1}
{'}\n': 96, ';': 21, 'BOOL': 20, '_': 19, 'return': 18, '(': 5, '.': 27, '': 72, 'Passed': 41, 'time': 40, 'if': 8, ')': 6, '}': 22, '{': 7, 'boolean': 1}
{'}\n': 130, ';': 49, ')': 17, '(': 66, '.': 74, 'doc': 81, '=': 54, '': 1, '{': 78, 'for': 65, ',': 12, 'public': 0}
{'}\n': 14, ';': 13, 'STR': 12, '_': 11, 'return': 10, '{': 9, ')': 8, '(': 7, 'Text': 6, 'Tip': 5, 'num': 3, 'String': 2, '': 1, 'public': 0}
{'}\n': 254, '}': 248, ';': 61, ')': 20, '': 1, 'get': 147, '.': 92, '(': 87, ',': 210, 'job': 50, '{': 42, 'Time': 155, 'Status': 67, 'Job': 47, '=': 72, '>': 69, '<': 64, 'List': 63, '@': 0}
{'}\n': 25, ';': 24, ')': 9, 'q': 8, ',': 21, '(': 6, '.': 15, '': 12}
{'}\n': 100, '}': 75, ';': 53, ')': 8, '(': 7, 'Message': 93, 'get': 45, '.': 27, 'e': 80, 'Exception': 13, 'Fallback': 4, 'Data': 11, '': 10, 'new': 59, 'throw': 83, '{': 14, 'IOException': 79, 'catch': 76, 'File': 43, 'data': 42, 'Buffered': 61, 'try': 54, 'STR': 40, '_': 39, '+': 41, 'Name': 46, 'debug': 37, 'LOG': 26, 'Enabled': 30, 'Debug': 29, 'is': 28, 'if': 15, 'null': 20, '==': 19, 'throws': 9, 'Stream': 6, 'open': 3, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 45, ';': 25, ')': 11, 'listener': 10, '(': 5, 'add': 2, '.': 15, 'm_listeners': 37, 'STR': 23, '_': 22, ',': 21, 'Null': 18, 'Not': 17, 'check': 16, 'Preconditions': 14, '': 7, '{': 12, 'Listener': 4, 'final': 6, 'void': 1, 'public': 0}
{'}\n': 16, ';': 15, 'return': 13, '{': 12, ')': 11, '(': 10, 'instance': 9, 'Manager': 8, 'Sensor': 7, 'Serial': 6, '': 5, 'public': 4, 'static': 3}
{'}\n': 902, ';': 650, '}': 890, ')': 432, '(': 186, '.': 598, '{': 433, 'get': 789, 'In': 691, 'if': 661, '': 44, '=': 583, '<': 46, '>': 51, 'IDevice': 50, 'Collection': 45}
{'}\n': 107, ';': 71, ')': 42, '(': 21, '.': 76, 'id': 34, 'null': 48, 'if': 44, '': 2, 'String': 3, 'Id': 5, 'public': 0}
{'}\n': 42, ';': 20, ')': 10, 'blocks': 22, '+': 38, 'start': 13, 'length': 9, '(': 4, 'Count': 26, 'Block': 16, 'get': 15, '=': 14, 'int': 8, 'pos': 6, '{': 11, ',': 7, 'long': 5, 'Used': 3, 'public': 0}
{'}\n': 323, '}': 195, ';': 28, 'NUM': 100, '_': 99, '=': 19, ']': 14, 'k': 137, '[': 13, '': 1, '{': 10, ')': 9, '++': 107, 'n': 29, '<': 103, '+': 223, 'j': 97, 'int': 96, '(': 4, 'for': 94, ',': 288, 'd': 129, 'max': 285, '.': 22, 'Math': 278, 'sqrt': 280, '>': 266, '&': 231, 'isspd': 55, '-': 210, '==': 66, 'A': 18, 's': 160, '*': 188, '/': 213, 'Lrowj': 190, 'i': 168, 'Lrowk': 151, '+=': 182, 'double': 12, 'L': 44, 'Column': 62, 'get': 37, 'Arg': 8, 'new': 46, 'Row': 38, 'Array': 25, 'Matrix': 6, 'public': 0}
{'}\n': 239, ';': 238, ')': 161, '_': 228, '(': 155, '{': 162, 'Memory': 109, '': 104, 'public': 0}
{'}\n': 53, ';': 46, 'BOOL': 51, '_': 50, '=': 49, 'Time': 48, 'first': 47, ')': 11, '(': 6, 'String': 41, 'to': 40, '.': 15, 'Val': 10, 'new': 9, ':': 30, '': 1, '?': 23, 'instanceof': 20, 'add': 16, 'Set': 14, 'value': 13, '{': 12, 'Object': 8, 'agg': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 235, ';': 234, ')': 133, '': 20, '.': 200, 'Legion': 3, ',': 99, 'player': 107, 'legion': 66, '(': 5, 'Member': 4, '{': 134, 'private': 0}
{'}\n': 78, ',': 49, 'NUM': 24, '_': 23, 'chars': 48, '(': 4, ';': 18, ']': 29, 'len': 11, '[': 28, 'char': 27, 'new': 32, '=': 12, '{': 9, ')': 5, 'if': 19, 'length': 15, '.': 14, 'int': 10}
{'}\n': 83, ';': 45, ')': 21, '(': 20, '.': 57, '': 8, 'Iterator': 9, 'method': 18, '>': 14, 'Method': 13, 'Soot': 12, '<': 10, 'public': 0}
{'}\n': 107, ';': 30, ')': 16, '(': 7, 'String': 3, 'to': 102, '.': 60, 'return': 99, 'NUM': 37, '_': 36, 'pos': 19, '}': 89, '+': 84, 'str': 10, 'append': 61, '{': 17, '-': 35, '==': 34, 'if': 31, ',': 26, 'Of': 22, 'index': 21, '=': 20, 'int': 18, '': 2, 'static': 1, 'public': 0}
{'}\n': 66, ';': 64, ')': 34, '(': 16, '.': 48, '{': 35, 'connection': 31, 'Connection': 13, '': 11, 'public': 0}
{'}\n': 77, ';': 52, 'Transit': 2, 'return': 72, '=': 19, ')': 51, '': 1, '(': 7}
{'}\n': 1762, ';': 16, 'BOOL': 15, '_': 14, 'return': 13, '}': 58, ')': 4, 'STR': 25, ',': 23, 'CT': 22, '': 8, '(': 3, 'Suffix': 42, '=': 40, '{': 5, 'suffix': 19, 'RV': 1374, 'if': 6, 'remove': 96, 'NUM': 69, '>=': 67, 'length': 64, '.': 63, 'null': 11, '==': 10, 'boolean': 1, 'private': 0}
{'}\n': 31, ';': 30, ')': 10, 'STR': 28, '_': 27, '(': 2, 'write': 25, '.': 24, 'out': 23, 'Prec': 5, 'context': 4, '<': 19, 'own': 8, 'if': 15, '{': 14, 'IOException': 13, '': 12, 'throws': 11, 'int': 3, ',': 6, 'void': 0}
{'}\n': 185, ';': 54, ')': 48, 'null': 182, ',': 45, '(': 22, 'Image': 174, '': 55, 'new': 127, '=': 86, 'data': 63, 'Raster': 84, 'create': 90, '.': 89, 'raster': 85, 'Writable': 83, 'int': 28, 'void': 1, 'public': 0}
{'}\n': 69, ';': 68, ')': 5, 'BOOL': 20, '_': 19, '(': 4, '{': 6, 'public': 0}
{'}\n': 45, ';': 44, ')': 27, '(': 14, 'Exec': 40, 'get': 39, ',': 38, 'null': 37, 'Async': 35, 'supply': 34, '.': 33, 'Future': 6, 'Completable': 5, '': 1, 'return': 29, '{': 28, 'fn': 26, '>': 11, 'T': 24, 'super': 22, '?': 21, '<': 7, 'Function': 19, 'Double': 10, 'To': 17, 'final': 15, 'Optional': 9, 'default': 3, 'Override': 2, '@': 0}
{'}\n': 15, ';': 14, ')': 5, '(': 4, 'next': 8, 'return': 7, '{': 6, 'public': 0}
{'}\n': 229, '}': 228, ';': 36, ')': 7, '': 1, 'new': 32, 'throw': 219, '{': 20, '(': 3, 'get': 133, '.': 31, '=': 26, 'Builder': 23, 'Document': 22, 'dbf': 25, 'db': 52, 'Instance': 33, 'Factory': 24, 'throws': 8}
{'}\n': 148, ';': 75, ')': 52, '(': 41, '': 20, 'new': 94, 'Configuration': 37, 'Distributed': 21, 'public': 0}
{'}\n': 35, ';': 29, 'return': 31, ')': 6, 'part': 5, '(': 3, 'add': 2, '.': 20, 'parts': 19, 'if': 8, '{': 7}
{'}\n': 62, 'location': 9, ')': 33, '(': 6, '.': 40, '}': 35, ';': 34, '{': 21, '': 1, 'Location': 5}
{'}\n': 145, ';': 25, 'Pane': 17, ')': 9, '(': 8, '.': 29, '': 1, 'set': 30, '_': 35, 'NUM': 48, 'BOOL': 36, 'Expandable': 33, 'Touch': 32, 'One': 31, 'new': 19, '=': 18, 'final': 11}
{'}\n': 16, ';': 15, '{': 12, ')': 11, 'Chain': 3, '': 1, '(': 6}
{'}\n': 206, ';': 197, 'this': 69, 'return': 199, 'env': 42, '=': 96, '.': 70, ')': 55, '>': 41, 'String': 37, '': 11, ',': 38, '<': 35, '(': 23}
{'}\n': 1363, ';': 420, 'BOOL': 1235, '_': 578, 'return': 1233, '}': 920, ')': 398, '': 153, '.': 480, 'Piece': 539, ',': 179, '(': 147, '{': 399, 'Move': 168, 'King': 1054, 'o': 1053, '==': 753, 'if': 750, '!=': 980, 'else': 921, 'p': 701, 'NUM': 579, ':': 543, '?': 537, 'wtm': 470, '=': 402, 'int': 344, 'pos': 251, 'Direction': 101, 'boolean': 16, 'final': 2}
{'}\n': 45, ';': 44, ')': 42, '(': 6, 'new': 4, '': 2, 'FSDirectory': 13, 'public': 0}
{'}\n': 93, ';': 49, 'elem': 39, 'return': 90, ')': 35, '(': 6, 'Child': 85, 'append': 84, '.': 42, 'parent': 13, 'Attribute': 59, 'set': 58, 'Element': 3, 'create': 43, 'doc': 9, '=': 40, '': 2, '{': 36, ',': 10, 'Node': 12, 'Document': 8, 'add': 4, 'static': 1, 'private': 0}
{'}\n': 136, ';': 43, ')': 73, '(': 6, '}': 97, ',': 11, 'NUM': 29, '_': 28, 'buffer': 23, '.': 60, '=': 24, 'read': 52, 'int': 44, ']': 22, '[': 21, 'byte': 20, 'new': 25, '{': 19, 'Stream': 9, 'Input': 8, '': 7, 'static': 1}
{'}\n': 93, ';': 92, 'remote': 63, 'Name': 25, 'return': 79, ')': 77, 'String': 6, '': 5, ',': 53, '(': 29, 'Remote': 11, 'private': 0}
{'}\n': 197, '}': 169, ';': 50, ')': 18, '(': 6, 'Exception': 175, '': 2, 'new': 180, 'throw': 179, '{': 178, 'catch': 170, '=': 57, 'Spec': 112, 'Parameter': 148, 'pbe': 110, ',': 143, 'Key': 78, 'MODE': 142, 'ENCRYPT_': 141, '.': 106, 'Cipher': 116, 'init': 135, 'cipher': 117, 'Instance': 123, 'get': 122, 'Secret': 98, 'generate': 107, 'Factory': 105, 'throws': 19, 'static': 1, 'public': 0}
{'}\n': 53, ';': 32, ')': 17, '(': 6, 'length': 12, '.': 22, 'original': 9, '-': 45, ',': 10, 'Char': 16, 'pad': 15, 'Of': 38, 'string': 37, 'return': 30, '}': 33, '{': 18, '>=': 26, 'if': 19, 'char': 14, 'int': 11, 'String': 3, '': 2, 'Pad': 5, 'static': 1, 'public': 0}
{'}\n': 105, ';': 102, 'View': 29, '{': 80, ')': 76, '': 28, '(': 52, 'protected': 0}
{'}\n': 24, ';': 23, ')': 3, 'Size': 21, 'block': 20, ',': 11, 'NUM': 13, '_': 12, 'iv': 10, '(': 2, 'arraycopy': 8, '.': 7, 'System': 6, '': 5, '{': 4, 'reset': 1, 'void': 0}
{'}\n': 97, ';': 42, ']': 12, 'NUM': 22, '_': 21, '[': 11, 'm': 13, '=': 60, '.': 16, 'double': 10, '(': 7}
{'}\n': 55, '.': 28, ')': 4, '(': 3, 'Factory': 15, 'session': 26, 'Session': 14, '': 6, 'void': 1}
{'}\n': 82, ';': 56, ')': 23, 'STR': 33, '_': 32, ',': 11, '(': 5, 'Null': 49, 'Not': 48, 'check': 47, '.': 29, 'Preconditions': 45, '': 1, 'function': 35, 'format': 30, 'String': 28, 'super': 25, '{': 24, 'final': 6, 'Function': 3, 'public': 0}
{'}\n': 63, ';': 37, 'len': 26, '+=': 56, ')': 36, ',': 44, 'buffer': 48, 'bytes': 15, '(': 4, 'arraycopy': 41, '.': 40, 'System': 39, '': 38, 'int': 25, ']': 14, '[': 13, 'byte': 12, 'void': 1, 'public': 0}
{'}\n': 36, ';': 32, 'return': 33, ')': 31, 'add': 23, '.': 22, '': 2, '(': 8, 'Permissions': 7}
{'}\n': 138, ';': 92, ')': 13, '.': 36, '}': 121, '{': 14, '(': 4, '=': 49, 'Points': 48, 'new': 46, ',': 8, 'void': 1}
{'}\n': 21, ';': 20, ')': 8, 'msg': 7, '(': 4, 'println': 10, '{': 9, 'String': 6, '': 5, 'void': 2, 'public': 1}
{'}\n': 214, ';': 31, 'results': 179, 'return': 211, ')': 11, '(': 10, 'close': 200, '.': 25, 'Reader': 18, 'taxo': 49, 'index': 19, 'STR': 133, '_': 91, ',': 81, 'NUM': 92, 'Children': 187, 'Top': 186, 'get': 185, 'add': 181, 'fc': 65, 'config': 138, 'Facet': 5, 'Taxonomy': 47, '': 1, 'new': 37, '=': 21, 'Facets': 63, 'Query': 87, 'Docs': 86, 'All': 85, 'Match': 84, 'searcher': 35, 'search': 78, 'Collector': 64, 'Dir': 29, 'Directory': 17, 'Searcher': 34, 'Index': 33, 'open': 26, '{': 15, 'IOException': 14, 'throws': 12, '>': 7, 'Result': 6, '<': 3, 'List': 2, 'private': 0}
{'}\n': 29, ';': 28, ',': 24, 'major': 12, '(': 5, '': 1, 'public': 0}
{'}\n': 111, ';': 110, ')': 61, '(': 88, 'append': 83, '.': 82, 'builder': 29, '{': 70, 'Builder': 25, 'String': 18, '': 23, 'public': 0}
{'}\n': 32, ';': 31, 'ignore': 20, '.': 15, 'this': 14, 'BOOL': 24, '_': 23, '(': 6, ')': 7, '': 1}
{'}\n': 137, ';': 106, '.': 128, 'labels': 84, ')': 67, '(': 34, '': 39, '{': 68, '==': 72, 'if': 69, 'void': 2}
{'}\n': 66, ';': 65, ')': 26, 'angle': 22, '(': 6, '.': 43, 'Math': 42, '': 1, ',': 48, 'double': 19, 'final': 11, 'rotate': 3, 'Vector': 2, 'public': 0}
{'}\n': 294, '}': 108, ';': 62, ')': 12, '_': 51, '(': 4, 'BOOL': 273, 'Connected': 270, 'set': 199, '.': 91, 'led': 240, 'Flash': 251, '{': 13, 'Flashing': 243, 'is': 242, 'if': 114, 'ex': 212, 'STR': 204, 'Text': 201, 'Title': 200, 'Exception': 158, '': 156, 'catch': 154, 'mqtt': 130, 'try': 126, 'Wait': 85, 'Lost': 84, 'conn': 83, 'synchronized': 81, '=': 16, 'void': 1, 'public': 0}
{'}\n': 149, ';': 23, 'return': 76, '}': 90, 'Out': 4, '_content': 119, '{': 10, ')': 9, 'STR': 101, '_': 39, '(': 5, 'Case': 70, 'Ignore': 69, 'equals': 68, '.': 29, 'name': 8, 'if': 63, 'null': 124, 'Key': 54, 'old': 53, 'i': 37, 'get': 58, '=': 19, 'String': 7, '': 6, '++': 48, '<': 14, 'NUM': 40, 'int': 24, 'for': 34, 'size': 30, 'Keys': 21, '_header': 20, '>': 17, 'List': 13, 'Array': 12, 'public': 0}
{'}\n': 219, ';': 96, 'return': 216, '}': 215, ')': 31, ',': 7, '(': 18, 'put': 206, '.': 184, '': 2, '>': 13, '<': 4, 'Set': 9, 'Hash': 50, 'new': 48, '=': 47, 'String': 6, 'key': 122, 'Map': 3, '{': 32, 'static': 1}
{'}\n': 66, ';': 65, 'return': 40, '{': 39, 'Exception': 38, 'XMLSignature': 37, '': 1, 'throws': 35, ')': 34, 'ids': 33, 'List': 32, ',': 11, 'algorithm': 29, 'String': 23, 'ID': 25, 'assertion': 24, 'cert': 16, 'Certificate': 19, '.': 13, 'security': 14, 'java': 12, 'doc': 10, 'Document': 9, 'With': 4, 'sign': 3, 'Element': 2, 'public': 0}
{'}\n': 62, ';': 27, ')': 15, '(': 7, '.': 48, 'url': 10, 'URL': 6, '}': 28, 'return': 26, '{': 16, 'if': 17, '': 1}
{'}\n': 80, ';': 78, ')': 15, 'm': 23, '(': 45, '.': 43, 'Math': 50, '': 41, ',': 48, 'NUM': 57, '_': 56, 'int': 5, 'final': 17, '{': 16}
{'}\n': 18, '{': 5, ')': 4, '(': 3, 'void': 1, 'public': 0}
{'}\n': 46, ';': 17, ')': 4, '(': 3, 'null': 31, '.': 25, 'Document': 7, '=': 9, 'doc': 8, '': 6, '{': 5}
{'}\n': 350, ';': 49, ')': 38, ',': 7, '}': 203, 'y': 9, 'x': 6, '(': 4, '.': 65, 'h': 15, 'w': 12, '{': 39, 'else': 204, '+': 83, '': 17, 'Constants': 69, 'mx': 68, 'if': 50, 'shadow': 33, 'boolean': 32, 'Color': 18, 'pen': 29, 'Paint': 23, 'fill': 19, 'int': 5, 'draw': 2, 'void': 1, 'protected': 0}
{'}\n': 41, ';': 40, ')': 8, 'modifier': 28, '(': 4, 'Static': 3, 'is': 2, '.': 24, 'Modifier': 23, '': 22, '{': 9, 'boolean': 1}
{'}\n': 14, ';': 13, ')': 5, '(': 11, '.': 9, '{': 6, 'int': 1, 'public': 0}
{'}\n': 130, ';': 52, ')': 21, '(': 7, 'String': 4, 'to': 5, '.': 86, 'sb': 37, 'return': 122, 'STR': 90, '_': 49, 'append': 87, '}': 113, 'NUM': 109, '&': 107, ']': 106, 'i': 64, '[': 104, 'Integer': 98, '': 3, '>': 81, 'if': 78, '{': 22, '++': 75, '<': 69, '=': 38, 'int': 63, 'for': 61, 'Builder': 36, 'new': 39}
{'}\n': 46, ';': 29, ')': 8, 'STR': 27, '_': 26, '+': 25, 'Name': 7, 'component': 6, '(': 3, 'Logger': 15, 'get': 20, '.': 19, '': 4, '=': 16, 'error': 30, 'access': 14, '{': 13, 'Exception': 12, 'Log': 11, 'throws': 9, 'String': 5, 'init': 2, 'void': 1, 'public': 0}
{'}\n': 167, ';': 47, 'View': 2, 'selected': 101, 'return': 163, ')': 12, 'NUM': 159, '_': 90, 'Position': 146, 'First': 145, 'm': 119, '}': 135, '(': 5, 'get': 114, '.': 113, '=': 81, 'next': 10, 'BOOL': 91, ',': 8, 'pos': 7, 'make': 82, '': 1, 'end': 57, 'Right': 36, '{': 13, 'int': 6, 'fill': 3, 'private': 0}
{'}\n': 58, '}': 57, ';': 27, ')': 9, 'Values': 20, 'default': 19, '(': 5, 'value': 8, '.': 35, '{': 16, 'SET': 38, 'EMPTY_': 37, '': 6, 'Collections': 34, '!=': 32, 'if': 28, 'Default': 3, 'get': 22, '=': 21, 'Set': 18, 'SSOException': 15, ',': 13, 'SMSException': 12, 'throws': 10, 'String': 7, 'Value': 4, 'void': 1, 'public': 0}
{'}\n': 411, '}': 212, ';': 211, 'NUM': 34, '_': 33, 'return': 32, '{': 16, 'else': 213, '': 10, '.': 22, 'SWT': 251, ')': 15, 'STR': 245, '(': 9, 'Description': 5, 'Binding': 4, 'key': 3, 'if': 17, 'Blank': 24, 'is': 23, 'Utils': 21, 'String': 11, 'Key': 7, 'To': 6, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 132, ';': 69, ')': 46, ',': 34, 'cache': 38, '(': 6, '.': 60, 'String': 13, '': 9, '<': 11, 'void': 1}
{'}\n': 310, ';': 25, ')': 17, '(': 27, '.': 39, '': 293, '=': 21, ']': 55, '[': 53, 'd2': 155, '{': 18, '<': 35, 'NUM': 24, '_': 23, 'double': 137, 'length': 40, 'int': 28, 'for': 26, ',': 9, 'protected': 0}
{'}\n': 23, ';': 22, ')': 9, 'cause': 8, ',': 19, '(': 5, 'Message': 16, 'get': 15, '.': 14, 'this': 11, '{': 10, 'Throwable': 7, '': 1, 'Exception': 4, 'Deployment': 3, 'Ignite': 2, 'public': 0}
{'}\n': 68, ';': 30, 'obj': 9, '.': 54, '}': 31, 'BOOL': 50, '_': 49, 'return': 48, '{': 16, ')': 10, '(': 4, 'if': 17, '': 5, 'boolean': 2}
{'}\n': 109, ';': 85, '(': 5, '.': 25, ')': 9, 'get': 40, 'Opts': 34, 'String': 12, '': 1, '{': 10, 'public': 0}
{'}\n': 19, ';': 18, ')': 17, '.': 12, '': 10, 'pause': 2, 'void': 1}
{'}\n': 53, '}': 52, ';': 51, ')': 10, '(': 4, 'Value': 47, 'New': 46, 'get': 16, '.': 15, 'pce': 9, 'Paint': 41, '': 5, 'Bckgrnd': 37, 'set': 36, 'map': 34, '{': 11, 'Property': 6, 'Background': 27, 'Bean': 24, 'Map': 23, '==': 21, 'Name': 18, 'if': 12, 'Event': 8, 'Change': 3, 'property': 2, 'void': 1, 'public': 0}
{'}\n': 24, ';': 20, 'this': 22, 'return': 21, ')': 10, 'Resource': 9, 'image': 8, '(': 6, 'add': 4, '.': 14, 'Frames': 13, 'm': 12, '{': 11, 'int': 7, 'Frame': 5, 'Builder': 3, '': 1, 'public': 0}
{'}\n': 286, ';': 285, ')': 23, 'STR': 39, '_': 38, '+': 48, '(': 148, '.': 133, '': 12, '{': 27, 'String': 13, 'public': 0}
{'}\n': 156, ';': 40, '_': 108, ')': 19, '(': 29, 'Light': 27, 'NUM': 109, '.': 47, ',': 95, '}': 41, 'return': 37, '{': 20, 'get': 25, '': 7}
{'}\n': 182, ';': 24, ')': 9, '(': 20, 'String': 12, 'to': 177, '.': 26, 'buffer': 14, 'return': 174, 'STR': 30, '_': 29, 'append': 27, '': 1, 'new': 16, '=': 15, '{': 10}
{'}\n': 457, ';': 65, 'return': 454, '}': 387, ')': 30, '(': 10, '.': 46, '{': 31, 'size': 279, 'm_current': 277, '=': 39, 'current': 227, 'if': 212, 'advance': 175, 'valid': 169, '': 1, 'DBIDs': 13, 'iter': 93, 'DBIDArray': 87, 'Modifiable': 33, ',': 15, 'Array': 2, 'private': 0}
{'}\n': 850, ';': 98, 'return': 845, '}': 703, ')': 9, ',': 430, '(': 4, 'Node': 46, 'set': 785, '.': 57, 'tree': 56, '{': 28, 'else': 704, 'get': 58, '=': 71, 'if': 154, 'Parent': 199, '': 16, '&&': 161, '!=': 159, 'i': 93, 'Ref': 68, 'Root': 59, 'double': 1, 'public': 0}
{'}\n': 10, ';': 9, 'return': 7, '{': 6, ')': 5, '(': 4, 'Initialized': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 6, '(': 5, 'get': 15, 'String': 2, 'to': 3, '.': 11, 'Double': 10, '': 1, 'return': 8, '{': 7, 'public': 0}
{'}\n': 260, ';': 126, ')': 10, '(': 4, '{': 11, '.': 85, 'if': 36, 'Preview': 142, 'get': 140, '=': 82, 'Camera': 49, '': 48, 'camera': 81, 'null': 40, '!=': 39}
{'}\n': 38, '}': 30, ';': 29, ')': 8, '(': 11, 'append': 2, '.': 24, 'builder': 23, '{': 9, '_': 17, 'if': 10, 's': 7, 'String': 6, '': 5, 'void': 1, 'public': 0}
{'}\n': 163, ';': 113, ')': 12, '(': 8, '.': 143, 'in': 131, 'NUM': 111, '_': 110, 'Stream': 25, 'Output': 24, 'Array': 23, 'Byte': 22, '': 9, 'new': 57, '=': 56, 'out': 26, '{': 20, 'IOException': 15, 'throws': 13, 'static': 1, 'public': 0}
{'}\n': 52, ';': 41, ')': 8, 'lookup': 12, '(': 7, '.': 15, ',': 32, 'Table': 25, '{': 9, 'get': 16, '': 1}
{'}\n': 14, ';': 13, ')': 4, '(': 3, '.': 9, 'delta': 7, '{': 5, 'sum': 2, 'public': 0}
{'}\n': 40, ';': 39, ')': 17, 'single': 27, '(': 6, '.': 33, '{': 18, 'String': 14, '': 7, 'static': 1}
{'}\n': 74, '}': 54, ';': 42, ')': 18, 't': 59, ',': 8, 'desc': 7, '(': 4, 'accept': 47, '.': 38, 'Handler': 63, 'error': 62, '{': 23, 'Throwable': 58, '': 5, 'catch': 55, 'return': 52, 'primary': 33, 'operation': 17, 'try': 43, 'get': 39, 'Supplier': 37, 'Connection': 36, '=': 34, 'Client': 15, 'Mongo': 14, 'BOOL': 27, '_': 26, 'while': 24, '>': 16, '<': 12, 'Consumer': 11, 'String': 6, 'execute': 2, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 8, 'length': 26, '.': 11, 'cbuf': 7, ',': 20, 'NUM': 22, '_': 21, '(': 3, '{': 16, 'IOException': 15, '': 14, 'io': 12, 'java': 10, 'throws': 9, ']': 6, '[': 5, 'char': 4, 'public': 0}
{'}\n': 179, ';': 58, '(': 6, 'set': 163, '.': 27, ')': 13, '': 1, ',': 24, 'new': 19, 'BOTH': 75, 'FILL_': 74, 'Data': 67, 'Grid': 66, 'SWT': 26, '|': 31, 'BORDER': 43, 'parent': 9, '=': 18, '{': 14, 'Composite': 8}
{'}\n': 381, ';': 24, '+': 355, 'STR': 41, '_': 40, 'Str': 20, 'type': 11, '}': 76, '=': 39, '{': 8, ')': 7, '(': 6, '': 1, ':': 36, 'break': 61, 'case': 32, 'switch': 25, 'String': 2, 'public': 0}
{'}\n': 264, ';': 63, ')': 47, 'accepts': 155, ',': 11, 'Classes': 212, 'num': 193, 'Train': 194, 'Missing': 6, 'class': 33, 'predictor': 37, 'Level': 46, 'missing': 45, 'Type': 34, 'Instance': 30, 'multi': 29, 'Predictor': 10, 'relational': 25, 'date': 21, 'string': 17, 'numeric': 13, 'nominal': 9, '(': 7, 'Test': 220, 'Basic': 219, 'run': 218, 'return': 217, 'NUM': 55, '_': 54, '=': 156, 'Instances': 207, 'Num': 206, 'get': 205, 'int': 32, 'STR': 61, 'add': 170, '.': 169, '>': 154, 'String': 153, '': 148, '<': 151, 'List': 150, 'Array': 149, 'new': 157, 'print': 58, 'Summary': 118, 'Attribute': 117, '}': 64, '{': 48, 'if': 49, '==': 53, 'boolean': 1, 'Handle': 5, 'can': 4, ']': 3, '[': 2, 'protected': 0}
{'}\n': 69, ';': 32, ')': 5, 'BOOL': 30, '_': 29, '(': 4, 'Enabled': 25, 'set': 23, '{': 6, 'Buttons': 3, 'disable': 2, 'void': 1, 'private': 0}
{'}\n': 32, ';': 31, ')': 8, 'path': 7, ',': 28, '(': 4, '.': 22, '': 1, '{': 12, 'IOException': 11, 'throws': 9, 'File': 6, 'load': 3, 'Artifact': 2, 'public': 0}
{'}\n': 93, ';': 22, 'return': 83, ')': 12, 'sb': 71, '(': 20, 'len': 15, 'NUM': 28, '_': 27, 'length': 19, '.': 18, '=': 16, 'int': 14, '{': 13, 'String': 9, '': 8}
{'}\n': 183, ';': 32, ')': 13, '(': 12, 'elements': 179, '.': 34, 'result': 21, 'return': 176, 'STR': 43, '_': 42, ',': 44, 'NUM': 49, 'Option': 8, '': 1, 'new': 23, 'Element': 36, 'add': 35, '+': 135, '>': 9, '<': 6, 'Vector': 16, '=': 22, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 23, ';': 22, 'tsa': 9, '=': 16, '_tsa': 15, '{': 14, ')': 13, 'Action': 8, 'Section': 7, 'Transit': 6, '': 1, '(': 4, 'public': 0}
{'}\n': 137, ';': 60, ')': 59, 'Key': 17, 'Public': 16, 'authority': 18, '=': 95, '.': 65, 'this': 90, 'STR': 70, '_': 69, '(': 4, 'String': 67, 'get': 66, 'res': 64, 'Title': 62, 'set': 61, 'parent': 7, 'super': 45, '{': 44, '': 1, ',': 8, 'JDialog': 6, 'public': 0}
{'}\n': 35, ';': 26, ')': 8, 'pt': 7, '(': 3, '.': 29, '_': 23, '': 4, 'if': 10, '{': 9}
{'}\n': 84, ';': 48, ')': 17, 'Resp': 11, 'auth': 10, '(': 6, 'else': 73, ',': 12, 'is': 58, '.': 32, 'if': 23, '}': 52, 'STR': 46, '_': 45, 'info': 43, '_log': 41, '{': 22, 'null': 28, 'get': 33, '==': 27, 'Exception': 21, 'Discovery': 14, '': 1, 'throws': 18, 'discovered': 16, 'Information': 15, 'Success': 9, 'Auth': 8, 'verify': 4, 'private': 0}
{'}\n': 158, ';': 85, 'return': 153, ')': 12, '(': 31, '.': 78, 'report': 96, 'Report': 60, '': 4, 'new': 58, '=': 57}
{'}\n': 174, '}': 157, ';': 29, ')': 12, '': 9, '(': 8, '.': 18, '{': 13, 'set': 35, 'Units': 117, 'View': 17, 'Current': 47, 'Of': 42, 'value': 41, 'String': 39, 'Text': 16, 'update': 5, 'void': 4}
{'}\n': 48, ';': 47, ')': 23, '(': 17, '.': 28, 'tx': 22, 'Tx': 13, '': 1, 'transaction': 15, 'Grid': 6, '<': 4}
{'}\n': 101, ';': 32, 'null': 99, 'return': 76, '}': 80, ')': 15, 'e': 85, ',': 11, '(': 6, 'error': 90, '.': 25, 'log': 88, '{': 16, 'Exception': 84, '': 12, 'catch': 81, 'Bytes': 66, 'data': 10, 'Final': 71, 'do': 70, 'cipher': 21, '=': 22, ']': 4, '[': 3, 'byte': 2, 'k': 39, 'MODE': 57, 'Cipher': 20, 'init': 50, 'Key': 38, 'get': 26, 'security': 35, 'java': 33, 'STR': 30, '_': 29, 'Instance': 27, 'try': 17, 'String': 13, 'static': 1, 'public': 0}
{'}\n': 211, ';': 55, ')': 17, 'NUM': 53, '_': 52, '&': 171, 'b': 94, '(': 5, '|': 179, '<<': 175, 'g': 57, 'r': 20, 'a': 131, 'return': 167, '+': 28, 'Point': 16, 'mid': 15, '*': 48, 'Alpha': 136, 'get': 24, '.': 23, 'color1': 8, '-': 40, 'color2': 12, 'int': 2, '=': 21, 'Blue': 99, 'Green': 62, 'Red': 25, '{': 18, 'float': 14, ',': 9, 'Color': 7, '': 6, 'ARGB': 4, 'derive': 3, 'static': 1}
{'}\n': 64, ';': 62, ')': 41, 'pos': 39, '(': 32, '{': 42, 'void': 1, 'public': 0}
{'}\n': 164, ';': 28, ')': 9, ']': 14, 'NUM': 73, '_': 21, '[': 13, 'arg': 15, '(': 5, '.': 18, ',': 61, '>': 64, 'String': 7, '': 1, '<': 58, 'Pair': 57, 'STR': 22, 'split': 19, '=': 16, '{': 10, 'static': 0}
{'}\n': 101, '}': 91, ';': 90, ')': 19, 'locator': 8, '+': 87, 'STR': 86, '_': 85, '(': 5, 'Exception': 83, '': 6, 'new': 80, 'throw': 79, '{': 26, 'Id': 73, 'Partition': 72, 'get': 71, '.': 66, 'Locators': 65, 'known': 64, '!': 63, 'if': 61, 'this': 29, 'synchronized': 27, 'L': 7, 'void': 2}
{'}\n': 36, ';': 35, ')': 7, '(': 4, '.': 21, 'return': 15, 'if': 9, '{': 8, 'id': 6, '': 1, 'public': 0}
{'}\n': 71, '}': 70, ';': 18, ')': 5, '_': 49, '(': 4, '.': 26, 'if': 41, '': 34, '=': 11, 'stored': 22, 'Store': 15, '{': 6, 'void': 1}
{'}\n': 464, ';': 72, ')': 17, '(': 42, 'STR': 451, '_': 245, ',': 432, '{': 415, '.': 103, '': 22, 'if': 227, 'get': 65, 'String': 191, '=': 35, 'Repo': 85, 'throws': 18}
{'}\n': 136, '}': 122, ';': 17, ')': 8, 'val': 81, '+': 118, 'STR': 15, '_': 14, 'key': 70, '(': 3, 'println': 12, '.': 11, 'out': 7, 'NUM': 103, ',': 23, 'substring': 110, '=': 28, '{': 9, '>': 26, 'length': 98, 'if': 94, 'get': 89, 'h': 27, 'String': 22, '': 4, 'Element': 75, 'next': 74, 'e': 50, 'Elements': 62, 'More': 61, 'has': 60, 'keys': 54, '<': 20, 'Enumeration': 45, 'for': 42, 'enumerate': 37, 'Hashtable': 19, 'new': 29, 'Object': 25, 'Print': 5, 'list': 2, 'void': 1, 'public': 0}
{'}\n': 58, ';': 54, 'return': 55, ')': 23, ',': 15, '(': 8, 'file': 14, 'File': 13, 'is': 34, '.': 33, 'null': 29, '!=': 28, 'if': 25, '{': 24, 'log': 22, 'Logger': 21, 'Ignite': 20, '': 1, 'Nullable': 2, '@': 0, 'String': 6, 'static': 4, 'public': 3}
{'}\n': 113, ';': 33, 'Counter': 106, ')': 18, '(': 7, 'get': 90, '.': 15, '_': 20, '{': 23, 'NUM': 21, '==': 44}
{'}\n': 16, ';': 15, ')': 6, '(': 5, 'Size': 12, 'To': 11, 'trim': 2, '.': 9, '{': 7, 'void': 1, 'public': 0}
{')': 17, '(': 16, 'clear': 15, 'void': 2}
{'}\n': 144, ';': 39, 'return': 140, ')': 18, '(': 10, 'get': 72, '.': 62, '=': 28, '{': 85, 'NODE': 83, '': 1, 'Node': 5, '==': 77, 'Type': 74, '>': 6, '<': 3, 'new': 29, 'static': 0}
{'}\n': 116, '}': 115, ';': 66, ')': 39, '(': 64, '.': 110, 'future': 104, '{': 108, 'futures': 106, ':': 105, '>': 12, '<': 9, 'Future': 59, 'for': 96, '=': 71, '': 10, 'static': 1, 'public': 0}
{'}\n': 320, ';': 46, 'return': 316, '}': 315, ')': 22, 'INTERVAL': 311, 'SCHEDULING_': 310, '': 2, '.': 99, 'Examples': 209, 'Constants': 208, ',': 17, ']': 217, 'Type': 90, '[': 214, '(': 13, 'Container': 7, 'new': 35, '_': 52, 'MIPS': 213, 'double': 103, 'Id': 16, 'broker': 15, 'class': 198, 'poll': 191, 'IDs': 189, 'Power': 184, 'add': 180, 'NUM': 53, '/': 93, 'Number': 21, 'ceil': 100, 'Math': 98, 'int': 14, 'i': 50, '=': 34, '{': 23, '++': 61, '<': 5, 'for': 47, '>': 9, 'List': 4, 'Array': 25, 'create': 10, 'static': 1}
{'}\n': 86, ';': 72, ')': 39, 'port': 24, '(': 28, 'Integer': 57, '': 21, '.': 44, '{': 40, 'public': 0}
{'}\n': 114, ';': 82, ')': 38, '(': 13, '.': 87, 'value': 86, '}': 84, 'return': 80, '{': 39, 'Remove': 59, 'if': 40, '': 9, ',': 17}
{'}\n': 117, ';': 29, ')': 15, '(': 5, '.': 37, 'listener': 14, 'list': 69, 'null': 22, '==': 21, 'if': 17, 'Name': 9, 'property': 32, 'get': 54, 'Listeners': 73, 'Change': 4, 'm_model': 71, '=': 34, '>': 68, 'Validator': 13, 'Model': 3, '': 6, '<': 64, 'List': 63, 'Array': 62, 'ID': 57, 'Client_': 56, 'AD_': 55, '+': 45, 'table': 8, ':': 48, 'STR': 47, '_': 46, '?': 42, 'contains': 38, 'Validators': 36, 'm_global': 35, 'String': 7, 'return': 28, '||': 23, '{': 16, ',': 10, 'void': 1, 'public': 0}
{'}\n': 77, ';': 42, ')': 41, '(': 6, 'append': 54, '.': 53, 'Buffer': 23, 'STR': 57, '_': 56, 'String': 10, '': 9}
{'}\n': 433, '}': 403, ';': 150, ')': 24, '': 1, '{': 66, 'e': 409, 'Exception': 28, '(': 4, 'catch': 404, '.': 117, 'new': 294, 'get': 258, ',': 9, 'sql': 12, 'pc': 8, '=': 96, 'Page': 6, 'throws': 25, 'SQL': 11, 'Context': 7, 'execute': 3}
{'}\n': 115, ';': 88, ')': 24, '(': 6, 'Discover': 109, 'do': 108, 'return': 107, 'BOOL': 104, '_': 29, ',': 15, 'id': 66, 'class': 83, '.': 11, '': 1, 'Object': 94, 'query': 93, '=': 38, 'STR': 30, 'Type': 10, 'Uri': 75, 'Field': 74, 'check': 73, 'Validator': 71, 'Arg': 70, '{': 7, 'URI': 65, 'Param': 59, 'Path': 27, '@': 0, 'discover': 53, 'Rep': 52, 'Resource': 51, 'Task': 50, 'public': 48, '}': 23, 'ADMIN': 45, 'Role': 41, 'roles': 37, 'Permission': 35, 'Check': 34, 'JSON': 22, 'APPLICATION_': 13, 'Media': 9, 'XML': 14, 'Produces': 5, 'POST': 2}
{'}\n': 99, '}': 46, ';': 45, '+=': 95, 'n': 71, ')': 22, '(': 6, '{': 26, 'NUM': 32, '_': 31, 'if': 27, ',': 16, 'read': 4, '.': 64, '=': 49, 'int': 17, 'while': 53, 'Exception': 42, 'Bounds': 41, 'Of': 40, 'Out': 39, 'Index': 38, '': 24, 'new': 36, 'throw': 35, '<': 30, 'len': 21, 'IOException': 25, 'throws': 23, 'off': 18, ']': 15, '[': 14, 'byte': 12, 'public': 0}
{'}\n': 66, '}': 65, ';': 64, ')': 8, ']': 62, 'NUM': 28, '_': 27, '(': 4, '.': 22, 'Order': 42, 'connection': 41, 'get': 44, '[': 40, 'circles': 39, ',': 38, 'canvas': 7, 'Line': 35, 'draw': 2, '{': 9, 'Canvas': 6, '': 5, 'void': 1, 'private': 0}
{'}\n': 31, ';': 30, ')': 14, '(': 6, '.': 24, 'File': 3, 'java': 21, '': 2, '{': 15, 'Java': 8, 'to': 4, 'static': 1, 'public': 0}
{'}\n': 67, ';': 66, ')': 14, ',': 11, 'NUM': 24, '_': 23, 'h': 13, 'w': 10, '.': 44, '': 1, '{': 15, 'int': 9, '(': 8, 'Raster': 3, 'Writable': 2, 'Compatible': 5, 'create': 4, 'public': 0}
{'}\n': 221, ';': 141, 'Graph': 8, 'Bipartite': 7, 'Law': 6, 'Power': 5, 'Segment': 12, 'multi': 52, 'return': 213, '}': 210, ')': 43, 'NUM': 82, '_': 81, 'byte': 204, '(': 15, ',': 20, 'j': 162, 'i': 145, 'Edge': 127, 'add': 196, '.': 179, '{': 44, 'Probability': 38, 'edge': 37, '<': 151, 'Double': 181, 'next': 180, 'random': 42, 'if': 176, '++': 156, 'Size': 30, 'right': 33, '=': 58, 'int': 16, 'for': 142, 'left': 29, 'Receiver': 137, 'Stats': 136, 'Null': 135, '': 2, 'new': 59, 'Mask': 129, 'Type': 128, 'Identity': 126, '/': 80, '*': 90, 'Per': 25, 'Edges': 24, 'Num': 18, 'max': 17, 'Segments': 19, 'Random': 10, 'double': 36, 'Multi': 11, 'build': 9, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 9, 'command': 8, '(': 5, 'execute': 4, 'return': 11, '{': 10, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 174, ';': 171, ')': 146, '(': 21, '.': 157, '{': 147, 'Thread': 17, 'Progress': 4, '': 57, 'final': 24, 'void': 2, 'public': 0}
{'}\n': 190, ';': 42, '}': 141, ')': 27, '(': 7, '.': 144, 'if': 153, 'directory': 10, '=': 35, ',': 99, '': 8, '{': 28}
{'}\n': 25, ';': 24, ')': 13, 'NUM': 22, '_': 21, ',': 20, 'prefix': 12, '(': 4, 'With': 3, 'starts': 2, 'return': 15, '{': 14, '': 9, '.': 6, 'lang': 7, 'java': 5, 'boolean': 1, 'public': 0}
{')': 68, '>': 59, '<': 55, '': 52, '(': 36, 'Initializer': 35, 'private': 0}
{'}\n': 28, ';': 27, ')': 8, 'PREFIX': 24, '': 2, '(': 7, 'Directory': 6, 'Temp': 3, 'create': 5, '.': 18, 'Files': 17, 'wrap': 14, 'return': 13, '{': 12, 'IOException': 11, 'throws': 9, 'Path': 4, 'static': 1, 'public': 0}
{'}\n': 90, ';': 26, ')': 13, '(': 6, 'String': 3, 'to': 4, '.': 28, 'sb': 18, 'return': 82, 'STR': 32, '_': 31, 'append': 29, '}': 73, ']': 69, 'i': 38, '[': 67, '': 2, '{': 14, '=': 19, 'int': 37, 'for': 35, 'Builder': 17, 'new': 20}
{'}\n': 70, ';': 69, ')': 25, 'Id': 24, 'Category': 4, 'product': 22, ',': 19, 'STR': 43, '_': 42, '(': 7, 'Attribute': 40, 'get': 39, '.': 38, 'request': 11, 'Dispatcher': 49, 'Local': 48, '': 8, 'Delegator': 35, 'is': 3, 'return': 27, '{': 26, 'String': 21, 'Request': 10, 'Servlet': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 72, ';': 33, 'BOOL': 52, '_': 30, 'return': 68, ')': 10, '(': 6, '}': 34, '=': 50, 'Batch': 39, 'New': 38, 'm_': 37, 'Queue': 43, 'reset': 42, '{': 11, 'if': 12, 'STR': 31, 'Exception': 28, 'State': 27, 'Illegal': 26, '': 1, 'new': 24, 'throw': 23, 'null': 20, '==': 19, 'Format': 16, 'Input': 15, 'get': 14, 'instance': 9, 'Instance': 8, 'input': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 150, ';': 37, 'result': 25, 'return': 147, '}': 100, '{': 18, ')': 13, 'e': 106, 'SQLException': 105, '': 1, '(': 9, 'catch': 102, 'close': 132, '.': 54, 'rs': 41, 'try': 45, 'null': 43, '!=': 124, 'if': 121, 'finally': 119, 'Exception': 17, 'Database': 16, 'new': 27, 'throw': 109, 'STR': 96, '_': 95, 'String': 5, 'get': 55, 'next': 81, 'while': 77, ',': 69, 'dbm': 51, '=': 26, 'Data': 50, 'Meta': 49, 'connection': 53, 'Set': 40, 'Result': 39, '>': 6, '<': 3, 'List': 30, 'Array': 29, 'Collection': 2, 'throws': 14, 'list': 7, 'public': 0}
{'}\n': 35, ';': 34, ')': 13, 'resource': 12, '(': 5, 'add': 2, '.': 17, 'List': 16, '{': 14, 'Resource': 4, '': 10, 'void': 1, 'public': 0}
{'}\n': 44, '}': 43, ';': 20, ')': 5, '(': 4, '.': 16, 'semaphore': 25, '{': 6, 'Semaphore': 24, '': 7, '_semaphores': 15, '=': 14, 'Event': 3, 'void': 1, 'public': 0}
{'}\n': 200, ';': 22, 'BOOL': 21, '_': 20, 'return': 19, '}': 23, '{': 11, ')': 10, '(': 6, 'equals': 5, '.': 67, '!': 26, 'if': 12, 'else': 176, 'null': 160, '!=': 65, '==': 15, 'i': 83, 'get': 56, 'that': 44, '=': 45, '': 1, 'k2': 108, 'k1': 98, 'Key': 101, 'Comparable': 97, '++': 93, 'count': 54, '<': 89, 'NUM': 86, 'int': 53, 'for': 80, 'Count': 58, 'Item': 57, 'obj': 9, 'Keyed': 31, 'instanceof': 29, 'this': 16, 'Object': 8, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 253, ';': 57, 'return': 249, '}': 198, ')': 15, 'STR': 204, '_': 203, '(': 9, 'info': 201, '.': 51, 'log': 199, '{': 16, '!': 235, 'if': 233, 'size': 225, '=': 49, 'boolean': 1, ',': 205, 'Ids': 94, 'Dbsvc': 93, 'Id': 192, 'get': 52, 'active': 153, 'add': 186, 'Dbsvcs': 66, ':': 155, 'Service': 62, '': 44, 'for': 149, '>': 63, '<': 60, 'List': 59, 'Array': 98, 'new': 96, 'String': 89, 'NAME': 82, 'DBSVC_': 81, 'Constants': 78, 'Vers': 75, 'All': 72, 'Svcs': 73, 'locate': 71, 'Client': 46, 'coordinator': 47, 'Coordinator': 45, 'protected': 0}
{'}\n': 45, ';': 44, ')': 10, '': 29, '(': 25, 'Alarm': 5, '.': 21, '{': 11, 'void': 2}
{'}\n': 16, ';': 15, ')': 5, 'BOOL': 13, '_': 12, '(': 4, '.': 9, 'Requested': 8, 'stop': 7, '{': 6, 'Stop': 3, 'public': 0}
{'}\n': 272, ';': 73, 'return': 67, '}': 74, 'length': 61, '.': 60, ')': 44, 'array': 157, ',': 27, 'NUM': 64, '_': 63, '(': 15, '{': 45, 'arrays': 38, ':': 158, ']': 13, '[': 12, 'T': 8, '': 1, 'for': 151, 'new': 136, '=': 124, '==': 62, 'if': 57, '>': 9, '<': 6, 'join': 14, 'static': 5, 'public': 4, '@': 0}
{'}\n': 145, ';': 35, 'return': 142, ')': 15, '(': 10, '.': 73, 'results': 23, 'String': 6, '': 5, '>': 22, '<': 19, 'new': 25, '=': 24, '{': 16}
{'}\n': 173, ';': 55, ')': 30, 'INIT_': 167, '': 1, '(': 8, 'Forward': 3, 'find': 163, '.': 89, 'mapping': 12, 'return': 160, 'request': 23, ',': 13, 'STR': 136, '_': 135, '=': 44, 'Manager': 88, 'null': 60, '!=': 59, 'if': 56, '{': 39, 'throws': 31, 'response': 29, 'Response': 28, 'Servlet': 21, 'Http': 20, 'Request': 22, 'form': 17, 'Form': 16, 'Action': 2, 'Mapping': 11, 'public': 0}
{'}\n': 29, '}': 28, ';': 27, ')': 8, '.': 22, '{': 20, '(': 7, '': 1}
{'}\n': 62, ';': 23, ')': 8, '(': 4, 'Count': 58, 'Job': 6, 'increment': 55, '}': 54, 'job': 39, 'add': 49, '.': 17, 'Run': 27, 'To': 46, 'jobs': 45, 'STR': 37, '_': 36, '+': 38, 'debug': 34, 'LOG': 32, '': 5, '{': 9, 'Manager': 16, 'dag': 15, '=': 14, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 56, ';': 55, ')': 10, 'entry': 14, '(': 4, 'add': 2, 'utf8': 24, ',': 44, '=': 25, 'Constant': 6, 'Utf8': 22, '': 5, 'if': 12, 'public': 0}
{'}\n': 489, ';': 487, ')': 471, '(': 4, '.': 480, '{': 472, 'rule': 103, 'Rule': 9, '': 5, 'void': 1}
{'}\n': 152, '}': 106, ';': 55, ')': 7, 'in': 52, '(': 4, 'close': 113, '{': 57, 'finally': 107, '': 1, 'Stream': 44, 'Input': 43, 'Object': 62, 'new': 60, '=': 53, 'try': 56, 'null': 54, 'IOException': 30, 'throws': 28, 'bytes': 26, ']': 25, '[': 24, 'byte': 23, 'T': 12, '<': 10, 'static': 9, 'public': 8, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 240, ';': 51, ')': 11, '(': 10, 'signum': 235, '.': 155, 'result': 151, ',': 22, 'NUM': 21, '_': 20, 'STR': 228, 'Equals': 225, 'assert': 207, '}': 50, ']': 17, 'i': 191, '[': 16, 'Bytes': 15, 'r': 91, '==': 215, 'res': 163, 'True': 208, '{': 12, '++': 204, 'length': 174, '<': 197, '=': 18, 'int': 75, 'for': 188, 'Array': 184, 'Byte': 183, 'to': 182, 'byte': 13, 'new': 118, 'Number': 116, 'b': 53, 'a': 14, 'Integer': 114, 'Big': 113, '': 112, 'Sign': 77, '-': 23, 'Digit': 9, 'One': 8, 'By': 7, 'Digits': 6, 'Multi': 5, 'Knuth': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 71, '(': 6, '.': 47, 'dialog': 46, ';': 51, ')': 27, 'Dialog': 20, '': 9, 'show': 2, 'void': 1, 'public': 0}
{'}\n': 48, '}': 47, ';': 18, 'Size': 45, 'block': 44, '+=': 43, 'pos': 14, ')': 11, 'length': 10, ',': 8, 'in': 7, '(': 3, 'Block': 33, '{': 12, '<': 22, '&&': 26, '.': 24, 'while': 19, 'NUM': 17, '_': 16, '=': 15, 'int': 9, ']': 6, '[': 5, 'byte': 4, 'void': 1, 'public': 0}
{'}\n': 174, ';': 39, 'return': 170, '}': 167, ')': 19, ']': 30, 'y': 131, '[': 29, 'params': 54, ',': 15, '(': 7, '{': 20, '++': 71, 'length': 68, '.': 22, '<': 65, 'NUM': 62, '_': 61, '=': 32, 'int': 58, 'for': 56, 'Types': 124, 'Parameter': 123, 'get': 35, 'method': 48, 'Type': 109, 'Return': 108, 'clazz': 18, '==': 90, 'Class': 17, 'Declaring': 86, 'if': 81, 'i': 59, 'methods': 31, '': 11, 'Method': 28, 'reflect': 25, 'lang': 23, 'java': 21, 'Methods': 36, 'static': 1, 'private': 0}
{'}\n': 8, '{': 7, ')': 6, '(': 5, 'Helper': 4, '': 1, 'private': 0}
{'}\n': 359, ';': 84, ')': 12, 'temp': 22, '(': 7, '.': 299, 'STR': 73, '_': 72, ',': 74, 'replace': 46, '=': 24, '{': 13, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 58, ';': 38, 'Panel': 8, '': 1, '(': 33, ')': 17, 'Value': 20}
{'}\n': 27, ';': 26, '{': 10, ')': 9, '(': 5, '': 1, 'public': 0}
{'}\n': 174, ';': 119, ')': 75, '(': 18, '.': 88, 'Installment': 16, 'get': 89, '=': 86, '{': 76, '': 32, 'final': 19, ',': 54, '>': 44, '<': 34}
{'}\n': 65, ';': 24, ')': 10, '(': 6, 'matches': 56, '.': 31, 'matcher': 38, 'return': 53, 'email': 9, 'pattern': 27, '=': 17, 'Pattern': 26, 'compile': 32, '': 7, 'STR': 19, '_': 18, 'String': 8, '{': 11, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 11, 'Edge': 8, '(': 3, 'add': 2, '.': 15, 'Edges': 14, '{': 12, 'Directed': 7, '': 4, 'void': 1}
{'}\n': 88, '}': 59, '{': 27, ')': 20, 'ioe': 82, 'IOException': 23, '': 2, '(': 10, 'catch': 78, ';': 34, 'close': 73, '.': 72, 'in': 31, 'try': 35, 'null': 33, '!=': 65, 'if': 62, 'finally': 60, 'Resolver': 17, ',': 14, 'Xml': 4, 'parse': 5, 'return': 48, 'Stream': 30, 'Input': 29, 'File': 9, 'new': 39, '=': 32, 'JDOMException': 26, 'throws': 21, 'Entity': 16, 'From': 8, 'static': 1, 'public': 0}
{'}\n': 201, ';': 35, ')': 18, 'STR': 180, '_': 179, ',': 115, 'FINE': 166, '': 7, '.': 31, 'Level': 163, '(': 6, 'log': 171, '_logger': 157, 'Loggable': 160, 'is': 159, 'if': 155, 'channel': 129, 'socket': 59, 'Socket': 27}
{'}\n': 266, ';': 45, ')': 44, 'STR': 92, '_': 91, '(': 4, '.': 82, '}': 226, '{': 71, 'if': 160, 'report': 10, '': 13}
{'}\n': 84, '}': 83, ';': 37, ')': 17, 'topic': 10, '(': 6, 'add': 2, '.': 42, 'topics': 41, 'subscription': 24, 'Store': 5, 'subscriptions': 68, 'STR': 54, '_': 53, '+': 55, 'Id': 16, 'client': 15, 'debug': 51, 'logger': 49, '{': 18, 'contains': 43, '!': 40, 'if': 38, ',': 11, 'Couple': 23, 'Topic': 22, 'Client': 21, '': 8, 'new': 26, '=': 25, 'final': 7, 'String': 9, 'To': 4, 'Subscription': 3, 'void': 1, 'public': 0}
{'}\n': 126, '}': 105, '{': 16, ')': 15, 'e': 110, '': 27, '(': 45, 'catch': 106, ';': 51, '.': 98, 'File': 37, 'zip': 73, 'try': 63, 'if': 52, 'public': 0}
{'}\n': 176, ';': 42, 'Map': 3, 'Hash': 2, 'parent': 28, 'return': 169, '}': 159, '++': 89, 'Count': 45, 'child': 44, '{': 17, 'else': 160, ')': 16, '(': 15, 'Expanded': 12, 'is': 153, '.': 97, 'Wrapper': 123, ',': 7, '-': 146, 'i': 77, 'put': 143, 'Item': 107, 'Parent': 122, '': 1, '=': 33, 'instanceof': 120, 'if': 92, 'get': 98, 'null': 103, '!=': 102, 'List': 96, '<': 4, 'NUM': 48, '_': 47, 'int': 43, 'for': 74, '>': 10, 'new': 34, 'Boolean': 9, 'Integer': 6, 'State': 13, 'generate': 11, 'private': 0}
{'}\n': 28, ';': 27, ')': 15, '(': 24, '.': 21, 'Audio': 3, 'm': 17, '{': 16, 'void': 1}
{'}\n': 44, ';': 43, ')': 13, 'NAME': 38, '': 1, ',': 9, 'value': 12, '(': 5, 'Value': 31, 'boolean': 30, '.': 22, 'critical': 8, 'Id': 26, 'PKIXExtensions': 21, 'super': 18, '{': 17, 'IOException': 16, 'throws': 14, 'Object': 11, 'Boolean': 7, 'public': 0}
{'}\n': 30, ';': 29, '.': 23, 'Path': 8, '(': 4, '{': 10, ')': 9, 'File': 6, '': 1, 'public': 0}
{'}\n': 385, ';': 16, ')': 9, 'sx': 13, '(': 5, 'OFormat': 4, 'print': 3, 'return': 378, 'NUM': 41, '_': 31, ',': 72, 'x': 8, 'String': 2, 'to': 52, '.': 23, 'Long': 22, '': 1, '=': 14, 'else': 35, '}': 359, 'break': 97, 't': 47, '+': 94, 'STR': 32, ':': 89, 'case': 86, '{': 10, 'length': 81, 'switch': 77, 'VALUE': 26, 'MIN_': 25, '^': 65, '-': 58, '~': 56, '<': 39, 'if': 17, '==': 20, 'null': 15, 'long': 7, 'private': 0}
{'}\n': 187, ';': 35, ')': 18, 'async': 17, ',': 7, 'js': 182, '(': 3, 'exec': 180, 'method': 10, '+': 30, 'STR': 32, '_': 31, 'JSPointer': 27, 'to': 26, '.': 25, 'source': 6, '=': 23, 'String': 9, '': 4, 'key': 22, 'callbacks': 36, '{': 19, 'boolean': 16, 'JSObject': 5, 'Callback': 2, 'void': 0}
{'}\n': 181, ';': 87, 'BOOL': 179, '_': 96, '}': 174, '{': 54, ')': 53, 'i': 94, '(': 20, '.': 110, 'size': 111, 'NUM': 97, 'Block': 16, 'b': 50, '': 32, 'public': 0}
{'}\n': 48, ';': 47, ')': 15, '': 8, '(': 7, 'Bytes': 28, '.': 26, '=': 24, ']': 22, '[': 21, 'byte': 20, '{': 19, 'IOException': 18, 'throws': 16, 'file': 10, 'Path': 9, 'To': 5, 'static': 1, 'public': 0}
{'}\n': 101, '}': 100, ';': 99, ')': 34, '(': 7, 'get': 74, '.': 39, 'Node': 13, 'Tree': 12, 'Operand': 11, 'INavi': 10, '': 9, 'final': 8, '>': 26, '<': 20, 'List': 19, 'static': 1, 'private': 0}
{'}\n': 238, '}': 97, ';': 41, ')': 20, 'BOOL': 39, '_': 38, '(': 8, 'Mode': 231, 'Kb': 230, 'finish': 229, 'clear': 224, '.': 48, 'Times': 222, 'Typed': 212, 'm': 60, '{': 21, 'Legal': 215, 'Fully': 214, 'Time': 101, 'is': 211, '!': 210, 'if': 22, 'INDEX': 29, 'PICKER_': 204, 'ENABLE_': 203, '': 1, '==': 26, 'Index': 11, 'picker': 10, 'else': 98, 'Value': 6, 'new': 14, 'update': 187, '+': 92, 'STR': 52, 'Description': 106, 'Picker': 102, 'Minute': 148, 'Content': 105, 'set': 32, 'MINUTE_': 75, 'announcement': 44, ',': 12, 'Announce': 126, 'Accessibility': 125, 'try': 124, 'Utils': 122, 'Hour': 33, 'Minutes': 95, 'Select': 94, '+=': 89, 'Showing': 72, 'Item': 71, 'Current': 70, 'Advance': 19, 'auto': 18, '&&': 64, 'Auto': 62, 'Allow': 61, 'format': 49, 'String': 43, '=': 45, 'HOUR_': 28, 'boolean': 17, 'int': 9, 'Selected': 7, 'on': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 192, ';': 59, '.': 45, '': 13, '(': 12, ')': 28, '=': 43, ',': 16, 'Geo': 14, 'new': 53, '{': 29, 'static': 1, 'public': 0}
{'}\n': 39, '}': 38, ';': 18, ')': 9, 'action': 8, '(': 4, 'Added': 33, '.': 13, 'listener': 25, '{': 10, 'listeners': 27, ':': 26, 'Listener': 24, 'Manager': 23, 'Update': 6, '': 5, 'for': 19, 'add': 2, 'List': 12, 'Action': 3, 'void': 1, 'public': 0}
{'}\n': 260, ';': 30, ')': 9, '(': 3, 'Long': 171, '.': 25, '}': 62, 'STR': 59, '_': 47, 'Exception': 17, 'Configuration': 16, 'Mary': 15, '': 4, 'new': 52, 'throw': 51, '{': 18, ']': 71, 'NUM': 48, '-': 209, 'i': 147, '[': 68, 'Ptrs': 64, 'time': 73, '<': 153, '||': 213, 'byte': 63, 'if': 42, '>': 192, '=': 22, '++': 158, 'Idx': 21, 'num': 20, 'int': 19, 'for': 144, 'long': 67, '<=': 46, 'Interval': 32, 'idx': 31, 'Int': 27, ',': 13, 'throws': 10, 'load': 2, 'void': 1}
{'}\n': 54, ';': 27, ')': 8, '(': 3, '.': 12, 'STR': 16, '_': 15, '+': 20, 'unique': 6, '{': 9, 'String': 5, '': 4, 'void': 1}
{'}\n': 354, ';': 88, 'return': 350, ')': 59, 'null': 347, ',': 21, 'Method': 232, 'rollback': 265, 'List': 13, 'create': 3, '(': 11, 'Class': 336, 'get': 80, 'Type': 331, 'System': 63, '.': 68, 'system': 64, 'Id': 245, 'DESC': 315, 'STEP_': 305, 'PAIR_': 304, 'VOLUME_': 303, 'ACTIVE_': 302, 'SRDF_': 301, 'CREATE_': 300, '': 1, 'GROUP': 306, 'Step': 297, 'workflow': 58, '=': 65, 'String': 2, 'BOOL': 260, '_': 109, 'URIs': 124, 'target': 29, 'source': 19, 'SRDFLinks': 269, 'Uri': 84, 'Change': 92, 'vpool': 91, 'Replicas': 239, '}': 229, 'URI': 42, 'add': 223, 'Str': 200, '{': 60, 'Targets': 185, 'srdf': 184, ':': 162, 'for': 156, 'Srdf': 190, 'Set': 183, 'Map': 39, 'Volume': 16, 'uri': 47, '>': 18, '<': 14, 'Array': 149, 'new': 147, 'Descriptors': 20, 'Descriptor': 17, 'STR': 110, 'info': 107, 'log': 105, 'Pool': 97, 'Virtual': 96, 'Storage': 62, 'Source': 81, 'group': 36, 'class': 76, 'Object': 70, 'query': 69, 'Client': 67, 'db': 66, 'Workflow': 57, 'For': 54, 'wait': 53, 'Group': 10, 'Director': 34, 'Remote': 33, 'On': 8, 'Steps': 7, 'Pair': 6, 'CGSrdf': 5, 'Non': 4, 'private': 0}
{'}\n': 26, ';': 25, ')': 14, 'window': 12, '(': 6, '{': 15, '': 2, 'public': 0}
{'}\n': 154, ';': 32, ')': 9, '(': 12, 'String': 35, 'to': 149, '.': 18, 'bf': 37, 'return': 27, '}': 33, 'Trace': 141, 'Stack': 140, 'print': 139, 'ex': 134, '{': 10, 'Exception': 133, '': 1, 'catch': 130, 'idx': 109, 'temp': 61, '+': 106, 'STR': 31, '_': 23, 'append': 102, 'else': 113, 'NUM': 24, '==': 14, 'i': 66, 'if': 11, 'get': 87, 'points': 13, '=': 38, '++': 80, 'size': 75, '<': 72, 'int': 65, 'for': 63, 'Node': 60, 'List': 59, 'try': 46, 'Buffer': 36, 'new': 39, 'length': 19, '||': 16, 'null': 15}
{'}\n': 593, ';': 39, 'return': 589, '}': 301, ')': 92, ',': 273, '': 1, '.': 107, '{': 15, '(': 4, 'catch': 374, 'close': 528, 'File': 18, 'zip': 60, 'null': 46, '!=': 281, 'if': 351, 'try': 487, 'finally': 485, 'Exception': 378, 'is': 268, 'NUM': 275, '_': 274, 'write': 289, '-': 282, 'read': 270, '=': 21, 'while': 112, '[': 225, 'byte': 223, 'new': 63, ']': 226, 'int': 218, 'get': 173, 'Element': 132, 'next': 131, 'entries': 103, 'Entry': 101, 'Zip': 65, 'Elements': 118, 'More': 117, 'has': 116, '>': 102, 'extends': 98, '?': 97, '<': 96, 'Enumeration': 95, 'archive': 79, 'public': 0}
{'}\n': 109, ';': 44, 'res': 46, 'return': 106, ')': 32, ',': 7, 'STR': 77, '_': 76, '(': 3, 'Code': 98, 'Return': 97, 'report': 96, '.': 39, '_measurements': 72, 'NUM': 90, '/': 88, 'st': 35, '-': 85, 'en': 62, 'int': 1, 'measure': 74, 'Time': 41, 'nano': 40, 'System': 38, '': 4, '=': 36, 'long': 34, 'key': 10, 'table': 6, '_db': 48, '{': 33, '>': 30, 'Iterator': 29, 'Byte': 28, 'String': 5, '<': 23, 'Map': 22, 'Hash': 21, 'public': 0}
{'}\n': 94, ';': 60, 'str': 15, 'STR': 54, '_': 35, ',': 55, '(': 31, 'All': 51, 'replace': 50, '.': 24, '=': 41, ')': 37, 'String': 6, '': 5}
{'}\n': 693, ';': 41, 'h0': 34, '+=': 206, 'h1': 36, ')': 31, 'NUM': 71, '_': 70, ',': 10, '(': 4, 'Left': 405, 'rotate': 404, '.': 75, 'Long': 74, '': 6, '=': 43, '^=': 396, 'h3': 40, 'h2': 38, 'Length': 14, 'prefix': 13, '}': 176, 'BITS': 54, 'ARBITRARY_': 53, '{': 32, 'else': 177, 'pos': 63, 'get': 209, 'bv': 9, '>': 291, 'remaining': 184, 'if': 65, 'SIZE': 77, '*': 72, '+': 122, '-=': 266, '>=': 69, '-': 94, 'long': 12, 'p': 82, ']': 23, '[': 22, 'state': 24, '/': 104, 'int': 81, 'final': 5, 'seed': 18, 'Vector': 8, 'Bit': 7, 'spooky4': 3, 'static': 1, 'public': 0}
{'}\n': 30, ';': 20, ')': 5, 'return': 22, '}': 21, '(': 4, '.': 16, '{': 6, 'NUM': 12, '_': 11, 'deal': 9, 'if': 7, 'public': 0}
{'}\n': 155, 'Nodes': 73, ',': 12, 'Name': 56, '(': 5, '.': 76, ';': 82, ')': 63, '>': 19, '<': 9, 'List': 113, 'Array': 112, '': 6, 'new': 110, '=': 74, 'null': 88, '==': 87, 'if': 83, 'get': 77, 'Node': 18, 'Cluster': 17, 'Collection': 14, '{': 64, 'cache': 35, 'String': 11, 'Map': 4, 'void': 1, 'private': 0}
{'}\n': 164, '}': 85, ';': 22, 'NUM': 35, '_': 34, '*=': 159, 'k': 21, '=': 27, 'j': 19, 'temp': 24, ']': 8, '-': 61, '[': 7, 'array': 9, '{': 17, ')': 16, '(': 38, '.': 55, 'if': 44, '+=': 81, '&&': 51, 'upper': 15, '<': 48, '<=': 40, 'while': 37, '*': 33, 'lower': 12, ',': 10, 'int': 11, 'adjust': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 32, ';': 31, '(': 26, 'index': 8, 'processor': 14, 'Processor': 13, 'IAudio': 12, '': 11, 'int': 7, 'synchronized': 1, 'public': 0}
{'}\n': 167, ';': 55, ')': 31, '(': 14, '.': 125, 'i': 71, 'suffix': 26, '=': 46, 'int': 70, 'for': 68, '{': 32, 'String': 25, '': 24, ',': 23}
{'}\n': 244, ';': 243, ')': 77, 'locator': 69, '+': 240, 'STR': 239, '_': 238, '(': 41, 'Exception': 236, 'Illegal': 234, '': 48, 'new': 232, 'throw': 231, '{': 78, '.': 151, 'if': 132, 'Locator': 6}
{'}\n': 46, '}': 45, ';': 44, ')': 10, 'task': 3, '(': 5, 'Thread': 8, 'progress': 38, '.': 22, 'l': 19, '{': 11, 'class': 32, 'Listener': 18, 'State': 17, 'Progress': 7, '': 6, 'Listeners': 24, 'get': 23, 'listener': 21, ':': 20, 'for': 12, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 562, '}': 54, ';': 53, ')': 32, 'STR': 198, '_': 47, ',': 13, 'ERROR': 313, 'SEVERITY_': 312, '': 8, '.': 42, 'DOMError': 9, 'msg': 180, 'locator': 22, 'error': 11, 'Handler': 10, '(': 7, 'report': 296, 'NUM': 48, ']': 57, '-': 215, 'i': 83, '[': 56, 'dataarray': 58, 'String': 25, 'to': 62, 'Integer': 207, '{': 33, 'Object': 202, 'new': 200, 'DOMAIN': 195, 'Formatter': 184, 'DOMMessage': 183, 'Message': 187, 'format': 186, '=': 59, 'continue': 174, 'supplemental': 165, 'XMLChar': 121, 'Supplemental': 160, 'is': 4, '&&': 129, 'Surrogate': 125, 'Low': 150, 'if': 34, '++': 101, 'char': 55, 'datalength': 69, '<': 91, 'High': 124, 'while': 88, 'int': 68, 'else': 322, 'Version': 31, 'XML11': 30, 'length': 43, 'Array': 64, 'Char': 63, 'datavalue': 26, 'return': 52, '==': 37, '||': 39, 'null': 38, 'boolean': 28, 'Impl': 16, 'DOMLocator': 20, 'WF': 6, 'void': 3, 'final': 2, 'static': 1, 'public': 0}
{'}\n': 38, '}': 37, ';': 36, '{': 25, ')': 24, '(': 6, '': 12, 'Destroyed': 5, 'void': 1}
{'}\n': 121, ';': 43, '}': 111, ')': 26, 'in': 106, '(': 47, '.': 102, '{': 99, 'Stream': 80, 'new': 83, '=': 82, '': 5, 'try': 76, 'version': 16, ',': 13, 'artifact': 12, 'Properties': 24, 'String': 11, 'public': 0}
{'}\n': 625, ';': 580, ')': 91, '(': 33, '.': 414, 'ins': 345, '': 35, '=': 399, '{': 290, 'IOException': 95, 'Name': 42, 'file': 41, 'load': 2, 'void': 1, 'public': 0}
{'}\n': 467, '}': 466, ';': 461, ')': 37, '_': 340, '(': 23, '.': 89, 'context': 85, 'Reader': 83, '{': 58, 'leaves': 90, ':': 86, 'Context': 84, 'Leaf': 82, '': 31, 'for': 79, 'void': 2}
{'}\n': 153, ';': 27, ')': 10, 'doc': 139, '(': 5, '.': 21, 'XMLUtils': 104, '': 6, 'NS': 40, 'Constants': 69, 'Attribute': 64, 'set': 63, 'STR': 50, '_': 49, '=': 32, 'get': 22, '{': 14, 'public': 0}
{'}\n': 91, '}': 75, ';': 44, ')': 12, '(': 3, 'At': 85, 'Look': 84, 'update': 83, 'NUM': 81, '_': 80, '=': 16, 'amplitude': 78, '{': 13, 'else': 76, 'Dy': 70, 'last': 64, 'Dx': 65, '.': 19, 'Math': 48, '': 17, '*': 32, 'void': 1, 'public': 0}
{'}\n': 69, ';': 67, ')': 45, '(': 43, 'return': 61, '{': 52, 'size': 31, 'int': 21, 'public': 3}
{'}\n': 34, ';': 33, ')': 16, 'is': 15, '(': 11, 'Certificate': 8, 'generate': 28, '.': 27, 'X509': 21, '': 1, 'return': 18, '{': 17, 'Stream': 14, 'Input': 13}
{'}\n': 45, ';': 44, ')': 6, 'TIMEOUT': 23, '': 21, ',': 28, '(': 5, '{': 7, 'public': 0}
{'}\n': 36, ';': 35, ')': 15, 'null': 24, ':': 32, '(': 4, '.': 27, 'value': 14, '?': 25, '!=': 23, ',': 8, 'key': 7, 'with': 3, 'return': 17, '{': 16, '': 1, 'String': 6, 'B': 2, 'default': 0}
{'}\n': 182, ';': 144, ')': 106, 'Name': 56, 'table': 101, '(': 28, ',': 59, 'get': 125, '.': 124, '=': 121, 'String': 33, '': 32, 'Column': 20, 'private': 0}
{'}\n': 197, ';': 48, ')': 14, '': 151, '(': 12, '.': 107, 'fp': 97, '{': 86, '}': 79, '_': 75, '<': 58, '=': 27, 'long': 5, 'synchronized': 1}
{'}\n': 31, ')': 16, '(': 4, 'Layout': 3, 'void': 1, 'public': 0}
{'}\n': 116, ';': 114, '*': 111, ')': 25, '(': 15, '.': 95, 'Math': 94, '': 93, 'float': 11, 'return': 27, '{': 26}
{'}\n': 87, ';': 47, 'method': 36, 'return': 84, '}': 83, ')': 26, 'STR': 75, '_': 74, '+': 76, 'name': 17, '(': 7, 'Exception': 32, 'Method': 3, 'Such': 30, 'No': 29, '': 2, 'new': 67, 'throw': 66, '{': 33, 'Modifiers': 60, 'get': 59, '.': 53, 'Static': 55, 'is': 54, 'Modifier': 52, 'if': 48, 'args': 25, ',': 14, 'type': 13, 'find': 4, '=': 37, 'throws': 27, '...': 24, '>': 12, '?': 11, '<': 10, 'Class': 9, 'String': 16, 'static': 1, 'public': 0}
{'}\n': 276, ';': 46, ')': 17, 'BOOL': 273, '_': 43, '(': 8, 'Refreshing': 270, 'set': 207, '.': 48, 'Layout': 267, 'Refresh': 266, 'Swipe': 265, 'm': 250, 'Callback': 189, 'retro': 190, ',': 25, 'params': 29, 'Cards': 5, 'Service': 4, 'get': 63, 'Api': 216, 'Yelo': 251, 'STR': 155, 'PAGE': 244, '': 9, 'Constants': 53, 'Http': 52, 'put': 49, 'add': 229, 'List': 227, 'SERVICES': 222, 'SEARCH_': 221, 'Codes': 218, 'Response': 217, 'Id': 209, 'Request': 208, 'this': 201, 'Retro': 188, 'new': 31, '=': 30, 'keyword': 11, 'TITLE': 182, 'RADIUS': 167, 'PER': 152, 'CARD': 124, 'SERVICE_': 123, 'Type': 120, 'Search': 3, 'TYPE': 112, 'pref_longitude': 99, 'string': 69, 'R': 67, 'String': 10, 'Helper': 61, 'Preference': 60, 'Shared': 59, 'LONGITUDE': 84, 'pref_latitude': 71, 'LATITUDE': 56, 'NUM': 44, '>': 28, '<': 22, 'Map': 21, 'Hash': 33, 'final': 19, '{': 18, 'Server': 7, 'From': 6, 'fetch': 2, 'void': 1, 'private': 0}
{'}\n': 39, ';': 37, ')': 26, '(': 19, '.': 31, 'Numbers': 15, '{': 27, 'Phone': 14, 'void': 1, 'public': 0}
{'}\n': 109, ';': 26, ')': 13, '(': 9, 'String': 4, 'to': 104, '.': 33, 'buffer': 18, 'return': 101, '}': 99, 'character': 64, 'append': 94, '{': 14, 'Digit': 86, 'is': 85, 'Character': 83, '': 3, '||': 81, 'STR': 80, '_': 43, '==': 78, 'if': 75, 'i': 41, 'At': 70, 'char': 63, 'Region': 30, 'matching': 29, '=': 19, '++': 60, 'size': 46, '<': 56, 'length': 51, ',': 45, 'NUM': 44, 'int': 40, 'for': 38, 'group': 34, 'matcher': 12, 'Builder': 17, 'new': 20, 'Matcher': 11, 'Only': 8, 'Plus': 7, 'And': 6, 'digits': 5, 'final': 2, 'static': 1, 'public': 0}
{'}\n': 65, ';': 31, ')': 11, 'b': 10, '(': 3, 'equals': 49, '.': 48, 'a': 6, '}': 32, 'null': 18, '==': 17, 'if': 13, '{': 12, '': 4, ',': 7}
{'}\n': 64, ';': 20, 'return': 56, '}': 59, '{': 9, ')': 8, '.': 16, 'seg': 34, '(': 5, 'if': 47, 'next': 43, 'iter': 12, 'Segment': 4, 'Marker': 3, '': 10, '=': 13, 'Next': 26, 'has': 25, 'Sequence': 15, 'marker': 14, 'Iterator': 11, 'find': 2}
{'}\n': 55, ';': 41, ')': 10, 'NUM': 48, '_': 47, '(': 6, 'exit': 45, '.': 33, 'System': 43, '': 42, 'Cli': 16, '{': 11, 'static': 1, 'private': 0}
{'}\n': 107, ';': 31, ')': 23, 'Array': 4, 'new': 50, ',': 69, 'Error': 101, 'delay': 100, '(': 13, '>': 8, '<': 5, 'Concat': 3, 'Publisher': 2, '': 1, 'return': 91, 'source': 22, '=': 27, ']': 49, '[': 48, 'n': 26, 'NUM': 60, '_': 37, 'array': 28, 'arraycopy': 66, '.': 29, 'System': 64, '+': 58, 'T': 7, 'extends': 18, '?': 17, 'STR': 38, 'Warnings': 35, 'Suppress': 34, '@': 32, 'length': 30, 'int': 25, '{': 24, 'Source': 11, 'Additional': 10, 'concat': 9, 'public': 0}
{'}\n': 179, ';': 81, ')': 28, 'tm': 50, '(': 95, '{': 32, '}': 145, '.': 91, 'if': 116, '=': 51, '': 13, ',': 17, 'void': 1}
{'}\n': 92, ';': 79, ')': 12, 'ID': 11, 'feature': 10, '(': 8, 'Set': 7, 'Is': 6, 'e': 5, '.': 44, 'super': 82, 'return': 59, '}': 80, 'value': 66, 'equals': 75, 'EDEFAULT': 62, 'VALUE_': 61, '': 1, '!': 70, ':': 58, 'null': 64, '!=': 67, '?': 65, '==': 63, 'VALUE': 57, 'Package': 23, 'case': 20, '{': 13, 'switch': 14, 'int': 9, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 45, ';': 43, ')': 5, 'null': 25, '_scheme': 23, '(': 4, '{': 9}
{'}\n': 307, ';': 36, ')': 14, '(': 6, '': 1, 'new': 66, '=': 27, '.': 24, 'Value': 44, 'extension': 25, 'this': 23, 'Der': 61, 'value': 13, ']': 56, '[': 55, 'byte': 54, 'boolean': 43, 'critical': 9, 'Id': 26, 'PKIXExtensions': 29, '{': 22, 'IOException': 21, 'throws': 15, 'Object': 12, ',': 10, 'Boolean': 8, 'Extension': 5, 'Key': 3, 'public': 0}
{'}\n': 77, '}': 53, ';': 28, ')': 8, '(': 7, '{': 9, 'e': 62, 'Exception': 61, '': 2, 'catch': 54, 'Key': 4, 'generate': 48, '.': 21, 'kgen': 16, 'key': 41, 'NUM': 35, '_': 34, 'Instance': 23, 'get': 22, 'Generator': 15, '=': 17, 'try': 10, 'Secret': 3, 'static': 1, 'public': 0}
{'}\n': 59, ';': 58, ')': 13, '+': 44, 'STR': 46, '_': 45, '(': 7, 'Value': 35, 'get': 21, '.': 20, 'e': 12, 'Name': 23, 'Property': 22, '{': 14, 'Event': 11, 'Change': 6, '': 1, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 134, ';': 18, 'versions': 132, 'return': 131, ')': 7, 'BOOL': 16, '_': 15, '(': 6, 'Loading': 13, 'set': 12, '}': 96, 'e': 106, ',': 119, '+': 116, 'STR': 115, 'XMLException': 10, '': 1, 'new': 110, 'throw': 109, '{': 11, 'Exception': 105, 'Pointer': 104, 'Null': 103, '|': 101, 'IOException': 100, 'catch': 97, 'Stream': 77, 'open': 76, '.': 27, 'url': 22, '=': 54, 'URL': 39, 'INFO_': 38, 'VERSION_': 37, 'Names': 34, 'Property': 29, 'Base': 32, 'get': 28, 'Loader': 26, 'property': 25, 'final': 19, 'throws': 8, 'Versions': 3, 'load': 4, 'Spy': 2, 'public': 0}
{'}\n': 106, ';': 79, ')': 21, 'OK': 103, '': 1, '.': 73, 'Status': 100, 'Http': 93, ',': 9, '(': 4, 'Headers': 94, 'new': 81, 'Response': 24, 'page': 68, '>': 34, '<': 26, 'Entity': 25, 'return': 80, 'prbe': 53, 'All': 37, 'find': 36, 'DTOService': 72, '=': 6, 'DTO': 33, 'Page': 28, '{': 59, 'Exception': 58, 'URISyntax': 57, 'throws': 55, 'Example': 47, 'By': 46, 'Request': 2, 'Body': 42, '@': 0, 'public': 22, 'VALUE': 20, 'JSON_': 19, 'APPLICATION_': 18, 'produces': 15, 'POST': 13, 'method': 10, 'STR': 8, '_': 7, 'value': 5, 'Mapping': 3}
{'}\n': 27, ';': 26, ')': 9, 'view': 8, '(': 5, 'add': 2, '.': 14, 'Views': 13, 'Footer': 3, 'm': 11, '{': 10, 'View': 4, '': 6, 'void': 1, 'public': 0}
{'}\n': 265, ';': 80, 'return': 259, '}': 195, ')': 10, '(': 91, 'close': 210, '.': 97, 'stmt': 85, 'null': 203, '!=': 202, 'if': 199, 'rs': 94, '{': 14, 'finally': 197, 'STR': 174, '_': 37, 'get': 140, 'next': 109, 'Query': 99, 'execute': 98, '=': 86, 'Statement': 90, 'try': 83, '': 12, 'SQLException': 13, 'throws': 11, 'public': 0}
{'}\n': 113, ';': 48, ')': 17, ',': 105, 'NUM': 61, '_': 60, '(': 16, '.': 84, 'p': 26, 'Publisher': 21, 'basic': 28, '=': 27, '>': 25, 'Integer': 24, '': 19, '<': 22, 'Submission': 20, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 71, ';': 70, 'return': 68, '{': 28, ')': 27, '(': 24, 'type': 10, 'String': 9, '': 8}
{'}\n': 42, ';': 41, ')': 20, '(': 18, 'Usage': 10, 'print': 9, 'void': 1, 'public': 0}
{'}\n': 58, ';': 57, 'actual': 43, '_': 40, 'epsilon': 15, '+': 32, '{': 21, ')': 20, ',': 10, 'long': 8, '(': 7, 'private': 0}
{'}\n': 41, ';': 15, 'params': 9, '=': 38, '.': 36, 'this': 35, '}': 34, ')': 10, 'STR': 31, '_': 30, '(': 5, 'Exception': 28, 'Argument': 27, 'Illegal': 26, '': 1, 'new': 24, 'throw': 23, '{': 11, 'null': 20, '==': 19, 'if': 16, 'super': 12, 'Param': 8, 'Spider': 2, 'public': 0}
{')': 6, '(': 3, 'flush': 2, 'public': 0}
{'}\n': 37, ';': 36, ')': 7, '(': 4, '{': 8, 'null': 13, '==': 12, 'entities': 11, 'if': 9, 'public': 0}
{'}\n': 415, ';': 49, 'result': 107, 'return': 412, '}': 236, ')': 42, 'STR': 47, '_': 46, '+': 274, '(': 6, 'String': 171, 'to': 401, '.': 242, 'train': 118, 'println': 316, 'Message': 278, 'get': 86, 'ex': 264, 'print': 44, '{': 43, 'Debug': 357, 'm_': 356, 'if': 212, 'BOOL': 329, '=': 85, ']': 3, 'NUM': 96, '[': 2, 'Exception': 263, '': 116, 'catch': 260, 'Copy': 289, ',': 10, 'Datasets': 308, 'compare': 307, 'build': 300, 'Instances': 88, 'new': 109, 'try': 128, 'Error': 270, 'throw': 267, 'Copies': 244, 'make': 132, 'Abstract': 240, 'Missing': 37, 'class': 32, 'predictor': 36, 'Level': 99, 'missing': 98, 'add': 221, '>': 216, 'Instance': 29, 'multi': 28, 'Type': 33, 'Classes': 93, 'num': 83, ':': 150, 'Relational': 195, 'Num': 87, '?': 144, 'Predictor': 9, 'relational': 24, 'Date': 183, 'date': 20, 'string': 16, 'Numeric': 159, 'numeric': 12, 'Nominal': 147, 'nominal': 8, 'Train': 84, 'Dataset': 134, 'Test': 133, 'null': 120, 'boolean': 1, 'int': 31, 'Summary': 52, 'Attribute': 51, 'Integrity': 5, 'dataset': 4, 'protected': 0}
{'}\n': 17, ';': 16, ')': 5, '(': 4, 'Empty': 3, 'is': 2, '.': 11, 'Queue': 10, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 17, ';': 16, ')': 7, 'Primitive': 10, '{': 8, 'public': 0}
{'}\n': 377, '}': 368, ';': 36, 'break': 366, '{': 21, ')': 35, 'Cont': 363, 'is': 362, '!': 361, '(': 4, 'if': 359, ',': 9, 'head': 303, 'buffer': 40, '=': 27, '.': 31, '': 5, 'length': 87, 'Key': 214, 'table': 213, '+=': 226, 'NUM': 98, '_': 97, 'Long': 143, 'read': 142, 'Util': 140, 'Bits': 139, 'seq': 136, 'long': 135, 'SIZE': 93, 'BLOCK_': 92, '-=': 101, 'ptr': 95, '>': 96, '-': 90, 'Buf': 26, 't': 25, ']': 39, '[': 38, 'byte': 37, 'create': 32, 'Buffer': 24, 'Temp': 23, 'Entry': 17, 'Segment': 12, 'Entries': 3, 'void': 1}
{'}\n': 95, ';': 84, ')': 22, 'host': 30, '}': 85, '(': 5, 'Host': 80, 'get': 79, '.': 57, '': 6, '{': 23, 'Map': 7, 'Initiators': 20, 'net2': 19, '>': 17, 'Initiator': 16, '<': 8, 'List': 13, 'URI': 10, 'Hash': 35, 'new': 33, '=': 32, ',': 11, 'static': 0}
{'}\n': 45, ';': 44, ')': 26, ',': 9, 'Class': 17, 'reference': 18, 'mapping': 32, '(': 4, '{': 27, 'Metadata': 16, '': 5, 'process': 2, 'void': 1, 'protected': 0}
{'}\n': 201, ';': 96, 'namespace': 59, 'return': 197, '=': 120, 'Namespace': 57, ')': 17, '(': 7, '.': 90, 'Stack': 65, '': 1, '{': 21, 'protected': 0}
{'}\n': 57, ';': 56, 'return': 54, '(': 40, '.': 38, '': 2, ']': 6, '[': 5, 'Flavor': 4, 'Data': 3, 'static': 1}
{'}\n': 242, ';': 17, ')': 9, 'Fail': 182, 'Parse': 181, 'Mission': 22, 'did': 179, ',': 27, 'BOOL': 69, '_': 15, '(': 8, 'Equals': 231, 'assert': 230, '.': 134, 'Assert': 228, '': 11, '}': 200, '=': 14, 'Trace': 214, 'Stack': 213, 'print': 212, 'e': 207, '{': 10, 'Exception': 206, 'catch': 201, 'Stream': 146, 'Input': 145, 'moment': 147, 'Moments': 193, 'read': 192, 'm': 166, 'try': 187, 'boolean': 178, 'Data': 175, 'new': 151, 'Bytes': 161, 'get': 160, 'xml': 13, 'Array': 154, 'Byte': 153, 'TAG': 139, 'Debug': 136, 'log': 135, 'Utils': 133, 'Xml': 23, 'End': 116, 'create': 20, '+=': 19, 'Moment': 37, 'Choice': 3, 'STR': 16, 'NUM': 44, 'Start': 21, 'String': 12, 'Handling': 7, 'Error': 6, 'Icon': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 207, ';': 60, ')': 39, '.': 54, '(': 63, '': 2, 'STR': 118, '_': 97, 'flags': 104, 'if': 62, 'static': 1}
{'}\n': 19, ';': 18, ')': 7, '(': 6, 'Increment': 15, 'And': 14, 'get': 13, '.': 12, 'return': 9, '{': 8, 'next': 3, 'public': 0}
{'}\n': 89, '}': 49, ';': 30, ')': 6, '(': 5, 'get': 63, '.': 16, '+': 22, 'STR': 21, '_': 20, 'Text': 18, 'set': 17, 'Phrase': 64, 'phrase': 15, '{': 7, 'else': 50, 'DEFAULT_': 27, '': 23, 'PHRASE': 28, 'Panel': 12, 'Creation': 11, 'is': 10, 'if': 8, 'Values': 4, 'Field': 3, 'fill': 2, 'void': 1, 'private': 0}
{'}\n': 150, ';': 68, ')': 36, '(': 6, '.': 31, 'return': 100, '}': 69, 'BOOL': 102, '_': 101, '{': 53, 'if': 38, 'null': 43, 'security': 23, 'Security': 20, '': 19, 'boolean': 2, 'public': 0}
{'}\n': 137, ';': 34, 'modified': 120, 'return': 31, ')': 10, 'j': 60, '(': 4, 'Size': 36, 'set': 35, 'size': 16, '!=': 124, '=': 49, 'boolean': 1, '}': 46, 'i': 68, 'Quick': 91, 'get': 90, ',': 95, '++': 78, 'NUM': 21, '_': 20, '>=': 101, 'limit': 48, 'To': 88, 'From': 87, 'Of': 86, 'index': 85, '.': 15, 'other': 9, 'if': 12, '{': 11, '<': 74, 'int': 47, 'for': 65, '-': 55, 'BOOL': 33, '==': 19, 'List': 8, 'Abstract': 6, '': 5, 'All': 3, 'retain': 2, 'public': 0}
{'}\n': 93, ';': 61, 'byte': 19, 'return': 89, ')': 33, '(': 28, '.': 75, ']': 21, '[': 20, 'Byte': 56, '{': 34, 'public': 0}
{'}\n': 76, ';': 75, ')': 61, 'index': 48, '(': 3, 'add': 1, '.': 70, 'indexes': 69, 'Index': 2, '': 25, 'void': 0}
{'}\n': 52, ';': 48, 'this': 50, 'return': 49, ')': 15, 'STR': 45, '_': 44, ',': 32, 'Store': 5, 'key': 11, '(': 8, 'Null': 37, 'not': 36, '.': 18, 'Assert': 34, '': 1, 'STORE_': 29, 'KEY_': 28, 'SSL_': 27, 'Options': 24, 'Netty': 23, 'Property': 20, 'set': 19, 'properties': 17, '{': 16, 'String': 10, 'Key': 4, 'with': 3, 'Builder': 2, 'public': 0}
{'}\n': 35, ';': 34, ')': 17, ',': 26, 'Path': 16, 'base': 15, '(': 6, '{': 18, 'String': 14, '': 1, 'curator': 10, 'public': 0}
{'}\n': 73, ';': 25, ')': 11, '(': 8, 'String': 27, '.': 19, 'STR': 48, '_': 47, '': 2, '=': 29, 'Character': 18, 'mnemonic': 15, '{': 12, 'static': 1}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'gc': 2, '.': 8, '': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 90, ';': 23, ')': 9, '(': 5, 'right': 54, '.': 14, 'x': 8, 'height': 59, ',': 75, 'left': 26, 'max': 67, 'Math': 65, '': 1, '+': 42, 'NUM': 41, '_': 40, '=': 27, 'size': 38, '{': 10, 'Node': 2, 'private': 0}
{'}\n': 18, ';': 12, '_': 10, 'NUM': 11, '{': 7, ')': 6, '(': 5, 'public': 0}
{'}\n': 106, ';': 51, ')': 50, '{': 21, '}': 79, 'e': 84, '': 4, '(': 3, 'catch': 80, 'in': 66, 'Stream': 15, 'File': 45, 'new': 43, '=': 36, 'Input': 33, 'out': 16, 'Output': 14, 'void': 1, 'public': 0}
{'}\n': 276, ';': 275, ')': 178, ',': 212, '(': 161, 'Compound': 140, '{': 179, '': 132}
{'}\n': 91, '}': 90, ';': 89, ')': 10, '(': 5, '.': 59, 'timer': 58, '{': 11, 'Running': 61, 'is': 60, 'if': 21, '': 6, 'void': 2}
{'}\n': 48, ';': 46, ')': 11, 'o': 10, '(': 7, 'compare': 5, '.': 24, '': 1, '{': 12, 'To': 6, 'int': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 69, ';': 68, ')': 33, '_': 51, '(': 17, '.': 42, '': 4, 'property': 7}
{'}\n': 48, ';': 45, ')': 15, '(': 21, 'Data': 40, 'hist': 39, '.': 19, '{': 16, 'void': 2, 'public': 0}
{'}\n': 49, ';': 21, ')': 5, 'exception': 29, ',': 40, 'STR': 39, '_': 38, '(': 10, 'severe': 36, '.': 17, 'Logger': 34, 'Navi': 33, '': 27, '{': 8, 'SQLException': 28, 'final': 26, 'catch': 24, '}': 23, 'm_connection': 11, 'null': 13, '!=': 12, 'if': 9, 'void': 1}
{'}\n': 46, ';': 45, ')': 18, '(': 7, 'Set': 41, 'Data': 40, 'get': 27, '.': 26, 'Wrapper': 17, 'Est': 16, ',': 33, 'Im': 30, 'Bayes': 4, 'Estimated': 28, 'this': 20, '{': 19, '': 1, 'Editor': 6, 'public': 0}
{'}\n': 34, '{': 11, ')': 10, 'listener': 9, 'Listener': 4, 'Action': 3, '': 6, '(': 5, 'void': 1, 'public': 0}
{'}\n': 39, ';': 33, '}': 34, ')': 6, 'index': 16, 'return': 25, '{': 7, '(': 3, '.': 19, 'string': 18, '<': 17}
{'}\n': 80, '}': 35, ';': 34, ')': 15, '(': 5, 'Message': 74, 'get': 73, '.': 28, 'e': 42, 'Exception': 21, 'Request': 20, 'Api': 19, 'Bad': 18, '': 1, 'new': 64, 'throw': 63, 'granularity': 8, ',': 9, 'Format': 55, 'log': 54, 'GRANULARITY': 52, 'UNKNOWN_': 51, 'error': 48, 'LOG': 46, '{': 22, 'Parse': 40, 'Granularity': 2, 'catch': 36, 'parse': 29, 'Parser': 12, 'return': 25, 'try': 23, 'throws': 16, 'String': 7, 'generate': 3, 'protected': 0}
{'}\n': 18, ';': 17, ')': 5, '(': 4, 'get': 12, '.': 11, '': 1, '{': 6, 'Iterator': 3, 'Word': 2, 'public': 0}
{'}\n': 43, ';': 21, ')': 7, '(': 10, 'leaf': 16, '{': 8, 'if': 9}
{'}\n': 127, ';': 41, ')': 18, '(': 4, '.': 46, '': 24, 'Sync': 21, '{': 30, 'if': 42, '}': 68, '!': 44, '=': 34, 'void': 1}
{'}\n': 25, ';': 24, '_': 21, ')': 8, 'seg': 7, '': 5, '(': 4}
{'}\n': 181, ';': 178, ')': 29, '(': 27, 'size': 26, '.': 114, 'buffer': 74, '{': 30, 'int': 4, 'public': 0}
{'}\n': 152, '}': 150, ';': 36, ')': 35, '(': 5, '.': 24, 'file': 102, '{': 14, 'if': 46, 'files': 21, ':': 103, 'File': 16, '': 6, 'for': 98, 'null': 50, 'Files': 26, 'list': 25, 'dir': 23, '=': 22, ']': 18, '[': 17}
{'}\n': 133, '}': 132, ')': 8, '(': 4, 'equals': 103, '.': 36, 'null': 14, '!=': 95, 'type': 83, 'if': 10, ';': 31, 'get': 87, '=': 28, 'String': 6, '': 5, 'Field': 64, 'Bandwidth': 3, 'bandwidth': 34, '{': 9, '++': 42, 'i': 27, 'size': 37, '<': 33, 'NUM': 30, '_': 29, 'for': 24, 'name': 7, 'remove': 2, 'void': 1, 'public': 0}
{'}\n': 17, ';': 16, ')': 5, '(': 4, 'Millis': 13, 'Time': 12, 'current': 11, '.': 10, 'System': 9, '': 8, 'return': 7, '{': 6, 'now': 3, 'long': 2, 'static': 1, 'public': 0}
{'}\n': 112, ';': 25, ')': 11, '.': 18, 'Buf': 30, 'arg': 9, '}': 101, '=': 15, 'ch': 64, '(': 6, 'append': 92, '||': 82, 'STR': 81, '_': 80, 'if': 76, 'Idx': 43, 'c': 42, 'At': 20, 'char': 13, 'Str': 10, '{': 12, 'length': 54, '<': 50, 'for': 39, 'Buffer': 28, 'String': 3, '': 2, 'new': 32, 'static': 1, 'public': 0}
{'}\n': 167, ';': 55, ')': 31, '(': 14, '.': 125, 'i': 71, 'suffix': 26, '=': 46, 'int': 70, 'for': 68, '{': 32, 'String': 25, '': 24, ',': 23}
{'}\n': 25, ';': 24, ')': 11, 'STR': 22, '_': 21, '(': 8, 'Exception': 14, '': 13, 'new': 17, 'throw': 16, '{': 15, 'throws': 12}
{'}\n': 103, ';': 35, 'result': 28, 'return': 100, '}': 99, ')': 24, 'val': 95, ',': 94, 'name': 73, '(': 5, 'Property': 71, 'set': 90, '.': 61, '=': 29, 'get': 62, 'String': 57, '': 1, 'for': 36, 'Properties': 2, 'new': 30, '{': 25, 'public': 0}
{'}\n': 38, ';': 37, ')': 6, '(': 5, '.': 20, 'rows': 10, '{': 7, '': 1, 'public': 0}
{'}\n': 42, ';': 28, ')': 10, 'component': 8, '(': 5, '}': 29, 'if': 12, '{': 11, '': 6, 'void': 2}
{'}\n': 115, '{': 77, ')': 73, '(': 68, 'Representation': 57, '': 24, 'public': 0}
{'}\n': 40, ';': 39, ')': 12, '(': 7, 'Instance': 25, 'Percent': 34, 'get': 23, '.': 22, 'Format': 11, 'Number': 20, '': 1, ',': 18, 'label': 10, 'this': 14, '{': 13, 'String': 9, 'Generator': 6, 'Label': 5, 'Section': 4, 'Pie': 3, 'Standard': 2, 'public': 0}
{'}\n': 147, ';': 145, ')': 141, ',': 137, '(': 123, '.': 112, '': 18, 'Sequence': 53, 'Char': 52, 'delimiter': 69, '<': 40}
{'}\n': 86, '}': 66, ';': 19, ')': 14, '(': 3, 'Trace': 81, 'Stack': 80, 'print': 79, '.': 44, 'e': 74, '{': 15, 'Exception': 73, 'Method': 55, 'Such': 71, 'No': 70, '': 1, 'catch': 67, 'get': 45, 'cls': 41, '=': 17, 'invocation': 50, 'Class': 37, 'target': 16, '>': 40, '?': 39, '<': 38, 'try': 34, 's': 10, 'selector': 20, 't': 6, ',': 7, 'String': 9, 'Object': 5}
{'}\n': 233, ';': 60, ')': 22, '_': 49, 'STR': 136, '(': 25, '.': 73, '}': 61, '=': 67, '{': 86, 'null': 84, 'msg': 66, 'if': 24, 'get': 74, 'String': 65, '': 12, 'BOOL': 50, 'IOException': 8, 'public': 0}
{'}\n': 136, '}': 37, ';': 36, ')': 15, 'right': 10, ':': 59, 'STR': 58, '_': 57, '?': 56, '(': 4, 'left': 7, 'return': 34, '{': 16, 'else': 69, '+': 93, 'Infinite': 76, 'is': 13, '.': 25, 'Double': 24, '': 1, 'if': 17, 'null': 35, '==': 44, 'int': 46, '&&': 42, 'Integer': 14, 'N': 28, 'Na': 27, 'boolean': 12, ',': 8, 'compute': 3, 'String': 2, 'private': 0}
{'}\n': 27, ';': 26, ')': 13, 'listener': 12, '(': 6, 'Listener': 5, 'Change': 4, 'Property': 3, 'remove': 2, '.': 18, 'Support': 17, 'property': 15, '{': 14, '': 8, 'void': 1, 'public': 0}
{'}\n': 336, '}': 315, ';': 53, ')': 28, 'e': 320, ',': 8, 'STR': 51, '_': 50, '(': 4, 'XMLException': 32, 'Kettle': 31, '': 5, 'new': 324, 'throw': 323, '{': 33, 'Exception': 319, 'catch': 316, 'stepnode': 7, 'Value': 46, 'Tag': 45, 'get': 44, '.': 37, 'XMLHandler': 42, '=': 40, 'No': 300, 'task': 299, 'this': 36, 'Id': 282, 'segment': 281, 'ID': 264, 'partition': 263, 'Type': 246, 'Data': 245, 'measure': 207, 'Request': 227, 'Member': 226, 'update': 225, 'Count': 132, 'Dimension': 189, 'complex': 188, 'Mapping': 171, 'Dims': 151, 'Dictionary': 150, 'no': 149, 'dimension': 131, 'Name': 39, 'String': 22, 'Lens': 77, 'Dim': 76, 'fact': 75, 'Size': 58, 'Row': 57, 'output': 56, 'tabel': 38, 'try': 34, 'throws': 29, 'counters': 27, '>': 15, 'Counter': 25, '<': 11, 'Map': 19, 'databases': 16, 'Meta': 14, 'Database': 13, 'List': 10, 'Node': 6, 'XML': 3, 'load': 2, 'void': 1, 'public': 0}
{'}\n': 106, ';': 34, 'hash': 104, 'return': 103, '}': 102, ']': 11, 'i': 38, '[': 10, ')': 51, '(': 7, '+': 85, 'NUM': 41, '_': 40, '=': 39, '{': 52, '<': 44, 'int': 2, 'for': 35, 'public': 0}
{'}\n': 471, '}': 59, ';': 58, ')': 13, 'S': 465, 'I2': 329, '': 5, '.': 28, 'Opcodes': 52, '(': 3, 'Insn': 49, '{': 14, 'TYPE': 31, 'SHORT_': 451, 'Type': 6, '==': 25, 'to': 12, 'if': 15, 'else': 60, 'L': 83, 'LONG_': 69, 'F': 56, 'FLOAT_': 42, 'D': 151, 'DOUBLE_': 30, 'C': 357, 'CHAR_': 343, 'B': 330, 'BYTE_': 316, ',': 8, 'INT_': 108, 'cast': 2, 'I': 99, 'L2': 245, 'from': 7, 'F2': 150, 'D2': 55, '!=': 18, 'final': 4, 'public': 0}
{'}\n': 41, ';': 40, 'group': 9, '': 7, ',': 17, 'Name': 10, 'String': 8, '(': 6}
{'}\n': 85, '}': 76, ';': 41, ')': 7, '(': 6, 'clear': 3, '.': 21, 'Files': 5, 'file': 44, 'next': 66, 'it': 50, 'File': 43, '': 31, '=': 34, '{': 8, 'Next': 53, 'has': 52, 'while': 48, 'null': 15, 'temp': 12, '&&': 17, '!=': 14, 'if': 9, 'Temp': 4, 'private': 0}
{'}\n': 178, ';': 177, '_': 142, ')': 84, '(': 53, '.': 112, 'buff': 81, '{': 85, 'Buffer': 64, 'Byte': 63, '': 62, 'read': 3}
{'}\n': 112, '}': 94, ';': 25, ')': 6, '(': 5, 'close': 106, '.': 50, 'cleaner': 29, '{': 10, 'null': 31, '!=': 100, 'if': 97, 'finally': 95, 'Cancelled': 89, 'is': 77, 'future': 47, 'False': 84, 'assert': 62, 'Done': 78, 'True': 73, 'get': 67, '': 8, 'new': 16, 'submit': 51, 'e': 14, '=': 15, '>': 46, '<': 44, 'Future': 43, 'try': 33, 'Cleaner': 28, 'Pool': 20, 'NUM': 23, '_': 22, 'Join': 19, 'Fork': 18, 'Service': 13, 'Executor': 12, 'Throwable': 9, 'throws': 7, 'Submit': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 98, ';': 35, 'result': 14, 'return': 95, ')': 15, 'bottom': 92, '.': 30, 'this': 49, 'top': 62, '(': 5, 'Height': 82, 'get': 44, 'area': 9, ',': 10, 'right': 77, 'left': 51, 'Width': 67, 'Y': 56, 'X': 45, 'Rect': 40, 'set': 39, '}': 36, 'Double': 32, '': 1, 'D': 3, 'Rectangle2': 2, 'new': 26, '=': 25, '{': 16, 'null': 21, '==': 20, 'if': 17, 'public': 0}
{'}\n': 39, ';': 38, ')': 17, ',': 27, 'req': 11, '(': 25, '{': 21, 'Request': 10, 'Query': 9, 'Solr': 8, '': 2, 'String': 3}
{'}\n': 172, '}': 60, ';': 59, 'stats': 41, ')': 15, '(': 5, '.': 50, 'Stats': 130, '': 129, '=': 127, '{': 20, 'null': 119, 'void': 1, 'protected': 0}
{'}\n': 1230, '}': 97, ';': 29, ')': 7, '(': 6, 'Complete': 1225, 'plugin': 1224, '.': 81, 'Host': 1222, 'my': 1221, 'BOOL': 13, '_': 12, '=': 11, 'IActive': 10, 'am': 9, 'NUM': 70, ',': 271, 'STR': 92, 'Progress': 916, 'update': 915, '{': 8, 'finally': 1203, 'get': 297, 'Feedback': 89, 'show': 88, 'e': 1188, 'Exception': 1187, '': 1, 'catch': 1184, 'close': 1150, 'Date': 1143, 'new': 264, '+': 1120, 'Entry': 1116, 'Metadata': 1115, 'add': 1114, 'Name': 1123, 'Descriptive': 1122, 'progress': 882, '/': 777, 'row': 536, '*': 775, 'int': 692, 'if': 78, 'col': 553, 'Data': 315, 'no': 314, '!=': 578, '++': 547, '<': 542, 'for': 533, 'Value': 322, 'No': 320, 'num': 303, 'Number': 298, 'Header': 34, 'Raster': 267, 'Whitebox': 266, '[': 185, '==': 137, 'args': 80, 'return': 95, '<=': 83, 'length': 82, 'null': 36, 'String': 31, 'run': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 17, ';': 16, ')': 7, 'filename': 6, '(': 3, '.': 10, '{': 8, 'String': 5, '': 4}
{'}\n': 126, '}': 125, ';': 29, ':': 23, 'default': 120, 'return': 24, 'NUM': 22, '_': 2, 'case': 20, '': 67, '{': 13, ')': 12, '(': 8, 'int': 9}
{'}\n': 145, ';': 33, ')': 21, '.': 28, '(': 6, 'D': 3, 'Size2': 2, '': 1, 'new': 84, 'return': 123, 'height': 112, ',': 11, 'width': 70, 'NUM': 101, '_': 100, '-': 94, 'Double': 90, 'Rectangle2': 80, '=': 26, 'NONE': 66, 'Constraint': 19, 'Rectangle': 18, 'g2': 15, 'arrange': 4, 'get': 29, 'blocks': 25, 'Block': 8, 'Blocks': 30, 'container': 10, 'List': 24, '{': 22, 'constraint': 20, 'Graphics2': 13, 'Container': 9, 'FN': 5, 'protected': 0}
{'}\n': 101, ';': 99, ')': 19, 'args': 18, ',': 9, 'method': 12, '(': 5, 'proxy': 8, 'return': 58, '{': 45, 'Throwable': 22, '': 1, 'throws': 20, ']': 17, '[': 16, 'Object': 2, 'Method': 11}
{'}\n': 51, ';': 32, 'Value': 21, 'ret': 20, 'return': 47, '_': 43, ')': 17, ',': 14, '(': 4, '.': 24, '=': 22, 'String': 6, '': 5}
{'}\n': 102, '}': 84, ';': 67, 'i': 39, '{': 29, 'else': 85, ')': 28, 'NUM': 74, '_': 73, '(': 49, 'if': 69, '.': 61, 'int': 1, 'k': 20, 'public': 0}
{'}\n': 33, ';': 32, ')': 17, '(': 3, 'Bytes': 28, 'get': 27, '.': 26, 'the': 15, 'send': 2, '{': 18, '': 12, 'void': 1, 'public': 0}
{'}\n': 286, '}': 141, ';': 31, 'BOOL': 282, '_': 67, '=': 24, 'repeat': 212, 'NUM': 68, 'Count': 225, ')': 20, '(': 15, 'Char': 39, 'Key': 17, 'get': 27, '.': 26, 'evt': 19, 'Of': 178, 'value': 177, 'String': 175, '': 16, ',': 166, 'Source': 170, 'CHAR': 248, 'INSERT_': 247, 'Action': 148, 'execute': 157, 'return': 139, 'STR': 237, '-': 235, 'c': 33, '+=': 232, '*=': 226, '{': 21, 'Digit': 218, 'is': 217, 'Character': 99, '&&': 54, 'if': 43, 'Grab': 201, 'handle': 200, 'null': 197, '!=': 46, 'grab': 194, 'bindings': 155, 'Bindings': 114, 'current': 113, 'o': 111, 'Listener': 149, 'instanceof': 125, 'else': 142, 'Hashtable': 127, 'Stroke': 86, 'key': 13, 'Object': 110, 'Case': 103, 'Upper': 102, 'to': 101, '>=': 74, '==': 66, 'MASK': 64, 'ALT_': 63, 'Event': 18, '&': 57, 'modifiers': 23, 'UNDEFINED': 53, 'CHAR_': 52, 'char': 32, 'Modifiers': 28, 'int': 22, 'Typed': 14, 'void': 12, 'public': 11}
{'}\n': 78, ';': 77, 'mapped': 52, ')': 65, '(': 48, '.': 60, 'String': 6, '': 5}
{'}\n': 106, '}': 54, ';': 28, ')': 10, 'STR': 51, '_': 50, '(': 4, 'Exception': 19, 'Object': 3, 'Invalid': 46, '': 5, 'new': 44, 'throw': 43, '{': 20, 'null': 33, 'if': 29, '==': 32, 'Read': 24, 'default': 23, '.': 22, 'Found': 18, 'Not': 17, 'Class': 16, ',': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'read': 2, 'void': 1, 'private': 0}
{'}\n': 78, ';': 33, ')': 19, '(': 10, 'build': 74, '.': 25, 'builder': 37, 'return': 71, 'signature': 60, 'data': 66, 'signatures': 18, ':': 61, ']': 16, '[': 15, 'byte': 14, 'for': 55, 'NUM': 31, '_': 30, 'Num': 49, 'small': 48, 'Builder': 36, 'Script': 3, '': 2, 'new': 39, '=': 38, '<=': 29, 'size': 26, 'Argument': 22, 'check': 21, '{': 20, '>': 17, '<': 13, 'List': 12, 'Bytes': 9, 'Input': 7, 'Sig': 6, 'Multi': 5, 'create': 4, 'static': 1, 'public': 0}
{'}\n': 197, ';': 58, '(': 38, 'if': 150, '=': 32, '{': 27, 'm1': 94, 'NUM': 85, '_': 84, 'i': 62, 'int': 61, 'for': 59, ')': 26, '.': 35, ']': 30, '[': 29, 'c2': 17, ',': 12, 'static': 1}
{'}\n': 99, ';': 45, 'BOOL': 44, '_': 43, 'return': 42, '}': 46, '{': 20, ')': 19, 'Date': 6, 'base': 7, '(': 4, 'after': 73, '.': 25, 'end': 17, '&&': 68, 'before': 35, 'start': 12, 'if': 21, '||': 31, 'equals': 26, '': 5, ',': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 73, ';': 70, ')': 30, 'listener': 17, '(': 4, 'add': 2, '.': 33, 'listeners': 32, '{': 31, 'Listener': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 327, ';': 326, 'STR': 315, '_': 314, '{': 309, ')': 308, '(': 305, 'HTML': 59, 'Text': 53, 'Tip': 6, 'String': 3, '': 2, 'public': 0}
{'}\n': 127, ';': 63, '}': 104, ')': 17, '(': 6, 'sublen': 48, ',': 11, 'offset': 13, 'buffer': 10, 'arraycopy': 67, '.': 52, 'System': 65, '': 1, 'min': 53, 'Math': 51, '=': 49, 'int': 12, '{': 18, '_': 43, 'length': 16, ']': 9, '[': 8, 'byte': 7, 'write': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 55, ';': 19, ')': 9, '+': 51, 'STR': 47, '_': 26, '(': 5, 'set': 22, '.': 15, 'connection': 8, 'BOOL': 27, 'Input': 34, 'Do': 23, 'Output': 24, '{': 13, '': 6, 'throws': 10, 'URLConnection': 7}
{'}\n': 70, ';': 22, ')': 13, 'STR': 20, '_': 19, '(': 4, 'append': 17, '.': 16, 'xml': 15, 'String': 6, '': 5}
{'}\n': 19, ';': 18, 'extra': 10, ')': 13, '(': 12, 'Extra': 8, '': 1, '@': 0}
{'}\n': 27, ';': 26, ')': 15, '(': 6, '.': 20, 'Contents': 5, '{': 16, '>': 13, '': 7, 'public': 0}
{'}\n': 70, ';': 68, 'sql': 39, ')': 20, '(': 43, '{': 30, '': 9, 'String': 10, 'static': 1}
{'}\n': 40, ';': 39, ')': 18, '(': 3, 'Exception': 28, '': 25, 'new': 24, 'throw': 23, '{': 22, ',': 8, 'length': 13, 'int': 9, 'offset': 10, ']': 6, '[': 5, 'byte': 4, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 90, ';': 51, 'Index': 3, 'resource': 30, 'return': 75, ')': 21, 'Type': 44, '(': 42, 'Resource': 28, '=': 32, '': 12, '{': 26, 'Exception': 25, 'Policy': 24, 'throws': 22, 'private': 0}
{'}\n': 280, ';': 150, ')': 109, '(': 104, '.': 141, '': 190, '=': 162, 'Processor': 140, 'offline': 139, '{': 110, 'void': 1}
{'}\n': 43, ']': 27, '[': 34, 'Starts': 26, '(': 5, ',': 9, 'int': 6}
{'}\n': 154, ';': 50, ')': 65, '.': 61, 'type': 128, '(': 9, '': 10, 'new': 117, '}': 114, 'get': 62, 'clazz': 60, 'if': 70, '{': 69, '=': 59, 'null': 55, '>': 45, '<': 42, 'Class': 37, 'static': 1}
{'}\n': 262, ';': 214, ')': 5, '(': 4, '.': 241, 'set': 217, 'STR': 127, '_': 126, 'Exception': 124, 'No': 90, '': 48, 'new': 16, 'throw': 15, 'is': 10, 'if': 7, '{': 6}
{'}\n': 68, ';': 52, ')': 20, 'STR': 46, '_': 45, '(': 14, 'Case': 61, 'Ignore': 60, 'equals': 59, '.': 35, 'Value': 30, 'prop': 29, '!': 55, 'return': 53, ',': 47, 'Action': 43, 'Property': 42, 'Get': 41, '': 27, 'new': 39, 'Privileged': 37, 'do': 36, 'Controller': 34, 'Access': 33, '=': 31, 'String': 28, '{': 21, 'use': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 170, '}': 100, ';': 33, ')': 10, 'local': 22, '(': 4, 'Disk': 155, 'remove': 144, '.': 44, 'Map': 119, 'Storages': 118, 'opened': 117, 'writer': 115, '{': 18, 'null': 130, '!=': 129, 'if': 39, 'get': 24, '=': 23, 'Writer': 114, 'Storage': 3, '': 5, 'is': 45, 'CLOSED': 97, 'STORAGE_': 95, 'Enum': 92, 'Code': 91, 'Error': 90, ',': 15, 'STR': 81, '_': 80, '+': 82, 'Exception': 14, 'Business': 13, 'new': 75, 'throw': 74, 'Data': 7, 'recorder': 68, 'equals': 64, 'Objects': 62, '&&': 60, 'Scheduled': 56, 'Recording': 46, 'Recorder': 43, 'storage': 8, '||': 50, 'On': 47, 'synchronized': 34, 'Object': 28, 'Local': 25, 'IOException': 17, 'throws': 11, 'void': 1, 'public': 0}
{'}\n': 26, ';': 19, ')': 9, 'request': 8, '(': 5, 'return': 20, '{': 10, 'Request': 7, '': 1, 'public': 0}
{'}\n': 225, ';': 64, '}': 213, '{': 88, ')': 46, '(': 19, 'get': 59, '.': 58, '': 22, 'Token': 25, 'if': 104, '=': 55, 'Index': 61, 'int': 51}
{'}\n': 55, ';': 54, ')': 28, '(': 21, '{': 29, 'Ok': 15, '': 8}
{'}\n': 110, ';': 41, ')': 9, '(': 4, '': 5, '{': 13, '}': 67, 'load': 2, 'Stream': 25, 'Input': 24, '=': 33, 'IOException': 12, 'throws': 10}
{'}\n': 165, ';': 41, ')': 24, 'param': 31, ',': 16, 'Id': 15, 'Group': 9, 'lun': 13, '(': 10, 'Lun': 8, 'modify': 153, '.': 107, 'req': 138, 'return': 150, 'Client': 147, '_kh': 146, 'Requests': 137, '': 1, 'new': 33, '=': 32, 'set': 108, '}': 123, 'Add': 47, 'add': 117, 'Param': 30, 'Base': 78, 'VNXe': 2, '{': 25, 'luns': 23, ':': 72, 'String': 12, 'for': 66, '>': 22, '<': 19, 'List': 18, 'Array': 55, 'Modify': 29, 'From': 7, 'Luns': 6, 'Command': 3, 'public': 0}
{'}\n': 187, ';': 41, ')': 19, '(': 17, '.': 69, '}': 115, '{': 25, 'locators': 68, '': 5, 'Map': 45, 'new': 32}
{'}\n': 21, ';': 20, ')': 9, '(': 3, 'ordinal': 16, '.': 15, 'return': 11, '{': 10, '': 4}
{'}\n': 82, ';': 25, ')': 24, 'constraints': 16, ',': 78, '(': 3, 'Panel': 67, '.': 27, 'NUM': 50, '_': 49, '=': 17, 'weighty': 61, 'weightx': 54, 'gridy': 40, '': 12, 'Constraints': 15, 'Bag': 14, 'Grid': 13, 'fill': 28, 'new': 18, 'void': 1, 'private': 0}
{'}\n': 58, ';': 57, ')': 13, 'Name': 12, 'provider': 11, 'STR': 44, '_': 43, '(': 7, '{': 14, 'String': 10, '': 9, 'public': 0}
{'}\n': 30, ';': 29, ')': 13, '(': 8, '': 2, 'Connection': 7, 'Http': 3, '{': 14, 'requests': 12, 'Request': 10, 'to': 5, 'URLConnection': 4, 'static': 1, 'public': 0}
{'}\n': 46, ';': 45, ')': 44, '.': 39, 'map': 32, '>': 26, 'Integer': 25, '': 7, '<': 16, 'Map': 9, 'Hash': 14, '(': 5, 'public': 0}
{'}\n': 23, ';': 22, ')': 10, 'port': 9, 'host': 6, 'this': 12, '{': 11, 'int': 8, ',': 7, 'String': 5, '': 1, '(': 3, 'public': 0}
{'}\n': 121, '}': 98, ';': 29, ')': 5, '(': 4, 'close': 114, '.': 113, 'Conn': 48, '{': 9, 'null': 50, '!=': 106, 'if': 101, 'finally': 99, 'STR': 73, '_': 13, ',': 15, 'try': 52, '=': 49, 'Connection': 45, '': 7, 'Exception': 8, 'throws': 6, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 88, ';': 47, ')': 29, '(': 4, '>': 44, 'Rule': 25, 'Rewrite': 24, 'Block': 70, 'Statement': 69, '': 1, '<': 39, 'List': 38, 'Array': 37, 'new': 35, '=': 34, 'Set': 33, '_sb': 59, 'add': 52, '.': 51, '_dag': 31, 'Hop': 10, '{': 30, 'Rewriter': 3, 'Program': 2, 'public': 0}
{'}\n': 99, ';': 21, 'menu': 12, 'return': 96, ')': 7, '(': 6, 'Parent': 90, 'get': 89, 'CAction': 37, '': 1, 'new': 14, '.': 23, 'add': 33, 'STR': 19, '_': 18, 'Mnemonic': 25, 'set': 24, 'JMenu': 2, '=': 13, 'final': 9, '{': 8, 'Menu': 5, 'create': 3, 'private': 0}
{'}\n': 70, ';': 36, ')': 15, '(': 5, 'write': 29, '.': 28, 'os': 10, 'Int': 30, '{': 19, 'IOException': 18, '': 6, 'throws': 16, 'Stream': 9, 'Output': 8, 'Data': 7, 'void': 2}
{'}\n': 123, ';': 94, ')': 11, '(': 7, 'Name': 6, 'Valid': 5, 'length': 76, '.': 16, 'str': 10, 'NUM': 70, '_': 23, 'is': 3, 'if': 13, '{': 12, 'String': 9, '': 8, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 64, ';': 59, '}': 60, ')': 10, '(': 9, '.': 53, 'commands': 52, '{': 11, 'Commands': 8}
{'}\n': 69, '}': 68, ')': 10, 'directory': 16, '(': 4, '.': 24, ';': 40, '_': 37, ',': 36, '': 5, '{': 11, 'Directory': 15, 'void': 1}
{'}\n': 52, ';': 42, 'thread': 20, 'return': 49, ')': 16, '(': 8, 'start': 45, '.': 32, ',': 12, 'Stream': 7, 'get': 33, 'self': 11, 'Dumper': 29, 'Text': 28, '': 2, 'new': 22, 'Thread': 3, '=': 21, '{': 17, 'Appendable': 14, 'Process': 5, 'consume': 4, 'static': 1, 'public': 0}
{'}\n': 78, ';': 31, 'this': 76, 'return': 75, '}': 73, ')': 11, 'len': 15, ',': 48, '+': 67, 'index': 42, '(': 6, 'Impl': 62, 'delete': 4, '{': 12, 'NUM': 23, '_': 22, '>=': 56, 'if': 32, 'str': 10, 'Of': 45, '=': 16, 'int': 14, '>': 35, 'length': 27, '.': 26, ':': 24, '?': 21, 'null': 20, '==': 19, 'String': 9, '': 1, 'First': 5, 'Builder': 3, 'Str': 2, 'public': 0}
{'}\n': 383, ';': 96, 'Likelihood': 36, 'log': 35, 'return': 379, '*': 314, ')': 23, ']': 128, 'i': 180, '[': 127, 'd_i': 146, '(': 3, 'NUM': 124, '_': 6, 'n_i': 129, '-': 325, 'LOGTWOPI': 339, '': 1, '.': 90, 'Util': 103, 'Math': 316, '+=': 214, '{': 71, '++': 192, 'm': 112, '<': 26, '=': 5, 'int': 98, 'for': 177, 'double': 34, '}': 261, 'relation': 44, ',': 8, 'Function': 61, 'distance': 68, 'cluster': 205, 'Cluster': 78, 'Of': 234, 'variance': 233, 'size': 116, 'n': 121, 'next': 209, 'it': 169, '>': 33, 'Model': 53, 'Mean': 52, 'extends': 29, '?': 49, 'Next': 188, 'has': 187, 'iterator': 173, 'clusters': 87, 'Iterator': 155, 'new': 131, 'final': 97, 'dimensionality': 105, 'Relation': 39, 'dim': 99, 'Clusters': 93, 'All': 92, 'get': 91, 'clustering': 55, 'List': 73, 'V': 28, 'super': 64, 'Distance': 60, 'Vector': 32, 'Number': 31, 'Clustering': 47, 'static': 25, 'public': 24, 'STR': 7, 'url': 19, 'authors': 4, 'Reference': 2, '@': 0}
{'}\n': 86, ';': 44, 'return': 83, '}': 82, ')': 20, '(': 12, '.': 39, 'Param': 72, '=': 30, ']': 8, '[': 7, '{': 21, '++': 62, 'size': 40, '<': 4, 'NUM': 51, '_': 50, 'int': 47, 'for': 45, '': 2, 'params': 19, '>': 18, 'String': 17, 'List': 14, 'static': 1}
{'}\n': 310, ';': 309, ')': 39, '(': 33, '.': 276, 'disco': 68, '{': 40, 'boolean': 1}
{'}\n': 32, ';': 30, ')': 21, '(': 19, 'Size': 27, 'To': 26, 'trim': 3, '.': 24, '{': 22, 'void': 2, 'public': 1}
{'}\n': 19, ';': 18, ')': 6, 'PROMPT_': 14, '': 13, '(': 5, 'contains': 2, '.': 10, 'prompts': 9, 'return': 8, '{': 7, 'boolean': 1, 'public': 0}
{'}\n': 80, '}': 79, ';': 47, ')': 23, 'right': 29, ',': 9, 'NUM': 74, '_': 73, '+': 72, 'middle': 33, 'left': 27, '(': 26, 'partition': 35, '=': 34, 'int': 10, '{': 24, 'if': 25, ']': 12, '[': 11, 'static': 1}
{'}\n': 143, ';': 27, ')': 14, 'Opacity': 13, 'maintain': 12, '!': 138, ',': 10, 'RGB': 24, 'new': 31, '(': 6, 'From': 128, 'create': 127, '.': 22, 'Image': 2, 'Encoded': 124, '': 1, 'return': 122, '}': 120, ']': 18, 'width': 43, '*': 107, 'y': 65, '+': 105, 'x': 81, '[': 17, 'rgb': 19, '=': 20, '{': 15, '++': 75, '<': 71, 'NUM': 68, '_': 67, 'int': 16, 'for': 62, 'height': 53, 'Height': 58, 'get': 23, 'image': 9, 'Width': 48, 'length': 39, 'boolean': 11, 'public': 0}
{'}\n': 44, ';': 25, ')': 11, '(': 6, 'With': 37, 'starts': 36, '.': 19, 'Type': 16, 'content': 15, '&&': 32, 'null': 31, '!=': 30, 'return': 26, 'Content': 21, 'get': 20, '=': 17, 'String': 14, '': 7, '{': 12, 'request': 10, 'Request': 9, 'Sip': 8, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 139, '}': 138, ';': 59, ')': 42, '(': 4, '.': 38, 'extent': 15, 'Key': 77, 'table': 76, ',': 95, '': 7, 'new': 79, '=': 27, '{': 44, 'if': 105, 'length': 102, 'NUM': 97, '_': 96, 'All': 91, 'read': 67, 'is': 45, ']': 75, '[': 74, 'byte': 73, 'Long': 68, 'Util': 65, 'Bits': 64, 'long': 60, 'SIZE': 57, 'BLOCK_': 56, '-': 54, 'Segment': 13, 'void': 1, 'private': 0}
{'}\n': 128, ';': 126, ')': 87, '.': 109, 'time': 81, 'return': 89, '{': 88, '': 48, '(': 28, 'Time': 4}
{'}\n': 757, ';': 293, ')': 105, '(': 62, 'get': 661, '.': 511, 'String': 18, '': 14, ',': 24, 'Key': 599, '>': 119, 'Object': 70, '<': 16, 'Map': 15, '=': 202, 'map': 154, '{': 106, 'static': 9, 'public': 8}
{'}\n': 188, ';': 40, 'return': 185, '}': 154, ')': 10, '(': 5, 'node': 83, 'Element': 7, '': 1, 'instanceof': 95, 'if': 92, 'i': 68, 'item': 87, '.': 48, 'list': 44, '=': 33, 'Node': 42, '{': 15, '++': 78, 'len': 56, '<': 74, 'NUM': 71, '_': 70, 'int': 55, 'for': 65, 'Length': 61, 'get': 49, 'Nodes': 51, 'Child': 50, 'el': 8, 'List': 43, 'Impl': 37, 'new': 34, 'Exception': 14, 'Converter': 13, 'throws': 11, '_deserialize': 3, 'private': 0}
{'}\n': 134, '}': 75, ';': 19, ')': 10, 'NUM': 72, '_': 47, '(': 4, 'exit': 69, '.': 39, 'System': 67, '': 1, 'Trace': 120, 'Stack': 119, 'print': 61, 'e': 113, '{': 11, 'Exception': 112, 'catch': 109, 'STR': 57, 'info': 87, 'logger': 85, '!': 78, 'if': 51, 'Help': 62, 'Option': 54, 'has': 53, 'BOOL': 48, ',': 44, 'args': 9, 'Options': 13, 'cli': 12, 'parse': 40, 'parser': 26, '=': 14, 'Line': 24, 'command': 35, 'Parser': 25, 'Gnu': 30, 'new': 28, 'Command': 23, 'try': 20, 'create': 15, ']': 8, '[': 7, 'String': 6, 'CLI': 3, 'public': 0}
{'}\n': 104, ';': 36, 'Bytes': 6, 'c': 22, 'return': 100, '}': 82, ')': 17, 'e': 87, '(': 7, 'Exception': 86, '': 39, 'new': 25, 'throw': 90, '{': 18, 'catch': 83, 'length': 30, '.': 29, 'array2': 16, ',': 12, 'array1': 11, 'NUM': 47, '_': 46, 'arraycopy': 42, 'System': 40, 'try': 37, ']': 4, '+': 31, '[': 3, 'byte': 2, '=': 24, 'concat': 5, 'static': 1, 'private': 0}
{'}\n': 198, '}': 170, ';': 51, ')': 27, '(': 4, 'Batch': 176, '.': 35, 'Statement': 173, ',': 9, 'STR': 135, '_': 49, 'debug': 132, 'logger': 130, 'Value': 79, '=': 48, '': 5, 'SQLException': 30, 'throws': 28, 'connection': 26, 'Connection': 25, 'Id': 8, 'local': 16, 'String': 6, 'full': 7}
{'}\n': 86, ';': 25, ')': 12, '.': 67, 'return': 77, 'NUM': 18, '_': 17, '(': 8, '=': 16, 'v': 15, '{': 13}
{'}\n': 28, ';': 27, ')': 14, 'Cleared': 24, '(': 22, '.': 20, 'm': 16, '{': 15, 'void': 1, 'public': 0}
{'}\n': 28, ';': 27, ')': 11, 'Listener': 4, 'a': 9, ',': 23, 'class': 22, '.': 15, 'Item': 3, '': 6, '(': 5, 'List': 14, 'listener': 13, '{': 12, 'void': 1, 'public': 0}
{'}\n': 191, ';': 34, ')': 13, '(': 12, 'elements': 187, '.': 36, 'result': 23, 'return': 184, '_': 44, ',': 49, 'STR': 45, '+': 46, 'Option': 8, '': 1, 'new': 25, 'Element': 38, 'add': 37, 'NUM': 54, '>': 9, '<': 6, 'Vector': 16, '=': 24, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 52, ';': 51, ')': 15, 'NUM': 48, '_': 47, '(': 8, 'Id': 39, '.': 28, '': 2, 'Levy': 4, 'Mosaic': 3, 'return': 17, '{': 16, 'create': 5, 'static': 1, 'public': 0}
{'}\n': 97, ';': 73, 'ret': 24, 'return': 93, '(': 4, ')': 7, '.': 28, '=': 25, 'int': 1, '{': 8, 'public': 0}
{'}\n': 30, ';': 29, '.': 25, ')': 21, 'predicate': 20, '': 3, 'public': 0}
{'}\n': 117, '}': 33, ';': 32, ')': 20, '(': 9, 'Tag': 49, 'set': 96, '.': 41, 'Child': 8, 'Content': 7, 'm': 12, 'lp': 62, 'Params': 61, 'Layout': 57, 'Height': 19, 'Bar': 18, 'status': 17, 'Margin': 4, 'top': 85, 'get': 48, '': 10, 'Frame': 56, '=': 63, '{': 21, 'equals': 42, 'ADDED': 40, 'MARGIN_': 39, 'TAG_': 38, 'if': 22, 'return': 31, 'null': 28, '==': 27, 'int': 16, ',': 15, 'View': 11, 'Top': 5, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 145, ';': 22, 'data': 57, 'return': 142, '}': 53, ')': 14, 'NUM': 37, '_': 36, ',': 111, '+': 119, 'i': 71, '(': 9, 'At': 107, 'char': 106, '.': 27, 's': 18, 'digit': 102, 'Character': 100, '': 10, '<<': 115, 'byte': 1, '=': 25, ']': 3, '/': 63, '[': 2, '{': 15, '+=': 81, 'len': 24, '<': 77, 'int': 23, 'for': 68, 'new': 59, '%': 35, 'if': 32, 'length': 28, 'String': 5, 'Array': 8, 'Byte': 7, 'To': 6, 'hex': 4, 'static': 0}
{'}\n': 157, ';': 134, ')': 48, 'STR': 127, '_': 80, '+': 128, '(': 101, '.': 70, '{': 93, 'if': 94, 'NUM': 81, ',': 14, '': 7, 'schema': 21, 'private': 0}
{'}\n': 86, ';': 33, ')': 32, '.': 45, 'buffer': 60, '}': 78, 'i': 37, '(': 35, 'append': 62, '_': 39, '{': 51, 'length': 46, '<': 43, 'NUM': 40, '=': 38, 'int': 36, 'for': 34, 'String': 5, '': 4, ',': 13, ']': 11, '[': 10, 'private': 0}
{'}\n': 28, ';': 27, ')': 7, ',': 23, '(': 6, '.': 13, 'Array': 5, '': 1, 'cast': 14, 'Type': 12, '{': 8}
{'}\n': 171, ';': 52, 'return': 168, ')': 25, '(': 11, '.': 97, '': 5, '{': 138, '=': 93, 'Writable': 58}
{'}\n': 21, ';': 20, ')': 7, '(': 4, 'Seqno': 3, 'get': 15, '.': 14, '{': 8, 'long': 5, 'public': 0}
{'}\n': 42, ';': 20, ')': 12, '(': 4, 'Changed': 38, 'Set': 37, 'Data': 36, 'notify': 35, '.': 15, 'Adapter': 33, 'pager': 32, 'Color': 23, 'Background': 22, 'add': 2, 'fragment': 11, 'fragments': 14, '{': 13, 'Fragment': 10, '': 6, 'Null': 8, 'Non': 7, '@': 5, 'Slide': 3, 'void': 1, 'public': 0}
{'}\n': 76, ';': 19, ')': 8, 'count': 15, '(': 4, 'rail': 70, 'String': 2, 'to': 67, '.': 29, 'Integer': 65, '': 1, 'return': 63, '}': 62, '++': 60, '{': 13, 'Previous': 54, 'get': 53, 'p': 45, '=': 16, 'null': 47, '!=': 46, 'Item': 6, 'NUM': 18, '_': 17, 'int': 14, 'Exception': 12, 'Process': 11, 'throws': 9, 'item': 7, 'process': 3, 'public': 0}
{'}\n': 20, ';': 19, ')': 8, 'value': 7, '(': 4, 'add': 12, '.': 11, '{': 9, '': 5, 'public': 0}
{'}\n': 18, ';': 17, ')': 8, 'tail': 6, '(': 3, '{': 9, 'int': 5, 'public': 0}
{'}\n': 251, ';': 51, ')': 35, '(': 5, 'close': 247, '.': 41, 'out': 200, 'STR': 46, '_': 45, ',': 11, 'SEVERE': 239, '': 6, 'Level': 236, 'log': 231, 'Error': 227, 'check': 226, 'if': 62, 'flush': 218, 'output': 211, 'doc': 31, 'Writer': 199, 'get': 190, 'response': 16, '=': 73, 'Print': 198, '}': 162, 'Body': 191, 'servlet': 21, 'request': 10, 'Footer': 180, 'add': 156, 'Env': 80, '{': 39, 'DEBUG': 172, '&&': 166, 'debug': 34, 'cookie': 25, 'Cookie': 71, 'NUM': 131, 'Age': 137, 'Max': 136, 'set': 42, 'else': 143, '==': 129, 'size': 126, 'Properties': 24, 'Path': 115, 'BOOL': 109, 'Secure': 106, 'Comment': 97, 'Encode': 87, 'properties': 86, 'INFO': 84, 'COOKIE_': 83, 'new': 74, 'null': 67, '!=': 66, 'Type': 56, 'Content': 55, 'Header': 43, 'IOException': 38, 'throws': 36, 'boolean': 33, 'Doc': 30, 'Servlet': 8, 'Http': 7, 'Response': 4, 'Request': 9, 'create': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 45, ';': 29, ')': 22, 'o': 9, '(': 6, 'Value': 39, 'Long': 3, 'to': 4, 'Of': 35, 'value': 34, '.': 33, '': 2, 'return': 23, 'instanceof': 19, 'if': 16, '{': 15, 'Object': 8, 'static': 1, 'public': 0}
{'}\n': 246, ';': 21, ')': 6, 'constraints': 12, ',': 242, '(': 5, 'add': 239, '.': 23, '': 8, 'set': 140, '_': 38, '=': 13, 'NUM': 39, 'Constraints': 11, 'Bag': 10, 'Grid': 9, 'new': 14, 'void': 1}
{'}\n': 46, ';': 45, ')': 44, '(': 10, '.': 39, 'Debug': 30, 'Bridge': 24, '': 1, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 121, ';': 120, ')': 40, '(': 35, '.': 104, 'Time': 89, 'Received': 24, '{': 54, 'void': 1, 'public': 0}
{'}\n': 46, '}': 45, ';': 29, ')': 10, '(': 6, '.': 24, '': 7, '{': 11, 'literal': 9, 'Literal': 5, 'public': 0}
{'}\n': 21, ';': 20, ')': 9, 'STR': 18, '_': 17, '(': 16, 'Exception': 15, 'Runtime': 14, '': 13, 'new': 12, 'throw': 11, '{': 10}
{'}\n': 1145, ';': 454, ')': 230, 'Word': 169, '(': 185, '=': 242, '': 167, '.': 425, 'new': 386, 'public': 0}
{')': 76, 'Transfer': 31, '': 22, '(': 50}
{'}\n': 50, '{': 34, ')': 30, '(': 24, 'Extensions': 17, '': 15, 'public': 0}
{'}\n': 50, ';': 42, ')': 11, '(': 10, '.': 32, 'null': 26, 'if': 22, '{': 12, 'public': 0}
{'}\n': 126, ';': 51, '': 22, 'return': 122, ')': 118, 'NUM': 88, '_': 87, 'j': 58, ']': 10, '[': 9, '=': 42, 'double': 6, 'static': 1, 'public': 0}
{'}\n': 246, ';': 38, 'result': 214, 'return': 243, ')': 10, 'Rate': 139, ',': 222, 'nops': 114, 'Len': 90, 'key': 89, 'ntrials': 65, '(': 6, 'Test': 5, 'Client': 218, 'Concurrent': 217, 'do': 3, '=': 18, 'Result': 2, '': 1, 'final': 15, 'RATE': 158, '.': 21, 'Options': 32, 'Property': 28, 'get': 27, 'properties': 9, 'parse': 22, 'double': 137, 'NOPS': 132, 'Int': 47, 'Integer': 44, 'int': 40, 'KEYLEN': 108, 'NTRIALS': 83, 'NCLIENTS': 59, 'nclients': 41, 'TIMEOUT': 35, 'Long': 20, 'timeout': 17, 'long': 16, '{': 14, 'Exception': 13, 'throws': 11, 'Properties': 8, 'Comparison': 4, 'public': 0}
{'}\n': 186, ';': 36, ')': 17, '(': 6, 'String': 2, 'to': 180, '.': 26, 'value': 3, 'quote': 176, 'return': 33, '}': 37, '{': 18, 'List': 156, '': 1, 'instanceof': 43, 'Map': 140, 'Boolean': 115, 'if': 19, 'To': 4, 'number': 102, 'Long': 98, '||': 24, 'Integer': 93, 'Short': 88, 'Byte': 83, 'Double': 78, 'Float': 73, 'STR': 35, '_': 34, 'null': 23, 'equals': 27, '==': 22, 'Object': 8, 'static': 0}
{'}\n': 54, ';': 53, 'null': 39, '!=': 38, ')': 18, '(': 7, 'Annotation': 14, 'get': 27, '{': 19, 'Type': 17, 'annotation': 16, '>': 15, '': 8, 'extends': 12, '?': 11, '<': 10, 'Class': 9, 'is': 3, 'boolean': 2, 'public': 0}
{'}\n': 295, ';': 19, 'Name': 67, 'Class': 76, 'original': 65, '=': 12, 'm': 29, 'Package': 66, '}': 262, ')': 6, 'BOOL': 152, '_': 16, '(': 5, 'True': 159, 'assert': 158, '{': 7, 'e': 268, 'Exception': 267, 'Remote': 266, '': 63, 'catch': 263, ',': 119, 'Value': 117, 'Type': 51, 'Content': 127, 'String': 64, 'to': 111, '.': 25, 'Integer': 109, 'Id': 58, 'App': 115, 'delete': 226, 'iwapman': 96, 'HANDLED': 210, 'MESSAGE_': 209, 'Params': 144, 'Manager': 95, 'Push': 94, 'Wap': 141, '==': 212, '&': 201, 'tran': 57, 'pdu': 11, 'Intent': 192, 'create': 13, 'Message': 43, 'process': 164, 'TYPE_': 148, 'APP_': 147, 'add': 105, 'Interface': 99, 'get': 98, 'IWap': 93, 'STR': 90, 'try': 83, 'NUM': 17, 'int': 20, 'length': 26, 'Body': 44, '+': 34, 'Header': 31, 'Data': 37, 'User': 36, 'Gsm': 30, '-': 27, 'Len': 22, 'header': 21, 'PDU': 14, ']': 10, '[': 9, 'byte': 8, 'Process': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 183, '}': 182, ')': 58, '(': 5, '': 6, ';': 59, '.': 51, 'if': 126, 'else': 125, 'classpath': 41, '{': 47, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 285, '}': 170, ';': 47, ')': 14, 'error': 175, ',': 41, 'FILE': 211, 'PROPERTIES_': 210, 'INVALID_': 209, '': 1, '.': 51, 'TYPE': 206, 'Exception': 19, 'Config': 18, 'Invalid': 17, '(': 9, 'new': 34, 'throw': 193, 'LOG': 186, 'STR': 55, '_': 54, '+': 181, 'PATH': 180, 'PROPFILE_': 179, '=': 33, 'String': 11, '{': 20, 'NUM': 230, '==': 26, '-': 228, 'size': 225, 'if': 21, 'else': 171, 'value': 128, 'key': 106, 'put': 52, 'null': 27, '!=': 151, '&&': 153, 'Value': 143, 'get': 120, 'entry': 94, 'trim': 112, 'Utils': 110, 'Key': 121, 'Set': 99, 'properties': 73, ':': 66, '>': 44, 'Object': 89, '<': 38, 'Entry': 86, 'Map': 37, 'for': 80, 'Properties': 72, 'Option': 13, 'first': 12, '?': 63, 'Tree': 36, 'throws': 15, 'load': 7, 'void': 6, 'synchronized': 5, 'static': 4, 'public': 3, 'Singleton': 2, '@': 0}
{'}\n': 45, ';': 21, ')': 9, 'gene': 14, 'NUM': 40, '_': 39, '(': 6, 'CARE': 31, 'DONT_': 30, '': 2, ',': 28, 'fill': 25, '.': 24, 'Arrays': 23, ']': 13, 'dim': 19, '[': 12, 'short': 11, 'new': 16, '=': 15, '{': 10, 'int': 7, 'Individuum': 3}
{'}\n': 101, ';': 47, 'classes': 37, 'return': 98, '}': 97, ')': 17, 'clazz': 78, '(': 13, 'add': 92, '.': 82, 'Name': 68, 'class': 67, 'Class': 5, 'load': 83, 'Loader': 81, '_class': 80, '=': 38, '>': 8, '?': 7, '<': 3, '': 1, '{': 72, 'strings': 54, ':': 69, 'String': 15, 'for': 63, 'uri': 16, 'Strings': 58, 'find': 10, 'List': 2, 'Array': 41, 'new': 39, 'IOException': 20, 'throws': 18, 'Classes': 12, 'public': 0}
{'}\n': 87, '}': 86, ';': 46, ')': 45, '(': 4, 'get': 59, '.': 58, 'Slot': 73, 'inv': 10, '{': 68, 'i': 50, '++': 65, 'Inventory': 61, 'Size': 60, '<': 23, 'NUM': 53, '_': 52, '=': 29, 'int': 49, 'for': 47, '': 6, 'list': 28, '>': 27, 'Stack': 26, 'Item': 25, 'List': 22, ',': 11, 'public': 0}
{'}\n': 43, ';': 41, ')': 26, 'value': 9, '(': 7, 'format': 6, '.': 30, 'return': 28, '{': 27, 'Number': 19, 'int': 11, ',': 10, 'double': 8, 'String': 5, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 67, ';': 33, ')': 32, '(': 4, '++': 47, 'i': 37, 'size': 44, '<': 7, 'NUM': 40, '_': 39, '=': 38, 'int': 36, 'for': 34, '': 5, 'list': 11, '>': 10, 'List': 6, 'public': 0}
{'}\n': 28, ';': 27, ')': 11, 'transform': 21, '(': 5, 'add': 19, '.': 18, '{': 12, '': 7, 'Transform': 4, 'public': 0}
{'}\n': 32, ';': 18, ')': 8, 'conditions': 7, '(': 3, 'List': 27, 'as': 26, '.': 12, 'Arrays': 24, '': 1, '=': 22, 'this': 19, 'Null': 14, 'if': 13, 'Reject': 11, '{': 9, '...': 6, 'Condition': 5, 'public': 0}
{'}\n': 219, ';': 28, ')': 5, '(': 4, 'Text': 205, 'set': 204, '.': 37, '': 20, '=': 48, 'id': 61, 'R': 59, 'Id': 56, 'By': 55, 'View': 54, 'find': 53, 'Button': 46, '{': 6, 'void': 1}
{'}\n': 67, '}': 42, ';': 41, ')': 12, 'e': 47, ',': 62, '(': 4, 'Message': 59, 'get': 58, '.': 36, '{': 13, '': 5, 'catch': 43, 'out': 8, 'try': 33, 'null': 18, 'if': 14, 'Stream': 7, 'Output': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 143, ';': 141, 'NUM': 83, '_': 82, '&': 85, ')': 24, '(': 19, 'Element': 80, 'get': 79, 'return': 26, '{': 25, 'public': 0}
{'}\n': 297, ';': 24, ')': 5, '(': 4, ',': 154, 'NUM': 59, '_': 58, '.': 128, '[': 11, 'keys': 15, '': 124, ']': 12, 'byte': 10, 'new': 17, '=': 16, 'vals': 30, 'public': 0}
{'}\n': 16, ';': 15, 'BOOL': 14, '_': 13, 'return': 12, '{': 11, ')': 10, 'Name': 9, 'system': 8, 'String': 7, '': 6, '(': 5, 'boolean': 1, 'public': 0}
{'}\n': 37, ';': 36, ')': 13, 'value': 12, '(': 4, 'String': 7, 'to': 30, '.': 16, 'Integer': 28, '': 6, ',': 9, 'name': 8, 'Field': 3, 'write': 2, '{': 21, 'IOException': 20, 'io': 17, 'java': 15, 'throws': 14, 'int': 11, 'void': 1, 'public': 0}
{'}\n': 108, ';': 106, ')': 8, 'NUM': 93, '_': 92, '+': 84, 'x': 7, '(': 5, 'Gamma': 40, 'ln': 3, '': 19, '{': 9, 'Factorial': 4, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 50, ';': 16, ')': 4, '(': 3, 'Error': 46, 'On': 45, 'fail': 44, '}': 17, 'e': 23, 'create': 38, '.': 12, 'Support': 36, 'IOException': 7, '': 6, 'throw': 33, 'interrupted': 29, 'Thread': 27, '{': 8, 'Exception': 22, 'Interrupted': 21, 'catch': 18, 'await': 13, 'latch': 11, 'try': 9, 'throws': 5, 'sync': 2, 'void': 1, 'public': 0}
{'}\n': 50, '}': 29, '{': 10, ')': 9, 'ignored': 46, 'Exception': 34, '': 6, '(': 5, 'catch': 30, ';': 28, 'rethrown': 35, 'throw': 38, 'Runtime': 33, 'close': 3, '.': 24, 'closeable': 8, 'try': 21, 'null': 15, 'if': 11, 'Closeable': 7, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 272, '}': 209, '{': 18, ')': 17, 'e': 232, 'IOException': 214, '': 46, 'final': 212, '(': 13, 'catch': 210, ';': 76, '.': 184, 'fout': 63, 'out': 99, 'Stream': 56, 'Output': 55, 'BOOL': 74, '_': 73, ',': 72, 'File': 47, 'new': 65, '=': 64, 'public': 0}
{'}\n': 90, '}': 88, ';': 50, ')': 49, '(': 18, '.': 52, 'list': 79, '{': 78, 'List': 40, 'Array': 39, '': 38, 'new': 37, '=': 36, 'temp': 35}
{'}\n': 130, '}': 94, ';': 95, ')': 13, '(': 9, 'Error': 125, 'Assertion': 124, '': 2, 'new': 122, 'throw': 121, '{': 14, 'e': 118, 'Exception': 117, 'Host': 116, 'Unknown': 115, 'catch': 112, 'Bytes': 30, 'address': 29, 'Address': 4, 'By': 104, 'get': 103, '.': 102, 'Inet': 3, 'return': 98, 'try': 96, 'NUM': 38, '_': 37, '>': 54, 'host': 11, '&': 39, 'byte': 26, ',': 43, '=': 31, ']': 28, '[': 27, 'int': 5, 'To': 6, 'static': 1, 'public': 0}
{'}\n': 57, ';': 22, 'client': 41, 'return': 54, ')': 6, '(': 5, 'Cfftp': 49, 'write': 48, ',': 10, 'STR': 18, '_': 17, 'required': 15, '{': 14, 'Exception': 13, 'Page': 12, '': 1, 'IOException': 9, 'throws': 7, 'action': 3, 'AFTPClient': 2, 'private': 0}
{'}\n': 139, ';': 16, ')': 8, '(': 7, 'scale': 134, '.': 38, 'res': 97, ',': 53, 'Scale': 19, 'c': 59, 'STR': 15, '_': 14, 'Equals': 108, 'assert': 107, 'String': 11, 'to': 117, 'mc': 45, 'plus': 102, 'Number': 75, 'a': 12, '=': 13, 'Decimal': 73, 'Big': 72, '': 10, 'Integer': 85, 'new': 47, 'NUM': 22, 'int': 17, 'rm': 33, 'precision': 25, 'Context': 5, 'Math': 4, 'Mode': 32, 'Rounding': 31, '{': 9, 'Plus': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 210, ';': 39, 'Val': 66, 'old': 48, 'return': 150, '}': 138, 'null': 71, ')': 16, ',': 11, 'ref': 26, 'k': 10, '(': 6, 'Update': 140, 'did': 139, 'v': 15, '+': 129, 'STR': 128, '_': 127, 'debug': 125, '.': 52, 'log': 123, '{': 17, 'DEBUG': 120, '': 1, '&&': 88, 'add': 114, 'queue': 112, 'if': 82, '==': 70, 'Ref': 30, 'replace': 99, 'map': 51, '!=': 86, 'get': 78, ':': 74, '?': 72, '=': 27, 'V': 2, 'final': 7, 'Absent': 5, 'If': 4, 'put': 3, '>': 25, '<': 22, 'Reference': 21, 'Weak': 20, 'Queue': 37, 'reference': 36, 'new': 28, 'K': 9, 'public': 0}
{'}\n': 37, ';': 20, '}': 26, 'Layers': 9, ')': 4, '(': 3, 'clear': 17, '.': 16, '{': 5, 'void': 1, 'public': 0}
{'}\n': 55, ';': 31, ')': 4, 'STR': 41, '_': 40, '(': 3, '.': 37, 'LOG': 36, '': 35, 'Thread': 9, 'monitor': 8, '{': 5, 'start': 2, 'void': 1}
{'}\n': 140, ';': 109, 'return': 126, '}': 110, ')': 16, 'Video': 24, ',': 97, 'STR': 96, '_': 95, '(': 27, '.': 78, '{': 74, '': 1, 'null': 35, 'if': 30, '=': 8}
{'}\n': 191, ';': 133, ')': 86, '(': 28, 'Height': 161, '.': 146, 'Width': 148, ',': 79, '': 83, 'new': 101, '=': 100, 'height': 78, 'width': 60, 'int': 31, 'Image': 27, 'void': 1, 'public': 0}
{'}\n': 103, '}': 41, ';': 28, 'e': 47, 'throw': 95, 'ee': 71, ')': 10, '(': 4, 'Cause': 90, 'init': 31, '.': 22, 'Message': 82, 'get': 81, 'Exception': 19, 'Object': 3, 'Invalid': 68, '': 5, 'new': 73, '=': 72, '{': 20, 'Argument': 63, 'Illegal': 62, 'instanceof': 53, '||': 58, 'Pointer': 56, 'Null': 55, 'if': 50, 'Runtime': 45, 'catch': 42, 'try': 29, 'Read': 24, 'default': 23, 'Found': 18, 'Not': 17, 'Class': 16, ',': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'read': 2, 'void': 1, 'private': 0}
{'}\n': 22, ';': 21, ')': 7, 'CAMEL': 19, 'LOWER_': 18, '': 1, '.': 16, 'Format': 15, 'Case': 14, '(': 6, 'Camel': 11, 'String': 2, 'public': 0}
{'}\n': 193, ';': 48, 'return': 188, '}': 187, '.': 138, 'Source': 101, 'fc': 59, '(': 13, ')': 24, '': 14, '=': 36, '{': 25, 'Copy': 10, 'Full': 9}
{'}\n': 87, ';': 34, ')': 10, 'STR': 31, '_': 30, '(': 6, 'String': 28, 'get': 27, '.': 26, 'BUNDLE': 25, '': 1, ',': 23, 'DESCRIPTION': 74, 'SHORT_': 73, 'Value': 19, 'put': 18, 'LIST_': 49, 'Manager': 46, 'Icon': 45, 'ICON': 58, 'SMALL_': 57, 'KEY': 42, 'ICON_': 41, 'LARGE_': 40, '}': 35, 'NAME': 22, '{': 11, 'Title': 9, 'with': 8, 'if': 12, 'boolean': 7, 'Action': 5, 'Set': 3, 'Movie': 2, 'public': 0}
{'}\n': 79, '}': 54, ';': 39, ')': 7, 'e': 59, ',': 73, 'port': 6, '+': 71, 'STR': 70, '_': 69, '(': 4, 'Exception': 67, '': 57, 'new': 63, 'throw': 62, '{': 16, 'catch': 55, 'Registry': 3, '.': 31, 'try': 17, 'int': 5}
{'}\n': 98, '}': 71, ';': 19, 'null': 79, '=': 17, 'Handler': 9, 'statistics': 15, '.': 14, 'this': 13, '{': 12, 'finally': 72, ')': 11, '(': 3, 'limit': 66, 'buffer': 33, ',': 57, 'position': 60, 'Token': 54, 'handle': 53, 'Parser': 44, 'line': 43, 'reset': 46, 'Buffer': 32, 'get': 38, 'Loader': 23, 'file': 22, 'Byte': 31, '': 5, 'final': 4, 'load': 25, 'try': 20, 'Statistics': 8, 'poll': 2, 'void': 1, 'public': 0}
{'}\n': 71, '}': 69, ';': 21, ')': 5, '(': 4, 'append': 63, '.': 14, '{': 6, 'Whitespace': 52, 'is': 51, 'Character': 49, '': 48, 'At': 40, 'char': 39, 'NUM': 27, '_': 19, 'length': 15, 'Builder': 13, '=': 10}
{'}\n': 193, '}': 160, ';': 34, ')': 17, '(': 11, 'Message': 172, 'get': 30, '.': 92, 'e': 166, ',': 51, 'STR': 182, '_': 181, 'ERROR': 179, 'TYPE_': 178, '': 12, 'CCAlert': 175, 'Alert': 171, 'Inline': 170, 'set': 43, '{': 23, 'Exception': 22, 'AMConsole': 164, 'catch': 161, 'Context': 155, 'Request': 4, 'To': 151, 'forward': 150, 'vb': 68, 'Map': 27, 'Session': 45, 'Pg': 103, 'pass': 102, 'Trail': 98, 'Page': 44, 'unlock': 96, 'class': 93, 'Bean': 67, 'View': 66, 'List': 6, 'Handler': 5, 'SCSOAPBinding': 61, '=': 29, 'values': 28, 'Hash': 54, 'ATTRIBUTE': 50, 'PROPERTY_': 49, 'Attribute': 46, 'Profile': 38, 'Save': 37, 'Before': 36, 'on': 35, 'Values': 31, 'try': 24, 'Control': 21, 'Model': 20, 'throws': 18, 'event': 16, 'Event': 15, 'Invocation': 14, 'Tbl': 3, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 61, ';': 17, 'return': 52, ')': 6, 'long': 18, '{': 7, 'boolean': 1, 'public': 0}
{'}\n': 79, '}': 42, ';': 41, ')': 22, 'e': 48, '(': 39, 'Exception': 47, 'Runtime': 54, '': 13, 'new': 35, 'throw': 51, '{': 23, 'catch': 43, '.': 29, 'try': 24}
{'}\n': 55, ';': 29, 'instance': 16, 'return': 46, '}': 45, ')': 12, ',': 36, 'STR': 35, '_': 34, '(': 15, '.': 31, '=': 22, '{': 13, 'if': 14, 'String': 7, '': 3, '<': 5}
{'}\n': 214, ';': 18, 'logq': 138, 'return': 211, '}': 67, 'NUM': 23, '_': 22, '=': 11, ')': 6, '(': 5, 'if': 104, 'STR': 192, 'Exception': 189, 'Runtime': 188, '': 72, 'new': 186, 'throw': 185, '{': 7, 'else': 155, '.': 13, '==': 159, 'value': 84, 'sum': 20, 'double': 2, 'pos': 70, 'Value': 60, 'Parameter': 59, 'get': 14, 'int': 9, 'final': 1, 'dim': 10, 'Int': 77, 'next': 76, 'Utils': 74, 'Math': 73, 'i': 36, '+=': 50, '++': 46, '<': 42, 'for': 33, 'Dimension': 15, 'Operation': 4, 'do': 3, 'public': 0}
{'}\n': 15, ')': 13, 'Progress': 6, '(': 7}
{'}\n': 35, ';': 34, ')': 14, '(': 10, 'Date': 24, '{': 15, 'Day': 9, '': 4, 'public': 3}
{'}\n': 1470, ';': 19, ')': 15, 'Code': 92, 'Error_': 91, '': 9, '(': 7, 'return': 1463, '}': 149, 'WARNING': 1442, 'LON_': 1441, 'TRANMERC_': 95, '|=': 143, 'NUM': 235, '_': 234, '>': 123, 'Latitude': 999, 'if': 99, '{': 16, 'cos': 629, '.': 231, 'Math': 230, '*': 218, '/': 315, 'PI': 1341, 'dlam': 24, 'abs': 707, 'ERROR': 97, 'EASTING_': 146, 'Longitude': 1315, '-=': 1371, 'NORTHING_': 197, '+': 130, 'Long': 1321, 'Origin_': 222, 'Merc_': 108, 'Tran': 107, '=': 93, 't17': 81, ',': 11, 'de': 21, 'pow': 340, '-': 111, 't16': 78, 't15': 75, 't14': 72, 'Factor': 320, 'Scale_': 319, 'c': 18, 'sn': 45, 't': 51, 'tan4': 57, 'tan2': 54, 'eta3': 33, 'eta2': 30, 'eta': 27, 't13': 69, 't12': 66, 't11': 63, 't10': 60, 'ftphi': 39, 'sr': 48, 'eta4': 36, '<': 104, 'Easting': 10, 'False_': 109, 'Merc_ebs': 660, 'tan': 639, 'sin': 232, 'Merc_es': 334, 'sqrt': 345, 'Merc_a': 326, 'tmd': 84, 'Merc_ep': 284, 'Merc_dp': 265, 'Merc_cp': 246, 'Merc_bp': 227, 'Merc_ap': 217, '++': 396, 'i': 42, 'for': 383, 'Northing': 14, 'tmdo': 87, 'Lat': 223, 'NO_': 96, '==': 206, 'Delta_': 115, '||': 119, 'long': 1, 'double': 8, 'int': 41, 'Geodetic': 6, 'To': 5, 'Mercator': 4, 'Transverse': 3, 'convert': 2, 'public': 0}
{'}\n': 130, ';': 14, ')': 5, 'NUM': 13, '_': 12, '(': 4, 'Mode': 82, '.': 50, 'cache': 49, 'Size': 52, 'local': 51, ',': 48, 'Equals': 44, 'assert': 43, 'Peek': 81, 'Cache': 80, '': 33, 'i': 10, '{': 6, '++': 23, '<': 16, '=': 11, 'int': 9, 'for': 7, 'void': 1, 'private': 0}
{'}\n': 106, ';': 30, 'null': 35, 'return': 84, '}': 88, ')': 16, '!=': 34, 'next': 96, '.': 47, 'e': 27, '=': 28, '(': 9, 'while': 89, 'ek': 42, 'equals': 71, '&&': 51, '||': 62, 'k': 15, '==': 49, 'key': 58, 'h': 11, 'hash': 48, 'if': 31, 'K': 3, '': 2, '{': 17, 'do': 38, 'this': 29, '>': 7, 'V': 6, ',': 4, '<': 1, 'Node': 0, 'Object': 14, 'int': 10, 'find': 8}
{'}\n': 338, ';': 231, ')': 150, '}': 232, '(': 87, '': 79, '=': 186, '{': 151, '.': 190, ',': 108, 'get': 191, 'void': 84, 'public': 82, '@': 41}
{'}\n': 75, ';': 74, ')': 9, '(': 5, 'add': 3, '.': 48, '{': 10, 'language': 8, 'Language': 4, '': 6, 'void': 2, 'public': 0}
{'}\n': 131, '}': 75, ';': 21, ')': 9, 'conn': 18, '(': 5, 'JDBCConnection': 125, 'close': 113, '.': 45, 'JDBCUtil': 111, 'the': 110, 'Statement': 24, 'User': 4, 'JDBCStatement': 114, '{': 15, 'finally': 108, 'Exc': 81, 'sql': 80, ',': 61, 'STR': 101, '_': 100, 'Exception': 14, 'Repository': 13, 'Users': 12, '': 6, 'new': 94, 'throw': 93, 'Trace': 89, 'Stack': 88, 'print': 87, 'SQLException': 79, 'catch': 76, 'execute': 71, 'user': 8, 'For': 56, 'set': 54, 'Sql': 51, 'prepare': 46, '=': 19, 'Connection': 17, 'open': 35, 'try': 31, 'null': 20, 'Prepared': 23, 'throws': 10, 'do': 2, 'void': 1, 'protected': 0}
{'}\n': 87, ';': 18, 'NUM': 30, '_': 29, 'h2': 35, '(': 15, '=': 20, 'h1': 11, '+=': 34, ')': 9, ',': 6, 'Left': 25, 'rotate': 24, '.': 23, 'Long': 22, '': 21, '^=': 12, '{': 10, 'long': 4, 'void': 0}
{'}\n': 42, ';': 41, ')': 26, '(': 4, 'get': 34, '.': 22, '=': 15, '': 5, 'ev': 8, 'Event': 7, 'Sim': 6}
{'}\n': 45, ';': 27, ')': 9, ']': 16, 'NUM': 41, '_': 24, '[': 15, 'Vars': 14, '(': 3, 'Int': 35, 'parse': 34, '.': 21, 'Integer': 32, '': 1, '=': 17, 'Id': 29, 'm': 28, 'STR': 25, 'split': 22, 'String': 5, 'Format': 2, 'p': 6, '{': 10, 'public': 0}
{'}\n': 130, ';': 42, ')': 41, '(': 3, 'close': 126, '.': 58, 'jar': 31, 'Entry': 46, 'put': 91, 'Jar': 2, '': 4, 'new': 33, '=': 32, '{': 64, 'File': 5}
{'}\n': 22, ';': 21, ')': 7, 'value': 6, '(': 4, 'Of': 16, '.': 14, 'String': 13, '': 12, 'Cell': 3, 'append': 2, '{': 8, 'void': 1, 'public': 0}
{'}\n': 27, ';': 26, ')': 7, 'FAILED': 23, 'PROXY_': 22, 'SERVER_': 21, '': 16, '(': 6, 'Call': 18, 'Api': 10, 'new': 15, 'add': 13, '.': 12, 'Calls': 11, 'expected': 9, '{': 8, 'Failed': 5, 'Proxy': 4, 'Server': 3, 'expect': 2, 'void': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 9, 'key': 8, '(': 4, 'remove': 3, '.': 13, '{': 10, 'Object': 7, '': 6, 'public': 0}
{'}\n': 50, ';': 49, ')': 12, 'attribute': 11, '(': 8, 'add': 37, '.': 36, 'Attributes': 35, '{': 13, 'Attribute': 6, '': 9, 'void': 4, 'public': 3}
{'}\n': 15, ';': 14, ')': 5, '(': 4, 'Empty': 3, 'is': 2, '.': 9, 'children': 8, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{')': 102, 'Index': 98, 'column': 82, '(': 92, 'Column': 53}
{'}\n': 80, ';': 79, ')': 9, 'production': 8, '(': 5, '.': 26, '{': 10, 'Production': 7, '': 6}
{'}\n': 118, ';': 59, ')': 32, ',': 16, '(': 7, 'Error': 37, 'Eval': 36, '': 1, 'throws': 33, 'interpreter': 31, 'Interpreter': 30, 'private': 0}
{'}\n': 180, ';': 52, ')': 104, '(': 7, '}': 157, '+': 48, 'Args': 39, '{': 107, 'length': 47, '.': 46, 'args': 45, 'NUM': 50, '_': 49, '=': 40, ']': 51, '[': 44, 'Object': 3, '': 2, 'new': 41, ',': 12}
{'}\n': 144, '}': 115, ';': 24, 'NUM': 31, '_': 30, '=': 18, ']': 10, 'j': 28, '[': 9, '{': 13, ')': 12, '(': 7, 'k': 58, '': 99, '+=': 98, 'if': 73, '++': 40, '<': 34, 'int': 27, 'for': 25, 'double': 8, '.': 20, 'private': 0}
{'}\n': 89, ';': 88, 'Map': 51, ',': 79, 'ct': 41, '(': 77, 'Indexes': 76, 'To': 75, 'add': 31, ')': 60, '': 15, 'String': 40, 'Client': 23}
{'}\n': 39, '}': 38, ';': 37, ')': 10, '(': 4, 'Path': 33, '.': 20, 'Delete': 9, 'To': 8, '{': 14, 'if': 15, 'File': 6, '': 5, 'delete': 3, 'void': 2, 'static': 1}
{'}\n': 420, ';': 60, ')': 32, '(': 7, 'Id': 70, 'get': 216, '.': 46, 'Group': 21, 'export': 20, 'STR': 93, '_': 92, 'info': 316, '_log': 314, '}': 397, 'Value': 346, ',': 11, 'ID': 22, 'Key': 338, 'STEP_': 371, '': 8, 'workflow': 10, 'Volumes': 360, 'Export': 3, 'generate': 356, 'Utils': 354, 'Wf': 353, '_export': 352, 'format': 321, 'String': 62, '{': 37, 'Set': 309, 'entry': 308, 'Objects': 204, 'Block': 187, 'To': 172, ':': 302, '>': 128, 'URI': 19, '<': 26, 'Entry': 288, 'Map': 97, 'for': 282, 'Storage': 217, '=': 43, 'pending': 90, 'Status': 76, 'Operation': 85, 'Step': 64, 'Task': 75, 'init': 74, 'create': 68, 'class': 54, 'Object': 48, 'query': 47, 'Client': 45, '_db': 44, 'Exception': 36, 'Internal': 35, 'throws': 33, 'System': 14, 'rp': 15, 'Protection': 13, 'Workflow': 9, 'Steps': 6, 'Volume': 5, 'add': 2, 'void': 1, 'private': 0}
{'}\n': 20, ';': 19, ')': 9, 'dbg': 11, '{': 10, '': 5, '(': 4, 'public': 0}
{'}\n': 552, ';': 61, 'return': 63, '}': 62, ')': 24, 'STR': 59, '_': 58, '(': 23, 'trace': 56, '.': 48, 'Trace': 47, '': 46, '{': 43, 'Checksum': 50, 'swc': 49, 'if': 26, 'BOOL': 65, '+': 457, 'data': 191, 'get': 184, 'new': 309, 'Modified': 283, 'Last': 282, 'null': 233, '!=': 267, 'Long': 108, 'Value': 202, 'entry': 162, 'Key': 185, '=': 112, 'Set': 168, ':': 163, '>': 109, ',': 106, '<': 103, 'Entry': 154, 'Map': 151, 'for': 148, 'Checksums': 10, 'boolean': 1}
{'}\n': 352, '}': 274, ';': 56, ')': 42, 'eagerness': 292, ',': 15, 's': 124, 'len': 194, 'Ix': 181, 'Size': 25, 'c': 147, 'Push': 21, 'def': 20, 'specs': 14, '(': 8, 'Sizes': 327, 'expand': 326, '.': 51, 'fss': 27, '=': 48, 'Row': 298, 'new': 297, '++': 143, '<': 32, '&&': 282, 'NUM': 55, '_': 54, 'int': 46, 'for': 44, '{': 43, '>': 37, 'row': 173, 'if': 94, 'sz': 243, '+=': 270, 'SET': 166, 'NOT_': 165, '': 9, 'Util': 128, 'Layout': 127, '!=': 258, ']': 13, '[': 12, 'j': 226, 'sizes': 110, '+': 189, '-': 53, 'length': 52, '<<': 185, 'span': 98, 'group': 89, 'min': 199, 'Math': 197, 'r': 47, 'continue': 104, '==': 99, 'PREF': 140, '<=': 134, 'MIN': 131, 'Max': 117, 'Pref': 4, 'Min': 3, 'get': 114, 'groups': 40, ':': 90, 'Group': 36, 'Dim': 10, 'Linked': 34, 'Lists': 41, 'List': 31, 'Array': 30, '--': 63, '>=': 58, 'Spec': 26, 'Flow': 24, 'Float': 17, 'Constraint': 11, 'Comps': 7, 'Spanning': 6, 'For': 5, 'adjust': 2, 'void': 1, 'private': 0}
{'}\n': 451, ';': 77, 'STR': 244, '_': 83, '(': 79, ')': 33, '}': 313, ']': 10, 'i': 389, '[': 9, '=': 53, '{': 94, '++': 327, 'hex': 319, 'NUM': 84, 'if': 291, '': 18, 'char': 213, 'j': 173, 'int': 41, 'for': 165, 'length': 44, 'String': 19, 'byte': 8, 'static': 1, 'public': 0}
{'}\n': 215, '}': 159, '{': 47, ')': 25, '': 5, '(': 14, 'catch': 169, ';': 45, 'close': 199, '.': 153, 'reader': 42, 'null': 44, '!=': 191, 'if': 106, 'finally': 186, 'Line': 81, 'read': 154, '=': 43, 'current': 102, 'String': 67, 'Reader': 41, 'File': 57, 'new': 50, 'Buffered': 40, 'try': 46, 'public': 0}
{'}\n': 107, ';': 41, 'UNDERFLOW': 105, '': 1, '.': 43, 'Result': 3, 'Coder': 2, 'return': 89, '}': 50, ')': 11, 'ERR_': 94, '(': 7, 'Input': 91, 'malformed': 90, '{': 12, 'else': 51, 'reset': 82, 'queue': 42, '=': 68, 'state': 28, 'NUM': 19, '_': 18, '<=': 23, 'Byte': 10, 'new': 9, '&&': 20, '>=': 17, 'if': 13, 'write': 44, 'SEQUENCE_': 32, 'short': 8, 'Sequence': 5, 'private': 0}
{'}\n': 141, '}': 38, ';': 37, 'null': 138, 'return': 28, '{': 15, 'else': 39, ')': 14, '(': 10, 'get': 34, '.': 19, 'Params': 32, 'Test': 103, '': 1, 'ID_': 23, 'equals': 20, 'if': 16, 'Net': 31, 'Main': 30, 'MAINNET': 24, 'String': 12, 'ID': 9, 'from': 8, 'Parameters': 7, 'Network': 6, 'static': 4, 'public': 3, 'Nullable': 2, '@': 0}
{'}\n': 58, ';': 57, ')': 12, 'Store': 9, 'cert': 10, '(': 6, 'From': 50, 'Certificates': 3, 'get': 30, '.': 23, 'CMSUtils': 28, '': 7, 'All': 25, 'add': 2, 'certs': 22, '{': 21, 'CMSException': 20, 'throws': 13, 'void': 1, 'public': 0}
{';\n': 15, ')': 11, '': 6, 'abstract': 1, 'protected': 0}
{'}\n': 160, ';': 159, ')': 80, '(': 4, 'y1': 112, '-': 111, 'y2': 79, '.': 93, 'Math': 92, '': 91, '{': 81, 'double': 48, 'x2': 64, 'private': 0}
{'}\n': 103, '}': 102, ';': 49, ')': 10, 'resource': 7, 'Type': 8, '(': 4, '.': 79, 'String': 6, '': 5, '{': 59, 'Index': 3, 'Resource': 2, 'void': 0}
{'}\n': 150, ';': 35, ')': 10, '(': 9, 'Array': 86, 'Byte': 85, 'to': 144, '.': 25, 'stream': 89, 'return': 45, '}': 48, '{': 11, 'e': 137, 'IOException': 136, '': 23, 'catch': 133, 'Transactions': 110, 'write': 120, 'Header': 121, 'try': 118, 'length': 38, ':': 114, 'Length': 111, 'guess': 109, '+': 108, 'SIZE': 107, 'HEADER_': 106, '?': 104, 'LENGTH': 103, 'UNKNOWN_': 102, '==': 39, 'Stream': 88, 'Output': 87, 'Unsafe': 93, 'new': 56, '=': 55, 'buf': 54, ',': 31, 'NUM': 74, '_': 32, 'offset': 69, 'arraycopy': 65, 'System': 63, ']': 6, '[': 5, 'byte': 4, 'else': 49, 'if': 12, 'STR': 33, 'Null': 28, 'Not': 27, 'check': 26, 'Preconditions': 24, 'Valid': 16, 'Bytes': 15, 'transaction': 18, '&&': 17, 'header': 14, 'Serialize': 8, 'bitcoin': 7, 'public': 3}
{'}\n': 145, ';': 31, 'periods': 109, 'return': 142, '}': 141, ')': 21, 'NUM': 72, '_': 71, ',': 119, 'Unit': 17, 'Time': 16, 'date': 18, '(': 13, 'plus': 130, '.': 54, 'calendar': 25, '=': 26, 'Period': 8, 'create': 113, 'add': 111, '{': 22, '<': 6, 'i': 95, 'int': 94, 'for': 92, 'Calendar': 24, 'get': 27, '': 1, 'Date': 15, 'Periods': 12, 'generate': 10, '>': 9, 'List': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 26, ';': 25, ')': 15, '(': 14, 'Set': 5, 'empty': 21, '.': 20, 'Collections': 19, '': 1, 'return': 17, '{': 16, 'Labels': 13, 'Pattern': 12, 'Match': 11, 'vertex': 10, '>': 9, 'String': 8, '<': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 117, ';': 116, ')': 72, 'STR': 103, '_': 102, '.': 94, 'summary': 59, '{': 73, '(': 51, '': 22}
{'}\n': 19, ';': 18, ')': 10, 'category': 9, '(': 5, 'add': 3, '.': 13, 'categories': 12, '{': 11, 'Category': 4, '': 6, 'void': 2, 'public': 0}
{'}\n': 152, '}': 114, ';': 49, 'NUM': 149, '_': 46, 'return': 79, ')': 30, 'unexpected': 119, '(': 9, 'Exception': 33, 'record': 141, '.': 42, 'env': 12, 'err': 136, 'System': 134, '': 3, 'Trace': 131, 'Stack': 130, 'print': 129, 'JNI': 38, 'trace': 37, 'if': 35, '{': 34, 'Throwable': 118, 'catch': 115, 'Obj': 80, 'JNIRef': 71, 'push': 107, 'BOOL': 101, ',': 13, 'null': 98, 'Address': 27, 'arg': 28, 'ID': 24, 'method': 23, 'obj': 15, 'Arg': 88, 'Var': 87, 'With': 86, 'invoke': 85, 'JNIHelpers': 83, '=': 67, 'Object': 6, 'JREF': 20, 'get': 70, 'try': 62, 'GC': 58, 'To': 57, 'Down': 56, 'JNICount': 55, 'check': 54, 'Entrypoints': 52, 'Runtime': 51, 'STR': 47, 'Write': 44, 'sys': 43, 'VM': 41, 'throws': 31, 'int': 2, 'JNIEnvironment': 11, 'V': 8, 'Method': 7, 'Call': 4, 'static': 1, 'private': 0}
{'}\n': 252, ';': 48, ')': 14, 'messages': 29, '(': 13, 'Connected': 247, 'For': 164, 'Messages': 12, 'try': 10, 'return': 224, 'Comparator': 238, 'Tuple': 2, '': 1, 'new': 31, ',': 6, 'sort': 231, '.': 81, 'Collections': 229, '}': 125, 'null': 225, '{': 15, 'NUM': 221, '_': 220, '==': 219, 'size': 216, 'if': 112, 'con': 68, 'm': 130, '>': 9, 'Connection': 8, 'Message': 5, '<': 3, 'add': 190, 'To': 169, 'get': 58, 'Pred': 163, 'Router': 95, 'oth': 96, 'continue': 123, 'Id': 147, 'has': 141, 'Collection': 50, 'msg': 55, ':': 69, 'for': 64, 'Transferring': 118, 'is': 117, 'other': 78, 'Prophet': 93, '=': 30, 'Host': 87, 'Node': 84, 'Other': 11, 'DTNHost': 77, 'Connections': 71, 'List': 17, 'Array': 33, 'private': 0}
{'}\n': 151, ';': 32, ')': 7, '(': 6, '': 9, '.': 20, 'movie': 33, '{': 8, 'void': 1}
{'}\n': 45, ';': 44, ')': 36, ',': 13, 'Id': 6, 'internal': 16, '(': 7, 'Short_name': 34, 'get': 33, '.': 32, 'Bean': 10, 'consumer': 11, 'client': 21, 'String': 20, '': 8, 'Long': 15, 'Consumer': 9, 'cache': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 490, ';': 43, ')': 14, '(': 4, '.': 24, 'reader': 7, '': 5, '=': 137, '}': 46, 'return': 44, 'Tag': 39, 'skip': 38, 'XMLUtil': 23, '{': 18, 'STR': 31, '_': 30, 'if': 19, 'ch': 166, ',': 8, 'read': 141, 'String': 113, 'null': 89, 'Whitespace': 85, 'Literal': 26, 'check': 25, '!': 21, 'Exception': 17, 'throws': 15, 'Resolver': 11, 'entity': 12, 'IXMLEntity': 10, 'IXMLReader': 6, 'process': 2, 'void': 1, 'protected': 0}
{'}\n': 215, ';': 39, 'null': 193, 'return': 74, ')': 17, '!=': 192, '.': 67, '=': 28, '(': 11, '}': 77, 'e': 27, '{': 18, 'k': 16, '==': 69, 'key': 68, 'if': 63, '>': 9, 'V': 8, '': 7, '<': 6, 'Node': 5, 'int': 12, ',': 14, 'h': 13, 'find': 10}
{'}\n': 17, ';': 16, ')': 5, '(': 4, 'Public': 3, 'is': 2, '.': 10, 'Modifier': 9, '': 8, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 105, ';': 72, ')': 41, 'Release': 24, 'Image': 6, 'On': 28, 'close': 27, ',': 13, 'Until': 22, 'block': 21, 'img': 12, '(': 7, '': 1, 'new': 58, '{': 46, 'Exception': 45, 'Interrupted': 44, 'throws': 42, 'Done': 40, 'When': 39, 'runnable': 38, '>': 37, 'Runnable': 36, '<': 34, 'Optional': 33, 'boolean': 4, 'Container': 17, 'Task': 15, 'Process': 11, 'To': 10, 'receive': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 326, ';': 121, ')': 65, ',': 183, 'ID': 34, 'p_': 18, 'NUM': 115, '_': 114, 'C_': 248, '(': 14, 'if': 73, 'sql': 148, '.': 178, '': 8, '=': 175, 'STR': 151, '+': 157}
{'}\n': 129, ';': 40, ')': 18, '(': 9, 'S2': 3, '': 2, ',': 12, '=': 43, 'NUM': 27, '_': 26, '-': 35, '{': 19, 'j': 17, 'int': 10, 'i': 14, 'face': 11, 'Face': 7, 'from': 6, 'Id': 5, 'Cell': 4, 'static': 1}
{'}\n': 84, ';': 27, ')': 10, '(': 4, 'is': 22, '.': 15, 'project': 9, 'set': 16, 'Enabled': 60, 'if': 28, '!': 19, 'Project': 8, '': 6, 'final': 5, 'void': 1, 'private': 0}
{'}\n': 14, ';': 13, ')': 3, '(': 2, 'close': 1, '.': 9, 'stream': 8, '{': 7, 'IOException': 6, '': 5, 'throws': 4, 'void': 0}
{'}\n': 140, ';': 61, '_': 137, 'return': 108, ')': 21, 'Number': 30, '(': 14, 'number': 10, '.': 55, '{': 22, 'get': 56, 'Phone': 29, '': 7, '=': 33}
{'}\n': 44, ';': 43, 'time': 34, ')': 26, '(': 25, 'Micros': 23, 'Epsilon': 7, 'Comparison': 6, 'Time': 5, 'static': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 9, '(': 8, 'empty': 15, '.': 14, 'Optional': 2, '': 1, 'return': 11, '{': 10, '>': 6, '<': 3, 'public': 0}
{'}\n': 100, ';': 21, 'label': 13, 'return': 97, ')': 9, '': 1, '(': 18, 'set': 24, '.': 52, 'BOOL': 59, '_': 58, 'JLabel': 2, 'new': 15, '=': 14, '{': 10, 'create': 3}
{'}\n': 24, ';': 23, ')': 9, 'Path': 2, 'rel': 7, '(': 4, '.': 16, 'return': 11, '{': 10, 'String': 6, '': 1}
{'}\n': 36, ';': 35, 'NUM': 34, '_': 33, '-': 32, ')': 13, '(': 5, 'Of': 27, 'index': 26, '.': 25, 'value': 8, 'return': 15, '{': 14, 'String': 7, '': 6, 'static': 1}
{'}\n': 107, '}': 78, ';': 23, ')': 7, '(': 6, 'close': 101, '.': 59, 'cleaner': 27, '{': 8, 'null': 29, '!=': 95, 'if': 92, 'finally': 90, 'success': 85, 'Exception': 84, 'Pointer': 83, 'Null': 4, '': 9, 'catch': 79, 'Throw': 74, 'should': 73, 'submit': 60, 'e': 12, '=': 13, 'future': 56, '>': 55, '<': 52, 'Future': 51, 'STR': 48, '_': 20, 'Warnings': 45, 'Suppress': 44, '@': 42, 'try': 31, 'Cleaner': 26, 'Pool': 18, 'NUM': 21, 'Join': 17, 'Fork': 16, 'new': 14, 'Service': 11, 'Executor': 10, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 187, ';': 23, ')': 5, 'NUM': 56, '_': 55, '(': 4, '}': 68, '': 7, 'new': 60, 'throw': 59, '{': 9, 'if': 51, 'read': 2, '.': 19, 'in': 18, '=': 17, 'b2': 80, 'int': 15, 'b1': 53, 'b0': 16, 'IOException': 8, 'throws': 6}
{'}\n': 25, ';': 24, ')': 12, 'Date': 21, 'in': 20, '(': 19, 'format': 18, '{': 13, '': 8, 'public': 0}
{'}\n': 17, ';': 16, '(': 5, 'clear': 3, '{': 7, ')': 6, 'public': 0}
{'}\n': 37, ';': 33, 'this': 35, 'return': 34, ')': 18, 'key': 12, '(': 8, 'Has': 26, '': 1, 'new': 24, 'add': 22, '.': 21, 'criteria': 20, '{': 19, 'String': 11, 'final': 9, 'has': 7, 'Query': 6, 'Graph': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 46, ';': 45, ')': 21, ',': 17, 'guid': 39, 'principal': 37, '(': 5, '{': 25, 'UMSException': 24, '': 14, 'throws': 22, 'public': 0}
{'}\n': 128, '}': 108, ';': 60, ')': 17, '(': 5, '{': 18, 'e': 113, 'Exception': 112, '': 6, 'catch': 109, 'flush': 103, '.': 68, 'Stream': 4, 'output': 15, ',': 11, 'NUM': 84, '_': 83, 'buffer': 44, 'write': 90, '-': 82, '!=': 81, 'read': 69, 'input': 9, '=': 45, 'while': 61, '[': 42, 'byte': 41, 'new': 46, ']': 43, 'try': 32, 'Output': 13, 'Input': 7, 'void': 2, 'static': 1}
{'}\n': 58, ';': 55, ')': 25, '(': 37, 'Element': 12, '{': 26, '': 6}
{'}\n': 110, '}': 108, ';': 51, 'i': 55, 'basic': 100, '=': 29, ']': 25, '[': 17, '{': 11, ')': 10, '++': 71, '<': 61, 'int': 54, '(': 5, 'for': 52, '.': 41, 'new': 30}
{'}\n': 11, '{': 10, ')': 9, 'e': 8, 'Event': 7, 'Mouse': 6, '': 5, '(': 4, 'Released': 3, 'mouse': 2, 'void': 1, 'public': 0}
{'}\n': 93, ')': 8, '(': 4, 'return': 66, 'if': 10, ';': 26, '=': 45, 'SIPHeader': 39, '': 5, 'STR': 24, '_': 23, 'Exception': 21, 'new': 17, 'throw': 16, 'null': 14, '==': 13, '{': 9}
{'}\n': 218, ';': 31, 'result': 22, 'return': 211, ')': 18, 'STR': 75, '_': 74, '(': 43, 'append': 42, '.': 41, '}': 173, '{': 19, 'null': 157, '!=': 156, '=': 23, 'String': 10, '': 5}
{'}\n': 17, ';': 16, ')': 7, '(': 13, '.': 11, '': 9, '{': 8, 'exit_code': 6, 'int': 5, 'public': 0}
{'}\n': 50, ';': 49, ')': 14, ',': 32, 'NUM': 38, '_': 37, '(': 29, '.': 27, '': 1, '{': 15, 't': 13}
{'}\n': 229, ';': 55, ')': 23, 'STR': 53, '_': 52, ',': 14, 'null': 42, '(': 8, 'Tag': 48, 'end': 58, '.': 32, 'out': 22, '}': 69, ']': 12, 'i': 131, '[': 11, 'val': 13, 'start': 47, '{': 37, '++': 141, 'n': 103, '<': 137, 'NUM': 134, '=': 104, 'int': 102, 'for': 128, 'String': 16, 'to': 121, 'Integer': 119, '': 15, 'attribute': 90, 'length': 107, 'final': 2, 'name': 17, '!=': 84, 'if': 38, 'return': 67, '==': 41, 'IOException': 36, 'io': 33, 'java': 31, 'Exception': 29, 'Parser': 28, 'Pull': 27, 'Xml': 7, 'throws': 24, 'Serializer': 21, 'Array': 6, 'write': 4, 'void': 3, 'static': 1, 'public': 0}
{'}\n': 136, ';': 20, 'text': 8, 'return': 18, '}': 21, ')': 9, 'EXCLUSIVE': 95, 'EXCLUSIVE_': 94, 'SPAN_': 93, '': 1, '.': 30, 'Spanned': 90, ',': 84, 'end': 59, 'start': 47, 'BOLD': 116, 'Typeface': 113, 'graphics': 110, 'android': 108, '(': 5, 'Span': 72, 'Style': 105, 'new': 74, 'set': 71, 'Color': 77, 'Highlight': 81, 'm': 80, 'Foreground': 76, 'NUM': 54, '_': 53, 'matcher': 25, '=': 26, 'int': 46, 'final': 22, '{': 10, 'find': 40, 'while': 36, 'PATTERN_': 28, 'Matcher': 24, 'null': 15, '==': 14, 'if': 11, 'Spannable': 2, 'highlight': 3, 'private': 0}
{'}\n': 101, ';': 13, 'n': 15, 'return': 98, '}': 65, 'ERROR': 94, 'FORMAT_': 93, 'STATUS_': 92, '': 70, '=': 9, 'status': 89, ')': 5, '(': 4, '{': 6, 'e': 72, 'catch': 67, 'count': 32, '+=': 62, '-': 46, 'Size': 8, 'block': 7, '<': 37, 'while': 34, 'int': 1, 'try': 29, 'NUM': 18, '_': 17, '>': 24, 'if': 20, 'read': 2, 'Block': 3, 'protected': 0}
{'}\n': 108, ';': 54, '_': 97, 'arg': 12, '(': 7, 'if': 74, ')': 18, 'i': 70, '=': 60, '': 8, '{': 19, 'length': 31, '.': 30, ',': 13, ']': 11, '[': 10, 'static': 1, 'private': 0}
{'}\n': 78, ';': 68, ')': 67, '(': 6, 'Params': 26, 'header': 25, 'null': 63, 'url': 9, 'Get': 59, 'Http': 53, '': 1, 'STR': 45, '_': 37, ',': 10, '}': 41, '{': 35, ']': 22, '[': 21, 'String': 8, 'new': 28, '=': 27, 'execute': 4}
{'}\n': 143, ';': 27, ')': 14, 'Opacity': 13, 'maintain': 12, '!': 138, ',': 10, 'RGB': 24, 'new': 31, '(': 6, 'From': 128, 'create': 127, '.': 22, 'Image': 2, 'Encoded': 124, '': 1, 'return': 122, '}': 120, ']': 18, 'width': 43, '*': 107, 'y': 65, '+': 114, 'x': 81, '[': 17, 'rgb': 19, '=': 20, '{': 15, '++': 75, '<': 71, 'NUM': 68, '_': 67, 'int': 16, 'for': 62, 'height': 53, 'Height': 58, 'get': 23, 'image': 9, 'Width': 48, 'length': 39, 'boolean': 11, 'public': 0}
{'}\n': 133, '}': 132, ';': 33, ')': 16, 'args': 15, '+': 128, 'STR': 74, '_': 73, '(': 5, 'Exception': 124, 'Argument': 123, 'Illegal': 122, '': 1, 'new': 120, 'throw': 119, '{': 17, 'Empty': 114, 'is': 113, '.': 112, '!': 110, 'if': 108, ',': 11, 'get': 39, '=': 38, 'super': 18, '>': 14, 'String': 10, '<': 8, 'Map': 7, 'Factory': 4, 'Filter': 3, 'public': 0}
{'}\n': 72, '}': 33, ';': 32, ')': 22, 'e': 39, '(': 10, 'Exception': 38, 'Runtime': 37, '': 3, 'new': 54, 'throw': 42, '{': 23, 'catch': 34, 'call': 29, '.': 28, 'callable': 17, 'return': 26, 'try': 24, '>': 5, 'T': 4, '<': 2, 'Callable': 12, 'Throw': 9, 'wrap': 8, 'static': 1, 'public': 0}
{'}\n': 86, ';': 26, ')': 14, '(': 6, 'String': 3, 'to': 81, '.': 63, 'sb': 30, 'return': 78, '}': 70, 'STR': 25, '_': 24, 'append': 64, '{': 15, '++': 59, 'i': 42, '-': 51, 'Chars': 13, 'total': 12, '<': 48, 'NUM': 45, '=': 23, 'int': 11, 'for': 39, 'Buffer': 29, '': 2, 'new': 32, 'str': 9, 'null': 20, '==': 19, 'if': 16, ',': 10, 'pad': 4, 'static': 1, 'public': 0}
{'}\n': 633, '}': 84, ';': 16, 'NUM': 15, '_': 14, '=': 12, ']': 82, 'i': 45, '[': 80, 'pixels': 62, '{': 7, ')': 6, '++': 205, 'npix': 18, '<': 71, 'pi': 57, '(': 5, 'for': 193, 'top': 53, 'Stack': 98, 'pixel': 121, '--': 330, 'in_code': 35, 'old_code': 37, 'available': 25, '+=': 303, 'code_mask': 29, 'code_size': 31, 'Size': 99, 'Max': 97, '': 9, '&&': 567, '==': 63, '&': 314, 'if': 59, 'first': 51, 'byte': 79, 'suffix': 104, 'short': 94, 'prefix': 87, 'break': 294, '>=': 512, 'code': 41, 'clear': 27, '>': 353, 'while': 467, 'continue': 332, 'Code': 11, 'Null': 10, '+': 136, '-': 13, '<<': 151, 'data_size': 49, 'end_of_information': 33, '||': 66, '-=': 346, 'bits': 39, '>>=': 342, 'datum': 47, 'count': 43, 'bi': 55, 'block': 309, '<=': 290, 'Block': 283, 'read': 143, 'new': 78, 'null': 64, 'length': 70, '.': 69, ',': 26, 'int': 8, 'ih': 22, '*': 21, 'iw': 20, 'Data': 4, 'Image': 3, 'decode': 2, 'void': 1, 'protected': 0}
{'}\n': 39, ';': 35, 'myhash': 8, 'return': 36, ')': 5, '(': 4, 'Code': 3, 'hash': 2, '.': 15, 'NUM': 11, '_': 10, '{': 6, 'int': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 5, '(': 4, 'Charset': 23, 'default': 25, '': 1, '.': 14, '{': 9, 'public': 0}
{'}\n': 92, ';': 33, 'BOOL': 89, '_': 88, 'return': 45, '{': 17, '(': 8, 'if': 55, '.': 27, 'Index': 11, 'column': 14, ')': 16, 'row': 10, 'get': 28, 'List': 26, '=': 24, '': 18, 'int': 9, ',': 12, 'boolean': 4, 'public': 3}
{'}\n': 143, '{': 135, ')': 134, '(': 132, 'info': 122, 'void': 1}
{'}\n': 111, ';': 110, 'pkg': 8, 'new': 96, ')': 17, '(': 5, '.': 58, '!': 79, '': 6}
{'}\n': 190, '}': 188, ';': 41, ')': 12, 'STR': 156, '_': 131, '+': 157, '(': 7, '{': 13, 'NUM': 132, '>': 130, 'length': 127, '.': 16, 'if': 42, 'URL': 60, 'get': 37, 'Browser': 22, 'Service': 21, 'remote': 17, '=': 26, 'url': 53, 'String': 52, '': 1, 'null': 48, '!=': 47, 'Viewer': 38, 'Remote': 20, 'megan': 15, 'final': 14, 'ev': 11, 'Event': 10, 'Action': 9, 'Performed': 6, 'action': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 110, ';': 42, 'return': 107, '}': 58, ')': 23, 'cert': 10, '(': 6, 'is': 95, '.': 30, 'if': 25, '{': 44, '': 7, 'STR': 41, '_': 40, ',': 11, 'CRL': 16, 'Certificate': 5, 'X509': 8, 'static': 1}
{'}\n': 199, ';': 23, ')': 5, '(': 4, 'close': 195, '.': 104, 'Out': 103, 'Std': 102, 'Binary': 101, '': 7, 'if': 124, 'write': 105, 'st': 11, '=': 12, 'String': 8, 'int': 61, 'i': 26, 'char': 48, '+': 46, 'STR': 45, '_': 28, '++': 37, 'R': 34, '<': 32, 'NUM': 29, 'for': 24, 'new': 13, '{': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 23, ';': 22, ')': 10, '(': 9, 'Labels': 8}
{'}\n': 76, ';': 32, ')': 11, '(': 22, 'String': 9, 'to': 70, '.': 24, 'buffer': 16, 'append': 48, 'STR': 51, '_': 50, 'Buffer': 15, '': 2, 'new': 18, '=': 17, '{': 12, 'public': 0}
{'}\n': 66, ';': 26, 'points2': 30, 'return': 63, ')': 13, 'length': 37, '.': 36, ',': 49, 'NUM': 40, '_': 39, 'points': 18, '(': 12, 'arraycopy': 46, 'System': 44, '': 1, ']': 6, '-': 38, '[': 5, 'double': 4, 'new': 32, '=': 19, 'Test': 10, 'Cumulative': 9, 'make': 7, '{': 14, 'Inverse': 8, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 34, ';': 25, 'return': 27, ')': 12, '(': 9, 'append': 8, '{': 13, 'b': 11, 'boolean': 10, 'String': 6, '': 5, '.': 2, 'lang': 3, 'java': 1, 'public': 0}
{'}\n': 263, ';': 96, ')': 64, '(': 42, '.': 68, 'get': 205, '=': 177, '': 49, '}': 164, '_': 156, '{': 57, 'server': 51, 'Empty': 70, 'is': 69, 'null': 63, 'if': 58, 'String': 50, 'Server': 25}
{'}\n': 36, ';': 27, 'length': 13, 'm': 16, ')': 14, ',': 22, 'pos': 23, 'buf': 7, '(': 3, '.': 18, '{': 15, ']': 6, '[': 5, 'byte': 4, 'void': 1}
{'}\n': 50, ';': 17, ')': 6, '(': 3, 'index': 42, '.': 21, 'sym': 5, 'get': 22, '_elements': 20, 'not_null': 13, '{': 9, 'internal_error': 8, 'throws': 7, 'terminal': 4, 'boolean': 1, 'public': 0}
{'}\n': 129, ';': 73, '}': 116, 'path': 7, '(': 4, ')': 8, 'NUM': 53, '_': 28, '.': 23, '&&': 33, 'if': 20, '{': 19, 'String': 6, '': 5, 'create': 2}
{'}\n': 44, ';': 25, ')': 5, 'MSG_': 20, '': 19, '(': 4, 'Message': 30, 'obtain': 35, '.': 15, 'Handler': 14, 'send': 29, '{': 6, 'void': 1}
{'}\n': 109, ';': 108, ')': 12, '(': 4, 'get': 77, '.': 76, 'Tag': 3, '{': 16, '': 5, ',': 8, 'String': 6, 'write': 2, 'void': 1}
{'}\n': 60, ';': 54, 'myhash': 9, 'return': 57, '}': 56, ')': 5, '(': 4, 'Code': 3, 'hash': 2, '.': 28, 'Path': 41, 'Cert': 40, 'signer': 39, '=': 24, '{': 6, 'NUM': 13, '_': 12, '-': 11, '==': 10, 'if': 7, 'int': 1, 'public': 0}
{'}\n': 61, ';': 20, 'result': 34, 'return': 58, ')': 8, ',': 43, 'id': 11, '(': 7, 'set': 51, '.': 16, 'List': 15, 'Variable': 3, 'type': 5, 'this': 44, 'BV': 4, 'Type': 2, '': 1, 'new': 36, '=': 12, 'null': 27, 'add': 25, 'size': 17, 'int': 10, '{': 9, 'public': 0}
{'Exception': 594, '': 37, ',': 368, ')': 527, 'Request': 70, 'servlet': 179, '(': 112, 'Servlet': 46, 'public': 0}
{'}\n': 102, ';': 38, ')': 23, 'STR': 89, '_': 88, '+': 90, 'self': 7, 'to': 11, '(': 4, 'Exception': 86, 'Runtime': 85, 'Groovy': 84, '': 5, 'new': 82, 'throw': 81, 'else': 80, '}': 78, 'i': 59, 'call': 73, '.': 21, 'closure': 26, '{': 28, 'to1': 40, 'self1': 30, '=': 31, 'int': 29, 'for': 56, 'if': 49, 'Value': 35, 'Closure': 15, 'class': 22, 'Param': 20, 'First': 19, 'Params': 16, '@': 13, ',': 8, 'Number': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 10, '(': 3, 'add': 2, '.': 15, 'select': 12, '{': 11, 'Element': 7, 'Clause': 6, 'Select': 5, '': 4, 'void': 1, 'public': 0}
{'}\n': 54, ';': 53, ')': 13, 'l': 12, '(': 7, '.': 36, '': 8, '{': 14, 'Listener': 6, 'Change': 5, 'Pv': 4, 'remove': 3, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 287, ';': 63, 'return': 60, '}': 64, 'BOOL': 279, '_': 104, ')': 20, ']': 268, 'i': 141, '[': 266, '(': 23, '-': 263, '.': 28, '': 6, 'if': 22, '{': 21, '++': 153, '<': 147, 'NUM': 144, '=': 69, 'int': 140, 'for': 138, 'gts': 45, ',': 171, 'Index': 168, 'At': 167, 'value': 166, 'GTSHelper': 164, 'double': 65, 'values': 150, '==': 99, '!=': 44, 'TYPE': 40, 'Serie': 9, 'Time': 8, 'Geo': 7, 'static': 1, 'public': 0}
{'}\n': 1201, '}': 1200, '_': 23, ')': 9, '(': 5, '.': 16, 'STR': 24, 'N': 287, 'Na': 286, 'is': 1073, 'Double': 283, '': 6, 'if': 980, ';': 122, 'to': 1011, ',': 25, 'String': 58, 'properties': 8, 'Lat': 759, '=': 99, 'Util': 59, '{': 10, 'Properties': 4, 'void': 1, 'public': 0}
{'}\n': 455, ';': 37, 'q': 79, '/': 213, 'p': 74, '*': 162, 'z': 76, 'return': 224, ')': 7, 'NUM': 17, '_': 16, ',': 18, 'Q': 40, '': 10, 'x': 6, '(': 4, 'polevl': 424, '=': 14, 'P': 11, '-=': 254, '==': 118, '||': 404, 'if': 89, '}': 36, '+=': 148, '/=': 321, '+': 308, '{': 8, '<': 100, 'else': 229, 'STR': 129, 'Exception': 126, 'Arithmetic': 125, 'new': 123, 'throw': 122, 'while': 245, '-': 45, '>': 92, '*=': 259, '>=': 248, 'Formula': 218, 'stirling': 217, 'PI': 172, '.': 83, 'Math': 82, 'abs': 84, 'sin': 166, 'floor': 110, 'double': 2, ']': 13, '[': 12, 'gamma': 3, 'static': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 5, '(': 4, 'Millis': 16, 'Time': 15, 'current': 14, '.': 13, 'System': 12, '': 11, '=': 10, 'start': 7, '{': 6, 'public': 0}
{'}\n': 102, ';': 45, ')': 31, '(': 78, '.': 56, 'Expression': 7, '': 2, 'static': 1, 'public': 0}
{'}\n': 22, ';': 16, ')': 8, '(': 7, 'All': 18, 'notify': 17, 'null': 15, '=': 14, 'buffer': 13, '{': 12, 'IOException': 11, '': 1, 'throws': 9, 'close': 6, 'void': 5, 'synchronized': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 18, ';': 17, ')': 9, 'section': 8, '(': 4, 'add': 2, '.': 12, 'sections': 11, '{': 10, 'Section': 3, 'void': 1}
{'}\n': 147, ';': 28, 'ped': 20, 'return': 144, '}': 102, ')': 11, 'line': 31, ',': 119, '(': 6, 'Line': 41, 'parse': 114, 'continue': 100, '{': 15, 'STR': 65, '_': 64, 'matches': 84, '.': 39, '||': 67, 'With': 62, 'starts': 61, 'if': 57, 'trim': 53, '=': 21, 'null': 46, '!=': 45, 'read': 40, 'reader': 10, 'while': 33, 'String': 30, '': 2, 'Relationships': 4, 'Genome': 3, 'new': 22, 'final': 16, 'IOException': 14, 'throws': 12, 'Reader': 9, 'Buffered': 8, 'load': 5, 'static': 1, 'public': 0}
{'}\n': 101, ';': 45, 'NUM': 35, '_': 22, '-': 92, '=': 30, ']': 3, '[': 2, 'p': 87, '}': 84, 'i': 41, '': 12, ')': 10, '++': 52, 'new': 31, '(': 21, '{': 11}
{'}\n': 113, ';': 45, ')': 17, '+': 99, '_': 43, 'a': 8, '(': 5, '': 21, '}': 46, 'BOOL': 44, 'return': 42, '{': 18, 'b': 12, '==': 50, 'if': 19, 'N': 26, 'Na': 25, 'is': 24, '.': 23, 'Double': 22, 'double': 7, 'final': 6, ',': 9, 'Equals': 4, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 133, ';': 46, 'STR': 103, '_': 96, '(': 14, '}': 106, ')': 19, '+': 101, '.': 66, '': 5, 'js': 17, '{': 20, 'String': 6, 'static': 1}
{'}\n': 87, ';': 86, ')': 71, 'STR': 84, '_': 83, '(': 40, 'return': 77, '{': 72, 'line': 51, 'String': 47, '': 46, 'Line': 6}
{'}\n': 151, ';': 54, 'volumes': 26, 'return': 148, '}': 147, ')': 18, 'volume': 74, '(': 10, 'Object': 142, 'create': 7, '.': 89, 'Client': 139, '_db': 138, 'set': 111, 'i': 58, '+': 124, 'Label': 121, 'URI': 83, 'Id': 91, 'add': 103, 'URIs': 101, 'Volume': 5, 'class': 96, '': 1, 'URIUtil': 88, '=': 27, 'new': 28, '{': 19, '++': 69, 'Volumes': 17, 'num': 16, '<=': 64, 'NUM': 61, '_': 60, 'int': 15, 'for': 55, '>': 6, '<': 3, 'List': 2, 'Array': 30, ',': 14, 'String': 12, 'private': 0}
{'}\n': 95, ';': 93, ')': 54, '(': 12, '.': 57, 'Name': 66, 'get': 65, 'type': 45, 'STR': 61, '_': 60, 'log': 56, '{': 55, '>': 5, 'T': 4, '': 3, '<': 2, 'Class': 20}
{'}\n': 533, ';': 531, ')': 191, ',': 505, 'STR': 417, '_': 416, '(': 80, 'get': 354, '.': 353, '': 90, 'new': 264, 'cmd': 76, '{': 195, 'void': 1}
{'}\n': 346, '}': 341, ';': 40, 'null': 339, '=': 32, ')': 21, '(': 9, '.': 35, 'Insns': 31, 'Instructions': 37, 'get': 36, '>': 29, 'Node': 28, 'Insn': 27, '': 23, '<': 25, 'List': 24, 'Block': 17, '{': 22}
{'}\n': 15, ';': 14, ')': 5, '(': 4, '{': 6, 'Error': 3, 'check': 2, 'boolean': 1, 'public': 0}
{'}\n': 149, ';': 86, 'split': 87, 'return': 140, '}': 139, ')': 65, '(': 11, 'Pages': 110, 'get': 123, '.': 89, 'Page': 20, 'current': 59, 'add': 90, '=': 38, '': 1, '{': 66, '<': 3, 'List': 2, 'Ranges': 24, '>': 7, 'Range': 21, 'Document': 6, 'Pdf': 5, 'public': 0}
{'}\n': 178, ';': 85, '_': 175, '.': 81, 'String': 139, '': 6, '{': 100, ')': 84, '(': 5, 'auth': 8, '=': 105, 'if': 17, 'Auth': 3, 'private': 0}
{'}\n': 172, ';': 171, ')': 50, '(': 49, '': 45, '.': 77, 'Logger': 47, 'Error': 140, 'new': 114, 'Impl': 48, 'IMFError': 46, 'public': 0}
{'}\n': 42, ';': 11, 'line': 10, 'return': 39, '}': 23, 'null': 36, '=': 15, '{': 7, ')': 6, 'e': 31, 'Exception': 30, 'Element': 29, 'Such': 28, 'No': 27, '': 1, '(': 5, 'catch': 24, 'Line': 4, 'next': 18, '.': 17, 'scanner': 16, 'try': 12, 'String': 2, 'read': 3, 'public': 0}
{'}\n': 29, ';': 28, ')': 11, 'OPTIONS': 26, 'NO_': 25, '': 8, ',': 20, 's': 10, '(': 6, 'decode': 5, 'return': 13, '{': 12, 'String': 9, ']': 4, '[': 3, 'byte': 2, 'static': 1, 'public': 0}
{'}\n': 78, ';': 77, ')': 72, '_': 24, ',': 12, 'NUM': 25, '{': 17, 'public': 0}
{'}\n': 89, ';': 22, 'matches': 52, 'return': 86, '}': 85, ')': 14, '(': 10, 'group': 80, '.': 29, 'm': 37, 'add': 76, '{': 15, 'find': 69, 'while': 65, '>': 7, 'String': 6, '': 2, '<': 4, 'List': 3, 'Array': 56, 'new': 54, '=': 19, 'matcher': 41, 'pat': 25, 'Matcher': 36, 'pattern': 18, 'compile': 30, 'Pattern': 24, 'STR': 21, '_': 20, 'match': 8, 'static': 1, 'public': 0}
{'}\n': 472, ';': 30, 'NUM': 164, '_': 163, 'errno': 456, '.': 56, 'Info': 420, 'pkg': 421, '=': 53, 'this': 454, ')': 21, ',': 10, 'RESP': 448, 'CMD_': 277, 'PROTO_': 276, 'TRACKER_': 275, '': 5, 'Common': 100, 'Proto': 99, '(': 4, 'Stream': 64, 'Input': 435, 'get': 57, 'Socket': 47, 'tracker': 8, 'Package': 419, 'recv': 428, 'Recv': 418, 'Pkg': 308, 'whole': 307, 'write': 407, 'out': 65, 'Len': 190, 'Addr': 20, 'ip': 188, 'length': 114, 'Name': 14, 'Group': 35, 'b': 34, '+': 292, 'header': 29, 'Ip': 19, 'arraycopy': 170, 'System': 168, ']': 28, '[': 27, 'byte': 26, 'new': 95, 'LEN': 107, 'MAX_': 106, 'NAME_': 105, 'GROUP_': 104, 'FDFS_': 103, 'STORAGE': 280, 'SERVER_': 278, 'Header': 268, 'pack': 267, '}': 134, '-': 256, 'SIZE': 228, 'IPADDR_': 227, '{': 25, 'else': 135, '<': 220, 'if': 110, 'g_charset': 88, 'Global': 86, 'Client': 85, 'Bytes': 82, 'storage': 18, 'int': 43, 'len': 44, 'bs': 41, 'fill': 154, 'Arrays': 152, '<=': 115, 'group': 13, 'Output': 63, 'Server': 7, 'IOException': 24, 'throws': 22, 'String': 12, 'Tracker': 6, 'Storage': 3}
{'}\n': 52, ';': 27, 'uuid': 18, 'return': 49, ')': 14, 'Node': 8, 'parent': 12, ',': 44, '(': 9, 'Edge': 41, 'add': 31, '.': 22, 'Server': 29, 'graph': 28, 'Vertex': 32, 'UUID': 5, 'random': 23, '': 1, '=': 19, '{': 15, 'create': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 91, ';': 89, ')': 40, '(': 5, 'get': 83, '.': 49, ',': 80, 'STR': 57, '_': 56, '{': 41, 'Delivery': 36, '': 33, 'final': 17, 'void': 1}
{'}\n': 162, ';': 119, ')': 68, '(': 60, '.': 79, 'modules': 138, 'Module': 41, 'module': 73, '{': 69, '': 62}
{'}\n': 189, ';': 59, ')': 30, '(': 14, 'Array': 45, 'Byte': 44, 'to': 101, '.': 61, 'Stream': 47, ',': 73, 'NUM': 75, '_': 74, 'PNG': 72, '': 19, 'Format': 69, 'Compress': 68, 'Bitmap': 20, 'compress': 62, 'bitmap': 21, 'Output': 46, 'new': 51, '=': 50, '{': 42, 'static': 7}
{'}\n': 289, ';': 33, ')': 27, '(': 23, '.': 70, 'STR': 261, '_': 260, '=': 59, '}': 34, 'txt': 20, 'return': 90, '{': 28, 'if': 22, 'null': 26, '==': 25, 'String': 8, '': 7, 'static': 1, 'public': 0}
{'}\n': 118, ';': 22, 'h': 18, 'return': 115, ')': 15, 'NUM': 21, '_': 20, '>': 88, '(': 3, '^=': 31, '<<': 79, '+=': 75, '~': 76, '}': 39, 'Code': 35, 'hash': 2, '.': 33, 'key2': 10, '{': 16, 'null': 27, '!=': 26, 'if': 23, 'key1': 6, '=': 19, 'int': 1, 'Object': 5, '': 4, ',': 7, 'protected': 0}
{'}\n': 21, ';': 20, ')': 4, '(': 3, 'flush': 2, '{': 8, 'void': 1, 'public': 0}
{'}\n': 149, ';': 77, ')': 31, '(': 7, '.': 51, 'List': 28, 'entry': 19, '}': 78, '{': 32, 'Entry': 16, '': 15, 'void': 1}
{'}\n': 83, ';': 71, ')': 60, 'notify': 76, '(': 67, '.': 64, '': 38, 'Slide': 30, 'void': 1}
{'}\n': 73, ';': 72, ')': 27, 'Prev': 15, '(': 22, '{': 28}
{'}\n': 79, ';': 18, 'BOOL': 17, '_': 16, 'return': 15, '}': 74, ')': 7, 'i': 36, '(': 3, 'At': 65, 'char': 64, '.': 24, '!=': 22, ']': 60, 'j': 40, '--': 46, '[': 57, '_array': 56, 'if': 9, '{': 8, 'NUM': 50, '>=': 48, '_length': 21, '+': 43, '_offset': 42, '=': 37, ',': 39, 'int': 35, 'for': 33, 'length': 25, 'null': 13, '==': 12, '': 4, 'boolean': 1, 'public': 0}
{'}\n': 12, ';': 11, ')': 4, '(': 3, 'flush': 2, '.': 7, 'stream': 6, '{': 5, 'void': 1}
{'}\n': 75, ';': 74, ')': 7, '(': 6, '.': 63, 'Starter': 62, '': 1, '{': 11, 'Exception': 10, 'throws': 8}
{'}\n': 109, ';': 108, 'null': 97, ',': 83, '(': 4, ')': 10, '': 1, 'default': 49}
{'}\n': 94, ';': 93, '_': 86, '(': 5, '.': 35, ')': 9, 'provider': 8, '{': 10, '': 6, 'boolean': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 19, '(': 17, 'now': 28, '': 11, 'public': 0}
{'}\n': 73, '}': 72, ';': 21, ')': 11, '(': 3, 'item': 49, '+': 38, 'STR': 37, '_': 26, 'Exception': 34, '': 8, 'new': 31, 'throw': 30, '{': 12, 'NUM': 27, '<': 25, 'index': 14, 'if': 22, 'Of': 17, '=': 15, 'int': 13, 'void': 1}
{'}\n': 35, ';': 34, ')': 11, 'value': 10, '(': 4, 'String': 6, 'to': 28, '.': 14, '': 5, ',': 8, 'name': 7, 'Field': 3, 'write': 2, '{': 19, 'IOException': 18, 'io': 15, 'java': 13, 'throws': 12, 'void': 1, 'public': 0}
{'}\n': 205, ';': 46, ')': 17, '(': 6, 'Array': 146, 'Byte': 145, 'to': 199, '.': 37, 'bos': 149, 'return': 44, '}': 47, 'i': 88, 'write': 186, '{': 29, 'Ints': 75, 'data': 10, 'int': 12, 'for': 85, 'Stream': 148, 'Output': 147, '': 24, 'new': 59, '=': 76, 'Bytes': 16, 'Correction': 15, 'Error': 14, 'num': 13, ',': 11, 'NUM': 41, '_': 40, '&': 113, ']': 3, '[': 2, '++': 100, 'length': 38, '<': 94, 'STR': 67, 'Exception': 28, 'Large': 27, 'Too': 26, 'Data': 5, 'throw': 58, '>': 53, 'if': 30, 'null': 34, '==': 33, '||': 35, 'throws': 18, 'byte': 1, 'public': 0}
{'}\n': 43, ';': 42, 'string': 16, '(': 13, 'List': 4, 'as': 30, '.': 29, 'Arrays': 28, '': 2, '>': 8, '<': 5, 'Array': 3, 'new': 20, 'return': 19, '{': 18, ')': 17, 'String': 7, 'To': 10, 'static': 1, 'public': 0}
{'}\n': 40, ';': 27, ')': 18, 'remove': 22, '(': 6, 'void': 0}
{'}\n': 79, ';': 72, 'BOOL': 71, '_': 35, 'return': 69, ')': 27, 'STR': 47, '(': 25, 'With': 44, 'starts': 43, '.': 22, '||': 49, 'is': 3, 'boolean': 2, 'public': 0}
{'}\n': 171, ';': 34, '_': 32, '+': 151, 'else': 157, 'Line': 37, 'src': 23, ')': 19, '(': 5, '=': 65, '{': 20, '_dst': 85, 'if': 73, 'Filename': 24, ',': 9, 'int': 10, 'String': 7, '': 6}
{'}\n': 41, ';': 40, ')': 12, 'notification': 11, '(': 4, 'add': 2, '.': 35, '{': 13, 'Notification': 3, '': 9, 'void': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 6, '(': 5, 'Empty': 20, 'is': 19, '.': 18, 'attributes': 10, 'null': 12, '!=': 11, '{': 7, 'Attributes': 3, 'boolean': 1}
{'}\n': 126, ';': 52, ')': 18, '(': 21, ',': 112, '': 1, 'STR': 92, '_': 81, 'get': 43, '.': 23, 'cls': 13, 'is': 24, 'if': 20, '=': 56, 'class': 32, 'Ignite': 29, 'Present': 26, 'Annotation': 25}
{'}\n': 202, ';': 166, '}': 167, 'params': 48, '=': 116, 'Params': 21, 'extra': 20, ')': 57, '_': 99, '(': 62, '.': 82, 'String': 35, '': 17}
{'}\n': 239, 'return': 235, '}': 234, ';': 60, ')': 18, 'NUM': 93, '_': 57, '(': 7, 'random': 200, '.': 154, '': 2, '{': 19, 'k': 83, '<': 84, '=': 70, 'STR': 58, 'new': 37, 'static': 1}
{'}\n': 60, ';': 59, ']': 17, 'NUM': 16, '_': 15, '[': 14, 'Range': 13, '==': 18, '(': 5, 'draw': 2, 'int': 1, 'protected': 0}
{'}\n': 99, ';': 25, ')': 12, 'NUM': 48, '_': 47, '(': 8, 'group': 42, '.': 20, 'matcher': 16, 'signature': 11, ',': 56, 'STR': 55, 'error': 52, 'logger': 50, '!=': 46, 'Count': 43, '&&': 39, 'b': 27, '!': 37, 'if': 35, 'matches': 31, '=': 17, 'boolean': 26, 'RE': 19, 'sig': 18, 'Matcher': 15, '': 2, '{': 13, 'String': 3, 'grab': 6, 'static': 1, 'public': 0}
{'}\n': 331, '}': 144, ';': 85, ')': 24, ',': 297, 'Event': 10, 'the': 194, '{': 25, ']': 65, '[': 64, 'Bean': 11, '': 9, 'new': 126, '(': 4, '.': 49, ':': 173, 'for': 166, 'events': 29, 'if': 93, 'null': 83, '=': 68, 'void': 1, 'public': 0}
{'}\n': 382, ';': 17, 'null': 25, 'return': 107, '++': 377, 'Size': 119, 'm': 93, 'value': 11, '=': 29, ']': 97, 'NUM': 31, '_': 30, '+': 80, ')': 12, '<<': 76, 'index': 19, '(': 4, '[': 95, 'Array': 94, 'key': 7, 'hash': 16, 'Hashes': 122, '}': 41, '-': 298, ',': 8, 'arraycopy': 218, '.': 47, 'System': 216, '': 1, '{': 13, '<': 273, 'if': 21, 'oarray': 193, 'ohashes': 183, 'Arrays': 199, 'free': 258, 'length': 124, '>': 150, 'n': 129, 'alloc': 198, 'Object': 190, 'final': 14, 'int': 15, 'SIZE': 137, 'BASE_': 136, ':': 156, '*': 138, '?': 142, '>=': 67, '~': 113, 'old': 87, 'V': 2, 'Of': 36, 'Code': 49, 'else': 42, 'Null': 37, '==': 24, 'K': 6, 'put': 3, 'public': 0}
{'}\n': 24, ';': 23, ')': 10, 'val': 9, ',': 7, 'addr': 19, '+': 18, 'pos': 6, '(': 4, 'put': 2, '.': 13, 'unsafe': 12, '{': 11, 'long': 5, 'void': 1, 'public': 0}
{'}\n': 373, ';': 82, 'BOOL': 371, '_': 342, 'return': 356, '}': 286, ')': 81, 'STR': 343, ',': 11, 'e': 330, 'token': 322, '(': 5, 'Failed': 358, 'step': 319, 'String': 46, 'to': 349, '.': 91, 'Names': 347, 'Set': 37, 'replication': 345, 'format': 340, '': 6, 'error': 335, '_log': 333, '{': 52, 'Exception': 329, 'catch': 326, 'Succeded': 320, 'Completer': 317, 'Step': 4, 'Workflow': 315, 'Sets': 305, 'Replication': 304, 'rp': 8, 'get': 175, 'RPHelper': 196, '=': 67, 'Id': 10, 'volume': 18, 'class': 99, 'Volume': 136, 'Object': 93, 'query': 92, 'Client': 90, '_db': 89, 'Ids': 19, ':': 130, 'URI': 7, 'for': 124, 'System': 9, 'Protection': 84, '>': 17, '<': 14, 'List': 13, 'Array': 70, 'new': 68, 'RSet': 3, 'boolean': 1, 'public': 0}
{'}\n': 95, ';': 21, ')': 6, '(': 5, '.': 89, 'next': 24, '': 55, '{': 7, 'null': 36, '!=': 35, 'if': 32}
{'}\n': 579, ';': 43, 'STR': 68, '_': 63, 'return': 66, '}': 574, ')': 29, ',': 8, '(': 4, '.': 57, 'get': 235, '': 1, 'set': 171, 'Integer': 32, 'new': 228, 'Value': 59, 'Tab': 16, 'm': 17, '{': 30, '=': 37, 'null': 51, 'NUM': 64, '==': 50, 'int': 9, 'ID': 36, 'M_': 34, '||': 52, 'if': 44, 'value': 28, 'Object': 27, 'Field': 22, 'Grid': 15, 'No': 12, 'Window': 11, 'ctx': 7, 'Properties': 6, 'String': 2, 'public': 0}
{'}\n': 184, ';': 26, ')': 6, 'NUM': 21, '_': 20, '<<': 108, '&': 104, ']': 103, '[': 100, 'scratch': 18, '(': 5, '|': 112, ',': 19, 'Fully': 16, 'read': 3, '{': 14, 'IOException': 13, '': 12, '.': 9, 'io': 10, 'java': 8, 'throws': 7, 'final': 1, 'public': 0}
{'}\n': 321, ';': 53, ')': 8, '(': 7, 'close': 317, '.': 20, 'rs': 61, 'NUM': 152, '_': 79, 'Name': 149, 'Table': 222, 'get': 116, 'rsmd': 145, 'assert': 84, 'Null': 86, 'Not': 85, 'Set': 29, 'Result': 28, '': 10, ',': 43, 'con': 19, '=': 18, '{': 12, 'Exception': 11, 'throws': 9, 'Data': 6, 'Meta': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 73, ';': 72, 'STR': 17, '_': 16, '+': 25, 'return': 8, '{': 7, ')': 6, '(': 5, 'String': 2, '': 1, 'public': 0}
{'}\n': 752, '}': 143, ';': 34, ')': 14, '(': 6, 'Database': 746, 'Internal': 745, 'error': 162, '.': 26, 'Text': 160, 'servlet': 159, ',': 18, 'Response': 10, 'And': 9, 'request': 11, 'Json500': 735, 'return': 152, 'e': 149, 'STR': 140, '_': 139, 'INFO': 726, '': 7, 'Level': 723, 'log': 720, 'logger': 718, '{': 22, 'Exception': 21, 'Persistence': 713, 'final': 59, 'catch': 144, 'commit': 696, 'Logic': 559, 'db': 558, 'Id': 688, 'get': 66, 'user': 567, 'create': 606, '=': 65, 'Is': 542, 'Json400': 153, 'Account': 518, 'if': 171, 'is': 194, '!': 229, 'Json': 3, 'IOException': 17, 'String': 36, 'json': 64, 'Node': 62, 'Helper': 63, 'try': 57, 'Type': 30, 'Content': 29, 'set': 27, 'Servlet': 20, 'throws': 15, 'Request': 8, 'Create': 4, 'handle': 2, 'void': 1, 'private': 0}
{'}\n': 170, ';': 113, ')': 36, ',': 11, '(': 7, '{': 123, '++': 121, 'i': 110, 'parameters': 116, '<': 115, '=': 97, 'int': 78, 'for': 107, '[': 3, '': 1, '_': 46, 'Parameters': 6, ']': 4, 'Object': 2}
{'}\n': 34, ';': 33, ')': 10, 'STR': 26, '_': 25, '<=': 29, 'c': 9, '&&': 27, '>=': 24, '(': 7, '||': 21, 'return': 12, 'char': 8, 'Char': 6, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 10, '}': 26, '(': 6, 'set': 14, '.': 13, 'socket': 9, 'SSLSocket': 8, '': 7, 'public': 0}
{'}\n': 41, ';': 40, ')': 7, 'STR': 14, '_': 13, '==': 36, 'ch': 6, '(': 4, '<=': 17, '&&': 15, '>=': 12, 'return': 9, '{': 8}
{'}\n': 33, ';': 32, 'NUM': 24, '_': 23, ')': 5, '{': 6, '(': 4, 'Code': 3, 'hash': 2, 'int': 1, 'public': 0}
{'}\n': 18, ';': 17, 'this': 12, '{': 11, ')': 10, 'Command': 2, '': 1, '(': 5}
{'}\n': 21, ';': 20, ')': 9, 'STR': 18, '_': 17, '(': 5, 'With': 15, 'ends': 14, '.': 13, 'desc': 8, 'return': 11, '{': 10, 'String': 7, '': 6, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 70, ';': 22, ')': 9, '(': 4, 'get': 16, '.': 34, 'bar': 14, 'Bar': 13, 'Scroll': 18, 'Vertical': 17, '=': 15, 'JScroll': 12, '': 5, '{': 10, 'void': 1, 'public': 0}
{'}\n': 61, ';': 42, ')': 23, '_': 50, '(': 3, 'Arguments': 17, 'Of': 16, 'Number': 15, 'expected': 14, '{': 24, 'Dashed': 21, 'expect': 20, 'boolean': 19, ',': 8, 'int': 13, 'desc': 11, 'String': 5, '': 4, 'Name': 7, 'public': 0}
{'}\n': 257, '}': 174, ';': 27, ')': 16, '(': 3, 'unlock': 252, '.': 25, 'lock': 22, '{': 17, 'finally': 248, 'BOOL': 134, '_': 82, 'return': 132, 'Elements': 180, 'new': 179, 'Array': 43, 'set': 236, 'len': 48, 'NUM': 83, ',': 7, 'current': 40, '': 4, '=': 23, ']': 11, '[': 10, 'Object': 9, 'Of': 152, 'index': 151, 'if': 54, 'i': 80, 'eq': 105, '&&': 104, 'snapshot': 12, '!=': 57, '++': 90, '<': 86, 'int': 47, 'for': 77, 'min': 70, 'Math': 68, 'length': 52, 'get': 42, 'try': 34, 'this': 24, 'Lock': 21, 'Reentrant': 20, 'final': 18, 'boolean': 1, 'private': 0}
{'}\n': 17, ';': 16, ')': 8, 'model': 7, '(': 4, '.': 11, 'models': 10, '{': 9, 'Model': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 122, '}': 85, ';': 58, ')': 8, '(': 4, '{': 9, 'e': 90, '': 70, 'catch': 86, 'new': 42, '=': 41, 'data': 56, 'Stream': 23, 'Input': 22, 'try': 15, 'public': 0}
{'}\n': 38, ';': 37, 'NUM': 19, '_': 18, '': 21, '*': 20, '-': 17, ')': 14, 'prob': 13, ',': 8, 'double': 2, '(': 5, 'static': 1, 'public': 0}
{'}\n': 102, ';': 15, ',': 87, '.': 23, '': 8, '=': 19, ')': 6, 'Random': 17, '(': 5, '{': 7, 'public': 0}
{'}\n': 26, ';': 25, 'applied': 19, '{': 14, ')': 13, 'Applied': 9, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 4, '_': 25, ',': 24, 'Row': 19, 'Path': 17, 'get': 16, '.': 15, '(': 3, 'Tree': 7, '{': 5, 'void': 1, 'public': 0}
{'}\n': 184, ';': 183, ')': 7, ',': 142, 'STR': 6, '_': 5, '(': 4, 'get': 155, '.': 69, 'if': 96, '': 1, '{': 79, 'try': 78, '=': 59, '>': 13, 'T': 12, '<': 10, 'private': 8, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 29, ';': 28, ')': 5, '(': 4, 'Empty': 3, 'is': 2, '.': 23, 'nodes': 8, 'return': 7, '{': 6, 'boolean': 1, 'public': 0}
{'}\n': 42, '}': 41, ';': 40, ')': 13, 'throw': 33, '{': 14, 'b': 7, '!': 29, '(': 5, 'if': 27, 'boolean': 6, 'assert': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 56, 'id': 15, '.': 21, ';': 29, '{': 18, ')': 17, '': 13, '(': 7}
{'}\n': 22, ';': 21, ')': 6, '(': 16, 'Key': 15, 'contains': 14, '.': 13, 'Table': 12, 'dbg': 11, 'All': 9, 'debug': 8, '{': 7, 'static': 1}
{'}\n': 41, ';': 40, 'cmp': 22, '': 2, ',': 15, '(': 11, 'public': 0}
{'}\n': 66, ';': 27, ')': 13, 'file': 35, ',': 9, 'STR': 44, '_': 43, '(': 5, 'String': 11, 'List': 30, 'put': 56, '.': 38, 'tinydb': 18, 'path': 12, 'get': 39, '=': 19, '>': 34, '': 6, '<': 31, 'Array': 29, 'context': 8, 'DB': 17, 'Tiny': 16, 'new': 20, '{': 14, 'Context': 7, 'Set': 4, 'Directory': 3, 'void': 1, 'public': 0}
{'}\n': 76, ';': 75, 'hi': 24, '.': 7, 'm': 43, 'return': 28, ')': 20, '(': 19, 'if': 22, 'null': 26, '==': 25, '>': 16, 'V': 15, '': 1, ',': 13, 'K': 12, '<': 10, 'Node': 9, 'Map': 6, 'List': 5, 'Skip': 4, 'Concurrent': 3, 'Fast': 2, 'private': 0}
{'}\n': 1070, ';': 649, 'Props': 502, '=': 544, ')': 264, '(': 67, '.': 726, 'Properties': 47, '': 77, '{': 268, 'void': 1}
{'}\n': 167, 'Config': 26, ';': 46, ')': 16, ',': 11, 'STR': 91, '_': 90, '(': 7, 'put': 141, '.': 39, '': 8, 'Set': 76, '=': 29, 'null': 61, 'Name': 15, 'org': 58, 'Organization': 55, 'get': 54, 'scm': 28, 'sc': 50, 'Service': 25, 'SERVICE': 42, 'Manager': 27, 'new': 30, '{': 23, 'SSOException': 22, 'SMSException': 19, 'throws': 17, 'String': 13, 'Repo': 5, 'Id': 4, 'void': 2, 'static': 1}
{'}\n': 25, ';': 21, 'pin': 15, 'return': 22, ')': 11, '(': 7, '.': 16, '=': 14, '': 2, 'static': 1, 'public': 0}
{'}\n': 57, ';': 51, '}': 52, '{': 9, ')': 8, 'NUM': 35, '_': 34, '-': 33, 'index': 11, '(': 4, '||': 38, '.': 14, 'string': 7, 'Of': 16, 'String': 6, '': 5, 'public': 0}
{'}\n': 302, ';': 77, 'return': 299, '}': 99, 'r': 238, '.': 86, ')': 28, '(': 5, 'Bounds': 162, 'get': 67, 'shape': 203, ':': 252, 'Rectangle': 143, '': 1, '?': 246, 'instanceof': 141, '=': 42, 'bounds': 18, ',': 9, 'Backward': 231, 'Bias': 217, 'Position': 214, 'offs1': 14, 'Forward': 220, 'offs0': 11, 'View': 26, 'To': 208, 'model': 207, 'view': 27, 'Shape': 2, '{': 29, 'try': 199, 'else': 100, 'if': 78, 'Offset': 119, 'End': 128, '==': 81, '&&': 122, 'Start': 118, 'color': 41, 'Color': 40, 'set': 87, 'g': 8, 'Selection': 93, 'c': 23, 'null': 82, 'Component': 22, 'JText': 21, 'int': 10, 'Graphics': 7, 'Layer': 4, 'paint': 3, 'public': 0}
{'}\n': 193, '}': 28, ';': 27, 'NUM': 88, '_': 24, '=': 58, 'in': 77, '{': 11, ')': 7, 'length': 184, '.': 39, 'buffer': 14, '==': 15, '(': 3, 'if': 12, 'Char': 6, 'one': 5, ']': 173, '++': 172, '[': 170, '-': 158, 'STR': 25, 'IOException': 10, '': 9, 'new': 20, 'throw': 19, 'null': 16, 'Interrupted': 123, 'e': 125, 'Exception': 124, 'catch': 120, 'Alive': 41, 'is': 40, 'Reader': 32, 'last': 31, '!': 36, '&&': 35, '!=': 33, 'wait': 85, 'All': 81, 'notify': 80, 'out': 75, 'while': 69, 'try': 67, 'Thread': 60, 'current': 62, 'Writer': 57, 'throws': 8, 'char': 4, 'receive': 2, 'void': 1, 'synchronized': 0}
{'}\n': 52, ';': 39, 'Buff': 29, 'ret': 28, 'return': 48, ')': 22, 'order': 21, '(': 10, '.': 34, 'buffer': 15, 'wrap': 35, 'Buffer': 5, 'Byte': 4, '': 3, '=': 30, 'final': 2, '{': 23, 'Order': 20, ',': 16, ']': 14, '[': 13, 'byte': 12, 'To': 7, 'static': 1}
{'}\n': 110, ';': 64, 'return': 107, '}': 89, ')': 22, '(': 31, '.': 83, 'e': 94, '{': 70, 'Exception': 93, '': 12, 'catch': 90, 'Str': 15, 'uri': 14, 'new': 73, '=': 72, 'try': 69, 'STR': 33, '_': 32, '+': 42, 'String': 13}
{'}\n': 23, ';': 10, ')': 4, '(': 3, 'Millis': 19, 'Time': 12, 'current': 17, '.': 16, 'System': 15, '': 14, '=': 7, 'start': 11, 'NUM': 9, '_': 8, '{': 5, 'reset': 2, 'void': 1, 'public': 0}
{'}\n': 77, ';': 14, 'NUM': 13, '_': 12, ')': 5, '<<': 55, '(': 4, 'read': 2, '.': 19, 'in': 18, 'return': 31, '<': 27, 'k1': 16, 'if': 24, '=': 17, 'int': 1, '+=': 11, 'length': 10, '{': 9, 'IOException': 8, '': 7, 'throws': 6, 'public': 0}
{'}\n': 38, '}': 37, ';': 36, ')': 10, 'tag': 8, '(': 4, 'Tag': 6, 'get': 27, '.': 21, '{': 11, 'null': 17, '!=': 16, 'if': 12, 'Transformation': 3, '': 5, 'void': 1}
{'}\n': 244, '}': 189, ';': 14, ')': 25, 'c': 34, '(': 5, 'append': 86, '.': 85, 'sb': 18, 'STR': 51, '_': 46, 'Error': 59, 'syntax': 58, 'throw': 57, ':': 48, 'case': 45, 'break': 92, 'NUM': 47, ',': 172, 'next': 3, 'Int': 165, 'parse': 164, 'Integer': 162, '': 1, 'char': 159, '{': 32, 'switch': 40, '=': 19, 'for': 27, 'String': 2, 'new': 20, 'public': 0}
{'}\n': 25, '{': 24, 'IOException': 23, '': 10, 'throws': 21, ')': 20, 'File': 15, 'Access': 12, 'Random': 11, '(': 5, 'void': 1}
{'}\n': 46, ';': 29, ')': 13, 'm_degree': 43, ',': 8, 'm_coef0': 41, '+': 40, 'Prod': 20, 'dot': 19, '*': 37, 'm_gamma': 36, '(': 3, 'pow': 34, '.': 23, 'Math': 32, '': 4, 'return': 30, 'y': 12, 'Product': 25, 'x': 7, '=': 21, 'double': 1, '{': 17, 'Exception': 16, 'throws': 14, 'Instance': 6, 'Vector': 5, 'evaluate': 2, 'public': 0}
{'}\n': 34, ';': 33, '(': 6, 'Blank': 16, 'Not': 15, 'is': 14, '.': 13, 'Utils': 12, 'String': 11, '': 10, '{': 8, ')': 7, 'boolean': 1}
{'}\n': 109, ';': 108, '{': 11, '(': 35, '.': 17, '<': 49, 'NUM': 26, '_': 25, ')': 10, 'length': 18, 'pin': 9, 'public': 0}
{'}\n': 52, ';': 43, ')': 18, 'STR': 49, '_': 48, '(': 10, 'write': 46, '.': 45, 'writer': 13, '{': 22, 'IOException': 21, '': 11, 'throws': 19, 'Writer': 12, 'void': 2}
{'}\n': 349, '}': 73, ';': 46, ')': 29, 'child': 86, ',': 15, 'Str': 127, 'state': 20, '(': 12, '>': 6, 'String': 5, '': 1, '<': 3, 'Tree': 2, 'new': 88, 'return': 57, 'Child': 36, 'restored': 226, 'Str2': 247, 'add': 105, '.': 104, 'NUM': 54, '_': 53, '-': 52, 'length': 167, 'substring': 159, '=': 34, 'STR': 150, 'With': 147, 'ends': 146, 'if': 47, 'Node': 177, 'intermediate': 176, 'object': 136, 'Numberer': 134, 'tag': 133, 'List': 23, 'Array': 90, '{': 30, 'State': 33, 'c': 32, 'short': 186, 'Intermediate': 183, 'Unary': 182, 'get': 181, 'grammar': 179, 'int': 13, 'sentence': 28, 'end': 17, 'start': 14, 'Parse2': 62, 'Rule': 10, 'Max': 9, 'Best': 8, 'extract': 7, 'else': 74, '==': 51, ']': 39, '[': 37, 'maxc': 35, 'Parse1': 11, 'public': 0}
{'}\n': 472, '}': 471, ';': 25, 'Text': 4, 'Center': 3, 'm': 17, 'NUM': 124, '_': 101, '/': 450, '-': 446, '.': 19, ',': 433, '(': 5, 'c': 8, '': 6, ')': 9, 'length': 355, '=': 16, 'float': 323, '*': 263, '>': 217, 'if': 26, 'Box': 56, 'Circle': 55, 'get': 20, 'Chart': 18, 'center': 14, 'F': 47, 'Point': 46, '{': 10, 'null': 42, '!=': 41, '&&': 38, 'Enabled': 35, 'Draw': 32, 'is': 31, 'String': 13, 'Canvas': 7, 'draw': 2, 'void': 1, 'protected': 0}
{'}\n': 40, ';': 39, ')': 6, 'conditions': 5, '(': 3, '.': 24, '': 8, 'public': 0}
{'}\n': 67, ';': 52, 't': 33, 'return': 64, ')': 27, ',': 14, 'Value': 13, 'int': 11, '(': 9, 'put': 56, '.': 55, 'ELEMENTS': 54, '': 2, 'Enum': 23, 'Code': 4, 'result': 24, 'BOOL': 46, '_': 45, 'name': 19, 'Result': 3, 'new': 35, '=': 34, 'final': 10, '{': 28, 'Message': 18, 'Localizable': 17, 'register': 5, 'static': 1, 'private': 0}
{'}\n': 47, ';': 21, '=': 34, ')': 9, '(': 4, '.': 13, 'Set': 12, 'explicit': 22, 'exception': 11, '{': 10, 'void': 1, 'public': 0}
{'}\n': 55, ';': 49, 'NUM': 10, '_': 9, 'return': 51, '}': 50, ')': 16, 'STR': 46, '(': 6, 'format': 43, '.': 37, 'String': 41, '': 1, 'warn': 38, 'log': 36, '{': 26, 'Video': 23, 'setup': 30, '!': 29, 'if': 27, 'Cam': 21, 'Usb': 20, 'sce': 19, 'int': 18, 'public': 17, '=': 8, 'version': 12, ',': 11, 'nid': 7, 'HLEFunction': 5, '@': 0, 'HLEUnimplemented': 2}
{'}\n': 98, ';': 46, '.': 29, '(': 21, '': 1, 'license': 69, 'this': 67, '}': 47, ')': 18, 'STR': 44, '_': 32, 'Exception': 41, 'new': 37, 'throw': 36, '{': 19, 'if': 20, 'String': 14, ',': 11, 'License': 4}
{'}\n': 98, '}': 72, ';': 31, ')': 30, '(': 8, 'Message': 91, 'get': 90, '.': 59, 'e': 80, 'LOG': 84, '': 1, '{': 19, 'Exception': 79, 'catch': 73, 'type': 55, 'Type': 6, 'Project': 5, '>': 28, '<': 27, 'new': 23, '=': 22}
{'}\n': 100, ';': 59, ')': 33, 'Listener': 5, 'notification': 28, ',': 11, 'Name': 23, 'object': 63, '(': 6, 'Notification': 4, '.': 52, 'mbsc': 48, 'mbean': 17, 'get': 53, 'Interface': 18, 'Object': 61, 'MBean': 45, 'generate': 66, '=': 49, '': 7, 'Connection': 47, 'Server': 46, 'Connector': 10, 'jmx': 9, '{': 43, 'Exception': 42, 'throws': 34, 'ignored': 32, 'boolean': 31, 'String': 21, '>': 16, '?': 15, '<': 14, 'Class': 13, 'JMXConnector': 8, 'void': 2, 'public': 1, 'static': 0}
{'}\n': 145, ';': 69, ')': 43, '(': 18, '.': 73, '{': 44, '': 24, 'Record': 53, '<': 50, 'Consumer': 25, 'consume': 2}
{'}\n': 479, '}': 59, ';': 57, 'bytes': 116, 'return': 191, 'length': 316, '.': 52, 'chunk': 285, '+=': 218, 'pos': 125, ')': 13, ',': 139, 'NUM': 31, '_': 30, '(': 9, 'arraycopy': 136, 'System': 134, '': 15, '{': 25, 'chunks': 258, ':': 332, ']': 3, '[': 2, 'byte': 1, 'final': 10, 'for': 438, 'Pos': 67, 'Buffer': 50, 'original': 199, 'buffer': 66, '-': 81, 'Size': 54, '=': 117, 'int': 11, 'size': 12, 'new': 118, 'add': 390, '-=': 383, 'Left': 236, 'n': 321, 'Retired': 64, 'Bytes': 6, 'total': 62, 'Message': 98, 'truncated': 97, 'Exception': 51, 'Protocol': 49, 'Invalid': 48, 'throw': 46, '==': 325, 'if': 26, 'read': 4, 'input': 324, '?': 328, 'null': 326, '<': 106, 'while': 272, 'SIZE': 109, 'BUFFER_': 108, 'min': 293, 'Math': 291, '>': 70, 'List': 252, 'Array': 262, 'else': 195, 'Limit': 72, 'current': 71, 'Raw': 5, 'skip': 75, '+': 65, 'negative': 53, 'IOException': 16, 'throws': 14}
{'}\n': 353, '}': 137, ';': 28, ')': 18, 'eclass': 23, '(': 4, 'remove': 113, '.': 26, 'Attr': 63, 'By': 61, 'service': 60, 'Maps': 175, 'attr': 174, 'Null': 337, 'all': 336, 'if': 45, 'null': 74, '=': 24, ']': 38, 'fldidx': 144, '[': 37, 'continue': 221, 'Empty': 62, 'is': 122, 'map': 226, '!': 297, 'value': 236, 'regs': 58, 'idx': 93, 'NUM': 52, '_': 51, '<': 282, 'reg': 8, 'Of': 98, 'index': 97, 'int': 92, '==': 50, 'get': 65, 'List': 57, 'Array': 56, '': 5, 'fields': 39, 'Object': 36, 'Map': 171, 'Hash': 170, ',': 9, 'has': 80, '&&': 79, 'Dups': 17, 'check': 16, '||': 75, 'Class': 22, 'Defining': 161, '{': 19, '>=': 106, '--': 150, 'length': 49, 'for': 141, 'return': 90, 'entry': 13, 'Instance': 30, 'delete': 2, 'Entry': 11, 'boolean': 15, 'Rep': 12, 'Reg': 7, 'Svc': 6, 'Attrs': 3, 'void': 1, 'private': 0}
{'}\n': 31, ';': 30, ')': 13, '(': 7, 'Modifiers': 26, 'get': 25, '.': 18, 'Public': 20, 'is': 3, 'Modifier': 17, '': 16, 'return': 15, '{': 14, 'boolean': 2, 'public': 0}
{'}\n': 196, '}': 147, ';': 36, ')': 23, 'ex': 164, ',': 10, '(': 6, 'Path': 185, 'Absolute': 184, 'get': 30, '.': 54, 'File': 5, 'log': 27, '+': 59, 'STR': 58, '_': 57, '': 7, 'Level': 172, 'logger': 53, '{': 98, 'IOException': 163, 'catch': 160, 'try': 87, 'Stream': 74, 'new': 77, '=': 29, 'final': 71, 'fine': 55, 'license': 9, 'Log': 4, 'Properties': 21, 'License': 8, 'private': 0}
{'}\n': 61, '}': 60, ';': 23, ')': 17, 'args': 16, '+': 56, 'STR': 33, '_': 32, '(': 6, 'Exception': 52, 'Argument': 51, 'Illegal': 50, '': 1, 'new': 48, 'throw': 47, '{': 18, 'Empty': 42, 'is': 41, '.': 40, '!': 38, 'if': 36, ',': 12, 'get': 27, '=': 26, 'super': 19, '>': 15, 'String': 11, '<': 9, 'Map': 8, 'Factory': 5, 'Filter': 4, 'public': 0}
{'}\n': 105, ';': 28, ')': 11, 'class': 102, '.': 22, 'User': 100, '': 8, ',': 7, '(': 4, 'Millis': 94, 'Time': 93, 'current': 92, 'System': 90, 'STR': 26, '_': 25, 'set': 51, 'v': 10, 'update': 3, 'Helper': 76, 'return': 74, '}': 62, 'remove': 67, '{': 12, 'else': 63, 'BOOL': 59, 'passwd': 15, 'encrypt': 44, '=': 16, 'Empty': 36, 'is': 35, 'X': 33, '!': 31, 'if': 29, 'value': 23, 'String': 14, 'V': 9, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 62, ';': 39, ')': 9, '(': 8, 'String': 5, 'to': 6, '.': 41, 'text': 14, 'return': 54, 'STR': 45, '_': 44, 'append': 42, 'Buffer': 13, '': 4, 'new': 16, '=': 15, '{': 10, 'public': 3}
{'}\n': 14, ';': 13, 'Mode': 4, '.': 10, 'return': 8, '{': 7, ')': 6, '(': 5, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 355, ';': 19, ')': 11, 'NUM': 18, '_': 17, '-': 70, '+': 262, 'pos': 78, '(': 10, 'Byte': 4, 'get': 47, '.': 46, 'buf': 24, ',': 44, 'byte': 40, 'Equals': 37, 'assert': 36, '}': 312, 'actual': 254, 'len': 155, 'dstoff': 239, 'expected': 104, 'off': 123, 'Offset': 7, 'And': 8, 'Len': 215, 'With': 6, 'Bytes': 184, 'compare': 212, 'Util': 210, '': 21, 'length': 128, ']': 103, '[': 102, 'new': 26, '=': 16, 'final': 13, 'Int': 112, 'next': 111, 'r': 109, 'int': 14, 'array': 231, 'put': 191, ':': 138, '?': 135, '==': 132, '/': 129, '{': 12, '++': 97, 'i': 86, 'LIMIT': 94, '<': 92, 'for': 83, 'Buffer': 31, 'Array': 5, 'Length': 9, 'Put': 3, 'test_get': 2, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, '.': 16, 'Datas': 15, 'm': 14, '(': 5, 'Item': 4, '{': 10, 'model': 8, 'M': 7, '': 6, 'void': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 16, '(': 5, 'tr': 28, '.': 27, 'I18n': 26, '': 9}
{'}\n': 170, ';': 65, ')': 13, ']': 27, 'NUM': 99, '_': 48, '[': 26, 'parts': 28, ',': 139, '(': 8, 'null': 116, 'return': 106, 'if': 70, 'split': 33, '.': 32, '=': 29, 'String': 10, '': 2, '{': 14, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 15, 'Names': 14, 'channel': 13, '(': 4, 'All': 20, '.': 18, 'm_channels': 17, '{': 16, '>': 12, 'Channel': 11, 'Notification': 10, '': 6, '<': 8, 'Set': 7, 'final': 5, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 524, ';': 467, 'app': 38, '=': 500, '.': 159, ')': 45, 'BOOL': 443, '_': 442, '(': 5, 'get': 160, '': 6, 'null': 215, '?': 244, '{': 46, 'Application': 8}
{'}\n': 44, ';': 43, ')': 26, '(': 13, 'Exec': 39, 'get': 38, ',': 37, 'null': 36, 'Async': 34, 'supply': 33, '.': 32, 'Future': 6, 'Completable': 5, '': 1, 'return': 28, '{': 27, 'fn': 25, '>': 10, 'T': 23, 'super': 21, '?': 20, '<': 7, 'Function': 18, 'Int': 12, 'To': 16, 'final': 14, 'default': 3, 'Override': 2, '@': 0}
{'}\n': 163, '}': 54, ';': 55, ')': 5, 'STR': 159, '_': 21, '(': 4, 'fail': 156, '{': 9, 'data': 13, ',': 23, 'result': 132, 'equals': 148, '.': 103, 'Arrays': 146, '': 7, '!': 144, 'if': 142, 'Array': 138, 'Byte': 137, 'to': 136, 'tos': 60, '=': 14, ']': 12, '[': 11, 'byte': 10, 'flush': 125, 'cos': 74, 'i': 95, 'write': 112, '++': 107, 'length': 104, '<': 101, 'NUM': 22, 'int': 94, 'for': 92, 'Cipher': 71, 'Null': 86, 'new': 15, 'Stream': 59, 'Output': 58, 'Test': 57, '-': 20, 'Exception': 8, 'throws': 6, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 98, ';': 46, 'document': 67, 'return': 95, '}': 78, ')': 64, '{': 22, 'e': 83, '': 1, '(': 57, 'catch': 79, 'parse': 72, '.': 71, 'Builder': 70, '=': 52, 'Reader': 61, 'new': 53, 'Source': 49, 'Input': 48, 'Document': 2}
{'}\n': 61, ';': 60, ')': 29, '(': 21, '.': 41, '{': 30, 'production': 27, '': 22, 'public': 0}
{'}\n': 77, ';': 20, ')': 9, '(': 8, 'close': 73, '.': 37, 'conn': 71, 'STR': 18, '_': 17, 'stat': 34, 'execute': 45, '': 11, '{': 13, 'SQLException': 12, 'Name': 7}
{'}\n': 86, ';': 84, ')': 70, '(': 5, '.': 45, '': 2, 'return': 41, 'final': 6, 'escaped': 9, 'String': 3, 'decode': 4, 'static': 1, 'public': 0}
{'}\n': 96, ';': 75, '.': 38, ')': 32, '(': 63, '=': 49, '{': 33, 'Interval': 23, 'polling': 22, '': 11}
{'}\n': 397, '}': 182, ';': 28, ')': 18, 'shift': 2, '(': 7, 'Column': 139, 'End': 208, '.': 49, 'Begin': 118, 'Token': 311, 'Source': 310, '': 39, '=': 25, '{': 19, 'TOKEN': 302, 'SOURCE_': 301, '==': 103, 'if': 95, 'else': 183, 'get': 261, 'set': 243, 'TLAToken': 119, 'TLATOKEN': 110, 'END_': 199, 'BEGIN_': 109, 'At': 51, 'element': 50, 'line': 41, 'Object': 79, 'Mapping': 3, '++': 74, 'size': 69, '<': 66, 'NUM': 63, '_': 26, 'int': 16, 'for': 57, 'Vector': 4, ',': 15, 'void': 1}
{'}\n': 84, ';': 27, ')': 42, 'NUM': 33, '_': 32, 'length': 78, '.': 20, 'line': 29, '(': 23, '}': 64, '=': 57, 'String': 7, '': 1}
{'}\n': 55, ';': 54, ')': 33, 'message': 31, '(': 5, 'add': 3, '.': 36, 'messages': 35, '{': 34, 'Message': 4, '': 6}
{')': 61, '(': 58, 'objects': 46, '>': 36, 'Object': 18, '': 5, '<': 14, 'List': 10, 'public': 0}
{'}\n': 80, ';': 34, 'Far': 39, 'So': 38, 'return': 75, '}': 74, ')': 19, '(': 11, 'next': 43, '.': 30, 'iterator': 27, ',': 66, '=': 28, '{': 20, 'Next': 52, 'has': 51, 'while': 47, 'E': 3, '': 2, 'iterable': 18, '>': 7, '<': 1, 'Iterator': 22, 'Iterable': 13, 'T': 6, 'extends': 4, 'public': 0}
{'}\n': 260, ';': 228, 'NUM': 125, '_': 124, '=': 251, 'pos': 85, '}': 229, ')': 15, ',': 212, '(': 4, '.': 163, '{': 39, '>': 123, 'if': 54, 'IOException': 18, '': 17, 'throws': 16}
{'}\n': 146, '}': 141, ')': 44, '(': 12, '.': 116, 'IS': 71, ',': 96, '=': 61, '': 16, ';': 45, '{': 23, 'public': 0}
{'}\n': 40, ';': 39, ')': 10, 'MILLIS': 37, 'IN_': 36, '': 18, '.': 20, 'Utils': 32, 'Date': 31, '/': 29, 'time': 9, '-': 26, '(': 7, 'Millis': 23, 'Time': 22, 'current': 21, 'System': 19, 'int': 2, 'return': 12, '{': 11, 'long': 8, 'Old': 6, 'Many': 4, 'how': 3, 'static': 1, 'public': 0}
{'}\n': 311, ';': 37, 'return': 35, '}': 38, ')': 28, 'ch': 98, '(': 5, 'Character': 12, '': 6, 'new': 172, '=': 43, 'Char': 15, 'Invalid': 14, 'ref': 13, 'continue': 164, '{': 34, 'ch2': 126, ',': 158, 'supplemental': 155, '.': 25, 'XMLChar': 111, 'Supplemental': 150, 'is': 3, '&&': 119, 'Surrogate': 115, 'Low': 140, 'if': 17, ']': 41, '++': 92, 'i': 67, '[': 40, 'dataarray': 42, 'char': 39, 'datalength': 53, '<': 75, 'High': 114, 'NUM': 31, '_': 30, '-': 103, 'while': 72, 'int': 52, 'else': 187, 'XML11': 82, 'XMLVersion11': 63, 'Is': 62, 'f': 61, 'length': 26, 'Array': 48, 'to': 46, 'chardata': 8, '==': 20, '||': 22, 'null': 21, 'String': 7, 'WFXMLChar': 4, 'protected': 0}
{'}\n': 91, ';': 15, ')': 6, '(': 5, 'String': 9, 'to': 84, '.': 68, 'result': 64, 'equals': 80, 'res': 26, 'True': 76, 'assert': 75, 'Number': 35, 'b': 49, 'xor': 69, 'a': 34, '=': 12, 'Integer': 33, 'Big': 32, '': 8, 'B': 19, 'num': 10, 'new': 37, 'A': 11, 'STR': 14, '_': 13, '{': 7, 'Zero': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 64, ';': 38, ')': 23, 'null': 49, ',': 34, 'this': 44, '(': 12, 'Signal': 42, 'On': 10, 'do': 9, 'return': 39, 'STR': 36, '_': 35, 'on': 21, 'Null': 30, 'Non': 29, 'require': 28, '.': 27, 'Objects': 26, '': 2, '{': 24, '>': 8, 'T': 7, '<': 5, 'Flux': 4, 'Parallel': 3, 'final': 1, 'public': 0}
{'}\n': 155, '}': 152, ';': 31, ')': 19, 'j': 79, '(': 4, 'Missing': 3, 'set': 146, '.': 26, 'current': 67, 'level': 10, '<': 53, 'NUM': 41, '_': 40, '%': 138, 'Int': 134, 'next': 133, 'random': 34, 'abs': 129, 'Math': 127, '': 5, 'if': 97, '{': 20, '&&': 106, 'Index': 23, '||': 110, 'class': 17, '==': 102, '++': 62, 'Attributes': 89, 'num': 56, 'data': 7, '=': 24, 'int': 9, 'for': 44, 'i': 47, 'instance': 71, 'Instance': 66, 'Instances': 6, 'Random': 33, 'new': 36, 'boolean': 12, ',': 8, 'add': 2, 'void': 1, 'protected': 0}
{'}\n': 123, '}': 100, ';': 59, ')': 35, 'e': 106, ',': 21, 'type': 34, 'STR': 89, '_': 88, '(': 13, 'error': 111, '.': 51, '_log': 84, '{': 36, 'Exception': 105, 'Database': 104, '': 2, 'catch': 101, 'size': 93, 'partition': 23, 'info': 86, 'Object': 7, 'Client': 28, 'db': 29, 'try': 73, 'volume_partitions': 47, ':': 69, '>': 8, 'T': 3, '<': 1, 'List': 15, 'for': 60, 'Size': 24, 'records': 20, 'Lists': 50, '=': 48, 'String': 33, 'Db': 27, 'int': 22, 'Batches': 12, 'In': 11, 'void': 9, 'Data': 6, 'extends': 4, 'public': 0}
{'}\n': 519, '}': 78, ';': 77, ')': 19, '(': 3, 'Done': 146, 'write': 154, '.': 39, 'RWLock': 80, 'm': 79, '{': 26, 'finally': 140, 'if': 27, 'Name': 11, 'obj': 10, ',': 7, 'props': 402, 'Properties': 400, 'save': 399, '_': 44, 'errmsg': 108, '': 4, 'new': 65, 'throw': 64, 'error': 122, 'Debug': 120, 'STR': 72, '+': 73, '=': 109, 'String': 9, 'File': 273, '!': 285, 'filepath': 219, 'null': 33, 'Dir': 99, 'Root': 98, 'Filename': 225, 'Attribute': 224, 'get': 223, 'node': 221, 'Exception': 69, 'Service': 130, 'root': 92, 'Request': 83, 'read': 82, 'Exists': 95, 'is': 94, 'try': 87, 'Argument': 68, 'Illegal': 67, '==': 32, '||': 35, 'NUM': 45, 'length': 40, 'SSOException': 25, 'SMSException': 22, 'throws': 20, 'token': 6, 'SSOToken': 5, 'void': 1, 'public': 0}
{'}\n': 32, '}': 31, ';': 30, ')': 14, 'listener': 13, '(': 7, '.': 25, 'Listeners': 24, 'm': 23, '{': 15, 'null': 20, '!=': 19, 'if': 16, 'Listener': 6, 'Selected': 5, 'Tab': 4, 'On': 3, '': 8, 'void': 1, 'public': 0}
{'}\n': 50, ';': 48, ')': 14, '(': 33, '': 9, 'new': 41, '.': 31, 'Uri': 3, 'String': 10, 'public': 0}
{'}\n': 247, ';': 52, ')': 28, '_': 74, '(': 43, '.': 41, '': 14, '=': 38, ']': 36, 'NUM': 75, '[': 35, 'tokens': 37, '{': 32, 'split': 42, 'String': 23, 'throws': 29}
{'}\n': 16, ';': 15, 'Selected': 12, 'return': 7, '{': 6, ')': 5, '(': 4, 'export': 2, 'boolean': 1, 'public': 0}
{'}\n': 55, ';': 48, '=': 52, '.': 50, 'this': 49, ')': 27, 'angle': 26, ',': 8, 'Anchor': 15, 'rotation': 22, 'text': 16, 'label': 11, 'number': 7, '(': 4, 'super': 29, '{': 28, 'double': 25, 'Text': 14, '': 1, 'String': 10, 'Number': 6, 'Tick': 3, 'public': 0}
{'}\n': 22, ';': 21, ')': 5, '(': 4, 'get': 14, 'Running': 10, 'return': 7, '{': 6, 'is': 2, 'boolean': 1}
{'}\n': 108, ';': 107, ')': 21, ',': 102, '(': 36, '.': 79, 'String': 9, '': 8, '_': 42, 'level': 14, '{': 22}
{'}\n': 20, ';': 19, ')': 10, '(': 16, 'gossip': 12, '{': 11, 'Gossip': 3, '': 6, 'Member': 4, 'public': 0}
{'}\n': 20, ';': 19, ')': 8, 'mod': 7, '(': 5, 'is': 3, '.': 13, 'Modifier': 12, '': 11, 'return': 10, '{': 9, 'int': 6, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 57, ';': 40, 'this': 55, 'return': 54, ')': 9, '(': 5, 'Separator': 50, 'add': 49, '}': 41, 'STR': 38, '_': 37, 'JSONException': 35, '': 1, 'new': 33, 'throw': 32, '{': 10, 'ARRAY': 29, '.': 14, 'Operand': 26, '!=': 24, 'peek': 21, 'stack': 13, '||': 18, 'empty': 15, 'if': 11, 'JSONBuffer': 2, 'public': 0}
{'}\n': 180, '}': 124, ';': 48, ')': 14, '(': 8, 'get': 42, '.': 41, '+': 147, 'STR': 103, '_': 102, 'Exception': 19, 'Runtime': 18, 'Server': 17, '': 9, 'new': 56, 'throw': 161, ',': 104, 'Location': 37, 'File': 36, 'Password': 43, 'Info': 7, 'authentication': 12, 'catch': 125, 'format': 100, 'Format': 98, 'Message': 97, '=': 38, 'Properties': 52, 'password': 35, 'String': 34, '{': 20, 'throws': 15, 'Authentication': 6, 'From': 5, 'static': 1, 'public': 0}
{'}\n': 42, ';': 41, ')': 22, 'session': 21, ',': 7, 'data': 15, 'Id': 11, 'message': 10, 'level': 6, '(': 3, '{': 27, 'Exception': 26, 'Log': 25, '': 4, 'throws': 23, 'Object': 20, ']': 17, '[': 16, 'String': 9, 'Level': 5, 'error': 2, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, 'processor': 8, '(': 4, '.': 12, 'processors': 11, '{': 10, 'Processor': 7, 'IAudio': 6, '': 5, 'synchronized': 1, 'public': 0}
{'}\n': 123, ';': 29, 'NUM': 40, '_': 39, 'return': 110, '}': 100, 'Type': 115, 'Animation': 4, 'm': 22, '.': 25, 'anim': 55, ')': 14, 'i': 33, '(': 5, 'remove': 105, 'Animations': 24, 'Recover': 3, 'cancel': 96, '{': 15, 'Ended': 91, '!': 87, 'if': 66, 'override': 13, '|=': 82, 'Overridden': 81, 'Holder': 8, 'view': 9, '==': 73, 'View': 7, 'get': 61, '=': 21, '': 6, 'final': 16, '--': 48, '>=': 43, '-': 38, 'Size': 20, 'Anim': 19, 'recover': 18, 'int': 1, 'for': 30, 'size': 26, 'boolean': 12, ',': 11, 'end': 2, 'private': 0}
{'}\n': 128, ';': 30, 'return': 54, '}': 122, '_': 119, '{': 19, ')': 18, '.': 25, '(': 5, 'Types': 39, ',': 9, '': 6, 'if': 75, 'Methods': 72, 'Method': 7, 'Type': 55, 'Return': 60, 'get': 26, 'm': 8, '=': 23, '>': 15, '?': 34, '<': 12, 'Class': 32, 'Parameter': 44, ']': 37, '[': 36, 'Name': 27, 'name': 22, 'String': 21, 'private': 0}
{'}\n': 238, ';': 116, '_': 221, ')': 42, '(': 24, '.': 171, 'g': 39, '=': 142, '{': 43, '': 27, 'boolean': 9}
{'}\n': 17, ';': 16, ')': 6, '(': 5, 'String': 2, 'to': 3, 'return': 8, '{': 7, '': 1, 'public': 0}
{'}\n': 42, '}': 27, ';': 20, 'BOOL': 25, '_': 17, '=': 23, 'Present': 22, 'm_': 21, '{': 8, ')': 7, 'e': 32, 'Exception': 31, '': 11, '(': 6, 'catch': 28, 'STR': 18, 'Name': 15, 'for': 14, '.': 13, 'Class': 12, 'try': 9, 'For': 4, 'check': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 495, '}': 135, ';': 41, ')': 15, 'response': 30, '(': 4, 'Headers': 488, 'Cache': 487, 'parse': 486, '.': 7, 'Parser': 484, 'Header': 483, 'Http': 482, '': 1, ',': 123, 'success': 477, 'Response': 18, 'return': 408, '{': 32, 'else': 136, 'Error': 417, 'Parse': 25, 'new': 51, 'error': 412, 'null': 335, '==': 100, 'bitmap': 93, 'if': 95, 'Bitmap': 21, 'temp': 306, '=': 37, 'recycle': 387, 'BOOL': 69, '_': 68, 'Height': 106, 'desired': 191, 'Width': 99, 'Scaled': 368, 'create': 367, '>': 23, 'get': 194, '||': 348, '&&': 103, '!=': 334, 'Options': 47, 'decode': 48, 'length': 129, 'data': 36, 'NUM': 102, 'Array': 120, 'Byte': 119, 'Factory': 44, 'actual': 171, 'Size': 280, 'Sample': 279, 'Best': 287, 'find': 286, 'Utils': 250, 'Image': 283, 'in': 64, 'SPEED': 272, 'OVER_': 271, 'QUALITY_': 270, 'PREFER_': 269, 'Speed': 266, 'Over': 265, 'Quality': 264, 'Prefer': 263, 'MR1': 14, 'Gingerbread': 253, 'has': 252, 'Bounds': 144, 'Decode': 88, 'Just': 142, 'Max': 98, 'm': 87, 'Dimension': 196, 'Resized': 195, 'int': 170, 'out': 177, 'Config': 85, 'Preferred': 84, 'Purgeable': 75, 'Shareable': 66, 'Input': 65, ']': 35, '[': 34, 'byte': 33, 'Network': 28, 'do': 24, '<': 19, 'private': 16, 'GINGERBREAD_': 13, 'CODES': 10, 'VERSION_': 9, 'Build': 6, 'Api': 3, 'Target': 2, '@': 0}
{'}\n': 53, ';': 29, '.': 37, ')': 13, 'diff': 36, '(': 3, '=': 22, 'result': 31, 'double': 1, ']': 11, '[': 10, ',': 8, 'public': 0}
{'}\n': 14, ';': 13, 'batch': 5, 'return': 10, '{': 9, ')': 8, '(': 7, '': 1}
{'}\n': 22, ';': 21, ')': 4, '(': 3, 'clear': 2, '.': 9, 'm': 6, '{': 5, 'void': 1, 'public': 0}
{'}\n': 47, ';': 43, 'this': 45, 'return': 44, ')': 20, 'Base': 17, 'display': 18, '(': 7, '.': 24, 'List': 34, 'Display': 16, 'm': 32, '{': 21, '': 1, 'Null': 14, 'Non': 13, '@': 11, 'Child': 5, 'View': 3, 'FPSTexture': 2, 'public': 0}
{'}\n': 381, ';': 39, 'p': 31, 'return': 378, '}': 63, ')': 26, ',': 10, 'STR': 362, '_': 60, '+': 363, '(': 6, 'Number': 344, 'get': 53, '.': 43, 'node': 14, 'Print': 359, 'pretty': 358, '{': 27, 'Partials': 324, 'Node': 12, 'debug': 353, 'if': 40, '=': 32, ']': 3, '[': 2, 'NUM': 61, 'log': 322, 'Math': 328, '': 7, '-=': 326, 'Rescaling': 325, '*=': 317, 'i': 195, '++': 206, 'Count': 37, 'colour': 36, '<': 201, 'int': 194, 'for': 192, 'maxp': 187, '>': 275, 'Time': 263, 'mm': 20, 'double': 1, 'Child': 70, 'left': 69, 'right': 86, 'tree': 9, 'prune': 4, 'Ref': 13, 'else': 64, 'Colour': 17, 'External': 45, 'is': 44, 'new': 33, 'Matrix': 19, 'Change': 18, 'Tree': 8, 'private': 0}
{'}\n': 213, ';': 31, '}': 201, ',': 185, 'NUM': 26, '_': 25, '-': 181, '(': 16, '=': 41, '{': 133, ')': 13, 'int': 57, 'grid': 17, '++': 131, '<': 127, 'for': 118, '+': 108, ']': 60, '[': 58, 'new': 56, '.': 22, '||': 20, 'if': 15, 'public': 0}
{'}\n': 137, '}': 116, ';': 27, ')': 7, 'NUM': 22, '_': 21, '(': 3, 'substring': 81, '.': 47, 'd': 57, 'DERUTCTime': 125, '': 1, 'new': 15, '=': 14, 'time': 106, '{': 8, 'else': 117, 'Time': 2, 'DERGeneralized': 110, '>': 99, 'year': 71, '||': 97, '<': 94, 'if': 91, ',': 23, 'Int': 77, 'parse': 76, 'Integer': 74, 'int': 70, 'STR': 25, '+': 66, 'format': 62, 'F': 33, 'date': 32, 'String': 56, 'tz': 13, 'Zone': 12, 'set': 48, 'Format': 31, 'Date': 5, 'Simple': 10, 'public': 0}
{'}\n': 31, ';': 25, ')': 8, '(': 4, 'Components': 27, 'init': 26, 'MODAL': 23, 'DOCUMENT_': 22, '': 1, '.': 20, 'Type': 19, 'Modality': 18, ',': 13, 'parent': 7, 'super': 10, '{': 9, 'JFrame': 6, 'public': 0}
{'}\n': 82, ';': 31, ')': 10, ',': 74, 'a': 9, '(': 6, 'Simple': 5, 'determinize': 61, '.': 39, '>': 17, '<': 14, 'Set': 13, 'Hash': 23, '': 2, 'new': 21, '=': 20, 'Integer': 16, '{': 11, 'Automaton': 3, 'static': 1, 'public': 0}
{'}\n': 75, ';': 21, 'Identifier': 68, 'm': 67, '.': 34, 'that': 52, '==': 15, 'return': 18, 'o': 9, ')': 10, '>': 51, '?': 48, ',': 49, '<': 47, 'Item': 46, 'Abstract': 45, '': 1, '(': 6, '=': 53, 'BOOL': 20, '_': 19, 'Class': 29, 'get': 28, '!=': 32, '||': 27, 'null': 26, 'if': 12, 'this': 14, '{': 11, 'Object': 8, 'equals': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 25, ';': 23, ')': 15, 'column': 12, '(': 4, 'add': 2, '.': 18, 'columns': 17, '{': 16, 'Column': 3, '': 5, 'void': 1}
{'}\n': 66, ';': 29, 'return': 62, '}': 60, '_': 18, ')': 11, '(': 6, 'i': 30, '.': 24, 'vec': 10, '{': 12, '++': 35, '<': 31, 'Vector': 9, '': 7, 'private': 0}
{'}\n': 32, ';': 31, ')': 12, '(': 4, 'append': 26, '.': 17, 'strb': 8, 'Builder': 7, 'String': 6, '': 5, 'static': 1}
{'}\n': 159, '}': 78, ';': 76, ')': 47, '(': 33, 'get': 147, '.': 96, ',': 120, 'STR': 103, '_': 102, 'Exception': 90, '': 12, 'new': 87, 'throw': 86, '{': 60, 'ioe': 83, 'IOException': 82, 'catch': 79, 'f': 14, 'File': 13, 'public': 0}
{'}\n': 51, ';': 50, ')': 27, 'y_att': 26, ',': 12, 'y_index': 21, 'x_att': 16, 'x_index': 11, '(': 7, 'norm2': 38, '.': 33, 'Math': 32, '': 1, 'return': 29, '{': 28, ']': 10, '[': 9, 'double': 4, 'int': 8, 'K': 6, 'calculate_': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 66, '}': 24, ';': 17, 'e': 29, '=': 15, 'thrown': 14, '{': 11, ')': 7, 'null': 16, '==': 56, '(': 6, 'if': 53, 'Throwable': 13, '': 1, 'catch': 25, 'close': 5, '.': 40, 'out': 39, 'try': 18, 'flush': 20, 'IOException': 10, 'throws': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 18, ';': 17, ')': 5, 'radians': 15, '(': 4, 'cos': 3, '.': 10, 'Math': 9, '': 8, 'return': 7, '{': 6, 'double': 2, 'public': 0}
{'}\n': 71, ';': 24, 'ret': 20, 'return': 68, '}': 67, ')': 17, 'NUM': 23, '_': 22, ',': 11, '-': 56, ']': 8, 'i': 28, '[': 7, '(': 5, 'pow': 49, '.': 37, 'Math': 47, '': 46, '+=': 45, '{': 18, '++': 41, 'length': 38, '<': 34, '=': 21, 'int': 27, 'for': 25, 'double': 2, 'Attribute': 16, 'target': 15, 'ss': 3, 'static': 1, 'public': 0}
{'}\n': 13, ';': 12, ')': 4, '(': 3, 'size': 2, '.': 8, 'return': 6, '{': 5, 'int': 1, 'public': 0}
{'}\n': 30, ';': 29, ')': 10, '.': 15, 'ts': 9, '(': 5, '': 13, '{': 11, 'public': 0}
{'}\n': 141, '}': 52, ';': 51, 'pe': 89, 'throw': 123, ')': 72, 'STR': 115, '_': 114, '+': 116, 'name': 7, '(': 4, 'Reason': 112, 'Internal': 111, 'set': 110, '.': 100, 'Attribute': 105, 'ERR': 102, '': 1, 'Domain': 99, 'Error': 98, 'Core': 97, 'Exception': 88, 'Parse': 87, 'new': 91, '=': 90, '{': 32, 'value': 65, 'required': 10, 'boolean': 9, ',': 8, 'String': 6, 'consume': 3, 'public': 0}
{'}\n': 41, ';': 33, 'length': 31, ')': 11, '.': 15, 'this': 18, ',': 8, 'bytes': 7, '{': 12, 'int': 9, ']': 6, '[': 5, 'byte': 4, '(': 3, 'copy': 2, 'public': 0}
{'}\n': 69, '}': 59, ';': 15, ')': 8, '(': 4, 'unlock': 64, '.': 11, 'lock': 10, '{': 9, 'finally': 60, 'key': 7, 'return': 35, 'try': 16, 'ECKey': 6, '': 5, 'Key': 3, 'public': 0}
{'}\n': 166, ';': 165, 'root': 61, ')': 148, '(': 147, '': 40, 'public': 0}
{'}\n': 75, '}': 53, '{': 18, ')': 10, 'e': 58, '': 6, '(': 5, 'catch': 54, ';': 52, '.': 41, 'reader': 9, 'Reader': 8}
{'}\n': 57, ';': 56, 'button': 26, ')': 14, '(': 6, '{': 15, '': 7, 'Pressed': 4, 'Button': 3, 'public': 0}
{'}\n': 108, ';': 59, ')': 6, '(': 20, 'get': 54, '.': 45, '=': 37, 'Data': 98, 'Service': 66, 'Schema': 67, '': 8, 'Manager': 62, 'new': 64, 'Instance': 55, 'Action': 52, 'Token': 36, 'Admin': 50, 'Privileged': 47, 'do': 46, 'Controller': 44, 'Access': 43, 'SSOToken': 40, 'throws': 7, 'void': 1, 'private': 0}
{'}\n': 110, ';': 38, ')': 19, '(': 4, 'Preference': 28, '.': 30, 'prefs': 25, 'context': 7, 'Preferences': 24, 'Shared': 23, 'Default': 32, 'get': 31, 'Manager': 29, '': 5, '=': 26, '{': 20, 'Context': 6, 'public': 0}
{'}\n': 50, ';': 48, ')': 15, 'type': 8, '(': 18, '.': 42, 'Types': 3, 'types': 13, ',': 34, 'Mirror': 7, '': 5, '{': 16, 'Type': 6}
{'}\n': 24, ';': 23, ')': 12, 'null': 21, '(': 5, 'Counters': 19, 'Event': 18, 'modify': 17, '.': 16, 'x': 8, 'return': 14, '{': 13, 'y': 11, 'double': 10, ',': 9, 'Histogram': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 726, ';': 36, ')': 18, 'NUM': 388, '_': 88, '(': 3, '.': 64, 'y': 392, '-': 641, 'from': 248, 'if': 43, '/': 609, 'x': 385, '': 4, 'new': 535, '=': 24, ',': 118, '{': 102, '}': 143, 'else': 144, 'Point': 38, 'add': 105, 'arrow': 253, 'Constants': 63, 'Swing': 62, 'null': 41}
{'}\n': 46, ';': 45, ')': 31, 'Participants': 17, ',': 41, '(': 5, 'add': 36, '.': 35, '{': 32, '': 6, '<': 21, '>': 15, 'void': 1}
{'}\n': 132, '}': 131, ';': 82, ')': 40, 'Post': 70, 'Elem': 69, 'sls': 68, '(': 4, 'add': 124, '.': 24, 'List': 17, 'Location': 8, 'Resp': 13, 'Response': 111, 'set': 87, 'Binding': 88, 'http': 90, 'Element': 67, 'create': 75, 'Fact': 39, 'obj': 38, '=': 71, '': 5, '{': 44, 'NUM': 60, '_': 59, '>': 58, 'length': 55, '&&': 51, 'null': 50, '!=': 49, 'if': 45, 'JAXBException': 43, 'throws': 41, 'Factory': 37, 'Object': 36, 'metadata': 33, 'jaxb': 31, 'saml2': 29, 'identity': 27, 'sun': 25, 'com': 23, ',': 9, 'String': 6, 'savepost': 2, 'void': 1, 'private': 0}
{'}\n': 232, ';': 36, 'return': 228, ')': 35, '(': 7, 'to': 222, '.': 70, '': 8, 'set': 173, 'Intent': 59, 'STR': 166, '_': 114, 'Name': 137, 'Package': 82, 'package': 84, 'final': 57, 'Info': 99, '{': 118, 'NUM': 115, ',': 113, 'Activities': 108, 'query': 106, 'Manager': 83, 'Resolve': 98, 'get': 89, '=': 63, 'ACTION_': 72, 'new': 64, 'Uri': 15, 'static': 1, 'public': 0}
{'}\n': 88, ';': 83, 'return': 85, '}': 84, ')': 59, '(': 11, 'add': 73, '.': 55, 'files': 54, '>': 32, '': 2, '<': 28, 'List': 38, 'Array': 37, 'File': 31, 'Virtual': 30, 'Files': 10, 'to': 8, 'static': 1}
{'}\n': 39, ';': 37, ')': 7, 'null': 20, '(': 6, 'Manager': 5, 'Security': 4, 'get': 14, '.': 13, 'System': 12, '': 11, '{': 8, 'static': 1}
{'}\n': 392, ';': 184, 'null': 387, '(': 6, '.': 113, ')': 45, 'rate': 189, 'if': 50, 'ID': 12, 'Org_': 43, 'AD_': 36, 'p_': 8, ',': 13, 'Client_': 37, 'Type_': 31, 'Conversion': 24, 'C_': 9, 'To_': 18, 'Currency': 10, 'From_': 11, '=': 225, 'Decimal': 4, 'Big': 3, '': 2, '==': 86, '{': 49, 'SQLException': 48, 'throws': 46, 'int': 7, 'Date': 25, 'Timestamp': 22, 'static': 1, 'public': 0}
{'}\n': 56, ';': 31, ')': 12, ',': 50, 'port': 11, 'address': 28, '(': 9, 'Id': 5, 'Engine': 4, 'create': 6, 'return': 44, 'Host': 16, 'Local': 39, 'get': 38, '.': 37, 'Address': 27, 'Inet': 26, '': 2, '=': 29, 'null': 30, '{': 18, 'Exception': 17, 'Unknown': 15, 'throws': 13, 'int': 10, 'Snmp': 3, 'static': 1, 'public': 0}
{'}\n': 100, ';': 44, 'return': 96, '}': 95, ')': 43, 'Rule': 6, 'f': 70, '(': 10, 'create': 86, '{': 80, 'Rules': 33, 'get': 75, '.': 35, 'ruleset': 73, ':': 72, 'Delphi': 32, '': 2, 'for': 65, '>': 7, '<': 4, 'List': 3, 'Array': 56, 'new': 54, '=': 53, 'From': 38, 'Utils': 34, 'String': 12, 'static': 1, 'public': 0}
{'}\n': 86, ';': 85, 'null': 84, 'return': 83, '{': 82, 'Exception': 81, '': 7, 'throws': 78, ')': 77, '.': 2, 'java': 24, ',': 23, 'String': 52, 'lang': 62, 'doc': 22, 'Document': 21, 'dom': 5, 'w3c': 3, 'org': 1, '(': 13, 'public': 0}
{'}\n': 77, ';': 20, ')': 11, '(': 4, 'Children': 73, 'reindex': 72, '}': 47, 'index': 10, '+': 67, 'STR': 66, '_': 65, 'DOMException': 63, 'Lagarto': 62, '': 5, 'new': 60, 'throw': 59, '{': 12, 'ignore': 56, 'Exception': 55, 'Bounds': 54, 'Of': 53, 'Out': 52, 'Index': 51, 'catch': 48, 'node': 13, ',': 8, 'add': 40, '.': 14, 'Nodes': 32, 'child': 37, 'Child': 3, 'init': 30, 'try': 28, 'this': 26, '=': 25, 'Node': 6, 'parent': 23, 'Parent': 17, 'From': 16, 'detach': 15, 'int': 9, 'insert': 2, 'void': 1, 'public': 0}
{'}\n': 93, ';': 35, ')': 12, '(': 7, '.': 28, 'md4': 39, 'return': 55, '': 9, '=': 26, 'STR': 33, '_': 32, 'Bytes': 30, 'get': 29, 'password': 11, 'Password': 25, 'unicode': 24, ']': 4, '[': 3, 'byte': 2, '{': 19, 'Exception': 16, 'throws': 13, 'String': 10, 'Hash': 6, 'ntlm': 5, 'static': 1, 'private': 0}
{'}\n': 72, ';': 71, ')': 33, 'MESSAGE': 60, 'WARNING_': 59, '': 8, '.': 38, 'Pane': 37, 'JOption': 36, ',': 44, 'STR': 52, '_': 51, 'null': 43, '(': 6, 'Dialog': 41, 'Message': 40, 'show': 39, '{': 34, 'String': 9, 'final': 7}
{'Parameter': 20, ')': 16, '': 2, ',': 11, 'parameter': 9, 'String': 8, '(': 6, 'public': 0}
{'}\n': 74, ';': 16, ')': 7, ']': 41, 'j': 30, '[': 39, 'i': 12, 'A': 20, '': 19, '(': 4, '.': 21, 'Math': 58, '=': 13, '++': 25, 'length': 22, '<': 18, 'NUM': 15, '_': 14, 'int': 11, 'for': 9, '{': 8, 'Equals': 3, 'void': 1, 'public': 0}
{'}\n': 156, ';': 155, ')': 98, '(': 94, 'remaining': 90, '.': 105, '{': 99, 'int': 63, 'private': 0}
{'}\n': 96, ';': 43, ')': 21, 'NODESET': 93, '': 2, '.': 35, 'Constants': 90, 'XPath': 24, ',': 16, 'doc': 86, '(': 41, 'evaluate': 84, 'expr': 67, 'List': 4, 'Node': 10, 'compile': 71, 'xpath': 46, '=': 31, 'Expression': 66, 'Context': 59, 'Namespace': 58, 'set': 57, 'new': 50, 'Instance': 37, 'Factory': 29, '{': 26, 'Exception': 25, 'throws': 22, 'static': 1, 'public': 0}
{'}\n': 48, ';': 27, ')': 5, '': 7, ',': 17, 'STR': 16, '_': 15, '(': 14, 'Element': 13, 'end': 35, '.': 11, 'handler': 10, 'generate': 2, 'EMPTY': 25, 'start': 12, '{': 9, 'SAXException': 8, 'throws': 6, 'void': 1, 'private': 0}
{'}\n': 37, ';': 36, ')': 35, '(': 4, '.': 31, 'type': 20, 'Type': 15, '': 8}
{'}\n': 14, '{': 13, ')': 12, 'Event': 10, 'Action': 9, '': 1, '(': 7, 'Performed': 6, 'action': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 52, ')': 5, 'Parameter': 15, ';': 37, '(': 4, 'get': 32, '.': 31, 'type': 30, '{': 6, 'void': 1}
{'}\n': 51, ';': 37, ')': 9, '=': 19, 'node': 13, '(': 12, 'add': 33, '.': 32, 'nodes': 18, '>': 25, '<': 24, 'List': 23, '': 4, 'new': 20, 'null': 15, 'if': 11, '{': 10, 'Node': 6, 'public': 0}
{'}\n': 79, ';': 23, 'BOOL': 77, '_': 76, ')': 12, '.': 47, '{': 13, 'e': 63, 'Exception': 62, '': 8, '(': 19, 'catch': 59, '}': 58, 'exists': 48, 'file': 28, 'get': 34, '=': 29, 'try': 24, 'Name': 21, 'String': 9, 'boolean': 1, 'public': 0}
{'}\n': 202, ';': 40, ')': 16, '(': 12, '.': 121, '}': 183, 'tt': 84, 'STR': 169, '_': 68, 'NUM': 96, 'String': 53, '': 21, 'new': 30, '{': 20, 'public': 0}
{'}\n': 78, '}': 29, ';': 28, ')': 10, 'i': 45, '(': 6, 'At': 71, 'char': 70, '.': 36, 'str': 9, 'byte': 66, 'write': 2, '++': 59, 'length': 37, '<': 51, 'NUM': 26, '_': 25, '=': 46, 'int': 44, 'for': 42, 'Int': 23, '{': 14, 'else': 30, 'null': 19, '==': 18, 'if': 15, 'IOException': 13, '': 7, 'throws': 11, 'String': 3, 'Compression': 5, 'No': 4, 'void': 1, 'public': 0}
{'}\n': 149, ';': 36, ')': 12, '(': 5, 'close': 140, '.': 74, 'reader': 73, '}': 128, 'line': 71, 'STR': 108, '_': 107, '{': 16, 'null': 81, '!=': 80, 'Line': 76, 'read': 75, '=': 72, 'while': 68, '': 7, 'throws': 13, 'public': 0}
{'}\n': 35, ';': 22, ')': 4, '(': 3, 'Thread': 16, 'new': 14, '.': 13, 'Executors': 12, '': 11, '=': 10, 'executor': 9, '{': 5, 'void': 1}
{'}\n': 57, ';': 56, ')': 17, '*': 31, '.': 29, 'p': 28, '(': 9, 'x': 30, '': 4, '{': 18, 'Point': 5}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'on': 2, 'void': 1, 'protected': 0}
{'}\n': 19, ';': 18, ')': 10, 'desc': 9, '(': 15, '{': 11, 'Descriptor': 8, '': 6, 'public': 0}
{'}\n': 103, ';': 24, 'BOOL': 23, '_': 22, '(': 5, 'if': 37, '=': 21, 'cidr': 33, '{': 46, ')': 17, 'NUM': 31, '>': 42, 'Mask': 34, 'ip': 16, ',': 9, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 69, ';': 35, ')': 34, 'env': 23, '(': 8, 'get': 62, '.': 29, ',': 56, '': 16, '=': 24}
{'}\n': 81, ';': 32, ')': 13, 'list': 40, ',': 9, 'separator': 8, '(': 5, 'join': 4, 'return': 29, '}': 33, 'elem': 60, 'add': 67, '.': 22, '{': 14, 'elements': 12, ':': 61, '': 2, 'for': 56, 'length': 23, '>': 39, 'Number': 38, '<': 36, 'List': 35, 'Array': 44, 'new': 42, '=': 41, 'STR': 31, '_': 25, 'NUM': 26, '==': 18, '||': 20, 'null': 19, 'if': 15, '...': 11, 'String': 3, 'static': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 14, 'NUM': 27, '_': 26, '&': 25, 'v': 13, '(': 6, 'byte': 21, 'put': 3, '.': 17, 'bb': 10, '{': 15, 'short': 12, ',': 11, 'Buffer': 9, 'Byte': 5, '': 7, 'Unsigned': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 277, ';': 25, ')': 11, 'rows': 32, ',': 165, 'cmds': 20, ']': 58, 'root': 240, '[': 57, 'remap': 56, 'forward': 265, '.': 23, 'orig': 10, '(': 7, 'Trie': 5, '': 1, 'new': 34, 'return': 258, '>': 19, 'Row': 30, '<': 15, 'List': 14, 'Array': 36, 'Gaps': 238, 'remove': 237, '=': 21, 'NUM': 82, '_': 81, '-': 230, 'fill': 226, 'Arrays': 224, '}': 211, 'j': 195, '{': 12, 'get': 147, 'orows': 49, 'size': 65, 'int': 55, 'Sequence': 18, 'Char': 17, 'optimize': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 74, ';': 21, 'return': 64, '}': 63, ')': 6, 'DENIED': 58, 'PERMISSION_': 57, '': 52, '.': 26, 'Manager': 54, 'Package': 53, '==': 51, 'i': 17, '(': 5, 'get': 40, 'Permission': 44, 'User': 43, 'm': 24, 'Perms': 25, 'if': 35, '{': 7, '++': 32, 'size': 27, '<': 23, 'NUM': 20, '_': 19, '=': 18, 'int': 16, 'for': 14, 'boolean': 1, 'public': 0}
{'}\n': 102, ';': 12, 'result': 11, 'return': 99, '}': 93, 'STR': 22, '_': 21, '+': 61, ')': 7, ']': 84, 'i': 14, '[': 82, 'Names': 81, 'Col': 34, 'm_': 79, '(': 6, 'Name': 77, 'Filter': 76, 'remove': 75, 'NUM': 29, '+=': 55, 'continue': 52, 'Hidden': 47, 'get': 33, 'if': 43, '{': 8, '++': 40, 'Count': 35, '<': 32, '=': 17, 'for': 24, 'int': 13, 'String': 2, '': 1, 'Key': 5, 'to': 3, 'public': 0}
{'}\n': 98, ';': 97, ')': 21, 'chrono': 20, ',': 17, 'Style': 14, 'resolver': 15, '': 12, '(': 7, '.': 39, '{': 22, 'Chronology': 19, 'Resolver': 13, 'Formatter': 4, 'to': 5, 'Time': 3, 'Date': 2}
{'}\n': 110, '}': 109, ';': 28, ')': 8, 'STR': 65, '_': 34, ',': 63, 'TIME': 83, 'WAIT_': 88, 'MAX_': 87, '': 10, 'POLL_': 82, 'Time': 32, 'Wait': 31, 'current': 30, '(': 7, 'timeout': 72, '=': 71, 'TAG': 62, 'LOG_': 61, 'i': 58, '.': 21, 'Log': 56, '{': 12, 'Exception': 11, 'throws': 9, 'For': 3, 'wait': 2, 'void': 1, 'protected': 0}
{'}\n': 183, ';': 181, ')': 134, '(': 49, '.': 167, 'Name': 125, 'File': 31, 'local': 101, '{': 135, 'String': 66, '': 65, 'public': 0}
{'}\n': 224, '}': 127, ';': 21, ')': 13, 'CHANGED': 219, 'META_': 218, '': 42, '(': 3, 'Change': 215, 'notify': 214, 'Current': 196, 'open': 195, 'Len': 184, 'List': 183, 'Play': 163, 'm': 29, '=': 68, 'Pos': 164, '{': 26, 'else': 169, 'NUM': 93, '_': 19, 'if': 27, '-': 140, 'int': 59, 'final': 58, 'NORMAL': 44, 'SHUFFLE_': 43, '==': 32, 'Mode': 31, 'Shuffle': 30, 'this': 24, 'synchronized': 22, 'void': 1, 'public': 0}
{'}\n': 132, '}': 131, ';': 25, ')': 11, '(': 10, 'next': 126, '.': 56, 'iter': 86, ',': 50, 'i': 98, 'Value': 119, 'create': 45, 'STR': 70, '_': 48, 'Equals': 67, 'assert': 66, '{': 12, 'NUM': 49, '=': 18, 'int': 97, 'for': 95, 'iterator': 91, 'Log': 17, 'call': 16, 'Iterator': 85, '': 14, 'final': 13, 'size': 78, 'closure': 29, 'step': 57, 'range': 43, 'Range': 42, 'Closure': 9, 'Recording': 33, 'new': 19, 'List': 15, 'Array': 21, 'With': 8, 'One': 7, 'By': 6, 'Step': 5, 'Reverse': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 41, ';': 35, 'Decimal': 4, 'big': 12, 'return': 33, '}': 36, 'null': 34, '{': 19, ')': 18, 'Precision': 17, 'allowed': 16, '>': 28, '(': 8, 'precision': 25, '.': 24, 'if': 20, 'int': 15, ',': 14, 'Big': 3, '': 2, 'Value': 7, 'normalize': 5, 'static': 1}
{'}\n': 156, ';': 26, 'null': 154, 'return': 120, '}': 128, ')': 10, 'e': 133, ',': 87, 'STR': 147, '_': 146, 'SEVERE': 144, '': 2, '.': 58, 'Level': 141, '(': 6, 'log': 136, '{': 11, 'Throwable': 132, 'catch': 129, 'result': 117, 'transform': 113, 'transformer': 66, 'INDENT': 104, 'DEFAULT_': 89, 'Keys': 83, 'Output': 78, 'Property': 79, 'set': 77, 'ENCODING': 86, 'Transformer': 51, 'new': 19, 'tf': 53, '=': 18, 'Instance': 60, 'Factory': 52, 'Stream': 28, 'String': 15, 'try': 12, 'static': 1, 'protected': 0}
{'}\n': 35, '}': 34, ';': 26, ')': 11, '(': 6, 'event': 10, '.': 21, '{': 12, '': 8, 'Event': 3}
{'}\n': 122, ';': 29, ')': 28, 'STR': 70, '_': 69, '(': 48, '.': 46, 'println': 47, 'Writer': 34, 'print': 33, '+': 71, '': 18, 'void': 1, 'private': 0}
{'}\n': 645, '}': 573, ';': 42, ')': 41, 'e': 579, '(': 7, 'Exception': 578, '': 184, 'new': 636, 'throw': 635, '{': 54, 'catch': 574, '.': 35, 'String': 281, 'article': 31, '=': 69, ',': 15, 'get': 119, 'ID': 100, 'public': 3}
{'}\n': 584, ';': 437, 'this': 564, ')': 353, 'display': 344, '(': 274, '.': 423, 'Display': 341, 'm': 451, '{': 354, '': 176, 'Child': 191, 'public': 0}
{'}\n': 38, '}': 28, '{': 13, ')': 12, 'e': 34, 'Throwable': 33, '': 8, '(': 6, 'catch': 29, ';': 27, 'close': 4, '.': 23, 'os': 11, 'null': 20, '!=': 19, 'if': 16, 'try': 14, 'Stream': 10, 'Output': 9, 'EL': 5, 'void': 3, 'static': 2, 'public': 0}
{'}\n': 21, ';': 20, ')': 10, 'l': 9, '(': 5, '.': 15, 'Listeners': 14, 'Search': 3, 'm_': 12, '{': 11, 'Listener': 4, '': 6, 'void': 1, 'public': 0}
{'}\n': 13, ';': 12, '_': 10, 'return': 9, '{': 8, ')': 7, '(': 6, 'Single': 3, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 47, ';': 16, ')': 7, 'file': 6, '(': 3, '.': 28, 'peer': 40, 'Validation': 35, 'File': 5, 'check': 12, '': 4, 'Action': 23, 'Support': 24, 'Exec': 18, 'AWTPermission': 13, '{': 11, 'IOException': 10, 'throws': 8, 'void': 1, 'public': 0}
{'}\n': 762, ';': 681, 'iso': 551, '=': 719, '.': 633, ')': 559, 'STR': 670, '_': 669, ',': 662, '(': 470, '': 476, '{': 560}
{'}\n': 44, '}': 32, ';': 31, ')': 11, 'photo': 10, '(': 7, 'add': 38, '.': 17, 'Photos': 16, 'selected': 15, '{': 12, 'else': 33, 'remove': 27, 'contains': 18, 'if': 13, '': 1, 'Selection': 6, 'toggle': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'pre': 2, 'void': 1, 'protected': 0}
{'}\n': 51, ';': 43, 'c': 21, 'return': 45, '}': 44, '>': 31, '||': 29, '<': 22, '(': 13, 'if': 19, ')': 17, 'char': 8}
{'}\n': 39, ';': 34, 'name': 12, 'return': 36, '}': 35, 'STR': 33, '_': 32, '{': 14, ')': 13, '(': 16, 'contains': 23, '.': 22, 'String': 2, '': 1, 'public': 0}
{'}\n': 34, ';': 29, 'Matcher': 3, 'issue': 31, 'return': 30, ')': 28, '(': 18, 'Issue': 2, '': 1, 'add': 4}
{'}\n': 154, ';': 139, 'return': 143, '}': 141, 'Type': 58, 'ann': 57, '(': 33, '.': 123, '{': 70, ')': 69, '>': 44, '<': 39, '': 37, 'Annotation': 25, 'extends': 41, '?': 40, 'Class': 38}
{';\n': 25, ')': 24, 'Key': 9, 'h': 12, 'int': 3, '(': 10, 'Reg': 7, 'native': 2, 'static': 1, 'private': 0}
{'}\n': 21, ';': 20, ')': 12, 'listener': 11, '(': 6, 'remove': 2, '.': 15, '{': 13, 'Listener': 5, 'Change': 4, '': 7, 'Property': 3, 'void': 1, 'public': 0}
{'}\n': 159, ';': 18, 'return': 155, '=': 13, 'Break': 57, 'Known': 56, 'Last': 55, 'cached': 54, '}': 90, ')': 7, '(': 6, 'Next': 133, 'handle': 85, 'result': 111, '{': 8, '&&': 119, 'DONE': 74, '': 1, '.': 26, 'Iterator': 11, '!=': 112, 'while': 109, 'Index': 29, 'set': 95, 'text': 12, 'else': 91, 'Previous': 86, '<=': 68, '||': 65, '>=': 63, 'if': 59, 'Begin': 28, 'get': 14, '==': 24, 'Text': 15, 'Character': 10, 'int': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 138, ';': 33, ')': 24, '(': 48, 'Image': 3, '}': 119, ',': 115, 'NUM': 53, '_': 52, '=': 35, '{': 61, '&&': 54, 'if': 47, '.': 27, 'h': 23, 'int': 19, 'w': 20, '': 7}
{'}\n': 49, '}': 41, ';': 40, 'BOOL': 46, '_': 45, 'return': 19, '{': 9, 'else': 42, ')': 8, '(': 4, 'All': 35, 'get': 34, '.': 22, 'n': 7, ',': 31, 'size': 28, 'With': 3, 'starts': 2, 'impl': 21, 'Name': 6, '': 5, 'instanceof': 13, 'if': 10, 'boolean': 1, 'public': 0}
{'}\n': 417, '}': 333, ';': 331, '{': 190, '_': 238, ')': 173, '(': 136, '.': 202, 'if': 191, 'original': 158, '': 114, 'public': 0}
{'}\n': 170, '}': 152, ';': 25, ')': 6, '(': 5, 'close': 164, '.': 70, 'cleaner': 29, '{': 10, 'null': 31, '!=': 158, 'if': 155, 'finally': 153, ',': 144, 'STRING': 143, 'TEST_': 142, '': 8, 'Same': 139, 'assert': 138, 'l': 52, 'invoke': 107, 'e': 14, '=': 15, 'String': 49, 'Task': 76, 'new': 16, 'add': 71, '>': 50, '<': 44, 'Callable': 46, 'List': 43, 'Array': 56, 'try': 33, 'Cleaner': 28, 'Pool': 20, 'NUM': 23, '_': 22, 'Join': 19, 'Fork': 18, 'Service': 13, 'Executor': 12, 'Throwable': 9, 'throws': 7, 'Invoke': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, 'File': 16, 'config': 9, '=': 17, '.': 14, '{': 12, ')': 11, 'Config': 7, '': 1}
{'}\n': 167, ';': 33, '{': 11, ')': 10, 'e': 160, 'IOException': 159, '': 42, '(': 29, 'catch': 156, '}': 155, 'Array': 151, 'Byte': 150, 'to': 149, '.': 100, 'baos': 147, 'return': 146, 'close': 142, 'seq': 99, 'new': 41, 'Object': 102, 'add': 101, '=': 59, ']': 3, '[': 2, 'byte': 1, 'public': 0}
{'}\n': 76, ';': 58, 'Time': 8, 'end': 12, 'start': 7, '=': 64, '}': 59, ')': 14, 'STR': 53, '_': 52, '(': 4, 'Exception': 44, 'Argument': 43, 'Illegal': 42, '': 5, 'new': 40, 'throw': 39, '{': 15, 'after': 32, '.': 31, 'null': 21, 'if': 16, ',': 9, 'public': 0}
{'}\n': 331, ';': 19, 'Menu': 3, 'return': 327, ')': 5, '(': 4, 'add': 23, '.': 22, 'Separator': 158, 'Action': 60, 'get': 96, 'Manager': 94, 'action': 70, 'STR': 17, '_': 16, 'JMenu': 0, '': 7, 'new': 12, '=': 11, '{': 6, 'create': 1}
{'}\n': 44, '}': 42, ';': 18, ')': 12, '(': 4, '.': 36, 'loggers': 32, '': 8, '{': 25, '=': 16}
{'}\n': 11, ';': 10, 'BOM': 3, '{': 6, ')': 5, '(': 4, 'is': 2}
{'}\n': 10, ';': 9, '{': 6, ')': 5, '(': 4, 'Signed': 3, 'is': 2, 'boolean': 1}
{'}\n': 58, ';': 37, ')': 9, 'text': 8, '(': 5, 'Reader': 46, 'String': 7, '': 1, 'new': 28, 'Column': 45, 'Line': 44, 'parse': 3, 'return': 39, '}': 38, 'STR': 35, '_': 23, 'Exception': 32, 'Argument': 31, 'Illegal': 30, 'throw': 27, '{': 10, 'NUM': 24, '==': 14, 'length': 19, '.': 18, '||': 16, 'null': 15, 'if': 11, 'Text': 4, 'Object': 2, 'public': 0}
{'}\n': 295, '}': 294, ';': 252, ')': 78, '{': 279, '(': 68, '.': 151, 'is': 170, 'filters': 96, 'null': 84, 'if': 80, 'Filter': 52, '': 70}
{'}\n': 64, ';': 24, ')': 10, '(': 5, 'File': 19, '.': 26, 'chooser': 25, '': 6, '{': 11}
{'}\n': 47, ';': 33, 'null': 17, '=': 38, 'Service': 12, 'm': 11, '}': 34, ')': 5, '(': 4, 'unbind': 26, '.': 25, 'Context': 24, 'if': 15, '{': 6, 'void': 1, 'public': 0}
{'}\n': 175, ';': 12, 'result': 9, 'return': 21, '}': 24, '=': 10, 'Index': 96, 'current': 95, ')': 5, 'Delimeter': 53, 'nearest': 52, ',': 94, '(': 4, 'substring': 141, '.': 70, 'source': 82, '{': 6, 'else': 25, 'NUM': 57, '_': 56, '-': 55, '==': 103, 'if': 13, 'delimiter': 80, '<': 68, '&&': 113, '!=': 109, '||': 107, 'i': 62, 'At': 90, 'char': 89, 'delimiters': 69, 'Of': 40, 'index': 84, 'int': 51, '++': 76, 'length': 71, 'for': 59, 'Delimiters': 41, 'Starting': 45, 'trim': 44, 'Blocks': 39, 'Eating': 38, 'is': 15, 'null': 11, 'Empty': 16, 'String': 2, '': 1, 'public': 0}
{'}\n': 36, ';': 35, ')': 18, '(': 5, 'get': 30, '.': 22, 'VO': 15, '': 6, 'BI': 9, 'Gestion': 7}
{'}\n': 279, '}': 214, ';': 46, 'Layer': 5, ',': 247, '(': 81, ')': 37, 'new': 57, '': 7, '.': 98, 'Neuron': 14, 'add': 208, '{': 149, '_': 44, '=': 43, 'synapse': 95, 'get': 99, 'Synapse': 94, 'BOOL': 78, 'NUM': 45, '>': 24, '<': 21, 'List': 20, 'private': 0}
{'}\n': 132, ';': 88, ')': 20, '.': 121, '_': 83, 'c2': 102, '(': 4, '=': 79, 'c1': 38, 'if': 22, '{': 21, ',': 14}
{'}\n': 55, ';': 24, 'index': 27, 'return': 52, '}': 51, '++': 49, '{': 14, ')': 13, '(': 6, 'At': 41, 'char': 40, '.': 20, 's': 9, 'Whitespace': 36, 'is': 35, 'Character': 33, '': 7, '&&': 31, '<': 28, 'while': 25, 'length': 21, '=': 18, 'int': 15, 'String': 8, 'static': 1, 'public': 0}
{'}\n': 61, '}': 60, ';': 59, ')': 7, 'STR': 55, '_': 54, '(': 3, '.': 31, 'value': 6, '{': 8, '': 1}
{'}\n': 311, ';': 257, ')': 131, 'amount': 84, ',': 17, 'Date': 76, 'transaction': 71, 'Id': 53, 'Type': 31, 'payment': 58, 'Product': 52, 'To': 32, 'account': 30, 'Code': 22, 'currency': 21, 'office': 16, '(': 12, 'For': 9, 'Entries': 6, 'Journal': 5, 'create': 2, '}': 260, 'Credit': 230, '{': 132, 'Reversal': 90, 'is': 89, 'Be': 33, 'Boolean': 88, '': 14, 'final': 13, 'Decimal': 83, 'Big': 82, 'String': 20, 'Long': 50, 'Credited': 46, 'Debited': 34, 'Office': 15, 'Reversals': 8, 'And': 7, 'Based': 4, 'void': 1, 'public': 0}
{'}\n': 205, ';': 48, 'read': 2, 'return': 202, '+=': 199, 'position': 39, '}': 139, ')': 16, ',': 8, 'Start': 11, 'dst': 7, 'Array': 156, 'Address': 80, 'src': 79, '(': 3, 'Memory': 128, 'copy': 127, '.': 30, 'Dependent': 84, 'Platform': 83, '': 4, 'array': 160, '=': 24, ']': 154, '[': 153, 'byte': 152, 'final': 21, '{': 20, 'else': 140, '+': 93, 'long': 78, 'if': 97, 'Position': 67, 'buffer': 66, 'Mapped': 91, 'last': 90, 'Buffer': 87, 'direct': 86, 'Offset': 70, 'check': 69, 'int': 1, 'Length': 15, 'remaining': 23, 'min': 31, 'Math': 29, 'VALUE': 46, 'MAX_': 45, 'Integer': 42, 'this': 33, '-': 36, 'length': 35, 'IOException': 19, 'throws': 17, 'Byte': 5, 'public': 0}
{'}\n': 23, ';': 19, 'self': 10, 'return': 20, ')': 11, '(': 6, '': 2, 'static': 1, 'public': 0}
{'}\n': 40, ';': 39, ')': 6, '.': 11, 'this': 21, '(': 3, 'Factorial': 30, 'log': 29, 'Arithmetic': 27, '': 9, '-': 25, 'Math': 17, 'k': 5, '{': 7, 'int': 4, 'pdf': 2, 'double': 1, 'public': 0}
{'}\n': 61, '}': 43, ';': 24, ')': 14, 'value': 13, '(': 6, 'String': 8, 'to': 53, '.': 47, '': 7, 'append': 3, 'buf': 10, '{': 15, 'else': 44, 'int': 27, 'if': 25, 'long': 12, ',': 11, 'Buffer': 9, 'Integer': 5, 'Unpadded': 4, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 286, '}': 176, ';': 72, ')': 61, 'paint': 45, ',': 9, ']': 28, 'i': 135, '[': 27, 'Y': 41, 'text': 11, 'X': 35, 'texts': 29, '(': 5, 'Text': 3, 'draw': 2, '.': 64, 'canvas': 8, 'alpha': 48, 'color': 220, 'Alpha': 248, 'Multiplied': 251, 'get': 225, 'set': 65, 'Color': 19, 'NUM': 91, '_': 90, 'Mask': 182, 'state': 181, 'State': 20, 'For': 227, '=': 85, 'int': 47, 'final': 81, ':': 212, '': 6, '?': 203, 'activated': 55, '&&': 169, 'Activated': 52, 'show': 51, 'continue': 174, '{': 62, '!': 170, 'Only': 60, 'if': 165, '==': 156, 'Ceil': 112, '||': 158, 'Floor': 101, 'boolean': 50, '++': 146, '<': 141, 'for': 132, 'POSITIONS': 95, 'NUM_': 94, '%': 127, 'Index': 84, 'ceil': 121, 'Math': 119, '/': 88, 'Degrees': 56, 'float': 10, 'typeface': 16, 'Typeface': 15, 'Size': 12, 'Paint': 44, 'String': 26, 'List': 21, 'Canvas': 7, 'Elements': 4, 'void': 1, 'private': 0}
{'}\n': 108, ';': 22, ')': 10, '(': 9, 'size': 102, '.': 40, 'result': 25, ',': 50, 'Equals': 96, 'assert': 81, 'Null': 83, 'Not': 82, '}': 72, '{': 11, 'e': 77, 'Exception': 76, '': 12, 'catch': 73, 'SUBTREE': 68, 'SCOPE_': 67, 'Constants': 64, 'Scope': 63, 'Ldap': 13, 'null': 27, 'STR': 49, '_': 48, 'VO': 46, 'Search': 45, 'get': 17, 'find': 41, 'proxy': 15, '=': 16, 'try': 35, 'List': 24, 'AD': 19, 'Proxy': 14, 'Directory': 6, 'Active': 5, 'Spring': 4, 'Find': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 71, ';': 33, ')': 20, 'Pressed': 58, 'key': 18, '': 1, '(': 7, 'Code': 28, 'Key': 10, '{': 21, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 20, ';': 19, '(': 4, '.': 14, '^': 9, 'return': 7, '{': 6, ')': 5, 'Code': 3, 'hash': 2, 'int': 1, 'public': 0}
{'}\n': 58, ';': 57, ')': 11, '(': 7, 'length': 50, '.': 20, 's': 10, ',': 47, 'STR': 25, '_': 24, 'With': 22, 'starts': 21, 'if': 13, '{': 12, 'String': 3, '': 2, 'static': 1}
{'}\n': 1266, '}': 208, ';': 24, ')': 10, 'STR': 127, '_': 126, '(': 5, 'Exception': 1229, 'SSLProtocol': 1257, '': 1, 'new': 236, ',': 281, 'ERROR': 1253, 'INTERNAL_': 1252, '.': 21, 'Protocol': 1249, 'Alert': 1244, 'throw': 1241, 'Trace': 1237, 'Stack': 1236, 'print': 763, 'e': 1230, '{': 11, 'catch': 1226, 'is_client': 381, 'if': 115, 'Name': 89, 'Instance': 973, 'get': 80, '=': 19, 'IV': 471, 'client': 212, 'alg': 88, 'client_key': 361, 'Spec': 469, 'Key': 63, 'Secret': 1011, 'MODE': 1007, 'DECRYPT_': 1039, 'Cipher': 15, 'init': 1000, 'dec': 953, 'server': 223, 'server_key': 372, 'ENCRYPT_': 1006, 'enc': 943, 'else': 676, 'Null': 948, 'null': 119, '==': 939, 'logger': 117, 'println': 124, 'server_mac_secret': 350, 'client_mac_secret': 339, 'Random': 213, 'master_secret': 331, 'session': 9, 'is_exportabe': 50, '+': 136, '!=': 118, 'iv_size': 67, 'hash_size': 175, '*': 241, 'NUM': 240, 'key_block': 234, 'Parameter': 468, 'Iv': 467, 'block_size': 75, 'key_size': 47, 'arraycopy': 277, 'System': 275, 'Server': 387, 'is': 386, '!': 383, 'boolean': 380, ']': 211, '[': 210, 'byte': 209, 'seed': 258, 'compute': 323, 'PRF': 321, 'length': 266, 'Suite': 16, 'cipher': 17, 'String': 87, 'Algorithm': 97, 'Encryption': 96, 'Bulk': 95, 'Size': 73, 'Block': 81, 'iv': 72, 'int': 46, 'Material': 57, 'expanded': 62, ':': 58, 'key': 56, '?': 52, 'try': 12, 'Impl': 8, 'SSLSession': 7, 'State': 3, 'Connection': 2, 'protected': 0}
{'}\n': 83, '.': 60, 'label': 41, ';': 73, ')': 47, '(': 34, 'Label': 20, '': 39, 'void': 1}
{'}\n': 38, ';': 19, ')': 9, 'cal': 13, '(': 6, 'Calendar': 12, 'From': 4, 'return': 30, 'ms': 8, 'Millis': 25, 'In': 24, 'Time': 23, 'set': 22, '.': 21, 'get': 15, '=': 14, '': 11, '{': 10, 'long': 2, 'Date': 5, 'static': 1, 'public': 0}
{'}\n': 45, ';': 44, ')': 27, '(': 14, 'Exec': 40, 'get': 39, ',': 38, 'null': 37, 'Async': 35, 'supply': 34, '.': 33, 'Future': 6, 'Completable': 5, '': 1, 'return': 29, '{': 28, 'fn': 26, '>': 11, 'T': 24, 'super': 22, '?': 21, '<': 7, 'Function': 19, 'Long': 10, 'To': 17, 'final': 15, 'Optional': 9, 'default': 3, 'Override': 2, '@': 0}
{'}\n': 49, ';': 48, ')': 26, '_': 45, '(': 8, '{': 33, 'hosts': 25, '': 10, ',': 13, 'String': 11}
{'}\n': 106, ';': 81, 'result': 44, 'return': 103, ')': 18, ',': 90, 'NUM': 92, '_': 91, '(': 8, 'arraycopy': 86, '.': 85, 'System': 84, '': 83, ']': 4, 'array': 16, '[': 3, 'char': 2, 'new': 46, '=': 45, '{': 19, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 4, '{': 8, 'IOException': 7, '': 6, 'throws': 5, '(': 3, 'println': 2, 'void': 1, 'public': 0}
{'}\n': 90, ';': 54, 'NUM': 31, '_': 30, '=': 48, '(': 5, ')': 9, 'avail': 47, 'protected': 0}
{'}\n': 164, ';': 36, ')': 10, '(': 5, '.': 47, 'instance': 76, '{': 14, 'Instances': 49, 'num': 31, ',': 27, '': 6, 'new': 21, '=': 20}
{'}\n': 61, ';': 21, 'result': 14, 'return': 58, ')': 10, '(': 9, 'size': 53, '.': 17, 'frontier': 16, 'Metrics': 49, 'update': 48, 'State': 31, 'get': 30, 'remove': 6, '=': 15, 'Node': 5, '': 1, '{': 11, 'Frontier': 8, 'From': 7, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 449, ';': 45, ')': 108, 'NUM': 40, '_': 39, '(': 95, '=': 29, 'int': 59, '==': 362, 'if': 359, '}': 357, ']': 8, '[': 7, '.': 36, 'data': 35, '{': 242, 'len': 237, '/': 41, '*': 38, 'length': 37, 'new': 30, 'byte': 6, 'static': 1, 'public': 0}
{'}\n': 65, ';': 61, ')': 31, '(': 40, '.': 54, 'Font': 3, '=': 36, '': 33, 'public': 0}
{'}\n': 125, ';': 36, ')': 12, '(': 4, '.': 19, 'name': 40, 'STR': 57, '_': 34, 'equals': 54, 'return': 33, '=': 41, 'String': 39, '': 5, '}': 37, '{': 13, 'if': 14, 'static': 0}
{'}\n': 63, ';': 20, ')': 7, '(': 6, 'String': 2, 'to': 3, '.': 22, 'buffer': 12, 'return': 55, 'STR': 26, '_': 25, '+': 27, 'size': 47, 'YVals': 45, 'm': 37, 'Label': 38, 'append': 23, 'Buffer': 11, '': 1, 'new': 14, '=': 13, '{': 8, 'Simple': 4, 'public': 0}
{'}\n': 30, ';': 29, ')': 18, '(': 10, 'call': 26, '.': 25, 'callable': 17, 'return': 23, '{': 22, '>': 5, 'T': 4, '': 3, '<': 2, 'Callable': 12, 'static': 1, 'public': 0}
{'}\n': 71, '}': 70, ';': 33, ')': 20, 'protocol': 13, ',': 10, '(': 6, 'Selector': 3, 'set': 61, '.': 27, 'ps': 59, 'Proxy': 43, '': 7, 'Fixed': 42, 'proxy': 24, 'get': 28, '=': 25, 'String': 12, '{': 21, 'Protocol': 5, 'For': 4, 'void': 1, 'private': 0}
{'}\n': 212, ';': 33, ')': 10, '(': 5, '.': 56, 'i': 188, 'String': 47, '': 6, '_': 73, '{': 14, 'STR': 74, 'With': 71, 'starts': 70, 'ln': 48, 'if': 66, 'Line': 58, 'read': 57, '=': 22, 'new': 23, 'IOException': 13, 'throws': 11, 'void': 2, 'public': 0}
{'}\n': 132, ';': 60, 'return': 129, '}': 98, '{': 20, ')': 19, '(': 11, 'Mother': 109, 'get': 79, '.': 74, 'f': 65, 'add': 75, 'parents': 50, '!': 72, 'if': 70, 'Father': 80, 'families': 18, ':': 66, 'Family': 16, '': 12, 'for': 61, '>': 17, '<': 14, 'Set': 45, 'Hash': 44, 'new': 52, '=': 51, 'String': 48, 'final': 42, 'Collection': 13, 'Monogamous': 9, 'static': 1, 'public': 0}
{'}\n': 51, ';': 32, '(': 3, '.': 39, 'null': 36, '!=': 35, ')': 12, '{': 13, 'file': 6, 'if': 14, 'String': 9, '': 4, ',': 7, 'File': 5, 'public': 0}
{'}\n': 183, ';': 47, 'img': 65, 'return': 180, '}': 178, 'j': 116, '=': 37, ']': 4, '[': 3, 'i': 87, '{': 28, ')': 17, '++': 101, '(': 9, 'length': 79, '.': 53, 's': 50, '<': 32, 'NUM': 57, '_': 56, 'int': 86, 'for': 84, 'get': 54, 'rows': 36, 'size': 72, 'new': 67, 'String': 34, '': 10, 'Char': 16, 'off': 15, ',': 13, 'file': 12, 'Pad': 40, 'Image': 8, 'load': 7, '>': 35, 'List': 31, 'Array': 30, 'Exception': 23, 'Runtime': 26, 'Found': 22, 'Not': 21, 'File': 11, 'throws': 18, 'char': 14, 'static': 1, 'public': 0}
{'}\n': 124, ';': 109, ')': 13, '(': 7, '.': 81, 'Receipts': 36, '&&': 49, 'null': 48, '!=': 47, 'get': 32, 'Receipt': 22, '': 19}
{'}\n': 100, ';': 88, ')': 59, 'Animations': 82, 'm': 81, 'add': 65, '.': 64, '{': 60, 'animations': 43, 'Animation': 40, '': 8, '(': 31, 'public': 0}
{'}\n': 73, ')': 41, '(': 20, '!': 54, 'if': 52, '{': 51, 'words': 37, ':': 48, 'word': 47, 'String': 32, '': 31, 'for': 43}
{'}\n': 55, ';': 31, ')': 30, '(': 5, 'x': 8, 'return': 32, '': 6, 'int': 14}
{'}\n': 27, ';': 26, ')': 9, 'path': 7, '(': 4, 'get': 20, '.': 19, 'Paths': 18, '': 5, '{': 13, 'IOException': 12, 'throws': 10, 'String': 6, 'void': 2, 'public': 0}
{'}\n': 39, ';': 38, ')': 17, 'operator': 16, ',': 9, '(': 5, '': 6, 'new': 23, '{': 18, 'add': 3, 'public': 0}
{'}\n': 67, ';': 66, ')': 10, '(': 55, 'Name': 9, 'column': 8, 'Of': 54, 'index': 53, '.': 52, 'List': 36, '{': 11, 'String': 7, '': 6, 'Column': 3, 'public': 0}
{'}\n': 104, ';': 62, 'null': 102, 'return': 92, '}': 100, ')': 26, '(': 15, 'next': 96, '.': 46, 'Itr': 73, 'cgs': 40, '{': 30, 'Next': 87, 'has': 86, 'if': 81, 'iterator': 77, '=': 41, '>': 39, 'Set': 6, 'Protection': 5, '': 2, '<': 33, 'Iterator': 64, 'Guid': 25, 'native': 24, ',': 21, 'Client': 18, 'db': 19, 'Native': 53, 'By': 52, 'get': 47, 'Utility': 45, 'Query': 44, 'Custom': 43, 'List': 32, 'IOException': 29, 'throws': 27, 'String': 23, 'Db': 17, 'DB': 14, 'In': 13, 'Exists': 12, 'check': 7, 'static': 1, 'public': 0}
{'}\n': 118, ';': 58, ')': 13, '(': 4, '.': 66, '=': 83, 'STR': 29, '_': 21, '': 5, 'new': 69, 'qry': 55, 'NUM': 37, 'assert': 18, '{': 17, 'Exception': 16, 'throws': 14, ',': 9, 'String': 6, 'Query': 3, 'private': 0}
{'}\n': 60, ';': 24, 'next': 23, 'return': 57, ')': 17, ',': 22, 'prev': 21, '(': 7, 'Set': 49, 'And': 5, 'compare': 47, '!': 46, 'while': 44, '}': 43, 'apply': 38, '.': 37, 'Function': 16, 'update': 4, '=': 28, 'get': 29, '{': 18, 'do': 25, 'V': 3, '': 2, '>': 14, '<': 11, 'Operator': 10, 'Unary': 9, 'Get': 6, 'final': 1, 'public': 0}
{'}\n': 59, ';': 57, ')': 44, '(': 33, 'remove': 50, '.': 49, '{': 45, 'Listener': 41, 'public': 0}
{'}\n': 218, ';': 93, ')': 13, '(': 4, 'get': 136, '.': 135, 'Service': 9, '}': 94, 'STR': 87, '_': 86, 'Exception': 78, 'Argument': 27, 'Illegal': 26, '': 6, 'new': 24, 'throw': 23, 'null': 21, '==': 20, 'if': 15, '{': 14}
{'}\n': 98, ';': 32, 'return': 95, '}': 94, '=': 29, ']': 5, 'i': 28, '[': 4, '{': 17, ')': 16, 'args': 15, '++': 40, 'length': 37, '.': 36, '<': 34, 'NUM': 31, '_': 30, 'int': 27, '(': 9, 'if': 18, 'Object': 3, '': 2, 'static': 1}
{'}\n': 460, ';': 47, ')': 24, '(': 8, 'Width': 189, 'get': 55, '.': 40, '>': 198, 'string': 99, 'fm': 51, '=': 32, 'int': 91, 'Metrics': 50, 'Font': 49, '': 10, 'c': 39, '{': 25}
{'}\n': 33, ';': 32, ')': 13, 'Factory': 10, 'lock': 11, ',': 7, 'path': 6, '(': 3, 'super': 18, '{': 17, 'IOException': 16, '': 1, 'throws': 14, 'Lock': 9, 'Path': 5, 'public': 0}
{'}\n': 148, ';': 44, '}': 131, 'NUM': 51, '_': 50, ')': 32, ',': 29, '(': 7, '': 12, '{': 33, '-': 49, 'index': 35, 'if': 45, 'minutes': 31, 'Of': 40, '.': 38, 'values': 19, '=': 36, 'int': 30, '>': 18, 'Integer': 17, '<': 15, 'List': 6, 'Array': 13, 'Minutes': 4, 'static': 1, 'public': 0}
{'}\n': 120, ';': 117, ')': 10, '(': 4, 'Value': 83, 'New': 96, 'get': 52, '.': 18, 'e': 9, 'Old': 82, '_': 30, 'STR': 31, '{': 11, 'Event': 8, 'Change': 3, 'Property': 6, '': 5, 'property': 2, 'void': 1, 'public': 0}
{'}\n': 50, ';': 37, 'values': 11, ')': 12, '(': 7, 'sort': 41, '.': 40, 'Arrays': 39, '': 38, '{': 13, ']': 10, '[': 9}
{'}\n': 257, ';': 40, ')': 15, ',': 143, '(': 47, '.': 43, 'STR': 171, '_': 170, '': 18, 'Matrix': 32, 'final': 68, 'Values': 46, '=': 22, '{': 16, 'private': 0}
{'}\n': 48, ';': 39, ')': 9, '(': 5, '{': 13, 'null': 27, '!=': 26, 'if': 14, 'SQLException': 12, '': 11, 'throws': 10, 'void': 3, 'synchronized': 1, 'public': 0}
{'}\n': 54, '}': 53, ';': 52, ')': 12, '(': 4, '.': 47, '{': 13, 'IIndex': 9, '': 8, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 13, ';': 12, 'Cookie': 4, '{': 8, ')': 7, '(': 6, 'is': 3, 'public': 0}
{'}\n': 99, ';': 98, ')': 85, '(': 76, 'add': 89, '.': 88, 'models': 87, '{': 86, 'Model': 68, '': 77, 'public': 0}
{'}\n': 133, ';': 37, 'NUM': 29, '_': 28, 'return': 129, '}': 127, ')': 13, ']': 17, 'i': 41, '[': 16, 'Wordlen': 3, 'qu': 60, '.': 24, 'chan': 8, '(': 39, '{': 14, '<': 47, 'if': 72, 'Tab': 19, '+=': 65, '++': 55, 'num': 50, '=': 20, 'int': 1, 'for': 38, '-': 33, '+': 30, 'Num': 26, 'ch': 25, 'Idx': 12, 'weight': 11, 'Channel': 7, '': 6, 'private': 0}
{'}\n': 194, ';': 57, ')': 28, 'ir': 8, '(': 5, 'Out': 92, '=': 50, 'Block': 85, 'Basic': 84, '': 6, '{': 29, 'Elements': 64, 'More': 63, 'has': 62, '.': 61, 'Exceptional': 91, 'Applicable': 90, 'get': 89, '>': 48, '<': 45, 'Enumeration': 44, 'Element': 76, 'next': 75, 'e': 49, 'Instruction': 47, 'Enumerator': 54, 'Instr': 53, 'Real': 52, 'forward': 51, 'IR': 7, 'void': 1, 'final': 0}
{'}\n': 840, ';': 96, 'return': 822, '}': 821, ')': 31, '(': 88, '.': 53, 'i': 559, 'Array': 98, 'new': 178, 'DBIDUtil': 422, '': 1, '=': 49, 'DBIDs': 112, 'Modifiable': 417, '{': 32, '++': 369, '<': 3, 'NUM': 259, '_': 258, 'int': 34, 'for': 356, 'dimensionality': 54, 'Util': 52, 'Relation': 22, 'dim': 35, 'final': 33, '>': 9, 'Vector': 28, 'Number': 27, 'extends': 25, '?': 24, 'private': 0}
{'}\n': 80, ';': 77, ')': 46, '_': 69, '(': 32, 'Upload': 24, 'File': 22}
{'}\n': 99, ';': 31, ')': 17, '(': 6, 'String': 2, 'to': 94, '.': 78, 'builder': 23, 'return': 91, '}': 90, 'append': 79, '{': 51, '++': 49, 'i': 35, '<': 41, 'NUM': 38, '_': 37, '=': 24, 'int': 34, 'for': 32, 'Builder': 22, '': 1, 'new': 25, 'public': 0}
{'}\n': 69, ';': 68, ')': 35, '': 17, 'Type': 4, 'content': 21, '(': 5, 'Content': 3}
{'}\n': 14, ';': 13, ')': 8, '(': 7, 'run': 10, '{': 9, 'void': 4, 'public': 3, 'Benchmark': 2, '': 1, '@': 0}
{'}\n': 74, ';': 48, ')': 19, 'dy': 10, '=': 64, 'Y': 53, 'Last': 46, 'm': 45, ',': 8, 'dx': 7, 'X': 47, '(': 5, 'To': 4, '.': 57, 'Path': 56, '+=': 44, '{': 20, 'float': 6, 'r': 2, 'void': 1, 'private': 0}
{'}\n': 238, ';': 41, 'return': 222, '}': 164, ')': 40, 'line': 189, '(': 9, 'add': 206, '.': 112, '{': 20, 'else': 201, 'NUM': 194, '_': 193, 'substring': 191, ',': 159, 'if': 121, '=': 30, 'String': 26, '': 1, 'final': 10, '>': 27, '<': 24, 'List': 23, 'Array': 33, 'new': 31}
{'}\n': 53, ';': 23, ')': 10, 'BYTES': 30, 'CRLF_': 49, '': 6, '(': 4, 'write': 26, '.': 17, 'out': 9, 'STR': 21, '_': 20, 'trace': 18, 'LOG': 16, '{': 14, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Output': 7, 'final': 5, 'send': 2, 'void': 1, 'protected': 0}
{'}\n': 23, ';': 22, ')': 10, 'add': 2, '(': 5, '.': 17, 'm_actual': 12, '=': 14, '{': 11, 'Decimal': 8, 'Big': 7, '': 6, 'Actual': 3, 'void': 1, 'public': 0}
{'}\n': 63, ';': 24, '(': 5, 'l': 13, ')': 9, '==': 43, '.': 17, '': 15, '=': 14, '{': 10}
{'}\n': 66, ';': 63, ')': 28, '(': 6, '.': 42, 'pw': 14, '{': 29, 'Writer': 13, 'Print': 12, '': 11, 'Trace': 5, 'Stack': 4, 'print': 3, 'void': 2, 'public': 0}
{'}\n': 2819, '}': 923, ';': 806, 'Body': 676, '=': 905, '{': 694, ')': 692, 'NUM': 844, '_': 843, '(': 677, '.': 769, 'add': 675, '': 682, 'void': 1}
{'}\n': 94, ';': 44, ')': 9, '(': 4, 'Short': 41, 'Unsigned': 40, 'read': 2, '.': 38, 'din': 8, '=': 36, 'Count': 46, '{': 13, 'IOException': 12, '': 5, 'throws': 10, 'Input': 7, 'Data': 3, 'void': 1, 'public': 0}
{'}\n': 175, '}': 165, ';': 18, ')': 7, '(': 4, 'unlock': 170, '.': 16, 'lock': 13, '{': 8, 'finally': 166, 'Moved': 59, 'num': 58, ',': 86, 'index': 6, 'Elements': 101, 'new': 100, 'elements': 31, 'arraycopy': 116, 'System': 114, '': 10, 'NUM': 74, '_': 73, ']': 30, 'len': 39, '[': 29, 'Object': 28, '=': 14, 'else': 94, 'Of': 83, 'copy': 82, 'Arrays': 80, '==': 72, 'if': 68, '-': 62, 'int': 5, 'length': 43, 'Array': 34, 'get': 33, 'try': 25, 'this': 15, 'Lock': 12, 'Reentrant': 11, 'final': 9, 'public': 0}
{'}\n': 714, ';': 121, ')': 9, 'DIRECTED': 119, '': 4, '.': 86, 'Type': 116, 'Edge': 88, ',': 101, ']': 7, 'NUM': 105, '_': 104, '[': 6, 'v': 8, '(': 3, 'random': 97, 'Math': 95, 'Double': 92, 'new': 90, 'add': 87, 'graph': 85, '{': 10, 'Edges': 2, 'create': 1, 'void': 0}
{'}\n': 841, ';': 840, ')': 7, 'query': 35, ',': 20, '(': 4, 'List': 13, '{': 665, 'Property': 557, 'Query': 545, '': 1, 'String': 19, '<': 17, 'Map': 16, 'Sort': 40, 'default': 39, 'Params': 25, 'request': 24, '>': 23, 'paginate': 12, 'Response': 11, 'Data': 10, 'public': 8, 'STR': 6, '_': 5, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 168, ';': 60, 'component': 33, 'return': 165, ')': 39, 'Panel': 65, 'row': 64, '(': 13, 'add': 113, '.': 42, 'panel': 17, 'EAST': 154, '': 3, 'Layout': 74, 'Border': 73, ',': 18, 'hint': 28, 'Hint': 141, 'create': 140, 'Creator': 138, 'CHint': 137, 'CENTER': 128, 'new': 47, 'NUM': 91, '_': 90, ':': 101, '?': 98, 'Last': 38, 'is': 37, 'Empty': 87, 'set': 43, 'JPanel': 16, '=': 66, 'final': 14, 'HEIGHT': 57, 'COLORPANEL_': 52, 'WIDTH': 53, 'Dimension': 49, 'Size': 45, 'Preferred': 44, '{': 40, 'boolean': 36, 'T': 4, 'String': 27, 'Row': 12, 'build': 11, '>': 8, 'Component': 7, 'extends': 5, '<': 2, 'private': 0}
{'}\n': 237, ';': 45, ')': 22, ',': 7, '(': 4, '': 47, 'NUM': 31, '_': 30, ']': 78, '[': 75, '.': 64, 'x': 74, 'abs': 122, 'Math': 120, '=': 51, 'Point': 50, 'last': 49, 'MASK': 69, 'C2_': 68, '==': 29, '&': 100, 'mask': 65, '-': 57, 'size': 54, 'get': 52, 'Node': 48, '}': 46, '{': 23, 'if': 24, 'double': 5, 'To': 3, 'void': 1, 'public': 0}
{'}\n': 164, '}': 163, ';': 106, ')': 6, 'NUM': 125, '_': 124, 'Bits': 47, 'm_meta': 27, ',': 123, '(': 5, '.': 98, '': 115, '{': 10, 'Meta': 3, 'void': 1, 'private': 0}
{'}\n': 99, '}': 74, ';': 53, ')': 8, '(': 7, 'Message': 92, 'get': 45, '.': 27, 'e': 79, 'Exception': 13, 'Fallback': 12, 'Data': 4, '': 10, 'new': 59, 'throw': 82, '{': 14, 'IOException': 78, 'catch': 75, 'File': 43, 'counter': 42, 'Buffered': 61, '=': 58, 'd': 17, 'try': 54, 'STR': 40, '_': 39, '+': 41, 'Name': 46, 'debug': 37, 'LOG': 26, 'Enabled': 30, 'Debug': 29, 'is': 28, 'if': 15, 'null': 20, '==': 19, 'throws': 9, 'Stream': 6, 'Counter': 3, 'open': 2, 'void': 1, 'private': 0}
{'}\n': 35, '}': 34, ';': 33, 'null': 32, 'return': 31, '{': 8, ')': 7, '(': 6, '.': 22, 'tokenizer': 11, 'if': 9, 'String': 2, '': 1}
{'}\n': 46, ';': 31, ')': 15, 'str': 14, '(': 6, 'String': 8, 'to': 4, 'append': 26, '.': 25, '}': 34, 'STR': 29, '_': 28, '{': 16, 'null': 21, 'if': 17, '': 7, 'Buffer': 9, 'public': 0}
{'}\n': 28, ';': 25, 'return': 26, ')': 11, 'data': 10, '{': 15, 'Exception': 14, '': 1, 'throws': 12, 'Instances': 9, '(': 7, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 54, ';': 15, ')': 7, 'result': 31, '==': 50, '(': 6, 'Value': 4, 'float': 30, '.': 45, 'Number': 20, 'a': 11, ',': 42, 'STR': 14, '_': 13, 'True': 38, 'assert': 37, 'NUM': 35, '=': 12, 'Decimal': 18, 'Big': 17, '': 9, 'new': 22, 'String': 10, '{': 8, 'Float': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 70, ';': 30, ')': 18, '(': 6, 'length': 65, '.': 24, 'sub': 13, '+': 54, 'i': 21, 'substring': 47, 's': 9, 'with': 17, ',': 10, 'NUM': 37, '_': 36, 'return': 40, '}': 43, '{': 19, '-': 35, '==': 34, 'if': 31, 'Of': 26, '=': 22, 'int': 20, 'String': 3, '': 2, 'replace': 4, 'static': 1, 'public': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'Helper': 3, '': 1, 'private': 0}
{'}\n': 25, ';': 24, ')': 8, '(': 4, '.': 17, 'inspect': 13, '{': 12, 'Exception': 11, '': 5, 'throws': 9, 'Object': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 58, ';': 26, ')': 10, 'BOOL': 55, '_': 54, '(': 4, 'Visible': 52, 'set': 29, '.': 28, 'frame': 18, '': 5, 'new': 20, '=': 19, 'JFrame': 17, 'args': 9, ']': 8, '[': 7, 'String': 6, 'main': 3, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 19, ';': 18, ')': 8, '(': 7, 'Code': 6, 'hash': 5, '.': 13, 'return': 10, '{': 9, 'int': 4, 'public': 3, 'Override': 2, '': 1, '@': 0}
{'}\n': 213, ';': 24, ')': 12, '(': 11, 'next': 191, '.': 21, 'iterator': 169, 'int': 14, ',': 153, 'Color2': 28, 'Text': 7, 'helper': 15, 'Equals': 146, 'assert': 145, 'Color1': 17, 'Colors2': 132, '=': 18, '>': 129, 'Integer': 128, '': 19, '<': 126, 'Iterator': 164, 'size': 158, 'Colors1': 41, 'Colors': 8, 'Helper': 6, 'get': 88, 'Edit': 76, 'password': 78, 'Collection': 125, 'All': 5, 'add': 98, 'Context': 89, 'Password': 75, 'new': 43, 'GRAY': 34, 'Color': 20, 'BLACK': 23, '{': 13, 'From': 9, 'Add': 4, 'test': 3, 'void': 2, 'final': 1, 'public': 0}
{'}\n': 95, '}': 78, '{': 28, ')': 44, 'e': 83, 'Exception': 82, '': 7, '(': 6, 'catch': 79, ';': 26, 'close': 69, '.': 48, 'writer': 29, 'flush': 63, 'write': 49, ',': 42, 'Writer': 34, 'File': 38, 'new': 31, 'Buffered': 33, '=': 30, 'try': 27, 'String': 8}
{'}\n': 34, ';': 33, ')': 5, '(': 4, 'Code': 3, 'hash': 2, '.': 14, '*': 11, '+': 20, 'NUM': 10, '_': 9, '{': 6, 'int': 1, 'public': 0}
{'}\n': 198, ';': 45, ')': 23, '(': 4, 'flush': 194, '.': 56, 'out': 75, 'NEWLINE': 98, '': 5, 'Bytes': 78, 'write': 2, ',': 8, 'NUM': 176, '_': 42, 'data': 173, '}': 46, 'Type': 12, 'mime': 11, '+': 108, 'STR': 43, '{': 27, 'null': 32, '!=': 134, 'if': 28, 'Name': 17, 'file': 16, 'name': 7, 'boundary': 89, 'PREFIX': 81, 'Exception': 40, 'Argument': 39, 'Illegal': 38, 'new': 36, 'throw': 35, 'Empty': 58, 'is': 57, '||': 53, '==': 31, 'IOException': 26, 'throws': 24, 'String': 6, 'File': 3, 'void': 1, 'public': 0}
{'}\n': 70, ';': 69, ')': 17, 'Locale': 34, '(': 47, '.': 38, '': 5, '{': 29}
{'}\n': 1617, '}': 1603, ';': 373, ')': 116, '(': 7, '.': 130, 'Edges': 267, 'edge': 842, 'edges': 1173, 'Edge': 58, 'new': 63, '=': 127, '{': 117, '==': 863, 'if': 860, '': 36, 'final': 35, ',': 620, 'next': 259, 'add': 389, '_': 220, 'get': 131, '>': 42, '<': 38, 'List': 37}
{'}\n': 279, '}': 200, ';': 51, ')': 21, '.': 243, '(': 16, '{': 178, 'STR': 77, '_': 76, '==': 114, 'c3': 93, '&&': 118, 'c2': 81, 'c1': 74, '=': 42, 'String': 7, '': 6}
{'}\n': 43, ';': 27, ')': 18, 'STR': 25, '_': 24, '(': 5, 'append': 22, '.': 21, 'sb': 9, 'String': 7, '': 6, 'Builder': 8}
{'}\n': 23, ';': 22, ')': 4, '(': 3, 'Millis': 14, 'Time': 13, 'current': 12, '.': 11, 'System': 10, '': 9, '=': 8, '{': 5, 'start': 2, 'void': 1, 'public': 0}
{'}\n': 129, ';': 27, 'NUM': 46, '_': 45, '[': 21, '.': 39, 'this': 38, '': 1, 'row': 64, 'Fields': 41, 'n': 40, '=': 17, ']': 26, 'Object': 20, 'new': 18, '{': 11, ')': 10, '(': 7}
{'}\n': 97, ';': 24, ')': 14, '(': 6, 'String': 3, 'to': 92, '.': 20, 'sb': 28, 'return': 89, '}': 88, 'c': 55, 'append': 82, 'chars': 13, 'j': 41, 'At': 60, 'char': 54, 'src': 9, '=': 18, '{': 15, '++': 51, 'i': 17, '<': 47, 'NUM': 44, '_': 43, 'int': 16, 'for': 38, 'Builder': 27, '': 2, 'new': 30, 'length': 21, ',': 10, 'Chars': 5, 'remove': 4, 'static': 1, 'public': 0}
{'}\n': 132, ';': 24, ')': 6, '(': 5, 'Clause': 128, 'Returning': 127, 'add': 2, ']': 123, 'NUM': 122, '_': 121, '[': 120, 'String': 29, '': 8, 'new': 33, 'Array': 35, 'to': 114, '.': 51, 'columns': 31, '=': 17, 'Names': 110, 'column': 109, '}': 107, 'NAME': 102, 'COLUMN_': 101, 'IDX_': 100, 'get': 18, 'rs': 47, 'Name': 61, 'Object': 60, 'quote': 90, '{': 10, 'next': 81, 'while': 77, 'null': 55, ',': 56, 'Table': 67, 'Model': 64, 'statement': 63, 'normalize': 59, 'Columns': 4, 'Data': 14, 'meta': 15, 'Set': 46, 'Result': 45, 'try': 42, '>': 30, '<': 27, 'List': 26, 'Meta': 13, 'Database': 12, 'SQLException': 9, 'throws': 7, 'void': 1, 'private': 0}
{'}\n': 455, '}': 134, ';': 24, 'null': 23, '=': 22, 'pstmt': 21, '{': 17, ')': 9, 'se': 396, 'SQLException': 16, '': 6, '.': 12, 'sql': 13, 'java': 11, '(': 5, 'catch': 388, 'close': 150, 'try': 32, '!=': 375, 'if': 117, 'rs': 28, 'finally': 370, 'NUM': 102, '_': 48, 'Int': 111, 'get': 44, 'Count': 329, 'Message': 328, 'Spam': 203, 'set': 326, 'Ham': 3, 'next': 87, 'Query': 61, 'execute': 60, 'BOOL': 52, ',': 50, 'STR': 49, 'String': 46, 'Sql': 45, 'Queries': 42, 'Statement': 20, 'prepare': 38, 'conn': 8, 'size': 143, 'spam': 200, '+': 140, 'count': 106, 'token': 94, 'put': 127, '>': 73, 'int': 105, 'while': 83, 'Counts': 79, 'Token': 78, 'Integer': 72, '<': 67, 'Map': 66, 'ham': 74, 'Set': 27, 'Result': 26, 'Prepared': 19, 'throws': 10, 'Connection': 7, 'NSpam': 4, 'load': 2, 'void': 1, 'public': 0}
{'}\n': 77, '}': 76, ';': 35, ')': 17, ',': 11, 'NUM': 58, '_': 57, 'buf': 26, '(': 5, 'write': 66, '.': 47, '{': 21, 'read': 48, '=': 27, ']': 25, '[': 24, 'byte': 23, 'new': 28, 'final': 6, 'IOException': 20, '': 7, 'throws': 18, 'Stream': 9, 'Output': 14, 'Input': 8, 'void': 2}
{'}\n': 17, ';': 16, ')': 8, '{': 9, 'Setup': 4}
{'}\n': 152, ';': 24, ')': 8, '(': 7, '.': 68, '': 10, 'Equals': 81, 'assert': 80, 'get': 91, 'result': 89, ',': 88, 'new': 18, 'Mapper': 15, 'Object': 14, '=': 17, 'm': 16, '{': 12, 'Exception': 11, 'throws': 9, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 105, ';': 44, ')': 43, ',': 39, '(': 11, 'get': 63, '.': 2, 'Name': 42, '=': 32, '': 7, 'res': 38, 'ui': 5, 'codename1': 3, 'com': 1}
{'}\n': 240, '(': 118, 'NUM': 190, '_': 127, '.': 122, ';': 165, ')': 40, 'Decimal': 15, 'Big': 14, '': 13, ',': 34, 'final': 12, 'public': 3}
{'}\n': 55, ';': 49, '}': 50, '{': 9, ')': 8, '(': 4, 'size': 34, '.': 33, 'items': 32, '>=': 31, 'index': 10, 'if': 28, 'NUM': 25, '_': 24, 'int': 6, 'private': 0}
{'}\n': 210, ';': 25, 'return': 118, '}': 43, 'c': 56, '(': 6, 'if': 26, ')': 15, 'ii': 84, 'At': 61, 'char': 55, '.': 21, 'symbol': 10, '=': 19, '{': 16, '++': 94, 'length': 18, '<': 90, 'NUM': 31, '_': 30, 'int': 17, 'for': 81, 'is': 47, 'Part': 112, '!': 109, 'Keyword': 49, 'Identifier': 48, 'Exception': 39, 'Symbol': 38, 'Empty': 37, '': 7, 'new': 35, 'throw': 34, '==': 29, 'Sequence': 9, 'Char': 8, 'static': 1, 'public': 0}
{'}\n': 107, ';': 53, '.': 59, ')': 17, '_': 81, '(': 7, 'length': 60, 'name': 11, 'Exception': 50, '': 9, 'new': 46, 'throw': 45, 'null': 28, '==': 27, 'if': 24, '{': 23, 'String': 10, 'public': 0}
{'}\n': 52, ';': 30, ')': 10, '(': 6, 'parse': 47, '.': 25, 'builder': 34, 'return': 44, 'Builder': 17, 'Document': 3, 'new': 26, 'factory': 19, '=': 20, '': 2, 'Instance': 27, 'Factory': 18, '{': 14, 'Exception': 13, 'throws': 11, 'load': 4, 'static': 1, 'public': 0}
{'}\n': 35, ';': 31, 'return': 32, ')': 7, '(': 16, 'Node': 2, '.': 19, '{': 8, '': 1}
{'}\n': 48, ';': 37, ')': 11, '(': 5, 'Empty': 44, 'is': 3, '.': 28, 'List': 15, 'hod': 22, '!': 39, 'return': 38, 'Id': 10, 'assign': 9, 'Departments': 20, 'Hod': 4, 'All': 30, 'get': 29, 'Repository': 27, 'Department': 26, 'employee': 25, '=': 24, '>': 21, 'Of': 19, 'Head': 18, '': 1, '<': 16, 'final': 6, '{': 12, 'Long': 8, 'Boolean': 2, 'public': 0}
{'}\n': 28, ';': 27, ')': 11, 'languages': 10, '(': 6, 'List': 22, 'as': 21, '.': 20, 'Arrays': 19, '': 1, 'Label': 4, 'return': 13, '{': 12, '...': 9, 'String': 8, 'Munger': 2, 'public': 0}
{'}\n': 223, ';': 221, ')': 13, ']': 37, '(': 8, 'size': 201, '.': 58, 'List': 108, '[': 36, 'Value': 3, 'Stat': 34, '': 9, 'new': 87, '{': 14}
{'}\n': 106, '}': 40, ';': 39, ')': 10, '(': 5, 'i': 67, 'get': 90, '.': 75, 'm_children': 17, '=': 68, 'child': 86, 'CNode': 85, '': 12, '{': 14, '++': 81, 'size': 76, '<': 73, 'NUM': 53, '_': 36, 'int': 66, 'for': 64, 'STR': 37, 'Exception': 13, 'new': 32, 'throw': 31, 'null': 19, 'if': 15, 'throws': 11}
{'}\n': 35, ';': 16, 'Y': 28, 'm': 7, '=': 20, 'X': 19, ')': 5, '(': 4, '.': 9, '{': 6, 'void': 1}
{'}\n': 74, ';': 51, '=': 55, 'Thumb': 69, 'scrape': 68, '.': 29, 'this': 52, 'Scraper': 20, 'media': 21, 'episodes': 16, ')': 23, 'TASK': 49, 'BACKGROUND_': 48, '': 1, 'Type': 45, 'Task': 6, ',': 17, '(': 7, 'size': 39, 'STR': 34, '_': 33, 'String': 31, 'get': 30, 'BUNDLE': 28, 'super': 25, '{': 24, 'Media': 19, '>': 15, 'Episode': 4, 'Show': 3, 'Tv': 2, '<': 10, 'List': 9, 'Scrape': 5, 'public': 0}
{'}\n': 35, ';': 34, '(': 24, '{': 22, ')': 21, '': 1, 'notif': 11, 'String': 8, 'MBean': 3, 'Model': 2}
{'}\n': 68, ';': 67, ')': 33, 'task': 30, '(': 5, '{': 34, 'Future': 16, '': 15, 'Task': 4, 'void': 1, 'public': 0}
{'}\n': 124, ';': 105, ')': 98, 'lon': 84, '(': 29, 'Geo': 22, '': 21, 'new': 51, '.': 41, 'double': 34, 'public': 0}
{'}\n': 115, '}': 114, ';': 64, ')': 21, 'null': 93, ',': 9, '(': 4, 'build': 107, '.': 66, 'builder': 54, 'track': 99, 'Client': 91, 'telemetry': 90, '{': 22, '!=': 92, 'if': 88, 'String': 15, 'to': 81, 'STR': 75, '_': 74, 'format': 72, '': 6, 'debug': 67, 'logger': 65, 'properties': 20, 'Builder': 53, 'Map': 12, 'Property': 51, 'new': 56, '=': 55, 'final': 5, '>': 19, '<': 13, 'send': 2, 'void': 1, 'public': 0}
{'}\n': 88, '}': 87, ';': 25, ')': 10, '(': 6, 'Rect': 81, 'Header': 3, 'get': 20, '.': 19, 'th': 15, 'repaint': 75, 'Index': 46, 'Column': 4, 'TABLE': 18, '': 7, '{': 11, 'NUM': 59, '_': 58, '-': 57, '!=': 56, 'c': 39, 'if': 53, 'col': 27, 'Model': 48, 'To': 47, 'convert': 44, '=': 16, 'int': 26, 'p': 9, 'Point': 8, 'At': 32, 'column': 31, 'Table': 21, 'JTable': 13, 'handle': 2, 'void': 1, 'public': 0}
{'}\n': 68, ';': 34, 'records': 66, '}': 64, ')': 15, 'NUM': 41, '_': 40, '': 5, '{': 16, '(': 12}
{'}\n': 60, ';': 59, ')': 31, 'attr': 28, '(': 24, '.': 41, '{': 32, '': 25, 'add': 7, 'public': 0}
{'}\n': 205, ';': 68, ')': 33, '(': 51, '}': 143, 'Delete': 32, 'To': 31, '_': 57, '.': 45, 'file': 82, '{': 120, '': 27, 'File': 21, 'delete': 3, 'void': 2}
{'}\n': 61, ';': 60, ')': 10, '(': 6, 'Code': 56, 'hash': 55, '.': 54, 'object': 9, '_': 43, '{': 11, 'Object': 8, '': 7, 'static': 1, 'public': 0}
{'}\n': 20, ';': 19, ')': 8, 'STR': 17, '_': 16, '(': 7, 'Property': 14, 'get': 13, '.': 12, 'properties': 11, 'return': 10, '{': 9, 'Url': 6, 'Guide': 5, 'documentation': 3, 'String': 2, '': 1, 'public': 0}
{'}\n': 44, ';': 20, 'number': 25, '+=': 31, 'sum': 16, '{': 14, ')': 13, 'list': 12, ':': 26, '': 6, '(': 4, 'for': 21, 'NUM': 19, '_': 18, '=': 17, 'double': 2, '>': 11, '<': 8, 'List': 7, 'final': 5, 'static': 1, 'public': 0}
{'}\n': 46, ';': 45, ')': 11, 'data': 10, '(': 6, 'encode': 23, '.': 22, 'Hex': 5, '': 2, 'String': 3, 'new': 16, 'return': 15, '{': 14, ']': 9, '[': 8, 'byte': 7, 'to': 4, 'static': 1, 'public': 0}
{'}\n': 57, ';': 55, ')': 14, '(': 13, '.': 20, 'm': 18, '{': 15, 'ID_': 26, 'MSG_': 25, '': 1, 'Messages': 22, 'Handler': 19, 'Test': 12, 'For': 3, 'void': 6, 'public': 5, 'Testing': 4, 'Visible': 2, '@': 0}
{'}\n': 40, ';': 23, ')': 11, '(': 7, '.': 18, 'ch': 15, '=': 16, '': 2, '{': 12, 'str': 10, 'String': 3, 'static': 1}
{'}\n': 286, ';': 72, ')': 26, '(': 4, 'pi': 19, '.': 20, 'if': 73, ',': 54, 'get': 21, 'NUM': 108, '_': 52, '': 5, 'null': 150, '==': 45, 'ID': 24, 'Process_': 23, 'AD_': 22}
{'}\n': 299, ';': 68, 'Map': 2, 'array': 51, 'return': 295, '}': 100, ')': 39, ',': 6, '(': 14, 'URI': 5, 'Device': 125, 'get': 124, '.': 33, 'desc': 109, 'put': 278, 'Client': 272, '_db': 271, 'class': 261, 'System': 9, 'Storage': 8, '': 1, 'Object': 255, 'Data': 254, '=': 53, '{': 40, 'BOOL': 132, '_': 131, '==': 130, 'Key': 120, 'contains': 119, 'if': 69, 'descriptors': 28, ':': 110, 'Descriptor': 26, 'Volume': 25, 'for': 104, ']': 98, '[': 97, 'Type': 35, 'new': 54, 'By': 83, 'filter': 82, 'null': 73, '!=': 72, '>': 10, '<': 3, 'Hash': 56, 'List': 22, 'Array': 12, 'build': 11, 'private': 0}
{'}\n': 243, '}': 204, ';': 39, ')': 18, 'e': 209, ',': 13, 'STR': 237, '_': 101, '(': 5, 'Exception': 23, 'Crypter': 22, 'Key': 21, '': 14, 'new': 32, 'throw': 212, '{': 24, 'catch': 205, '+': 197, 'Bytes': 12, 'encrypted': 110, 'Of': 190, 'copy': 189, '.': 42, 'Arrays': 187, 'return': 181, 'Final': 172, 'do': 171, 'cipher': 74, '=': 31, 'int': 132, 'final': 131, 'NUM': 147, 'length': 127, 'plain': 9, 'process': 138, ']': 8, 'Size': 120, 'Output': 119, 'get': 118, '[': 7, 'byte': 6, 'key': 53, 'BOOL': 102, 'init': 99, 'Engine': 91, 'AESFast': 90, 'Cipher': 73, 'CBCBlock': 85, 'Block': 72, 'Buffered': 71, 'Padded': 78, 'IV': 52, 'With': 51, 'Parameters': 50, 'next': 43, 'Random': 41, 'secure': 40, 'LENGTH': 37, 'try': 25, 'throws': 19, 'encrypt': 4, 'public': 0}
{'}\n': 521, ';': 50, '}': 511, ')': 24, '': 6, '(': 52, 'COL_': 65, '.': 244, 'STR': 69, '_': 68, '+': 67, 'ID': 82, '=': 60, '{': 25, 'null': 55, '!=': 54, 'if': 51, 'public': 0}
{'}\n': 44, '}': 43, ';': 37, 'null': 41, 'return': 24, ':': 23, 'default': 38, 'ID': 27, '': 25, 'NUM': 22, '_': 2, 'case': 20, '{': 13, ')': 12, 'Id': 7, 'field': 10, '(': 8, 'switch': 14, 'int': 9, 'Thrift': 6, 'By': 5, 'find': 4, 'Fields': 3, 'static': 1, 'public': 0}
{'}\n': 29, ';': 19, ')': 11, 'this': 26, '(': 6, 'Listener': 24, 'Key': 23, '.': 14, 'editor': 10, 'super': 13, '{': 12, 'Pane': 9, 'JEditor': 8, '': 1, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 24, ';': 23, ')': 5, '.': 18, 'Cipher': 10, 'null': 12, '{': 6, '(': 4, 'public': 0}
{'}\n': 110, '}': 109, ';': 107, 'rec': 45, '{': 25, ')': 24, '<': 64, '.': 55, '(': 14, 'size': 17, 'Record': 5, 'void': 1}
{'}\n': 81, ';': 58, ')': 13, '(': 8, 'get': 71, '.': 30, 'tenant': 12, 'prepare': 46, 'Tenant': 6, '': 1, '{': 14, 'Keystone': 10, 'public': 0}
{'}\n': 18, ';': 17, ')': 6, '(': 5, '': 10, 'void': 1, 'private': 0}
{'}\n': 142, ';': 29, ')': 17, ',': 11, '(': 7, 'draw': 5, 'NUM': 64, '_': 63, '+': 110, 'Descent': 124, 'get': 37, '.': 20, 'fm': 33, 'Height': 81, 'm_id': 60, 'Width': 58, 'string': 57, 't': 67, 'l': 44, 'g': 10, '/': 62, '-': 54, 'h': 16, '*': 51, 'm_y': 73, 'int': 12, '=': 34, 'w': 13, 'm_x': 50, 'Metrics': 32, 'Font': 31, '': 1, 'Color': 22, 'set': 21, '{': 18, 'Graphics': 9, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 122, '}': 58, ';': 57, ')': 29, '(': 38, '.': 110, 'e': 99, 'Exception': 98, '': 8, 'new': 103, 'throw': 102, '{': 44, 'catch': 95, 'try': 59, 'null': 42, '==': 41, 'if': 37, 'String': 9, 'public': 0}
{'}\n': 896, ';': 37, 'HSIC': 231, 'emp': 230, 'return': 892, ')': 26, 'NUM': 240, '_': 239, ',': 11, '(': 5, 'pow': 825, '.': 33, 'Math': 823, '': 6, '}': 684, 'i': 245, 'Gcxt': 208, 'B': 164, 'Entry': 263, 'Product': 262, 'matrix': 261, '+=': 260, '{': 27, '++': 255, 'm': 25, '<': 251, '=': 30, 'int': 24, 'for': 242, 'double': 1, 'transpose': 213, 'Gcx': 93, 'Matrix': 8, 'Tetrad': 7, 'A': 149, 'times': 83, 'Gcy': 78, 'Gcyt': 152, 'Gx': 16, 'H': 62, 'Gy': 10, 'construct': 68, 'Utils': 66, 'Kernel': 65, 'columns': 34, 'kx': 39, 'ky': 29, 'Cholesky': 4, 'HSICincomplete': 3, 'empirical': 2, 'public': 0}
{'}\n': 62, ';': 39, 'value': 27, 'return': 49, 'else': 53, 'Value': 19, 'def': 18, ')': 20, '(': 5, 'Empty': 45, 'is': 44, '.': 31, 'if': 40, 'options': 10, ',': 11, 'option': 14, 'Option': 33, 'get': 32, 'Utils': 30, '': 2, '=': 28, 'String': 7, '{': 24, 'Exception': 23, 'throws': 21, ']': 9, '[': 8, 'parse': 4, 'static': 1, 'public': 0}
{'}\n': 85, ';': 22, 'Value': 36, 'ret': 35, 'return': 19, ')': 6, '(': 5, 'String': 57, 'to': 56, '+': 69, 'STR': 68, '_': 16, 'balance': 26, 'warning': 65, '.': 11, 'log': 52, 'else': 62, 'finer': 54, 'if': 8, 'NUM': 17, '==': 15, 'signum': 40, '=': 27, 'boolean': 1, 'Balance': 30, 'get': 28, 'Decimal': 25, 'Big': 24, '': 23, 'BOOL': 21, 'size': 12, 'm_lines': 10, '{': 7, 'Balanced': 4, 'is': 2, 'public': 0}
{'}\n': 99, 'Capacity': 7, 'new': 26, '=': 13, ';': 42, ')': 8, 'min': 6, '(': 4, 'if': 43, 'NUM': 38, '_': 37, 'old': 11, 'int': 5, '{': 9, 'void': 1}
{'}\n': 74, ';': 45, ')': 10, '(': 5, '.': 21, '=': 19, 'detail': 31, 'String': 30, '': 7, '{': 11}
{'}\n': 16, ';': 15, ')': 4, '(': 3, 'close': 12, '.': 11, 'output': 9, '{': 8, 'IOException': 7, '': 6, 'throws': 5, 'void': 1, 'public': 0}
{'}\n': 16, ';': 15, ')': 5, '(': 4, 'Lock': 12, '{': 6}
{'}\n': 260, ';': 49, 'statement': 25, 'return': 257, '}': 93, ')': 29, 'x': 253, ',': 12, 'STR': 251, '_': 174, '(': 8, 'warn': 248, '.': 44, '': 1, '{': 30, '=': 42, ']': 20, 'NUM': 175, '[': 19, 'args': 21, 'String': 40, 'sql': 138, 'name': 41, 'CALL': 160, 'PREPARE_': 100, 'compare': 67, 'if': 65, 'else': 94, 'class': 90, 'Statement': 7, 'Prepared': 130, 'IDX': 85, 'STATEMENT_': 84, 'Constructor': 80, 'get': 45, 'constructor': 77, 'STATEMENT': 71, 'CREATE_': 70, 'null': 54, 'Name': 46, 'method': 15, 'try': 31, 'time': 28, 'long': 27, 'Object': 5, 'Method': 14, 'proxy': 11, 'create': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 58, ';': 39, 'BOOL': 46, '_': 45, ')': 38, '': 1}
{'}\n': 109, ';': 73, ')': 38, '(': 27, 'Password': 87, 'get': 68, '.': 67, 'Utils': 66, 'Db': 65, 'm_': 64, 'Username': 82, 'User': 75, 'URL': 62, 'Database': 69, '{': 39, 'void': 1, 'public': 0}
{'}\n': 55, ';': 54, ')': 16, 'Client': 6, '.': 38, 'client': 36, ',': 24, 'Request': 12, '': 10}
{'}\n': 35, ';': 34, ')': 14, 'accessor': 12, ',': 9, 'name': 8, '(': 5, 'Desc': 26, 'Prop': 25, 'Legacy': 23, '': 6, 'new': 21, 'add': 2, '.': 18, 'Properties': 17, '{': 15, 'String': 7, 'Property': 4, 'void': 1, 'public': 0}
{'}\n': 46, ';': 21, 'f': 11, '_': 18, '.': 23, '{': 8, ')': 7, '(': 6}
{'}\n': 89, ';': 85, ')': 34, '': 14, '(': 11, '.': 43, 'return': 40, '{': 39, 'String': 8, 'base64': 16, 'public': 0}
{'}\n': 210, ';': 72, ')': 58, '(': 7, 'Color': 85, 'get': 67, '.': 66, 'Renderer': 34, 'series': 35, 'set': 84, 'paint': 14, '}': 195, ',': 11, 'Index': 53, 'Nr': 62, 'X': 111, 'Diff': 110, 'half': 109, 'y': 47, 'x': 145, 'canvas': 10, 'Bar': 168, 'draw': 5, 'NUM': 141, '_': 140, '+': 162, 'i': 129, 'points': 22, '=': 63, 'float': 46, '{': 59, '+=': 139, 'length': 74, '<': 18, 'int': 51, 'for': 126, 'Half': 114, 'FILL': 105, '': 1, 'Style': 99, 'size': 78, 'Count': 69, 'Series': 6, 'Dataset': 65, 'm': 64, 'start': 56, 'Value': 49, 'Axis': 48, 'XYSeries': 33, '>': 21, 'Float': 20, 'List': 17, 'Paint': 13, 'Canvas': 9, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 112, ';': 48, ')': 22, ',': 106, '(': 20, '_': 95, 'username': 66, '=': 52, 'return': 40, '.': 32, 'if': 27, '{': 23, 'String': 11}
{'}\n': 39, ';': 38, '_': 22, 'NUM': 27, ')': 12, 'STR': 23, '(': 7, 'Of': 20, 'index': 19, '.': 18, 'Name': 6, 'class': 10, '{': 13, 'String': 9, '': 8, 'Class': 5, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 187, ';': 51, 'BOOL': 179, '_': 5, '{': 40, ')': 13, '*': 142, '(': 4, 'Minutes': 86, 'get': 47, '.': 46, 'now': 43, '=': 44, 'Hours': 76, 'Time': 48, 'Date': 42, '': 1, 'Clock': 23, 'Fast': 22, 'STR': 6, 'Warnings': 3, 'Suppress': 2, '@': 0}
{'}\n': 112, ';': 41, 'BOOL': 67, '_': 66, 'return': 65, '}': 69, ')': 27, 'STR': 100, '(': 39, 'info': 97, '.': 35, '_logger': 95, '{': 28, 'NUM': 77, '*': 89, 'Interval': 44, 'Time': 22, 'last': 20, '-': 82, 'system': 30, '&&': 78, '>': 75, 'if': 59, '': 2, 'Refresh': 47, 'get': 46, '=': 32, 'refresh': 43, 'long': 19, 'Millis': 38, 'current': 36, 'System': 34, ',': 23, 'private': 0}
{'}\n': 114, '}': 92, ';': 59, ')': 32, '(': 4, '.': 61, '': 6, '{': 81, 'Breakpoint': 10, 'Address': 11, 'breakpoint': 55, 'Set': 7, 'final': 5, '>': 12, '<': 8, 'Breakpoints': 3, 'void': 1, 'private': 0}
{'}\n': 288, ';': 69, ')': 32, 'rdns': 76, '(': 54, 'add': 98, '.': 51, 'dn': 47, '>': 75, 'RDN': 74, '': 22, '<': 72, 'List': 71, 'get': 57, 'Of': 53, 'value': 52, 'DN': 46, '=': 48, '{': 33, 'void': 1}
{'}\n': 122, '}': 64, ';': 28, ')': 10, 'e': 69, ',': 14, 'STR': 116, '_': 60, 'WARNING': 113, '': 5, '.': 40, 'Level': 110, '(': 4, 'log': 107, 'logger': 105, 'Error': 77, 'throw': 97, '{': 20, 'OBJECT': 94, 'BAD_': 93, 'Constants': 81, 'Throwable': 68, '==': 87, 'retryable': 83, '&&': 78, 'instanceof': 75, 'if': 72, 'catch': 65, 'BOOL': 61, 'get': 58, 'mi': 32, 'try': 46, 'Object': 6, 'read': 41, 'Instance': 31, 'Marshalled': 30, '=': 33, 'Exception': 19, 'Found': 18, 'Not': 17, 'Class': 16, 'IOException': 13, 'throws': 11, 'Stream': 8, 'Input': 7, 'private': 0}
{'}\n': 168, ';': 37, ')': 21, 'class': 165, '.': 39, 'Server': 3, 'Sc': 2, '': 1, ',': 11, '(': 7, 'Result': 84, 'get': 130, 'rr': 85, 'Json': 98, 'from': 151, 'gson': 149, 'return': 148, '}': 147, 'error': 115, 'APIException': 26, 'Center': 25, 'Storage': 24, 'new': 32, 'throw': 137, 'Msg': 132, 'Error': 131, 'Name': 15, 'STR': 43, '_': 42, 'format': 120, 'String': 9, '=': 31, '{': 27, 'Results': 107, 'check': 106, '!': 105, 'if': 103, 'to': 97, 'params': 30, 'post': 90, 'Client': 88, 'rest': 87, 'Rest': 83, 'Id': 20, 'os': 19, 'add': 40, 'STRING': 68, 'NOTES_': 67, 'ssn': 10, 'Parameters': 29, 'throws': 22, 'create': 4, 'public': 0}
{'}\n': 133, ';': 57, ')': 7, '(': 6, 'get': 115, '.': 114, 'r': 65, 'Null': 124, 'assert': 110, 'NUM': 55, '_': 54, ',': 118, 'x': 47, 'Equals': 111, '>': 64, 'Throwable': 63, '': 44, '<': 61, 'Reference': 60, 'Atomic': 45, 'new': 49, '=': 48, 'Integer': 46, '{': 8, 'Stage': 5, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 56, ';': 55, ')': 16, 'STR': 26, '_': 25, ',': 12, '(': 6, 'replace': 46, '.': 21, 'path': 15, 'SET': 31, 'RESOURCE_': 30, 'DIR_': 29, '': 7, '{': 17, 'String': 14, 'Resource': 5, 'Post': 4, 'Directory': 3, 'write': 2, 'void': 1, 'private': 0}
{'}\n': 61, ';': 42, 'Type': 47, 'return': 44, '}': 43, ')': 23, '(': 13, 'equals': 29, '.': 28, 'if': 25, '{': 24, 'table': 18, '': 7, 'String': 8}
{'}\n': 25, ';': 24, ')': 11, 'mesh': 10, '(': 6, '.': 18, 'Meshes': 17, 'Curl': 4, 'm': 15, '{': 12, 'Mesh': 5, '': 7, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 239, ';': 78, ')': 64, 'List': 2, ',': 14, '(': 10, '.': 113, 'NUM': 162, '_': 75, '': 15, 'new': 190, '=': 189, 'add': 168, 'translation': 137, '<': 17, '>': 20, 'IString': 19, '{': 65, 'references': 63, 'String': 32, 'Metric': 26, 'private': 0}
{'}\n': 15, ';': 14, 'Closed': 3, 'is': 2, '.': 9, 'return': 7, '{': 6, ')': 5, '(': 4, 'boolean': 1, 'public': 0}
{'}\n': 76, ';': 39, ')': 6, '(': 5, 'Steps': 72, 'Script': 9, 'reindex': 70, 'STR': 68, '_': 67, '=': 15, 'Time': 4, 'Step': 10, ',': 49, 'Index': 46, 'Insert': 45, 'get': 32, 'add': 42, '.': 20, 'steps': 40, 'create': 21, 'Factory': 19, '': 8, '{': 7, 'insert': 2, 'void': 1, 'public': 0}
{'}\n': 41, ';': 40, 'Instruction': 7, ',': 31, '(': 14, ')': 16, '': 6, 'public': 0}
{'}\n': 92, ';': 91, ')': 26, 'Capacity': 3, 'minimum': 21, '(': 4, '{': 27, 'int': 5, 'ensure': 2, 'void': 1, 'public': 0}
{'}\n': 294, ';': 155, '}': 250, ')': 96, '(': 40, '.': 195, 'root': 93, '{': 225, 'if': 214, '<': 27, '': 8, 'new': 107, '=': 106, '>': 30, 'List': 9, 'Array': 109, 'Node': 82, 'Tree': 53, 'public': 0}
{'}\n': 50, ';': 49, 'Id': 9, 'entity': 8, '{': 15, ')': 14, 'public': 0}
{'}\n': 97, ';': 65, ')': 44, '(': 5, 'close': 89, '.': 60, '{': 33, 'st': 59, 'try': 32, 'null': 30, 'rs': 28, '': 6, ',': 9, 'conn': 8, 'private': 0}
{'}\n': 41, ';': 40, ')': 21, '(': 4, 'Image': 18, 'get': 35, '.': 34, 'ii': 20, ',': 13, 'this': 23, '{': 22, 'Icon': 19, '': 1, 'double': 11, 'public': 0}
{'}\n': 184, ';': 46, '}': 172, ')': 36, '(': 5, 'NUM': 45, '_': 44, ',': 10, '.': 108, 'if': 87, 'count': 85, 'Size': 31, 'buffer': 22, 'int': 21, '=': 43, '{': 40, 'IOException': 39, '': 6, 'throws': 37, 'os': 14, 'Stream': 4, 'Output': 12, 'is': 9, 'Input': 7, 'copy': 3, 'static': 1, 'public': 0}
{'}\n': 393, '}': 392, ';': 127, '_': 161, ')': 44, '(': 18, '.': 250, 'STR': 162, '': 20, ',': 57, 'os': 43, 'Date': 202, ':': 163, '?': 160, 'null': 159, '==': 158, 'Stream': 23, 'Output': 22, 'Header': 6, 'write': 5, 'public': 3}
{'}\n': 127, ';': 93, ')': 9, '(': 5, 'String': 2, 'to': 122, '.': 121, 'sb': 21, 'return': 119, '}': 118, 'c': 35, 'append': 109, '_': 60, '==': 81, 'if': 78, 'STR': 83, '{': 17, 'NUM': 61, '-': 59, 'int': 34, '=': 22, 'Builder': 20, '': 1, 'IOException': 12, 'throws': 10, 'protected': 0}
{'}\n': 269, ';': 223, ')': 19, '(': 6, 'get': 65, '.': 64, 'cp': 63, 'Short': 239, 'write': 230, 'out': 18, 'Byte': 231, 'Name': 105, '{': 33, 'IOException': 22, '': 7, 'throws': 20, 'Stream': 17, 'Output': 16, 'Data': 15, ',': 13, '>': 11, '?': 10, '<': 9, 'Class': 8, 'code': 2, 'void': 1, 'private': 0}
{'}\n': 73, ';': 33, ')': 11, ']': 56, 'NUM': 55, '_': 25, '[': 53, 'parts': 52, 'STR': 32, '.': 22, 'String': 7, '': 1, '{': 12, '(': 5}
{')': 106, '': 17, 'util': 65, ',': 60, '.': 64, '(': 16}
{'}\n': 67, ';': 65, ')': 50, 'pattern': 47, '(': 61, 'add': 55, '.': 54, '{': 51, 'Pattern': 32, '': 12, 'Patterns': 24}
{'}\n': 96, ';': 27, ')': 12, ']': 5, '(': 8, 'size': 90, '.': 71, 'files': 35, '[': 4, 'String': 3, '': 2, 'new': 37, 'Array': 29, 'to': 81, 'return': 78, '}': 77, 'add': 72, 'is': 57, 'if': 55, '{': 16, ':': 51, 'for': 46, '>': 34, '<': 31, 'List': 30, '=': 36, 'directory': 11, 'throws': 13, 'ls': 6, 'static': 1, 'public': 0}
{'}\n': 82, ';': 23, ')': 11, '_': 47, '(': 4, '.': 60, '{': 15, 'NUM': 48, 'value': 10, '=': 17, '': 5}
{'}\n': 125, ';': 31, '}': 120, ')': 16, ',': 11, 'cell': 91, '(': 19, 'put': 113, '.': 112, 'ICell': 2, 'mx': 1, '=': 41, 'Cell': 85, '{': 17, 'if': 49, 'get': 42, '': 8}
{'}\n': 18, ';': 17, ')': 8, 'idx': 7, '(': 5, '.': 12, 'Keys': 11, 'foreign': 10, '{': 9, 'int': 6, 'Key': 4, 'Foreign': 3, 'void': 1, 'public': 0}
{'}\n': 29, ';': 28, ',': 12, 'offset': 11, '(': 9, 'insert': 8, '{': 16, ')': 15, 'i': 14, 'int': 10, 'String': 6, '': 5, '.': 2, 'lang': 3, 'java': 1, 'public': 0}
{'}\n': 35, '}': 34, ';': 33, ')': 10, '(': 5, 'if': 12, '{': 11, '': 6, 'Gefaehrdungs': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 176, ';': 40, ')': 52, '(': 4, '.': 49, 'length': 61, 'if': 127, '=': 37, 'tail': 36, '{': 65, ',': 9}
{'}\n': 774, ';': 140, 'return': 234, '}': 279, 'y': 77, '*': 542, 'x': 7, '{': 28, ')': 20, 'NUM': 461, '_': 460, '(': 4, 'if': 151, '==': 347, '=': 321, 'N': 192, 'Na': 191, '.': 189, 'Double': 188, '': 187, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 102, ';': 73, ')': 9, '(': 5, '.': 18, 'node': 8, 'get': 19, 'String': 52, '': 6, '{': 10, 'Type': 40, 'Node': 7, 'protected': 0}
{'}\n': 77, '}': 44, ';': 18, ')': 4, '_': 33, ',': 71, '.': 29, '(': 3, 'Exception': 63, '': 10, 'new': 60, 'throw': 59, '{': 9, 'NUM': 38, '-': 54, 'if': 19, '==': 36, 'STR': 34, 's': 28}
{'}\n': 19, ';': 13, ')': 6, '(': 5, '=': 10, '{': 7, 'finish': 3, 'public': 0}
{'}\n': 17, ';': 16, '+': 13, 'offset': 8, 'return': 11, '{': 10, ')': 9, 'long': 1, '(': 5, 'private': 0}
{'}\n': 78, '}': 60, ';': 59, ')': 26, 'e': 66, '(': 8, 'XNIException': 29, '': 9, 'new': 70, 'throw': 69, '{': 30, 'SAXException': 65, 'catch': 62, 'String': 10, 'to': 54, '.': 45, 'text': 15, ',': 12, 'name': 11, 'Decl': 7, 'Entity': 6, 'internal': 5, 'Handler': 37, 'f': 35, 'null': 39, '!=': 38, 'if': 33, 'try': 31, 'throws': 27, 'augs': 25, 'Augmentations': 24, 'Text': 21, 'Normalized': 20, 'non': 19, 'XMLString': 14, 'void': 4, 'public': 3}
{'}\n': 34, ';': 33, ')': 18, '(': 25, '.': 22, '{': 19, 'credential': 17, '': 6, ',': 10, 'public': 0}
{'}\n': 44, ';': 24, ')': 5, 'pos': 9, '(': 4, '.': 16, '<': 10, 'if': 7, '{': 6, '': 1, 'public': 0}
{'}\n': 24, ';': 23, 'Func': 19, '{': 13, ')': 12, '(': 7}
{'}\n': 251, '}': 178, ';': 120, '=': 117, '.': 106, 'this': 105, '{': 82, 'Entries': 40, ')': 81, '<': 70, '': 31, 'public': 0}
{'}\n': 21, ';': 20, 'NUM': 15, '_': 14, '+': 17, ')': 6, '(': 5, 'Int': 12, 'next': 11, '.': 10, 'rand': 9, 'return': 8, '{': 7, 'roll1': 3, 'int': 2, 'static': 1, 'public': 0}
{'}\n': 149, ';': 40, 'return': 146, '}': 145, ')': 12, 'NUM': 33, '_': 32, '&': 138, '(': 25, ']': 3, 'j': 74, '=': 17, '{': 13, '++': 85, '<': 80, 'i': 56, 'int': 55, 'for': 53, '[': 2, 'byte': 1, 'new': 46, 'static': 0}
{'}\n': 148, ';': 102, ')': 46, '': 26, '(': 40, 'Border': 119, 'set': 108, 'SCROLLBAR_': 78, 'HORIZONTAL_': 97, '.': 75, 'Constants': 74, 'Pane': 51, 'Scroll': 72, 'NEEDED': 80, 'AS_': 79, 'VERTICAL_': 77, 'JScroll': 50, 'new': 54, '=': 53}
{'}\n': 47, ';': 35, '.': 16, 'marker': 9, ')': 11, 'NUM': 25, '_': 24, '(': 6, '': 13, 'int': 8, 'public': 3}
{'}\n': 144, ';': 137, ')': 136, ',': 46, '(': 103, '>': 34, '': 21, '<': 31, 'Deserializer': 30}
{'}\n': 41, ';': 40, ')': 16, 'stats': 15, ',': 7, 'INFINITY': 35, 'POSITIVE_': 34, '': 4, '.': 21, 'Double': 31, 'second': 10, 'first': 6, '(': 3, 'distance': 2, 'Math': 20, 'return': 18, '{': 17, 'Stats': 14, 'Performance': 13, 'Instance': 5, 'double': 1, 'public': 0}
{'}\n': 313, '}': 283, ';': 95, ')': 26, '(': 6, 'Exception': 307, '': 7, 'new': 303, '{': 113, '.': 63, 'Iter': 286, ',': 10, 'get': 107, '=': 49, 'if': 96, '>': 175, 'Statement': 169, '<': 167, 'Iteration': 166, 'subj': 9, 'throws': 27, 'Resource': 8}
{'}\n': 124, ';': 46, ')': 8, 'conn': 7, '(': 4, ',': 106, 'SCHEMA': 61, '': 5, '+': 59, 'STR': 58, '_': 57, 'execute': 54, '.': 41, 'stat': 38, 'Statement': 37, 'create': 42, '=': 39, '{': 12, 'SQLException': 11, 'throws': 9, 'Connection': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 153, ';': 64, ')': 24, ',': 143, 'Objects': 124, 'm': 26, '(': 8, '.': 116, 'Arrays': 115, '': 114, 'NUM': 47, '_': 46, '=': 29, 'Object': 27, '{': 25, 'void': 1}
{'}\n': 45, ';': 44, ')': 13, 'NUM': 32, '_': 31, '/': 30, '(': 7, '{': 14, 'percentile': 9, 'double': 2}
{'}\n': 40, ';': 32, ']': 18, 'NUM': 37, '_': 26, '[': 17, 'tokens': 19, 'return': 33, ')': 13, 'STR': 27, '(': 8, 'split': 24, '.': 23, 'Name': 5, 'db': 11, '=': 20, 'String': 3, '': 2, '{': 14, 'DBName': 7, 'From': 6, 'static': 1, 'public': 0}
{'}\n': 67, ';': 32, 'This': 5, 'use': 64, '.': 38, ')': 17, 'i': 20, '(': 25, 'At': 58, 'element': 57, 'symtab': 37, 'Entry': 53, 'Tab': 52, 'Sym': 24, '': 1, 'id': 12, 'return': 43, 'size': 39, '==': 36, 'if': 33, 'context': 16, ',': 13, 'Find': 23, '=': 21, 'int': 19, '{': 18, 'String': 2, 'Use': 4, 'public': 0}
{'}\n': 47, ';': 46, '-': 39, '.': 16, 's': 7, ',': 34, '(': 3, '{': 9, ')': 8, '': 4}
{'}\n': 44, ';': 43, ')': 8, 'NUM': 32, '_': 31, '+': 30, 'offset': 7, ',': 26, '(': 5, 'data': 23, 'Range': 21, 'Of': 20, 'copy': 19, '.': 18, 'Arrays': 17, '': 16, 'return': 10, '{': 9, 'int': 6, 'Data': 4, 'From': 3, 'private': 0}
{'}\n': 1547, ';': 162, ')': 47, 'Out': 168, 'Carry': 167, 'shifter': 52, ',': 7, 'Operand': 53, '(': 13, '>': 10, 'String': 6, '': 2, '<': 4, 'Pair': 3, 'new': 1528, 'return': 1527, 'Size': 482, 'byte': 652, 'Tmp4': 1402, 'Tmp3': 1361, '++': 478, 'Offset': 477, 'base': 476, 'Or': 1374, 'create': 473, '.': 155, 'Helpers': 471, 'Reil': 29, 'add': 467, 'instructions': 32, 'Tmp2': 1394, 'Tmp1': 704, 'tmp': 264, 'Condition': 657, 'is': 655, 'Word': 481, 'd': 480, 'Value1': 39, 'Node': 38, 'register': 37, 'Bsh': 1110, 'Sub': 1034, 'Set': 816, 'Var4': 863, 'Bisz': 763, 'NUM': 499, '_': 498, 'Of': 496, 'value': 495, 'And': 474, 'Zero': 656, 'Value2': 46, 'Variable': 158, 'Next': 157, 'get': 156, 'environment': 22, '=': 153, 'final': 14, '{': 48, 'Instruction': 30, 'List': 26, 'Environment': 21, 'ITranslation': 20, 'offset': 16, 'long': 15, 'Register': 12, 'static': 1, 'protected': 0}
{'}\n': 72, '_': 68, '}': 55, ';': 54, 'return': 52, '{': 21, ')': 17, '(': 8, 'equals': 46, '.': 45, 'if': 41, 'option': 16, 'String': 15, '': 14, 'static': 1}
{'}\n': 59, ';': 30, 'label': 33, 'return': 56, ')': 15, 'series': 14, ',': 12, 'dataset': 11, '(': 8, 'Array': 48, 'Item': 47, 'create': 46, 'Pattern': 44, 'format': 39, '.': 20, 'this': 41, 'Format': 37, 'Message': 36, '': 1, '=': 34, 'String': 5, 'STR': 28, '_': 27, 'Permitted': 23, 'Not': 22, 'null': 21, 'Checks': 19, 'Param': 18, '{': 16, 'int': 13, 'Label': 7, 'generate': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 58, ';': 49, ')': 25, '(': 4, '.': 52, 'return': 50, ',': 42, '=': 33, 'String': 6, '': 5, '{': 26, 'str': 11, 'private': 0}
{'}\n': 212, ';': 80, ')': 35, '(': 7, 'Size': 130, 'Preferred': 129, '': 86, '.': 88, 'new': 50, '{': 36}
{'}\n': 59, ';': 58, '.': 41, 'field': 14, ')': 16, '(': 34, 'Name': 33, '{': 17, '': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 12, '(': 3, 'Default': 24, 'get': 23, '.': 22, 'Locale': 21, '': 1, ',': 7, 'zone': 11, 'time': 6, 'this': 14, '{': 13, 'Zone': 10, 'Time': 9, 'Date': 5, 'public': 0}
{'}\n': 6, '{': 5, ')': 4, '(': 3, 'Util': 2, '': 1, 'private': 0}
{'}\n': 30, ';': 29, ')': 12, 'value': 11, '(': 5, 'String': 7, 'to': 23, '.': 22, '': 1, ',': 9, 'key': 8, 'Default': 4, 'with': 3, 'return': 14, '{': 13, 'B': 2, 'default': 0}
{'}\n': 121, ';': 43, 'value': 88, 'return': 34, '}': 44, ')': 24, 'index': 14, '(': 5, 'get': 38, '.': 37, 'Array': 10, 'json': 9, '=': 89, '{': 28, 'Null': 23, 'is': 53, '!': 95, 'if': 29, ',': 11, 'ARRAY': 80, 'FORMAT_': 79, 'VALUE_': 78, 'NULL_': 77, '': 7, 'US': 74, 'Locale': 71, 'format': 68, 'String': 66, 'JSONException': 27, 'new': 61, 'throw': 60, '&&': 49, 'not': 22, 'required': 18, 'throws': 25, 'boolean': 17, 'final': 6, 'int': 13, 'JSONArray': 8, 'read': 3, 'static': 1, 'public': 0}
{'}\n': 253, ';': 55, ')': 26, '': 6, '(': 5, 'Insn': 67, 'visit': 65, '.': 36, 'mv': 9, 'STR': 107, '_': 106, ',': 10, 'Method': 7, 'INVOKESTATIC': 154, '{': 27, 'Visitor': 8}
{'}\n': 258, '}': 70, ';': 24, ')': 12, '(': 28, '{': 17, '.': 149, 'STR': 88, '_': 40, '+': 200, 'Exception': 16, '': 14, 'new': 162, 'throw': 186, 'catch': 178, ',': 172, '=': 59, 'else': 71, 'data': 43, 'NUM': 41, '==': 38, 'if': 27, 'Buffer': 22, 'final': 1, 'Pdf': 4, 'throws': 13, 'File': 5, 'public': 0}
{'}\n': 90, ';': 89, ')': 20, ',': 84, '(': 4, 'main': 3, '{': 21, 'args': 14, ']': 8, '[': 7, 'String': 6, '': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 273, ';': 25, 'return': 168, '}': 171, '++': 43, 'Spins': 21, 'slot': 66, 'break': 214, '+=': 210, 'total': 20, '{': 11, ')': 10, 'FREE': 203, '': 3, ',': 19, '(': 13, 'Set': 97, 'And': 96, 'compare': 95, '.': 78, '&&': 33, 'STEP': 182, 'PER_': 181, 'SPINS_': 180, '>=': 178, 'if': 83, 'else': 172, 'found': 75, '_': 17, '==': 86, 'get': 79, '=': 16, 'Object': 64, ']': 71, 'index': 47, '[': 69, 'arena': 68, '>': 65, '<': 28, 'Reference': 61, 'Atomic': 60, 'MASK': 57, 'ARENA_': 30, '&': 54, 'step': 15, '+': 51, 'start': 9, 'int': 8, 'SPINS': 39, 'LENGTH': 31, 'NUM': 18, 'for': 12, 'E': 4}
{'}\n': 320, ';': 104, 'return': 317, '}': 315, ')': 70, '(': 57, 'next': 299, '.': 298, '': 295, '=': 109, ']': 24, '[': 23, 'd': 192, 'NUM': 121, '_': 120, 'int': 58, 'for': 105, '{': 71}
{'}\n': 88, ';': 25, 'NUM': 29, '_': 28, 'return': 84, '}': 82, '{': 14, ')': 13, 'STR': 76, '==': 74, 'i': 18, '(': 8, 'At': 67, 'char': 66, '.': 65, 's': 12, 'if': 57, '>': 27, '=': 19, 'int': 2, 'for': 15, 'Sequence': 11, 'Char': 10, '': 9, 'find': 3, 'static': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 17, ',': 27, 'req': 11, '(': 25, '{': 21, 'Request': 10, 'Query': 9, 'Solr': 8, '': 2, 'String': 3}
{'}\n': 339, ';': 308, ')': 142, 'NUM': 235, '_': 234, '{': 143, ']': 14, '[': 13, '=': 174, ',': 17, 'float': 10, 'void': 1}
{'}\n': 883, ';': 730, ')': 80, '(': 34, '.': 830, '}': 848, '_': 765, 's': 599, '{': 823, '<': 781, 'NUM': 766, '=': 600, 'String': 13, '': 12, 'new': 651, 'indent': 23, 'int': 41, 'public': 0}
{'}\n': 59, ';': 50, ')': 12, '(': 21, '.': 2, 'return': 51, ',': 38, 'Calendar': 27, 'Gregorian': 26, '': 5, 'YMD': 20, 'new': 18, '=': 17, 'ymd': 16, '{': 13, 'Date': 6, 'util': 3, 'java': 1, 'protected': 0}
{'}\n': 48, ';': 24, ')': 9, 'NUM': 41, '_': 40, ',': 35, 'array': 26, '(': 5, 'Of': 32, 'copy': 31, '.': 30, 'Arrays': 29, '': 6, '=': 27, '{': 10, 'obj': 8, 'K': 7, 'synchronized': 1, 'public': 0}
{'}\n': 357, ';': 49, 'return': 352, '}': 351, '_': 47, ')': 18, 'STR': 267, '(': 6, 'write': 174, ',': 10, 'indent': 12, 'Newline': 175, '{': 25, 'Prop': 91, 'RDFAttr': 90, 'Be': 89, 'can': 88, 'if': 86, 'next': 82, '.': 57, 'XMPNode': 8, '': 7, '=': 46, 'Next': 66, 'has': 65, 'Children': 59, 'iterate': 58, 'Iterator': 53, 'for': 50, 'BOOL': 48, 'boolean': 1, 'IOException': 24, 'throws': 19, 'int': 11, 'Compact': 3, 'serialize': 2, 'private': 0}
{'}\n': 50, ';': 49, ')': 20, ',': 11, 'Var': 15, 'query': 5, '(': 7, 'List': 40, 'as': 39, '.': 29, 'Arrays': 37, '': 2, 'network': 10, 'Query': 28, 'Util': 6, 'new': 26, 'return': 22, '{': 21, 'String': 13, 'BNetwork': 9, 'Table': 4, 'Utility': 3, 'default': 1, 'public': 0}
{'}\n': 116, ';': 115, ')': 56, 'score': 54, '(': 49, '.': 78, '': 20, '{': 57, 'public': 0}
{'}\n': 48, ';': 30, ')': 7, 'this': 44, '(': 6, 'Event': 42, 'Update': 41, 'Pending': 40, 'Has': 39, 'Source': 38, '': 1, 'new': 36, 'post': 34, '.': 14, 'Bus': 32, 'event': 31, 'NUM': 27, '_': 26, 'Offset': 23, 'By': 22, 'Image': 10, 'Get': 20, 'And': 19, 'Index': 18, 'add': 17, 'of': 15, 'Optional': 13, '=': 11, 'current': 9, '{': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 70, '}': 69, ';': 68, ')': 9, '(': 3, 'read': 27, '.': 51, '{': 13, 'stream': 17, '': 11, 'throws': 10}
{'}\n': 288, ';': 59, '}': 271, '{': 120, ')': 42, '==': 221, 'Activity': 15, '.': 88, '(': 48, 'List': 78, '++': 118, 'Index': 35, '<': 73, 'NUM': 58, '_': 57, '=': 56, 'int': 33, 'find': 7, 'private': 0}
{'}\n': 28, ';': 18, ')': 7, 'value': 6, '(': 4, 'write': 2, '.': 21, 'Types': 15, 'primitive': 19, 'Primitive': 14, 'Write': 13, 'check': 12, '{': 11, 'IOException': 10, '': 9, 'throws': 8, 'int': 5, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 5, '(': 4, 'Empty': 18, 'is': 17, '.': 16, 'pool': 8, 'null': 11, '{': 6}
{'}\n': 58, ';': 43, ')': 9, 'register': 13, '(': 5, 'Activity': 53, 'start': 52, 'CANCELED': 49, 'RESULT_': 48, '': 6, 'Result': 45, 'set': 44, 'welcome_link_url': 39, '.': 21, 'string': 37, 'R': 35, 'String': 32, 'get': 31, 'parse': 29, 'Uri': 27, ',': 25, 'VIEW': 24, 'ACTION_': 23, 'Intent': 12, 'new': 15, '=': 14, '{': 10, 'view': 8, 'View': 7, 'Click': 4, 'Register': 3, 'on': 2, 'void': 1, 'public': 0}
{'}\n': 37, ';': 36, '.': 29, '{': 11, ')': 10, 'subject': 9, 'String': 8, '': 7, '(': 6}
{'}\n': 53, ';': 23, ')': 10, '(': 6, 'trim': 4, '.': 16, 'line': 9, 'return': 46, '}': 45, 'idx': 13, ',': 41, 'NUM': 30, '_': 20, 'substring': 37, '=': 14, '{': 11, '-': 28, '!=': 27, 'if': 24, 'STR': 21, 'Of': 18, 'index': 17, 'int': 12, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 9, 'p2': 8, '-': 14, 'p1': 5, '(': 3, '*': 17, '{': 10, 'double': 1, ',': 6, 'public': 0}
{'}\n': 19, ';': 18, ')': 9, '(': 8, 'iterator': 7, '.': 14, 'List': 13, 'return': 11, '{': 10, 'Iterator': 2, '': 1, 'public': 0}
{'}\n': 55, ';': 24, ')': 23, '(': 21, 'Domains': 20, 'String': 10, '': 9, 'void': 1}
{'}\n': 193, ';': 192, ')': 111, '(': 93, '.': 126, '{': 112, '>': 59, 'IPoint': 51, '': 47, '<': 49}
{'}\n': 37, ';': 23, ')': 15, '(': 34, 'get': 32, 'Name': 28, 'test': 19, '.': 18, '=': 21, 'Class': 9, '{': 16, 'method': 14, 'Method': 13, '': 8, 'void': 1}
{'}\n': 20, ';': 19, ')': 4, ']': 17, 'NUM': 16, '_': 15, '[': 14, 'fields': 13, '(': 3, 'Long': 8, 'parse': 10, '.': 9, '': 7, 'return': 6, '{': 5, 'long': 1, 'public': 0}
{'}\n': 286, ';': 66, 'return': 276, '}': 274, 'BOOL': 215, '_': 214, '{': 96, ')': 48, 'Type': 199, '(': 7, 'From': 105, 'Assignable': 104, 'is': 103, '.': 60, 'if': 97, 'declared': 81, 'Class': 25, 'get': 61, '>': 28, '?': 27, '<': 26, '': 8, ',': 16}
{'}\n': 88, '}': 87, ';': 44, ')': 18, '{': 30, '(': 41, 'Writer': 62, '': 14, 'new': 59, '=': 35, 'IOException': 21, 'throws': 19, 'void': 2, 'private': 0}
{'}\n': 65, ';': 16, 'BOOL': 58, '_': 44, 'return': 56, '}': 60, ')': 5, 'Scroll': 3, 'new': 18, '(': 4, 'Stack': 12, 'set': 48, '{': 6, 'NUM': 45, '!=': 43, 'cur': 8, ',': 39, 'compare': 35, '.': 34, 'Float': 33, '': 32, 'if': 30, 'Bounded': 22, 'get': 11, '=': 10, 'float': 7, 'bound': 2, 'boolean': 1, 'public': 0}
{'}\n': 127, ')': 125, '(': 121, 'Voice': 116, '': 93, 'public': 0}
{'}\n': 177, ';': 38, 'NUM': 17, '_': 16, '+': 71, 'pos': 43, '=': 44, 'Size': 14, 'm': 13, 'value': 8, ']': 29, '[': 23, 'Values': 126, 'key': 5, 'Keys': 22, '}': 41, 'nvalues': 90, 'nkeys': 79, ')': 9, 'length': 55, '.': 54, ',': 6, '(': 3, 'arraycopy': 101, 'System': 99, '': 61, 'n': 59, 'new': 81, 'int': 4, 'Array': 62, 'Int': 66, 'ideal': 65, 'Utils': 63, '{': 10, '>=': 51, 'if': 11, 'return': 39, 'put': 32, '-': 26, '<=': 20, '&&': 18, '!=': 15, 'append': 2, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 13, 'cl': 12, '(': 7, '.': 18, 'Listeners': 17, 'Classifier': 5, '{': 14, 'Listener': 6, '': 8, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 32, ';': 31, ')': 5, '(': 4, 'read': 2, 'Float': 16, 'To': 20, 'Bits': 19, 'int': 18, '.': 8, '': 11, 'return': 14, '{': 13, 'IOException': 12, 'io': 9, 'java': 7, 'throws': 6, 'float': 1, 'public': 0}
{'}\n': 230, ';': 81, '_': 162, 'src': 17, ',': 14, 'file': 212, '(': 10, '.': 191, '{': 35, ')': 31, 'File': 40, 'dest': 21, '}': 148, 'e': 154, 'STR': 163, 'IOException': 34, '': 11, 'new': 158, 'throw': 157, 'Exception': 153, 'Argument': 152, 'catch': 149, 'Statuses': 45, 'To': 121, 'Path': 16, 'get': 47, '=': 46, 'try': 112, 'null': 110, '>': 29, 'Long': 89, 'String': 86, '<': 25, 'Map': 83, 'filter': 30, 'conf': 13, 'Recursive': 50, 'Status': 41, 'Set': 37, 'throws': 32, 'Filter': 28, 'Optional': 24, 'Configuration': 12, 'static': 1, 'public': 0}
{'}\n': 331, '}': 126, ';': 125, ')': 39, '_': 170, 'NUM': 319, '(': 4, 'List': 246, '.': 44, ',': 18, 'create': 137, 'Logical': 134, '': 5, 'bb': 12, 'i': 284, 'add': 271, 'exprs': 269, '{': 71, 'field': 262, '<': 261, '=': 202, 'for': 252, 'get': 45, 'Type': 216, 'final': 193, 'Row': 225, 'Data': 215, 'Rel': 214, 'Node': 24, 'Rex': 198, 'BOOL': 171, ':': 162, 'return': 124, 'is': 81, 'Sql': 6, 'convert': 2, 'void': 1, 'protected': 0}
{'}\n': 200, ';': 133, '_': 106, ')': 51, '(': 31, '.': 120, '=': 159, '{': 52, 'if': 136, '}': 135, 'Offset': 49, 'z': 56, 'NUM': 107, '': 67, 'void': 1, 'public': 0}
{'}\n': 92, '}': 91, ';': 73, ')': 39, 'Font': 51, '(': 15, 'set': 84, '.': 62, '{': 40, 'null': 79, '!=': 78, 'if': 74, 'STR': 71, '_': 70, ',': 67, 'this': 68, 'Pane': 66, 'option': 65, 'get': 63, 'Lookup': 61, 'Default': 60, '': 19, '=': 54, 'configure': 2, 'void': 1, 'private': 0}
{'}\n': 51, ';': 43, ')': 20, 'null': 48, '(': 9, 'filter': 45, 'return': 44, 'Set': 24, 'to': 38, '.': 32, 'Collectors': 36, '': 1, 'collect': 33, 'stream': 19, '=': 30, 'set': 29, '>': 6, 'T': 5, '<': 3, 'final': 10, '{': 21, 'extends': 15, '?': 14, 'Stream': 12, 'All': 8, 'Filterable': 2, 'default': 0}
{'}\n': 412, '}': 259, ';': 46, ')': 23, ',': 12, 'Width': 49, '(': 4, '_': 78, 'STYLE_': 98, '': 13, '.': 32, 'Constants': 95, 'mx': 30, 'style': 22, 'Utils': 31, '=': 29, 'DEFAULT_': 323, 'get': 33, '{': 24, 'else': 260, 'shadow': 256, 'Color': 26, 'pen': 27, 'Paint': 206, 'fill': 189, 'draw': 2, 'NUM': 79, 'SHAPE_': 115, 'equals': 109, 'shape': 84, 'if': 105, 'STR': 102, 'SHAPE': 99, 'String': 17, '>': 21, 'float': 47, 'Object': 20, '<': 15, 'Map': 14, 'void': 1, 'public': 0}
{'}\n': 326, ';': 75, '': 2, 'new': 158, 'return': 303, ')': 30, '.': 112, '(': 11, ',': 14, '=': 199, 'right': 219, 'Rect': 23, 'height': 148, 'crop': 24, 'NUM': 67, '_': 66, '{': 31}
{'}\n': 24, ';': 23, ')': 7, '(': 6, 'flush': 5, '.': 19, '{': 11, 'IOException': 10, '': 1, 'throws': 8, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 68, ';': 67, ')': 40, 'comp': 19, '(': 3, '.': 52, 'components': 42, 'if': 23, '': 10, 'public': 0}
{'}\n': 40, ';': 39, ')': 8, '*': 24, '(': 5, 'return': 10, '{': 9, 'lon': 7, 'double': 6, 'public': 0}
{'}\n': 243, ';': 242, ')': 65, '(': 40, 'get': 116, '.': 115, 'o': 54, '&&': 92, 'null': 91, '!=': 90, 'return': 69, '': 32}
{'}\n': 37, ';': 36, '}': 34, ')': 33, 'Number': 8, '(': 5, '': 20, '{': 13, 'register': 7, 'int': 6, 'public': 0}
{'}\n': 21, ';': 20, ')': 9, 'ID': 6, 'session': 7, '(': 3, '.': 14, 'Set': 13, 'Session': 5, 'remote': 11, '{': 10, '': 4, 'void': 1}
{'}\n': 47, ';': 45, ')': 33, '(': 31, 'return': 38, '{': 37, 'Dirty': 28, 'boolean': 12, 'public': 0}
{'}\n': 164, ';': 32, ')': 8, '(': 3, '.': 127, '': 108, 'new': 144, 'STR': 132, '_': 38, 'Instance': 129, 'get': 128, 'Digest': 126, 'Message': 125, '=': 37, 'md5': 122, ']': 6, '[': 5, 'i': 36, '}': 85, '^': 62, 'key': 7, 'byte': 4, 'opad': 67, 'ipad': 49, '{': 9, '++': 46, '<': 42, 'NUM': 39, 'int': 35, 'for': 33, 'public': 0}
{'}\n': 86, ';': 19, 'BOOL': 18, '_': 17, 'return': 16, '}': 81, ')': 8, 'strlen': 21, '(': 4, 'At': 72, 'char': 39, '.': 24, 'string': 7, '!=': 68, ']': 41, '+': 65, 'offset': 47, '[': 40, 'buffer': 42, 'if': 10, '{': 9, 'NUM': 57, '>=': 55, '--': 53, 'while': 51, '_offset': 49, '=': 22, 'int': 20, '_buffer': 44, '<': 32, '_length': 31, 'length': 25, 'null': 14, '==': 13, 'String': 6, '': 5, 'With': 3, 'boolean': 1, 'public': 0}
{'}\n': 166, '}': 56, ';': 45, 'length': 18, '+=': 47, 'Written': 52, 'Bytes': 4, 'total': 50, ')': 33, ',': 40, '(': 6, '.': 36, 'NUM': 127, '_': 126, 'buffer': 39, '{': 34, 'limit': 28, 'Buffer': 97, 'refresh': 96, 'bytes': 61, '=': 63, 'position': 30, '-=': 81, '-': 29, 'int': 17, 'final': 7, 'else': 57, '>=': 31, 'if': 26, 'value': 11, 'Raw': 3, 'write': 2, 'void': 1}
{'}\n': 26, ';': 25, ')': 10, '(': 5, 'Name': 21, 'get': 20, '.': 15, 'clz': 9, 'Classes': 14, 'src': 13, '{': 11, 'Class': 4, 'Soot': 7, '': 6, 'Src': 3, 'public': 0}
{'}\n': 252, ';': 236, ')': 76, 'tags': 60, '(': 43, '.': 79, '': 39, '=': 118, '>': 59, 'String': 55, ',': 56, '<': 53, 'Map': 52}
{'}\n': 94, ')': 15, 'row': 38, '(': 4, ';': 52, '=': 44, '{': 16, 'void': 1}
{'}\n': 85, '}': 74, ';': 38, ')': 10, '(': 5, 'Lock': 22, 'Read': 21, 'Destroy': 20, 'release': 77, '{': 15, 'finally': 75, 'Destroyed': 35, 'NUM': 25, '_': 24, 'acquire': 19, '!': 18, 'if': 16, 'Exception': 14, 'Interrupted': 13, '': 6, 'throws': 11, 'Object': 7, 'void': 0}
{'}\n': 375, ';': 61, 'return': 372, ')': 40, '(': 12, 'close': 368, '.': 131, 'cursor': 311, '}': 365, '': 2, '{': 41, 'COL_': 217, 'Schema': 214, '=': 52, 'Args': 90, 'selection': 64, 'Lat': 172, 'max': 26, 'Of': 153, 'value': 152, 'String': 63, 'min': 20, 'null': 81, '!=': 98, '&&': 105, 'if': 94, '>': 9, '<': 5, 'List': 4, 'Array': 3, 'new': 53, 'Record': 8, 'final': 1, 'Double': 19, ',': 16, 'session': 15, 'int': 14, 'load': 10, 'public': 0}
{'}\n': 44, ';': 43, ')': 15, '(': 7, '{': 16, 'Box': 4, 'Check': 3, '': 2, 'public': 0}
{'}\n': 113, ';': 106, 'Batch': 4, 'return': 108, '}': 107, ')': 25, '(': 28, 'get': 96, '.': 35, '=': 56, '': 29, 'long': 13}
{'}\n': 106, ';': 105, ')': 62, ',': 17, 'restarts': 37, '(': 11, 'empty': 94, '.': 84, 'Optional': 55, '': 2, 'Delay': 8, 'fixed': 32, 'of': 85, 'Age': 61, 'max': 60, 'description': 27, 'Name': 22, 'job': 15, 'Type': 16, 'Definition': 5, 'Job': 4, 'Default': 3, 'new': 65, 'return': 64, '{': 63, '>': 59, 'Duration': 31, '<': 56, 'final': 12, 'int': 36, 'String': 14, 'static': 1, 'public': 0}
{'}\n': 34, '}': 33, ';': 27, 'null': 31, 'return': 24, ':': 23, 'default': 28, 'MESSAGE': 26, '': 25, 'NUM': 22, '_': 2, 'case': 20, '{': 13, ')': 12, 'Id': 7, 'field': 10, '(': 8, 'switch': 14, 'int': 9, 'Thrift': 6, 'By': 5, 'find': 4, 'Fields': 3, 'static': 1, 'public': 0}
{'}\n': 44, ';': 28, ')': 11, ',': 8, 'val': 10, 'addr': 7, '(': 5, 'Byte': 33, 'By': 32, 'Long': 4, 'put': 3, 'else': 29, '.': 20, 'UNSAFE': 19, '': 15, 'UNALIGNED': 16, 'if': 13, '{': 12, 'long': 6, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 283, ';': 68, ')': 52, '(': 7, '': 36, '=': 75, 'STR': 115, '_': 114, ',': 113, 'input': 39, 'Reader': 71, 'create': 4, 'static': 1}
{'}\n': 48, ';': 47, ')': 30, 'null': 45, ',': 21, 'Alias': 29, 'cert': 28, 'doc': 20, '(': 11, 'XML': 10, 'sign': 9, 'return': 36, '{': 35, 'Exception': 34, 'XMLSignature': 33, '': 7, 'throws': 31, 'String': 27, '.': 2, 'lang': 24, 'java': 22, 'Document': 19, 'dom': 5, 'w3c': 3, 'org': 1, 'Element': 8, 'public': 0}
{'}\n': 286, ';': 88, 'return': 282, '}': 207, ')': 123, '(': 31, '.': 59, 'Instance': 181, 'new': 180, '': 24, 'Constructor': 136, 'get': 145, 'Class': 58, '=': 56, '>': 54, '?': 53, '<': 52, '_': 119, ']': 70, 'constructor': 96, '[': 69, '{': 49, 'public': 0}
{'}\n': 268, ';': 38, ')': 59, '(': 5, '': 1, 'new': 54, 'Hash': 182, 'm': 39, '=': 42, '.': 46, 'Id': 52, 'Sdf': 51, 'UNKNOWN': 48, 'Preread': 33, 'final': 6, 'public': 0}
{'}\n': 181, ';': 179, ')': 113, 'NUM': 165, '_': 164, ',': 135, '(': 98, 'Heat': 95, '': 101, 'return': 115, '{': 114, 'int': 35}
{'}\n': 140, ';': 104, ')': 13, '(': 8, '': 9, '.': 71, 'rep': 65, 'if': 15, '{': 14, 'public': 0}
{'}\n': 21, '{': 12, ')': 11, 'Listener': 4, 'Action': 3, '': 6, '(': 5, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 95, ';': 59, 'this': 93, 'return': 92, '}': 91, ')': 19, '(': 9, '.': 28, '=': 52, 'NUM': 36, '_': 35, 'count': 11, 'ingredients': 27, '': 1, '{': 20, 'rawdata': 18, 'int': 10, ',': 12, 'ingredient': 15, 'Material': 14, 'Ingredient': 8, 'Recipe': 6, 'Shapeless': 5, 'public': 3, 'Deprecated': 2, '@': 0}
{'}\n': 30, ';': 29, '.': 11, 'By': 10, ')': 5, '(': 4, '{': 6, '': 1}
{'}\n': 67, 'STR': 61, '_': 60, '{': 19, ')': 18, '(': 38, 'encoding': 17, 'if': 20, 'String': 11, '': 10, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 10, 'val': 9, '(': 6, 'BACKGROUND_': 14, '': 7, 'return': 12, '{': 11, 'String': 8, 'Like': 4, 'looks': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 119, ';': 44, ')': 43, '(': 10, '.': 47, 'process': 35, 'Stream': 62, 'Error': 61, 'redirect': 60, 'Builder': 34, 'Process': 33, '': 6, 'new': 38, '=': 37, '{': 31}
{'}\n': 43, ';': 42, ')': 11, '': 8, 'new': 27, '(': 4, 'meta': 13, '{': 12, 'Meta': 3, 'add': 2, 'void': 1, 'public': 0}
{'}\n': 280, ';': 33, ')': 13, 'Matches': 2, 'total': 35, ',': 9, 'matches': 44, '(': 5, '': 1, 'new': 24, 'return': 269, '}': 126, 'item': 101, 'Item': 49, 'copy': 195, 'add': 121, '.': 68, 'NUM': 21, '_': 20, '>=': 158, 'max': 11, '--': 156, 'if': 15, '++': 245, 'next': 105, 'iter': 51, '=': 37, '{': 14, 'Next': 94, 'has': 93, 'while': 89, 'else': 213, 'null': 46, 'i': 148, 'get': 204, 'set': 191, 'size': 132, 'int': 10, 'for': 145, 'remove': 165, '>': 63, 'contains': 114, '!': 111, 'Possible': 70, 'dups': 69, 'List': 43, 'Array': 42, '||': 66, 'tmpl': 8, 'Items': 54, 'matching': 53, 'Iter': 50, 'STR': 31, 'Exception': 28, 'Argument': 27, 'Illegal': 26, 'throw': 23, '<': 19, 'Template': 7, 'Do': 4, 'lookup': 3, 'private': 0}
{'}\n': 143, '}': 95, ';': 38, ')': 26, 'NUM': 139, '_': 35, '(': 12, '>': 7, 'History': 6, '': 2, '<': 4, 'List': 3, 'Array': 131, 'new': 129, 'return': 109, '{': 27, 'ex': 125, 'Exception': 124, 'Result': 113, 'No': 122, 'catch': 119, 'get': 112, '.': 60, 'query': 57, 'job': 20, ',': 17, 'STR': 36, 'Parameter': 101, 'set': 83, 'try': 96, 'Value': 90, 'int': 89, 'limit': 25, 'Results': 85, 'Max': 84, 'null': 33, '!=': 32, 'if': 74, 'class': 71, 'Query': 52, 'Named': 62, 'create': 61, 'em': 16, '=': 58, 'Typed': 51, 'Argument': 29, 'require': 28, 'Integer': 24, 'Big': 23, 'JPAEntity': 19, 'Manager': 15, 'Entity': 14, 'Job': 11, 'By': 10, 'find': 8, 'static': 1, 'public': 0}
{'}\n': 311, ';': 37, 'return': 35, '}': 38, ')': 28, 'ch': 98, '(': 5, 'Character': 12, '': 6, 'new': 172, '=': 43, 'Char': 15, 'Invalid': 14, 'ref': 13, 'continue': 164, '{': 34, 'ch2': 126, ',': 158, 'supplemental': 155, '.': 25, 'XMLChar': 111, 'Supplemental': 150, 'is': 3, '&&': 119, 'Surrogate': 115, 'Low': 140, 'if': 17, ']': 41, '++': 92, 'i': 67, '[': 40, 'dataarray': 42, 'char': 39, 'datalength': 53, '<': 75, 'High': 114, 'NUM': 31, '_': 30, '-': 103, 'while': 72, 'int': 52, 'else': 187, 'XML11': 82, 'XMLVersion11': 63, 'Is': 62, 'f': 61, 'length': 26, 'Array': 48, 'to': 46, 'chardata': 8, '==': 20, '||': 22, 'null': 21, 'String': 7, 'WFXMLChar': 4, 'protected': 0}
{'}\n': 310, '}': 202, ';': 46, ')': 23, 'data': 268, '(': 5, 'Priority': 15, 'get': 101, ',': 11, 'node': 88, 'add': 182, '.': 112, 'Nodes': 4, 'pending': 21, 'i': 228, 'Costs': 36, 'Trav': 35, 'Rem': 34, 'Est': 33, 'new': 8, 'Cost': 144, 'Remaining': 147, 'Expected': 279, 'set': 278, 'Data': 98, '=': 37, 'Node': 19, 'AStar': 96, '': 13, 'Updated': 57, 'Be': 56, 'To': 55, 'nodes': 54, '{': 24, '++': 245, 'size': 240, '<': 17, 'NUM': 231, '_': 230, 'int': 7, 'for': 204, 'remove': 219, ':': 209, '>': 20, 'if': 159, 'Index': 10, 'Landmark': 9, 'Travel': 148, 'estimate': 146, 'double': 139, 'Role': 117, 'pp': 116, 'Landmarks': 111, 'Process': 110, 'Pre': 109, 'role': 99, 'List': 27, 'Array': 40, 'Double': 30, 'Queue': 16, 'Router': 14, 'final': 6, 'Pending': 3, 'update': 2, 'void': 1}
{'}\n': 93, ';': 22, ')': 9, '(': 8, 'String': 12, 'to': 88, '.': 31, 'buff': 14, 'append': 32, 'STR': 46, '_': 45, 'NUM': 63, '': 1, 'new': 16, '=': 15, '{': 10}
{'}\n': 223, ';': 50, ')': 98, '(': 5, '.': 87, 'g': 9, ',': 10, 'NUM': 42, '_': 41, 'set': 135, '': 105, 'x': 29, 'height': 23, '=': 38, 'Offset': 30, 'int': 16, '/': 40, 'width': 17, 'void': 1, 'private': 0}
{'}\n': 63, ';': 26, ')': 12, 'str': 16, '(': 4, 'println': 58, '.': 20, 'writer': 56, '}': 55, ']': 10, 'i': 30, '[': 9, 'column': 11, '+': 49, 'STR': 48, '_': 32, '+=': 46, '{': 13, '++': 41, 'length': 39, '<': 36, 'NUM': 33, '=': 17, 'int': 29, 'for': 27, 'time': 6, 'String': 15, 'to': 21, 'Long': 19, '': 14, ',': 7, 'long': 5, 'Line': 3, 'write': 2, 'void': 1, 'public': 0}
{'}\n': 106, '}': 88, ';': 21, ')': 10, 'STR': 20, '_': 19, '(': 5, 'DSSException': 99, '': 14, 'new': 34, 'throw': 96, '{': 11, 'e': 93, 'Exception': 92, 'catch': 89, 'PEM': 4, 'start': 16, 'With': 77, 'starts': 76, '.': 44, 'Array': 63, 'return': 72, 'preamble': 32, 'String': 15, '=': 18, ',': 48, 'NUM': 27, ']': 31, 'Length': 24, 'header': 23, '[': 30, 'byte': 29, 'int': 22, 'try': 12, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 14, ';': 13, 'resource': 7, '=': 11, '_resource': 10, '{': 9, ')': 8, 'Object': 6, '': 1, '(': 4, 'Listener': 3, 'Close': 2, 'public': 0}
{'}\n': 49, ';': 35, 'this': 30, 'return': 46, '}': 36, 'routing': 7, '=': 33, '.': 21, '{': 13, 'else': 37, 'null': 18, ')': 12, 'NUM': 27, '_': 26, '==': 25, '(': 8, 'length': 22, '&&': 19, '!=': 17, 'if': 14, 'String': 10, '': 1, 'Request': 6, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 107, '}': 86, ';': 28, ')': 6, 'STR': 101, '_': 71, '(': 5, '': 8, 'new': 52, 'throw': 94, '{': 13, 'data': 50, 'return': 83, 'Length': 17, 'packet': 14, ',': 70, 'NUM': 72, 'Data': 67, 'get': 42, '.': 15, 'arraycopy': 62, 'System': 60, ']': 3, '[': 2, 'byte': 1, '=': 39, 'int': 36, 'receive': 4, 'connection': 29, 'SIZE': 26, 'DATAGRAM_': 25, 'DEFAULT_': 24, 'Connection': 21, 'Datagram': 20, 'set': 16, 'throws': 7, 'public': 0}
{'}\n': 109, ';': 32, 'Values': 18, 'new': 17, '=': 19, 'Att': 24, 'm_': 23, ')': 12, 'position': 11, '-': 92, 'length': 27, '.': 26, ',': 41, '(': 9, 'arraycopy': 36, 'System': 34, '': 1, 'NUM': 30, '_': 29, ']': 16, '[': 15, 'double': 14, '{': 13, 'int': 10, 'At': 8, 'Attribute': 7, 'force': 5, 'void': 4, 'protected': 3, 'Override': 2, '@': 0}
{'}\n': 32, ';': 31, ')': 10, '(': 6, 'Exception': 16, '': 7, 'new': 24, 'throw': 23, '{': 22, 'Key': 8, 'Invalid': 19, 'throws': 11, 'key': 9, 'engine': 4, 'protected': 0}
{'}\n': 30, ';': 25, 'instance': 20, ')': 12, 'STR': 23, '_': 22, '(': 19, '.': 16, '': 1, '{': 13}
{'}\n': 35, '}': 34, ';': 33, ')': 5, 'STR': 31, '_': 30, '(': 4, 'finer': 28, '.': 10, 'log': 9, '{': 6, 'FINER': 22, '': 14, 'Level': 19, 'Logger': 16, 'Platform': 15, 'Loggable': 12, 'is': 11, 'if': 7}
{'}\n': 580, ';': 377, 'return': 523, '}': 378, '{': 98, ')': 95, 'Exception': 385, 'Found': 384, 'Not': 383, 'Class': 3, '': 2, '(': 9, 'catch': 379, 'name': 18, 'load': 7, '.': 283, 'loader': 190, 'try': 273, 'Loader': 168, 'for': 109, 'String': 17, '>': 6, '?': 5, '<': 4, 'static': 1}
{'}\n': 319, ';': 40, 'modules': 62, 'return': 100, '}': 103, ')': 20, 'e': 301, '(': 14, 'Exception': 26, 'Data': 25, 'Load': 24, 'Couldnt': 23, '': 3, 'new': 64, 'throw': 304, '{': 27, 'SQLException': 300, 'final': 15, 'catch': 296, 'module': 291, 'add': 289, '.': 30, 'Count': 279, 'function': 278, ',': 36, 'Id': 158, 'Module': 9, 'raw': 253, '=': 63, '_': 37, 'int': 155, 'get': 163, 'Postgre': 81, 'STR': 38, 'Set': 128, 'result': 129, 'String': 106, 'read': 179, 'SQLHelpers': 82, 'name': 173, 'Int': 164, 'next': 149, 'while': 144, 'BOOL': 140, 'query': 107, 'Query': 135, 'execute': 134, 'connection': 87, 'Result': 127, 'try': 124, '+': 111, 'TABLE': 96, 'MODULES_': 95, 'Names': 91, 'CTable': 90, 'Table': 85, 'has': 84, '!': 79, 'if': 77, '<': 5, 'List': 4, 'Array': 66, '>': 10, 'Null': 33, 'Not': 32, 'check': 31, 'Preconditions': 29, 'throws': 21, 'provider': 19, 'SQLProvider': 18, 'Abstract': 17, 'Modules': 13, 'load': 11, 'INavi': 7, 'static': 1, 'public': 0}
{'}\n': 35, ';': 21, ')': 8, 'data': 18, '(': 2, 'write': 1, '.': 19, 'ios': 7, 'Tag': 23, 'length': 13, '+': 17, 'NUM': 16, '_': 15, '=': 14, '{': 12, 'IOException': 11, '': 3, 'throws': 9, 'Stream': 6, 'Output': 5, 'Image': 4, 'void': 0}
{'}\n': 173, ';': 56, 'return': 170, '}': 169, ')': 55, '(': 12, '.': 50, 'add': 137, 'nodes': 83, '{': 23, 'Length': 70, 'get': 51, '<': 4, 'i': 60, 'NUM': 63, '_': 62, '=': 33, 'int': 59, 'for': 57, 'List': 26, '>': 8, 'Array': 36, '': 2, 'new': 34, 'Node': 15, 'static': 1}
{'}\n': 41, ';': 27, '=': 16, 'Prefix': 9, 'name': 8, '.': 13, 'this': 12, '{': 11, ')': 10, 'String': 7, '': 1, '(': 5, 'Factory': 4, 'Thread': 3, 'Named': 2, 'public': 0}
{'}\n': 353, '}': 305, ';': 78, ')': 4, 'Data': 138, 'actual': 137, '(': 3, 'String': 332, 'to': 331, '.': 33, 'Arrays': 311, '': 7, '+': 327, 'STR': 20, '_': 19, 'expected': 93, 'fail': 323, '{': 5, ',': 21, 'equals': 313, '!': 309, 'if': 307, 'NUM': 51, '-': 170, ']': 136, '[': 135, 'byte': 134, 'new': 13, '=': 12, 'final': 6, 'decl': 11, 'Decode': 81, 'Encode': 80, 'assert': 79, 'Of': 126, 'value': 125, 'BOOL': 26, 'Enum': 32, 'Type': 31, 'Message': 10, 'Ganglia': 15, 'Metric': 91, 'IGanglia': 8, 'null': 83, 'GROUP_': 68, 'Attributes': 65, 'Map': 61, 'get': 60, 'Metrics': 58, 'Abstract': 57, 'Slope': 45, 'Metadata': 9, 'void': 1, 'public': 0}
{'}\n': 549, ';': 80, 'Fields': 96, 'n': 95, '.': 94, 'this': 93, 'null': 417, '=': 88, 'buffer': 539, '}': 517, 'Null': 415, 'Is': 424, 'new': 86, 'is': 414, ']': 85, '+': 510, '[': 84, '{': 65, ')': 42, 'NUM': 191, '_': 190, '+=': 470, 'i': 455, '<': 140, 'int': 102, '(': 33, 'for': 452, '*': 434, 'Rows': 433, 'boolean': 420, '!=': 416, 'if': 410, 'Nulls': 166, 'nulls': 331, ',': 189, 'arraycopy': 184, 'System': 182, '': 14, 'Data': 87, 'data': 188, 'String': 162, 'Class': 139, 'Types': 146, '>': 142, '?': 141, 'Lengths': 124, 'Offsets': 106, 'Object': 83, 'Exception': 48, 'Fits': 47}
{'}\n': 368, ';': 24, ')': 10, '_': 217, '(': 6, '.': 102, 'if': 98, '}': 336, '=': 19, '{': 220, 'b': 297, ':': 122, '': 2, 'for': 117, '[': 264, 'NUM': 218, '>': 4, '<': 1, 'new': 33, ',': 50, 'Block': 3, 'Map': 46, 'entry': 9, 'Deque': 0}
{'}\n': 59, ';': 43, ')': 10, 'Transaction': 3, '(': 4, '.': 46, 'server': 40, '{': 14, 'SIPServer': 6, '': 5, 'public': 0}
{'}\n': 46, '}': 28, ';': 14, ')': 7, '_': 11, ',': 40, '(': 4, '': 31, 'NUM': 23, '{': 8, 'int': 5}
{'}\n': 272, '}': 188, ';': 34, ')': 12, '(': 11, 'Map': 179, 'to': 178, '.': 21, 'Utils': 20, 'Property': 19, '': 14, 'Pipe': 9, 'On': 24, 'join': 170, ',': 42, 'TWO_': 204, 'Equals': 36, 'assert': 35, '{': 13, 'Failure': 193, 'Comparison': 192, 'catch': 189, 'ONE_': 28, 'try': 154, '_': 48, 'STR': 49, 'get': 45, 'Properties': 15, 'split': 22, '=': 17, 'Join': 5, 'And': 4, 'Split': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 185, ';': 31, ')': 7, '_': 100, '(': 6, 'get': 178, '.': 104, 'result': 41, 'assert': 97, '': 9, 'Equals': 98, 'size': 105, ',': 37, 'NUM': 101, 'new': 17, '=': 16, '>': 40, 'String': 36, '<': 34, 'Map': 33, 'Mapper': 14, 'Object': 13, '{': 11, 'Exception': 10, 'throws': 8, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 280, ';': 54, 'return': 277, 'ch': 268, '=': 26, 'STR': 81, '_': 34, 'NUM': 35, ')': 15, '(': 8, '{': 19, 'if': 76, 'else': 160, 'int': 20, 'IOException': 18, '': 17, 'throws': 16, 'parse': 6, 'protected': 0}
{'}\n': 40, ';': 22, ')': 4, '(': 3, '.': 18, 'Quality': 28, 'Connection': 27, 'Bandwidth': 26, 'Current': 25, 'm': 15, '}': 23, '{': 5, 'null': 12, '!=': 11, 'if': 6, 'public': 0}
{'}\n': 200, ';': 22, ')': 10, 'STR': 21, '_': 20, ',': 56, 'Xml': 18, 'Web': 24, 'src': 17, '(': 9, '.': 34, 'Utils': 156, '': 12, 'merge': 62, 'merger': 121, 'Merger': 120, 'new': 39, '=': 19, 'null': 57, 'Bytes': 50, 'get': 49, 'Stream': 44, 'Input': 43, 'Array': 42, 'Byte': 41, 'parse': 35, 'Io': 33, '+': 67, 'String': 16, '{': 14, 'Exception': 13, 'throws': 11, 'Document': 8, 'Empty': 7, 'Into': 6, 'Merge': 3, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 145, ';': 47, 'part': 109, 'return': 142, ')': 13, 'ENCODING': 138, 'WIKIPEDIA_': 137, '': 1, '(': 25, 'String': 134, 'to': 133, '.': 53, 'output': 66, 'Text': 129, 'set': 128, 'Action': 118, 'Diff': 2, 'Part': 3, 'new': 35, '=': 51, '}': 48, 'Byte': 62, 'read': 54, 'r': 52, 'write': 95, '{': 23, '++': 90, 'i': 80, 'l': 50, '<': 29, 'NUM': 31, '_': 30, 'int': 9, 'for': 77, 'Stream': 65, 'Output': 64, 'Array': 63, 'L': 12, 'Size_': 11, 'block': 10, '+': 42, 'STR': 41, 'Exception': 18, 'Decoding': 21, 'throw': 34, 'if': 24, ',': 19, 'Encoding': 17, 'Unsupported': 16, 'throws': 14, 'final': 8, 'decode': 4, 'private': 0}
{'}\n': 110, ';': 108, ')': 49, 'n': 104, '(': 8, 'remove': 4, '.': 85, 'list': 55, '{': 50, 'Node': 18, '': 17, 'void': 3}
{'}\n': 752, ';': 28, ')': 16, 'timer': 32, ',': 559, 'STR': 26, '_': 25, '(': 4, 'info': 23, '.': 22, 'logger': 21, 'mark': 736, 'Vocabulary': 725, 'get': 718, 'corpus': 67, '=': 33, 'vocabulary': 714, '}': 711, 'Offset': 442, 'tgt': 336, '++': 701, 'src': 287, 'Sentence': 506, 'to': 678, ']': 323, '[': 320, 'Bitext': 316, 'Length': 288, 'target': 608, 'sentence': 507, '+=': 653, 'source': 558, 'length': 598, 'e2f': 374, 'NUM': 445, 'arraycopy': 554, 'System': 552, '': 9, 'f2e': 325, '{': 20, 'Aligned': 505, 'for': 454, 'int': 286, 'new': 318, 'Sentences': 59, 'num': 58, '+': 293, 'Positions': 214, 'Target': 224, 'Source': 213, 'start': 38, 'Utils': 36, 'Timing': 35, 'Keeper': 31, 'Time': 30, 'Corpus': 3, 'load': 2, 'void': 1, 'private': 0}
{'}\n': 25, ';': 24, ')': 11, '(': 19, 'sqrt': 18, '.': 17, 'Math': 15, '': 14, 'return': 13, '{': 12, 'float': 6}
{'}\n': 60, '}': 40, ';': 39, ')': 13, '(': 20, '': 1, 'new': 44, '{': 31, 'else': 41, 'return': 32, 'STR': 28, '_': 27, '.': 23, 'Type': 12, 'content': 11, 'if': 19, 'String': 2, 'public': 0}
{'}\n': 260, ';': 62, 'return': 256, '}': 96, ')': 19, '(': 56, '.': 32, '': 148, 'length': 67, 'NUM': 61, '_': 60, '=': 25, 'int': 10, ']': 12, 'i': 58, '[': 11, '{': 20, '++': 70, '<': 64, 'for': 55}
{'}\n': 165, ';': 43, '(': 7, ')': 17, '.': 62, 'Volume': 4, 'Id': 86, 'vplex': 60, '=': 24, '': 8, '{': 18, ',': 12, 'private': 0}
{'}\n': 177, ';': 66, ')': 39, '(': 22, '.': 81, 'r': 46, 'Text': 15, 'get': 116, 'set': 82, 'public': 0}
{'}\n': 41, ';': 20, 'NUM': 32, '_': 31, '(': 5, '.': 25, 'return': 18, '}': 21, 'null': 15, '{': 10, ')': 9, '==': 14, 'value': 8, 'if': 11, 'Number': 7, '': 2, 'Double': 3, 'static': 1, 'public': 0}
{'}\n': 27, ';': 22, 'return': 24, 'size': 9, '{': 11, ')': 10, 'with': 4, '': 1, 'public': 0}
{'}\n': 39, ';': 38, ')': 12, 'request': 11, '(': 5, 'is': 2, '.': 20, 'Request': 10, '': 7, '{': 13, 'Servlet': 9, 'Http': 8, 'final': 6, 'boolean': 1, 'private': 0}
{'}\n': 64, ';': 63, ')': 31, 'Size': 30, 'buffer': 29, '(': 14, 'Buffer': 43, '': 1, '=': 39, '{': 35, 'public': 0}
{'}\n': 64, ';': 45, ')': 17, '(': 5, '.': 27, 'STR': 34, '_': 33, 'conversations': 16, 'Conversations': 4, 'void': 1}
{'}\n': 54, ';': 52, ')': 9, 'job': 8, '(': 4, 'm': 13, '{': 10, 'Runnable': 7, '': 6, 'Job': 3, 'void': 1, 'public': 0}
{'}\n': 209, '}': 126, ';': 124, ')': 22, '.': 37, 'PDEname': 180, 'm_cur': 146, 'Element': 3, 'Data': 42, 'Print': 41, '': 5, '(': 4, 'add': 149, 'PD': 147, '{': 32, 'TAG': 46, 'XML_': 45, 'equals': 38, 'Name': 12, 'q': 16, 'if': 33, 'else': 127, 'SAXException': 31, 'throws': 23, 'String': 6, ',': 8, 'local': 11, 'uri': 7, 'void': 1, 'public': 0}
{'}\n': 138, ';': 136, ')': 18, 'NUM': 47, '_': 46, '==': 27, '(': 4, 'length': 34, '.': 33, 'str': 7, '||': 30, '{': 19, 'String': 6, '': 5, 'public': 0}
{'}\n': 44, '}': 43, ';': 25, '=': 38, 'NUM': 34, '_': 33, 'Counter': 23, 'Cnonce': 22, 'm': 21, '{': 7, ')': 6, '(': 5, 'Nonce': 3, 'public': 0}
{'}\n': 447, ';': 50, 'BOOL': 445, '_': 196, '=': 34, 'm_busy': 442, '}': 71, ')': 12, '(': 7, '{': 13, 'FINISHED': 366, 'BATCH_': 365, '': 1, '.': 17, 'Event': 10, 'Instance': 6, '==': 22, 'Status': 19, 'get': 18, 'e': 11, '||': 352, 'null': 232, 'if': 14, 'STR': 247, '+': 245, 'Prefix': 242, 'Message': 98, 'status': 237, 'm_log': 230, '!=': 231, 'return': 199, 'ex': 78, 'String': 89, 'Exception': 77, 'catch': 72, 'Structure': 62, 'Instances': 57, 'AVAILABLE': 29, 'FORMAT_': 28, 'accept': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 125, '}': 124, ';': 38, ')': 10, 'Message': 121, 'error': 120, ',': 114, 'Client': 116, 'Pools': 113, '(': 4, 'Pool': 19, '.': 83, 'storage': 18, '>': 17, 'Storage': 75, '': 5, '<': 14, 'List': 13, '=': 21, 'URI': 16, '{': 11, 'match': 2, 'void': 1}
{'}\n': 154, ';': 50, ')': 14, '': 2, '.': 54, '(': 7, 'Decimal': 4, 'Big': 3, '}': 87, '+': 77, '_': 75, 'is': 55, 'if': 51, 'public': 0}
{'}\n': 22, ';': 21, ')': 6, '(': 5, 'get': 16, '.': 15, 'Editor': 14, 'History': 4, 'add': 2, '{': 7}
{'}\n': 198, ';': 47, 'return': 195, '}': 153, ')': 20, '(': 10, '.': 74, 'if': 169, '{': 21, 'else': 154, '_': 150, '=': 33, 'i': 111, 'files': 19, '>': 6, 'String': 30, '': 3, '<': 2, 'new': 34, 'List': 1}
{'}\n': 90, ';': 27, ')': 14, '(': 5, 'String': 3, 'to': 85, '.': 67, 'buffer': 19, 'return': 82, '}': 63, 'next': 48, 'append': 68, 'separator': 13, '{': 15, 'else': 64, 'BOOL': 32, '_': 31, '=': 20, 'first': 29, 'if': 34, 'self': 9, ':': 49, 'for': 45, 'STR': 43, 'null': 38, '==': 37, 'boolean': 28, 'Builder': 18, '': 2, 'new': 21, ',': 10, ']': 8, '[': 7, 'join': 4, 'static': 1, 'public': 0}
{'}\n': 30, ';': 29, '(': 6, '.': 14, 'Arrays': 19, '': 1, 'this': 13, '{': 12, ')': 11, 'fields': 10, 'String': 8, 'public': 0}
{'}\n': 24, ';': 18, 'stemmed': 11, '=': 16, 'Stemmed': 2, 'str': 14, 'orig': 7, 'Orig': 15, '{': 13, ')': 12, '': 1, ',': 8, 'String': 3, '(': 4, 'public': 0}
{'}\n': 147, '}': 146, ';': 34, 'null': 141, '=': 38, ']': 92, '[': 90, 'Heads': 136, 'log': 83, 'List': 58, 'Stream': 4, ')': 25, '': 1, 'NUM': 113, '_': 31, 'int': 74, 'size': 75, 'Log': 2, 'new': 86, '(': 6, '.': 28, 'get': 67, '>': 64, '<': 59, 'Loader': 22, 'properties': 23, 'req': 10, 'request': 37, 'this': 35, 'STR': 32, 'trace': 29, 'logger': 27, '{': 26, 'Properties': 21, 'Svc': 20, ',': 17, 'Request': 9, 'Merger': 5, 'public': 0}
{'}\n': 106, ';': 21, 'return': 102, ')': 13, '(': 7, 'to': 96, '.': 60, '=': 33, '_': 46, 'ciphers': 12, 'i': 65, '{': 14, 'NUM': 47, 'int': 43, 'null': 20, 'String': 3, '': 2, 'Suites': 6, 'Cipher': 5, 'static': 1, 'public': 0}
{'}\n': 54, ';': 48, '=': 24, ')': 13, '(': 5, 'Case': 44, 'Lower': 43, 'to': 42, '.': 41, 'extension': 40, '{': 14, 'String': 7, '': 1, ',': 9, 'Filter': 4, 'File': 3, 'public': 0}
{'}\n': 53, ';': 52, ')': 11, 'NUM': 32, '_': 20, '(': 6, 'At': 45, 'char': 44, '.': 16, 'arg': 10, '&&': 23, '>': 30, 'STR': 21, 'With': 18, 'starts': 17, 'return': 13, '{': 12, 'String': 9, '': 8, 'is': 3, 'boolean': 2, 'private': 0}
{'}\n': 121, ';': 30, ')': 16, '(': 6, 'Child': 26, 'remove': 4, '.': 24, 'node': 9, '': 7, 'i': 34, 'item': 58, '=': 22, 'Node': 8, '{': 17, 'int': 33, 'for': 31, 'Nodes': 27, 'get': 25, 'List': 20, 'Children': 5}
{'}\n': 42, ';': 27, 'result': 23, 'return': 39, ')': 33, '(': 5, 'BOOL': 26, '_': 25, '=': 24, '{': 10, 'Valid': 3, 'is': 2, 'boolean': 1}
{'}\n': 55, ';': 54, ')': 16, '(': 5, '.': 48, 'columns': 27, '{': 20, 'public': 0}
{'}\n': 61, ';': 59, ')': 16, '.': 51, 'writer': 25, 'line': 46, '(': 43, '{': 20, 'IOException': 19, '': 8, 'throws': 17, ',': 12, 'write': 3, 'void': 2, 'static': 1}
{'}\n': 33, ';': 32, 'timestamp': 12, ')': 21, '': 8}
{'}\n': 1867, ';': 91, 'return': 1596, '}': 1517, ')': 76, 'EMPTY': 1321, '': 18, '.': 96, 'Piece': 466, ',': 1450, '(': 12, 'Obj': 1368, 'Move': 23, 'get': 1183, 'add': 1364, 'List': 20, 'move': 25, '{': 77, 'else': 1659, '=': 80, '==': 1316, 'if': 1242, 'wtm': 125, '!=': 1571, 'White': 1567, 'is': 1566, 'sq': 79, 'pos': 39, 'int': 46, 'NUM': 1041, '_': 1040, '>': 24, 'WKING': 751, '<': 21, 'Array': 19, 'final': 1}
{'}\n': 145, '}': 118, ';': 46, ')': 27, 'e': 123, ',': 16, 'STR': 132, '_': 131, '(': 6, 'error': 129, '.': 11, 'LOG': 127, '': 7, '{': 28, 'IOException': 122, 'catch': 119, 'close': 114, 'pos': 85, 'write': 107, 'pis': 71, 'request': 15, 'Task': 24, 'Priority': 97, 'finish': 96, 'Stream': 70, 'Output': 83, 'Piped': 68, 'new': 34, '=': 33, 'Input': 69, 'try': 65, 'else': 63, 'null': 55, '!=': 54, 'bucket': 53, 'if': 47, 'Network': 19, 'transport': 20, 'Static': 3, 'ts': 26, 'Statistics': 25, 'Transport': 18, 'Request': 14, 'handle': 2, 'void': 1, 'private': 0}
{'}\n': 68, '}': 26, ';': 25, ')': 9, 'room': 8, '(': 5, 'Room': 4, '{': 10, '.': 16, 'rooms': 39, 'if': 11, 'Case': 33, 'Lower': 32, 'to': 31, '=': 28, 'return': 24, 'Stream': 18, 'validate': 17, 'Helper': 15, '': 6, '!': 13, 'String': 7, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 66, '}': 60, ';': 15, ')': 9, 'selection': 26, ',': 56, 'Selection': 19, 'old': 18, '(': 4, 'Changed': 52, 'fire': 50, '{': 10, 'rv': 30, 'if': 45, 'BOOL': 14, '_': 13, '=': 12, 'adjusting': 11, 'elements': 8, 'All': 3, '.': 33, 'boolean': 29, 'Set': 17, 'Hash': 23, '': 6, 'new': 21, 'Collection': 7, 'final': 5, 'void': 1, 'public': 0}
{'}\n': 56, ';': 55, ')': 23, '(': 4, '.': 49, '': 14, 'feature': 6, '{': 8, 'int': 5, 'public': 0}
{'}\n': 51, ';': 31, 'set': 22, ':': 48, ')': 14, '(': 9, 'Set': 2, 'empty': 44, '>': 6, 'Integer': 5, '': 1, '<': 3, '.': 25, 'Collections': 38, '?': 36, 'null': 35, '==': 34, 'return': 32, 'Id': 13, 'node': 12, 'get': 26, '=': 23, '{': 15, 'UUID': 11, 'Partitions': 8, 'public': 0}
{'}\n': 34, ';': 30, 'this': 32, 'return': 31, ')': 20, ',': 12, 'offset': 11, '(': 9, 'insert': 8, '.': 2, 'internal': 22, '{': 21, '': 5, 'lang': 3, 'java': 1, 'int': 10, 'Buffer': 7, 'String': 6, 'public': 0}
{'}\n': 21, ';': 17, 'return': 18, 'Url': 8, 'image': 7, 'Image': 12, '{': 10, ')': 9, 'String': 6, '': 1, '(': 4}
{'}\n': 119, ';': 27, 'pt': 95, '(': 4, '.': 46, ')': 60, 'NUM': 68, '_': 67, 'size': 58, 'get': 47, '': 28, 'private': 0}
{'}\n': 75, ';': 29, ')': 28, ',': 10, '.': 40, 'new': 62, '(': 6, 'Line': 4, 'get': 41, 'Bidi': 31, '=': 34, '': 1, '_': 26, 'create': 3, 'public': 0}
{'}\n': 118, ';': 60, ')': 37, '(': 25, '.': 80, '{': 70, '': 16, 'new': 46, '=': 45, 'public': 0}
{'}\n': 187, ';': 30, 'return': 184, 'NUM': 65, '_': 64, ']': 4, '[': 3, 'double': 2, 'new': 157, '=': 71, '}': 149, '-': 42, 'i': 89, ')': 83, '++': 82, '<': 76, '(': 68, 'for': 67, 'int': 9, 'static': 1, 'public': 0}
{'}\n': 341, ';': 42, 'BOOL': 339, '_': 166, 'return': 303, '(': 21, '.': 112, '': 43, ')': 38, 'NUM': 167, 'Int': 164, 'get': 163, 'rs': 138, 'next': 151, 'Query': 143, 'execute': 142, 'pstmt': 108, '=': 60, 'null': 118, ',': 117, 'sql': 116, 'Statement': 114, 'prepare': 113, 'DB': 111, '{': 107, 'try': 106, 'Category_': 33, 'Product_': 16, 'M_': 15, 'public': 0}
{'}\n': 145, ';': 31, 'locker': 15, '=': 92, '.': 21, 'this': 139, ')': 16, 'model': 121, '(': 6, 'Model': 125, 'set': 39, 'table': 37, 'Generator': 9, 'dataset': 10, '': 1, 'new': 48, 'header': 91, 'Header': 90, 'Table': 4, 'GUIUtilities': 112, 'BOOL': 63, '_': 28, 'Allowed': 60, 'Reordering': 104, 'get': 95, 'JTable': 89, 'Selection': 59, 'Row': 69, 'Column': 58, 'Renderer': 41, ',': 12, 'class': 46, 'JLabel': 44, 'Default': 40, 'Components': 33, 'init': 32, 'STR': 29, 'Null': 23, 'not': 22, 'Checking': 20, 'Argument': 19, '{': 17, 'Locker': 14, 'Dataset': 8, 'Stats': 3, 'All': 2, 'public': 0}
{'}\n': 240, '}': 96, ';': 81, '{': 55, ')': 13, 't': 233, 'Throwable': 232, '': 4, '(': 3, 'catch': 97, 'close': 224, '.': 223, 'Stream': 76, 'try': 82, 'null': 80, '!=': 215, 'if': 211, 'finally': 209, 'e': 101, 'throw': 104, 'Exception': 18, 'FTPAborted': 43, 'Transfer': 10, 'FTPData': 9, 'FTPException': 35, 'Reply': 31, 'FTPIllegal': 30, 'IOException': 27, 'State': 17, 'Illegal': 16, 'listener': 12, ',': 7, 'Name': 122, 'new': 87, 'File': 5, '=': 79, 'Found': 23, 'Not': 22, 'throws': 14, 'Listener': 11, 'void': 1, 'public': 0}
{'}\n': 26, ';': 25, 'NUM': 24, '_': 23, '-': 22, '!=': 21, ')': 10, '(': 6, 'Of': 16, 'index': 15, 'return': 12, '{': 11, 'name': 9, 'String': 8, '': 7, 'boolean': 2, 'public': 0}
{'}\n': 49, ';': 33, ')': 8, '(': 46, '{': 9, '': 1, 'public': 0}
{'}\n': 115, ';': 18, '}': 75, ')': 28, '(': 26, 'Trace': 90, 'Stack': 89, 'print': 88, '.': 33, 'e': 83, '{': 45, 'IOException': 98, '': 8, 'catch': 76, 'Exception': 82, 'Found': 81, 'Not': 80, 'File': 20, 'load': 58, 'new': 23, '=': 22, 'try': 46, 'Read': 41, 'can': 40, 'file': 21, '&&': 37, 'exists': 34, 'if': 30, 'Properties': 14}
{'}\n': 86, ';': 54, 'writer': 9, '(': 5, 'to': 3, '.': 30, '': 6, ')': 18, 'write': 42, '_': 35, '{': 19, 'Writer': 8, 'String': 7, 'void': 2}
{'}\n': 15, ';': 14, ')': 6, '(': 5, 'clear': 11, '.': 10, 'Listeners': 4, '{': 7, 'remove': 2, 'void': 1}
{'}\n': 20, ';': 19, ')': 10, 'g': 9, '(': 5, 'Element': 15, 'add': 2, '.': 13, 'generic': 12, '{': 11, 'Attr': 4, 'Generic': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 444, ';': 66, ')': 42, '(': 14, '.': 147, 'Event': 49, '{': 43, '++': 359, '=': 54, '': 28, '}': 244, 'add': 219, 'get': 148, '<': 46, '>': 50, 'List': 45, 'Linked': 57, 'new': 55, 'Events': 13, 'To': 11}
{'}\n': 28, ';': 27, ')': 23, 'uuid': 7, '(': 4, '.': 18, '': 5, 'UUID': 3}
{'}\n': 30, ';': 29, ')': 13, 'channel': 12, '(': 7, '.': 22, 'Channels': 21, '{': 17, '': 8}
{'}\n': 183, ';': 181, ')': 19, '(': 17, '.': 173, 'infos': 70, '{': 20, 'public': 0}
{'}\n': 43, ';': 30, ')': 14, '(': 4, 'p_stream': 13, 'Object': 3, 'default': 25, '.': 6, '{': 22, 'throws': 15, 'Stream': 12, '': 9, 'io': 7, 'java': 5, 'void': 1, 'private': 0}
{'}\n': 32, ';': 31, 'value': 12, '(': 5, '{': 14, ')': 13, '': 1, ',': 9, 'name': 8, 'String': 7, 'Header': 4, 'add': 3, 'public': 0}
{'}\n': 39, ';': 38, ')': 8, 'NUM': 31, '_': 30, '(': 5, '{': 9, 'x': 7, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 63, ';': 46, ')': 28, 'name': 7, '(': 4, '.': 40, 'm_': 38, 'Element': 42, 'Model': 39, '{': 29, 'Buffer': 12, 'String': 6, '': 5, 'Result': 3, 'void': 1, 'public': 0}
{'}\n': 56, ';': 15, ')': 5, 'BOOL': 31, '_': 30, '(': 4, 'Enabled': 28, 'set': 27, '.': 48, '{': 6, 'void': 1, 'private': 0}
{'}\n': 454, ';': 46, ')': 19, 'res': 26, '(': 9, '}': 332, '.': 285, 'Math': 256, '': 255, '=': 27, ']': 4, 'i': 50, '[': 3, '{': 20, '++': 62, '<': 56, 'NUM': 53, '_': 52, 'int': 49, 'for': 47, 'double': 21, 'new': 28}
{'}\n': 65, ';': 41, ')': 24, '(': 7, 'Components': 61, 'init': 60, 'Config': 20, 'Quality': 19, 'password': 21, '=': 46, '.': 32, 'this': 42, 'Alias': 15, 'entry': 14, 'MODAL': 39, 'DOCUMENT_': 38, '': 1, 'Type': 35, 'Modality': 34, 'Dialog': 31, ',': 11, 'parent': 10, 'super': 26, '{': 25, 'Password': 18, 'String': 13, 'JFrame': 9, 'Key': 4, 'DExport': 2, 'public': 0}
{'}\n': 23, ';': 22, ')': 10, '': 1, ',': 17, 'Expression': 9, 'sql': 8, '(': 14, '{': 11, 'String': 7, 'public': 0}
{'}\n': 298, ';': 42, ')': 27, 'm': 29, '(': 34, '.': 20, 'NUM': 242, '_': 133, '=': 80, 'Scroll': 110, 'Fast': 109, '}': 104, '/': 269, '{': 74, '++': 250, 'num': 226, 'int': 7, 'Item': 218, '': 16, 'Section': 111, 'section': 123, 'State': 100, 'if': 65, 'Apps': 18, ',': 15, 'void': 1, 'private': 0}
{'}\n': 36, ';': 35, '.': 18, 'this': 21, '*': 25, 'cos': 19, 'Math': 17, '': 1, ')': 9, '(': 12, '{': 10}
{'}\n': 198, '}': 187, ';': 53, ')': 34, '(': 9, '.': 46, 'NUM': 177, '_': 176, 'if': 150, '{': 38, '==': 153, 'for': 133, '': 2, '=': 43, '>': 4, '<': 1, 'new': 47, 'File': 40, 'tmp': 41, 'Stream': 59, 'Output': 58, 'Folder': 45, 'throws': 35, ',': 18, 'T': 3, 'Test': 7, 'private': 0}
{'}\n': 79, ';': 78, ')': 13, '(': 5, 'Instance': 36, 'get': 35, '.': 34, 'Calendar': 33, '': 1, '{': 14, 'String': 2, 'public': 0}
{'}\n': 179, ';': 52, 'Dir': 28, 'cache': 92, 'return': 152, '}': 151, ')': 19, '(': 7, '.': 31, 'if': 101, '': 2, 'new': 74, 'File': 3, 'context': 10, 'Cache': 34, 'get': 32, '=': 29, '{': 23, 'Context': 9, 'create': 4, 'static': 1, 'private': 0}
{'}\n': 152, ';': 35, ')': 13, '(': 12, 'elements': 148, '.': 38, 'Vector': 16, 'new': 21, 'return': 144, 'STR': 47, '_': 32, ',': 51, 'NUM': 33, '+': 48, 'Option': 8, '': 1, 'Element': 40, 'add': 39, '>': 9, '<': 6, '=': 23, '{': 14, 'Options': 11, 'list': 10, 'Enumeration': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 76, ';': 32, ')': 13, 'Index': 7, 'Set': 11, 'data': 10, ',': 8, 'e': 51, '(': 4, 'Entry': 3, 'remove': 2, 'return': 29, 'x': 6, 'XIndex': 59, 'For': 58, 'get': 42, '.': 24, '=': 37, '': 33, 'Sets': 23, 'Data': 22, 'm': 21, 'T': 34, 'BOOL': 31, '_': 30, 'size': 25, '>=': 20, 'if': 15, '{': 14, 'int': 5, 'boolean': 1, 'public': 0}
{'}\n': 31, ';': 30, ')': 15, 'mode': 14, '(': 5, 'void': 1}
{'}\n': 60, '}': 35, ';': 34, ')': 19, '(': 4, 'Message': 54, 'get': 53, '.': 30, 'e': 41, '+': 50, 'STR': 49, '_': 48, ',': 11, 'log': 18, 'warn': 44, '{': 20, 'Exception': 40, '': 6, 'catch': 36, 'close': 3, 'rsrc': 10, 'try': 27, 'null': 25, '!=': 24, 'if': 21, 'Logger': 17, 'Ignite': 16, 'Nullable': 7, '@': 5, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 95, ';': 54, ')': 14, 'NUM': 21, '_': 20, ',': 11, '(': 8, 'Point': 85, '': 1, 'new': 30, 'sm': 59, 'Raster': 3, 'Interleaved': 78, 'return': 74, 'h': 13, 'w': 10, 'Model': 58, 'Sample': 57, 'Compatible': 5, 'create': 4, '.': 63, 'sample': 61, '=': 60, '}': 55, 'STR': 37, ':': 49, '?': 46, '<=': 19, '+': 38, 'Exception': 34, 'Format': 33, 'throw': 29, '{': 15, '||': 22, 'if': 16, 'int': 9, 'Writable': 2, 'public': 0}
{'}\n': 261, ';': 53, ')': 26, 'return': 246, '(': 9, 'String': 3, 'to': 238, '.': 32, 'Integer': 22, '': 2, 'add': 233, '>': 23, '<': 20, 'List': 19, 'new': 45, '=': 105, '}': 54, 'STR': 51, '_': 50, 'Exception': 48, 'Runtime': 47, 'throw': 44, '{': 27, 'NUM': 70, '-': 68, '==': 67, 'port': 58, 'if': 28, 'Ports': 25, 'free': 24, ':': 59, 'int': 57, 'for': 55, 'FOR_': 40, 'REQUIRED_': 39, 'PORTS_': 38, 'size': 33, ',': 13, 'runtime': 16, 'Config': 11, 'config': 12, 'Command': 7, ']': 5, '[': 4, 'static': 1, 'public': 0}
{'}\n': 25, ';': 21, 'this': 23, 'return': 22, ')': 13, 'doc': 12, '(': 7, '.': 16, 'documents': 15, '{': 14, 'Document': 6, 'Input': 10, 'Solr': 9, '': 1, 'add': 5, 'Request': 4, 'public': 0}
{'}\n': 45, ';': 44, ')': 14, ',': 10, '(': 6, 'Phase': 5, '.': 34, '{': 25, '': 2}
{'}\n': 9, '{': 8, ')': 7, '(': 6, 'Set': 5, 'Permission': 4, 'Simple': 2, '': 1, 'public': 0}
{'}\n': 66, ';': 47, 'y3': 25, '=': 54, ']': 53, 'NUM': 52, '_': 51, '[': 50, 'Pos': 49, 'current': 48, 'x3': 21, ')': 26, ',': 14, 'y': 17, 'x': 13, '(': 10, 'To': 36, 'Curve': 8, '': 1, 'new': 32, 'add': 6, '.': 29, 'elements': 28, '{': 27, 'float': 12, 'final': 4, 'Bezier': 7, 'void': 5, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 101, '}': 100, ';': 28, ')': 7, '': 9, '(': 6, '.': 16, '>': 34, 'String': 33, '<': 31, 'Set': 30, 'Tree': 50, 'new': 48, ',': 24, 'IDS': 46, 'BUCKETS_': 45, 'PREF_': 44, 'get': 39, 'prefs': 12, '=': 13, '_': 25, 'm': 14, 'Preferences': 11, 'Shared': 10, 'Prefs': 5, 'void': 1}
{'}\n': 83, ';': 52, ')': 12, 'offer': 11, '(': 8, 'add': 77, '.': 46, 'Offers': 36, 'accepted': 74, 'Next': 48, 'on': 47, '{': 13, 'Offer': 7, '': 1, 'accept': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 94, ';': 22, ')': 5, 'this': 67, '(': 4, 'inject': 2, 'Modules': 31, 'Scope': 30, 'activity': 29, 'Aditional': 81, 'With': 80, 'Graph': 73, 'build': 78, '.': 59, 'MVPApplication': 11, 'easy': 10, '=': 12, 'Module': 65, 'Activity': 64, '': 7, 'new': 47, 'add': 60, '>': 28, '<': 25, 'List': 24, 'Array': 49, ':': 46, 'get': 18, '?': 41, 'null': 39, '!=': 38, 'Object': 27, 'Application': 19, '{': 6, 'Dependencies': 3, 'void': 1, 'private': 0}
{'}\n': 99, ';': 66, '}': 79, 'return': 67, 'Writers': 50, 'current': 43, '++': 63, '{': 21, ')': 20, 'NUM': 41, '_': 40, '==': 39, '&&': 42, 'Readers': 44, '(': 18, 'size': 36, '.': 35, 'Locks': 34, 'writer': 33, 'Request': 3, 'write': 2, 'public': 0}
{'}\n': 58, ';': 18, 'value': 38, 'return': 55, ')': 6, 'STR': 16, '_': 15, '(': 5, 'Tag': 13, 'End': 48, 'expect': 11, 'Calendar': 22, 'Date': 41, 'parse': 40, '=': 28, 'long': 1, 'Instance': 33, 'get': 32, '.': 31, '': 8, 'null': 24, '==': 23, 'if': 19, 'Start': 12, '{': 10, 'IOException': 9, 'throws': 7, 'read': 2, 'public': 0}
{'}\n': 25, ';': 24, ')': 11, 'listener': 10, '(': 5, 'remove': 2, '.': 19, 'listeners': 18, '{': 12, 'Listener': 4, 'Selection': 3, '': 7, 'void': 1, 'public': 0}
{'}\n': 142, '}': 99, ';': 47, ')': 15, '(': 42, '!=': 85, 'Reader': 27, 'line': 70, '.': 79, '{': 88, 'null': 86, 'Line': 81, 'read': 80, '=': 30, 'while': 72, 'String': 69, '': 2, 'new': 38, 'Stream': 44, 'Buffered': 26, 'IOException': 18, 'throws': 16}
{'}\n': 107, ';': 98, 'return': 100, '}': 99, '{': 30, ')': 29, '(': 42, '.': 69, 'List': 18, 'if': 31, 'tpl': 24, '': 20, 'private': 0}
{'}\n': 105, ';': 31, 'BOOL': 97, '_': 96, 'return': 95, '}': 99, '{': 14, ')': 13, 'goal': 12, ',': 9, 'successor': 69, '(': 5, 'within': 3, 'if': 84, 'execute': 79, '.': 26, 'move': 59, 'copy': 73, 'n': 8, '=': 24, 'INode': 7, '': 6, 'next': 63, 'it': 40, 'IMove': 21, 'Next': 51, 'has': 50, 'iterator': 44, 'moves': 23, '>': 22, '<': 19, 'Iterator': 35, 'for': 32, 'Moves': 28, 'valid': 27, 'List': 18, 'Linked': 17, 'Double': 16, 'boolean': 2, 'static': 1, 'private': 0}
{'}\n': 128, ';': 47, ')': 22, '}': 121, '.': 87, '{': 85, '(': 5, 'null': 68, '==': 67, 'sections': 66, 'if': 64, '=': 53, ',': 10, '': 6, 'public': 0}
{'}\n': 189, '}': 22, ';': 21, ')': 8, 'e': 105, ',': 117, '(': 7, 'String': 121, 'to': 120, '.': 85, 'FINEST': 116, '': 1, 'Level': 113, 'log': 108, 'finer': 138, '{': 12, 'Exception': 104, 'catch': 99, 'Operation': 103, 'Unsupported': 102, 'BOOL': 28, '_': 27, '=': 26, 'Output': 44, 'Shutdown': 43, 'is': 42, 'shutdown': 86, '_s': 77, 'try': 82, 'null': 79, '!=': 78, 'if': 13, 'boolean': 41, 'Write': 6, 'Close': 16, '_is': 15, 'return': 20, 'IOException': 11, 'throws': 9, 'close': 5, 'void': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 251, ';': 93, ')': 63, '(': 61, '.': 66, '}': 198, 'Exception': 210, '': 120, 'new': 207, 'throw': 206, '{': 64, 'catch': 199, 'try': 142, 'Batch': 76, 'STR': 70, '_': 69, 'debug': 67, 'logger': 65, 'void': 1, 'protected': 0}
{'}\n': 42, '}': 41, ')': 5, 'e': 38, '(': 4, '{': 6, 'try': 7, 'public': 0}
{'}\n': 762, ';': 761, ')': 409, '(': 150, '.': 731, 'o': 406, ':': 526, 'STR': 512, '_': 511, '?': 483, 'null': 482, '==': 481, '{': 410, 'Object': 176, '': 51, 'String': 52}
{'}\n': 84, ';': 83, '.': 32, 'vector': 14, ')': 17, '_': 49, '(': 6, '': 36, 'public': 0}
{'}\n': 78, ';': 18, '}': 71, ')': 11, '(': 4, 'depth': 14, '.': 7, 'get': 49, 'node': 10, '=': 46, '{': 12, '++': 37, 'NUM': 17, '_': 16, 'Node': 9, '': 5}
{'}\n': 179, ';': 83, 'urls': 88, 'return': 176, '}': 175, ')': 25, ',': 164, ']': 5, '[': 4, '': 2, 'new': 90, '.': 95, '{': 26, '(': 9, 'Token': 134, 'next': 133, 'st': 94, 'Tokens': 97, 'More': 113, 'has': 112, 'NUM': 108, '_': 107, '=': 32, 'int': 104, 'count': 96, 'URL': 3, 'Tokenizer': 73, 'String': 11, 'path': 6, 'URLs': 8, 'To': 7, 'static': 1}
{'}\n': 124, ';': 35, 'output': 26, '}': 115, ')': 60, '(': 37, '{': 87, 'i': 39, 'length': 48, '.': 47, '<': 45, 'NUM': 42, '_': 41, '=': 27, 'int': 38, 'for': 36, '': 5, 'input': 16}
{'}\n': 43, '}': 42, ';': 20, ')': 6, 'evt': 11, '(': 5, 'connection': 29, '.': 35, 'listener': 27, '{': 7, 'Listeners': 31, 'Event': 10, ':': 28, 'Listener': 26, 'Connection': 3, '': 8, 'for': 21, 'this': 18, 'new': 13, '=': 12, 'fire': 2, 'void': 1, 'protected': 0}
{'}\n': 32, ';': 31, ')': 16, 'val': 15, ',': 10, 'off': 12, 'obj': 9, '(': 6, 'Volatile': 5, 'put': 3, '.': 20, 'UNSAFE': 19, '': 7, '{': 17, 'long': 11, 'Object': 8, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 108, ';': 107, ')': 29, '(': 89, '.': 76, 'Socket': 15, 'inet': 73, 'Address': 16, 'Inet': 14, '{': 34}
{'}\n': 31, ')': 14, '(': 17, '': 1, 'plot': 7, 'Plot': 6}
{'}\n': 98, ';': 72, ')': 47, '(': 39, 'set': 75, '.': 74, 'header': 52, 'add': 49, 'Header': 35}
{'}\n': 13, ';': 12, 'dimension': 4, '=': 10, '.': 8, 'this': 7, '{': 6, ')': 5, 'int': 3, '(': 2}
{'}\n': 208, ';': 87, ')': 35, 'element': 17, '(': 5, 'Child': 112, 'append': 111, '.': 64, 'Element': 4, 'Node': 118, 'Text': 117, 'create': 65, 'doc': 8, 'Name': 18, '=': 62, '': 6, '{': 36, ',': 9, 'String': 16, 'Document': 7, 'void': 2}
{'}\n': 73, ';': 62, 'value': 70, '}': 63, ')': 11, '_': 54, '+': 58, 'STR': 55, '(': 6, '.': 29, 'if': 16, '{': 12, 'String': 8, '': 7}
{'}\n': 61, ';': 60, ')': 29, '(': 25, 'Empty': 36, 'is': 19, '.': 34, 'components': 33, '{': 30, 'boolean': 9, 'public': 0}
{'}\n': 144, ';': 125, ')': 124, 'NUM': 102, '_': 101, 'Tests': 65, ',': 92, '(': 6, '.': 66, '': 7, '=': 57, 'void': 1}
{'}\n': 69, ';': 55, 'this': 67, 'return': 66, ')': 11, ',': 8, 'offset': 10, '(': 5, '.': 31, '+': 49, 'STR': 48, '_': 25, 'Exception': 19, 'Bounds': 18, 'Of': 17, 'Out': 16, 'Index': 15, 'String': 14, '': 1, 'new': 38, 'throw': 37, '{': 36, 'length': 32, '>': 29, '||': 27, 'NUM': 26, '<': 24, 'if': 21, 'int': 9, 'char': 6, 'insert': 4, 'public': 0}
{'}\n': 18, ';': 17, 'root': 15, '{': 10, ')': 9, '': 5, 'public': 0}
{'}\n': 325, '}': 29, ';': 28, ')': 17, 'w': 259, '(': 7, '{': 18, '!=': 49, 'if': 19, 'Path': 13, 'Tree': 12, 'Or': 11, 'element': 10, 'internal': 261, '=': 33, 'Widget': 258, '': 8, 'Expand': 176, 'To': 175, 'objects': 174, 'All': 213, 'add': 212, '.': 200, 'Expanded': 54, 'Be': 209, 'Empty': 202, 'is': 61, '!': 196, '>': 173, '<': 170, 'List': 169, 'Array': 186, 'new': 184, ',': 14, 'parent': 32, 'Object': 4, 'create': 178, 'Element': 36, 'Root': 62, '||': 60, 'State': 55, 'get': 34, '&&': 52, 'null': 50, 'Parent': 35, 'return': 27, 'Busy': 22, 'check': 21, 'level': 16, 'int': 15, 'expand': 2, 'void': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 7, 'value': 6, '(': 4, 'Of': 16, '.': 14, 'String': 13, '': 12, 'Cell': 3, 'append': 2, '{': 8, 'void': 1, 'public': 0}
{'}\n': 18, ';': 17, ')': 11, 'configuration': 10, '{': 12, 'Configuration': 9, '': 6, 'public': 0}
{'}\n': 157, ';': 82, ')': 43, 'height': 30, ',': 9, 'width': 20, '=': 61, 'max': 69, '}': 84, '(': 5, 'Height': 105, '.': 99, '{': 44, 'if': 45, 'Width': 70, 'int': 10, 'void': 1}
{'}\n': 46, ';': 45, ')': 24, 'option': 23, ',': 10, 'form': 20, '(': 5, 'String': 37, 'to': 36, '.': 12, 'src': 9, 'Base': 29, 'Normalizer': 16, '': 6, 'return': 26, '{': 25, 'int': 22, 'Form': 19, 'text': 13, 'java': 11, 'Sequence': 8, 'Char': 7, 'static': 1, 'public': 0}
{'}\n': 142, ';': 24, ')': 11, '(': 22, 'String': 5, 'to': 137, '.': 49, 'result': 16, 'return': 134, '}': 133, 'append': 50, ':': 47, 'default': 91, 'break': 56, 'STR': 53, '_': 52, 'case': 44, '{': 12, 'switch': 39, '': 4, 'new': 18, '=': 17}
{'}\n': 118, ';': 23, ')': 10, '(': 6, 'String': 3, 'to': 113, '.': 16, 'sb': 37, 'return': 31, 'last': 47, 'substring': 66, 's': 9, 'append': 62, '}': 97, 'NUM': 29, '_': 20, '+': 92, 'idx': 13, ',': 69, 'STR': 21, 'Of': 18, 'index': 17, '=': 14, '{': 11, '>=': 55, 'while': 52, 'int': 12, 'Builder': 36, '': 2, 'new': 39, '<': 27, 'if': 24, 'Som': 5, 'static': 1, 'public': 0}
{'': 4, 'Entity': 6, ',': 8, '(': 3, 'Async': 2}
{'}\n': 194, ';': 107, ')': 13, '(': 8, 'return': 169, 'read': 5, '.': 89, 'in': 12, 'new': 118, '=': 84, '': 2, 'length': 49, '{': 17, 'IOException': 16, 'throws': 14, 'Input': 11, 'Data': 10, 'static': 1}
{'}\n': 85, ';': 18, ')': 5, 'DANGLING_': 81, '': 7, '.': 26, 'Scope': 12, '(': 4, 'Top': 74, 'replace': 73, 'newline': 69, '}': 40, 'STR': 37, '_': 36, 'new': 56, 'throw': 55, '{': 9, 'OBJECT': 29, 'EMPTY_': 51, '!=': 45, 'context': 13, 'if': 19, 'else': 41, 'out': 32, 'NONEMPTY_': 28, '==': 22, 'peek': 15, '=': 14, 'throws': 6, 'before': 2, 'void': 1, 'private': 0}
{'}\n': 68, ';': 39, ')': 17, '(': 6, 'STR': 54, '_': 53, 'token': 10, ',': 12, '.': 26, '=': 23, 'String': 9, '': 1}
{'}\n': 130, ';': 24, ')': 10, '(': 4, '.': 17, '': 15, 'Math': 72, '=': 14, 'int': 5, 'color': 6, 'Color': 16, '{': 11, 'factor': 9, 'float': 8, ',': 7, 'public': 0}
{'}\n': 90, '}': 89, ';': 27, ')': 13, 'STR': 26, '_': 25, ':': 23, 'return': 24, 'case': 20, '{': 14, '(': 7, 'switch': 15, 'final': 8, 'String': 3, '': 2, 'static': 1}
{'}\n': 39, ';': 38, ')': 18, 'STR': 27, '_': 26, ',': 28, '(': 7, 'replace': 24, '.': 23, 'Name': 12, 'class': 11, 'return': 20, '{': 19, 'String': 2, '': 1, 'static': 0}
{'}\n': 27, ';': 26, ')': 13, ',': 19, 'pv': 8, '(': 4, 'Pv': 16, '{': 14, 'Var': 7, 'Process': 6, '': 5, 'void': 1}
{'}\n': 50, '}': 49, ';': 48, ')': 11, 'BADSCHEMA': 46, '': 7, '.': 25, 'XMPError': 43, ',': 41, 'STR': 40, '_': 30, '(': 6, 'XMPException': 14, 'new': 35, 'throw': 34, '{': 15, 'NUM': 31, '==': 20, 'length': 26, 'NS': 5, '||': 22, 'null': 21, 'if': 16, 'throws': 12, 'String': 8, 'assert': 3, 'void': 2, 'static': 1, 'private': 0}
{'}\n': 119, ';': 43, 'buf': 11, 'return': 35, '}': 44, ')': 26, ']': 15, 'i': 78, '[': 14, 'd': 16, '(': 7, 'format': 5, '.': 37, 'nf': 25, 'append': 38, 'sep': 20, '{': 27, '++': 90, 'length': 49, '<': 84, 'NUM': 52, '_': 40, '=': 79, 'int': 77, 'for': 75, '==': 31, 'if': 28, 'STR': 41, 'null': 32, 'Format': 24, 'Number': 23, '': 2, ',': 12, 'String': 3, 'Builder': 4, 'To': 6, 'static': 1, 'public': 0}
{'}\n': 105, ';': 73, ')': 9, '(': 4, '.': 17, 'List': 57, 'viewpoint': 42, '}': 74, 'NUM': 26, '_': 25, '-': 70, 'size': 59, 'Index': 43, '{': 10, 'public': 0}
{'}\n': 63, '}': 38, ';': 24, ')': 5, 'RED': 59, '': 9, '.': 18, 'Color': 56, '(': 4, 'set': 52, 'Field': 17, '{': 6, 'e': 46, 'Exception': 45, 'catch': 39, 'Text': 20, 'get': 19, 'input': 16, 'private': 0}
{'}\n': 19, ';': 18, ')': 9, 'v': 8, '(': 5, '.': 13, 'Views': 12, 'ignored': 11, '{': 10, 'View': 4, '': 6, 'Ignored': 3, 'void': 1, 'public': 0}
{'}\n': 132, '}': 102, ';': 22, 'BOOL': 100, '_': 40, 'return': 98, ')': 9, '(': 4, 'String': 24, 'to': 121, '.': 93, 'e': 107, ',': 17, 'STR': 41, 'd': 114, 'Log': 112, '': 5, '{': 10, 'IOException': 106, 'catch': 103, 'flush': 94, 'os': 8, 'Headers': 87, 'response': 86, 'Map': 84, 'write': 2, 'Ttl': 78, 'soft': 77, 'Long': 47, 'ttl': 69, 'Modified': 61, 'last': 60, 'Date': 52, 'server': 51, 'etag': 36, ':': 42, '?': 39, 'null': 38, '==': 37, 'key': 28, 'MAGIC': 20, 'CACHE_': 19, 'Int': 14, 'try': 11, 'Stream': 7, 'Output': 6, 'Header': 3, 'boolean': 1, 'public': 0}
{'}\n': 29, ';': 28, ')': 10, '(': 5, '.': 14, '': 6, 'get': 15, 'resource': 9, '{': 11, 'Resource': 8}
{'}\n': 28, ';': 27, 'section': 15, '(': 5, 'Section': 12, 'public': 0}
{'}\n': 110, ';': 41, 'File': 72, 'out': 71, 'return': 106, ')': 17, '(': 39, '{': 21, 'NUM': 91, '_': 90, '!=': 89, 'rc': 76, 'if': 86, 'callback': 83, ',': 82, 'cmd': 29, 'Sox': 79, 'exec': 78, '=': 30, 'int': 75, 'add': 44, '.': 43, 'Bin': 47, 'sox': 46, '>': 28, 'String': 2, '': 1, '<': 25, 'List': 24, 'Array': 23, 'new': 31, 'Exception': 20, 'throws': 18, 'public': 0}
{'}\n': 43, ';': 35, ')': 5, '(': 4, '.': 10, 'i_scroller': 37, '}': 36, 'this': 33, '+': 32, 'STR': 31, '_': 30, 'finer': 28, 'log': 9, '{': 6, 'FINER': 22, '': 14, 'Level': 19, 'Logger': 16, 'Platform': 15, 'Loggable': 12, 'is': 11, 'if': 7, 'Instance': 3, 'Scrolling': 2, 'void': 0}
{'}\n': 490, '}': 489, ';': 390, ')': 327, '(': 288, '.': 394, '{': 328, '': 295, 'if': 352, 'Steps': 54, 'void': 26}
{'}\n': 97, ';': 60, '.': 52, 'in1': 7, '=': 73, ')': 11, 'NUM': 56, '_': 55, 'in2': 10, '(': 3, '': 4, '{': 12, 'if': 13, ',': 8}
{'}\n': 37, ';': 36, ')': 12, 'msg': 11, ',': 25, 'HTML': 32, 'MIME_': 31, '': 2, '.': 22, 'HTTPD': 28, 'Nano': 27, 'OK': 24, 'Status': 21, '(': 8, 'Response': 3, 'Length': 6, 'Fixed': 5, 'new': 4, 'return': 14, '{': 13, 'String': 10, 'public': 0}
{'}\n': 69, ';': 46, ')': 8, '(': 7, '.': 15, 'STR': 44, '_': 43, ',': 23, 'FINE': 22, '': 1, 'Level': 19, 'log': 14, '{': 13, 'Exception': 12, 'XMLStream': 11, 'throws': 9, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 35, ';': 34, ')': 16, 'STR': 32, '_': 31, ',': 30, '(': 7, 'First': 25, 'replace': 24, '.': 23, 'url': 10, 'return': 18, '{': 17, 'String': 3, '': 2, 'static': 1, 'public': 0}
{'}\n': 34, ';': 33, ')': 13, 'z': 12, '*': 22, '+': 24, 'y': 9, 'x': 6, '(': 4, 'sqrt': 19, '.': 18, 'Math': 17, '': 16, 'return': 15, '{': 14, 'double': 2, ',': 7, 'static': 1, 'public': 0}
{'}\n': 268, ';': 61, ')': 33, '_': 211, ',': 165, '-': 171, 'NUM': 212, 'sin': 68, '*': 149, '(': 11, '': 41, 'Radians': 50, 'to': 49, '.': 43, 'Math': 42, '=': 40, 'double': 62, 'cos': 44}
{'}\n': 118, ';': 41, 'context': 45, '}': 74, ')': 20, '(': 15, 'Message': 94, 'get': 50, '.': 49, 'gse': 81, 'Exception': 80, 'State': 88, 'Illegal': 87, '': 10, 'new': 66, 'throw': 84, '{': 31, 'Security': 79, 'General': 78, 'catch': 75, 'Random': 69, 'Secure': 68, ',': 62, 'Managers': 64, '_trust': 63, 'null': 61, 'init': 59, 'STR': 54, '_': 53, 'Instance': 51, 'SSLContext': 11, '=': 46, 'try': 43, 'static': 1, 'private': 0}
{'}\n': 63, ';': 36, 'List': 2, 'return': 59, '}': 58, ')': 17, '(': 9, 'add': 49, '.': 48, '{': 18, ':': 42, 'value': 41, 'String': 5, '': 1, 'for': 37, '>': 15, '<': 3, 'Array': 30, 'new': 28, '=': 27, 'protected': 0}
{'}\n': 136, ';': 111, ')': 14, '(': 9, 'get': 47, '.': 46, 'widget': 12, '{': 15, '!=': 26, 'if': 16, '': 10, 'Widget': 6}
{'}\n': 105, ';': 104, ')': 49, 'atom': 33, '(': 6, '.': 70, '{': 50, 'Atom': 22, '': 7}
{'}\n': 41, ';': 40, ')': 14, 'Code': 13, 'Status': 12, 'expected': 11, ',': 8, '(': 4, 'Map': 32, 'empty': 31, '>': 30, 'String': 2, '': 1, '<': 24, '.': 23, 'Collections': 22, 'url': 7, 'return': 16, '{': 15, 'int': 10, 'final': 9, 'public': 0}
{'}\n': 285, '}': 284, ';': 88, '(': 4, 'if': 143, ')': 30, ',': 241, 'Sum': 84, '.': 196, 'Math': 191, '': 190, '=': 77, 'NUM': 66, '_': 65, '{': 31, 'Weights': 86, 'Of': 85, 'm_': 56, 'double': 72, 'void': 1}
{'}\n': 79, ';': 36, ')': 9, ',': 30, 'variable': 73, '(': 34, '': 1, 'new': 23, 'get': 60, '.': 44, '{': 10, ':': 42, 'Value': 40, 'for': 37, '>': 33, 'Double': 32, '<': 13, 'Map': 26, 'Hash': 25, '=': 22, 'Table': 6, 'Categorical': 5}
{'}\n': 57, ';': 25, 'sub': 18, 'return': 54, ')': 14, '_': 39, '+': 43, 'NUM': 40, '(': 5, '{': 15, 'String': 7, ',': 9, '': 6, 'public': 0}
{'}\n': 173, ';': 56, 'map': 10, 'return': 170, '}': 167, ')': 23, 'Name': 11, 'display': 139, ',': 162, '(': 15, 'put': 158, '.': 51, '{': 80, 'equals': 137, 'name': 135, '!': 134, 'if': 132, '=': 121, 'String': 118, '': 1, 'Service': 107, 'names': 22, 'for': 57, 'Set': 17, 'Display': 13, 'To': 12, 'Map': 2}
{'}\n': 20, ';': 19, ')': 9, '(': 8, 'Id': 16, 'get': 15, 'STR': 13, '_': 12, 'return': 11, '{': 10, 'String': 5, 'to': 6, '': 1, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 101, ';': 38, 'BOOL': 85, '_': 84, 'return': 91, '}': 88, '{': 20, 'else': 89, ')': 19, '(': 7, 'cancel': 82, '.': 57, 'Task': 25, 'Worker': 24, 'bitmap': 26, 'data': 11, 'equals': 72, 'Data': 52, '!': 68, '||': 67, 'null': 45, '==': 65, 'if': 39, 'm': 58, '=': 29, 'Object': 10, '': 9, 'final': 21, '!=': 44, 'View': 16, 'image': 17, 'Bitmap': 23, 'get': 30, 'Image': 15, ',': 12, 'Work': 6, 'Potential': 5, 'boolean': 3, 'static': 1, 'public': 0}
{'}\n': 26, ';': 25, ')': 13, ',': 9, '(': 5, 'Bitmap': 4, 'm': 15, '{': 14, '': 6, 'static': 1, 'public': 0}
{'}\n': 22, ';': 21, ')': 11, 'listener': 10, '(': 4, 'add': 2, '.': 16, 'Listeners': 15, '{': 12, 'Listener': 3, '': 5, 'void': 1, 'public': 0}
{'}\n': 154, '}': 23, ';': 22, 'av': 129, 'return': 19, '{': 9, ')': 5, 'NUM': 16, '_': 15, '-': 14, '!=': 13, 'pos': 12, '||': 141, '>': 138, '(': 4, 'if': 10, 'available': 131, '=': 52, 'int': 1, 'Separator': 124, 'find': 123, 'Read': 68, 'bytes': 67, '+=': 25, 'tail': 26, 'msg': 97, 'Exception': 112, 'Stream': 111, 'Malformed': 110, '': 7, 'new': 103, 'throw': 102, 'STR': 100, 'String': 96, 'final': 94, '==': 88, 'Size': 79, 'buf': 78, ',': 38, 'buffer': 37, 'read': 72, '.': 34, 'input': 70, 'for': 60, 'pad': 30, 'head': 28, 'arraycopy': 35, 'System': 33, 'total': 24, 'IOException': 8, 'throws': 6, 'Available': 3, 'make': 2, 'private': 0}
{'}\n': 156, ';': 73, '=': 118, 'type': 125, 'source': 12, ')': 51, '(': 4, 'super': 58, '{': 57, 'Stamp': 20, 'time': 19, 'long': 15, ',': 9, 'sequence': 16, 'Object': 11, '': 1, 'String': 6, 'Notification': 3, 'public': 0}
{'}\n': 26, ';': 25, ')': 15, 'host': 10, '(': 7, 'With': 21, 'starts': 20, '.': 19, 'domain': 14, '{': 16, 'String': 9, '': 8, ',': 11}
{'}\n': 171, ';': 64, 'return': 168, '}': 166, ')': 19, ']': 6, 'j': 90, '[': 5, 'i': 68, 'data': 17, '(': 66, '{': 20, '++': 79, '<': 74, 'NUM': 57, '_': 56, '=': 40, 'int': 67, 'for': 65, 'double': 12}
{'}\n': 991, ';': 512, ')': 66, 'STR': 980, '_': 979, '(': 19, 'Tag': 497, 'Close': 939, 'write': 2, '.': 445, 'writer': 49, ',': 576, '>': 586, '': 31, '<': 583, 'Default': 582, 'Attribute': 579, 'new': 577, 'Open': 447, '{': 93, 'void': 1}
{'}\n': 203, ';': 37, '_': 49, '': 87, '=': 85, 'm_': 19, ')': 9, '(': 8, 'new': 86, '.': 41, 'Chooser': 21, 'File': 20, 'BOOL': 50, 'Used': 47, 'Filter': 46, 'All': 44, 'Accept': 43, 'set': 42, '{': 10, 'void': 1}
{'}\n': 137, ';': 76, 'n': 100, 'return': 84, '+=': 131, 'next': 90, ')': 14, 'off': 10, ',': 8, 'cbuf': 5, '+': 46, '(': 3, 'Chars': 117, 'get': 116, '.': 32, 'len': 13, '-': 95, 'length': 33, 'min': 105, 'Math': 103, '': 16, '=': 101, 'int': 1, 'NUM': 25, '_': 24, '>=': 91, 'if': 19, '==': 80, 'Exception': 73, 'Bounds': 72, 'Of': 71, 'Out': 70, 'Index': 69, 'new': 67, 'throw': 66, '<': 23, '||': 27, '>': 30, '{': 18, 'IOException': 17, 'throws': 15, ']': 7, '[': 6, 'char': 4, 'read': 2, 'public': 0}
{'}\n': 454, ';': 40, ')': 23, '.': 62, 'return': 408, '=': 30, '(': 19, 'if': 297, '': 12, '_': 100, 'BOOL': 101, 'Space': 92}
{'}\n': 56, ';': 55, '(': 7, '.': 44, 'field': 43, ')': 37, 'Type': 9, 'output': 21, '': 1, ',': 12, 'Types': 17, 'input': 16, 'Tuple': 15, 'declaring': 10, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 17, ';': 16, 'system': 8, '=': 14, '.': 12, 'this': 11, '{': 10, ')': 9, 'System': 7, 'Dialogue': 6, '': 1, '(': 4, 'public': 0}
{'}\n': 48, ';': 28, 'button': 20, ')': 27, '(': 5, 'add': 40, '.': 30, 'set': 31, 'JButton': 24, '': 1, 'new': 22, '=': 21}
{'}\n': 98, ';': 54, 'BOOL': 96, '_': 95, 'return': 94, '}': 92, ')': 25, 'Value': 24, '(': 8, '.': 48, 'null': 31, 'if': 27, 'get': 49, '': 9, '!=': 30, 'attr': 12, '{': 26, ',': 20, 'boolean': 1}
{'}\n': 143, ';': 142, ')': 19, '(': 9, 'Version': 102, 'Data': 5, 'Object': 4, 'Business': 11, '.': 47, 'Key': 6, 'business': 15, 'Values': 125, 'Partition': 112, 'Sub': 123, 'get': 48, 'Value': 113, 'Format': 74, 'Type': 89, 'File': 88, 'Usage': 75, 'Name': 62, 'Definition': 61, 'Namespace': 49, '{': 20, '': 1, 'public': 0}
{'}\n': 98, ';': 97, ')': 18, '(': 13, 'Usage': 5, '{': 19}
{'}\n': 270, ';': 269, 'call': 143, '(': 95, '.': 248, '{': 234, ')': 233, 'Call': 46, 'Method': 214, '': 103, ',': 195}
{'}\n': 280, ';': 80, ')': 19, 'NUM': 219, '_': 218, '(': 70, '.': 66, 'prop': 49, '': 14, '=': 51, 'String': 15, '{': 20, 'Prop': 11}
{'}\n': 100, ';': 99, ')': 98, ',': 30, 'tenant': 76, 'Event': 18, '{': 65, '': 27, 'String': 28, 'void': 2, 'public': 0}
{'}\n': 46, ';': 29, ')': 9, 'STR': 27, '_': 26, ',': 23, 'this': 24, 'Provider': 6, 'byte': 7, '(': 3, 'Field': 19, 'populate': 18, '.': 17, 'Populator': 16, 'MXFProperty': 15, '': 4, '{': 13, 'IOException': 12, 'throws': 10, 'Byte': 5}
{'}\n': 67, ';': 66, ')': 30, '(': 33, '.': 35, 'v': 23, 'if': 32, 'Vector': 18, '': 6, 'public': 0}
{'}\n': 142, ';': 36, ')': 35, '(': 5, '.': 30, 'parent': 28, '=': 27, 'child': 78, '': 6, 'Atom': 55, 'get': 31, 'private': 0}
{'}\n': 49, ';': 31, ')': 13, '(': 4, 'Bits': 27, 'Significant': 26, 'Least': 42, 'get': 24, '.': 16, 'uuid': 12, 'Most': 25, '{': 14, 'UUID': 11, '': 5, ',': 9, 'Uuid': 3, 'void': 1, 'static': 0}
{'}\n': 107, ';': 31, ')': 23, 'Array': 4, 'new': 50, ',': 69, 'Error': 101, 'delay': 100, '(': 13, '>': 8, '<': 5, 'Concat': 3, 'Flux': 2, '': 1, 'return': 91, 'source': 22, '=': 27, ']': 49, '[': 48, 'n': 26, 'NUM': 60, '_': 37, 'array': 28, 'arraycopy': 66, '.': 29, 'System': 64, '+': 58, 'Publisher': 15, 'T': 7, 'extends': 18, '?': 17, 'STR': 38, 'Warnings': 35, 'Suppress': 34, '@': 32, 'length': 30, 'int': 25, '{': 24, 'Source': 11, 'Additional': 10, 'concat': 9, 'public': 0}
{'}\n': 17, ';': 16, ')': 4, '(': 3, 'shutdown': 2, '{': 5, 'void': 1, 'public': 0}
{'}\n': 103, ';': 29, 'return': 99, '}': 98, '_': 36, 'STR': 84, '!': 66, '(': 5, 'if': 64, ')': 10, 'Id': 4, 'local': 15, '.': 43, '=': 35, '{': 11, 'Local': 3}
{'}\n': 95, '}': 59, ';': 51, 'return': 91, ')': 26, 'e': 65, '(': 6, '{': 20, '': 1, 'catch': 60, 'try': 52, 'STR': 48, '_': 47, 'null': 34, '!=': 33, 'Socket': 9, 'if': 28, 'Lock': 25, 'synchronized': 21, 'IOException': 19, ',': 17, 'Server': 8, 'public': 0}
{'}\n': 27, ';': 26, ')': 6, '(': 5, 'Builder': 18, 'string': 17, '.': 12, '{': 7, 'void': 1, 'private': 0}
{'}\n': 434, ';': 310, ')': 14, '(': 306, 'String': 2, 'to': 425, '.': 424, 'out': 19, 'return': 422, ',': 403, 'append': 313, 'Builder': 18, '': 1, 'new': 21, '=': 20, '{': 15, 'public': 0}
{'}\n': 150, '}': 96, ';': 16, ')': 7, 'NUM': 146, '_': 13, '(': 3, 'exit': 143, '.': 10, 'System': 141, '': 4, 'e': 122, 'error': 135, 'logger': 9, 'Trace': 129, 'Stack': 128, 'print': 127, '{': 8, 'IOException': 121, 'catch': 118, 'STR': 14, 'info': 11, 'close': 105, 'writer': 36, 'this': 34, 'Carriers': 32, 'end': 88, 'Carrier': 42, ',': 52, 'carrier': 43, 'Plans': 79, 'write': 2, 'Shipments': 69, 'Vehicles': 59, 'start': 31, 'carriers': 45, ':': 44, 'for': 39, 'Head': 27, 'Xml': 26, 'filename': 6, 'File': 20, 'open': 19, 'try': 17, 'String': 5, 'void': 1, 'public': 0}
{'}\n': 21, ';': 20, ')': 11, 'listener': 10, '(': 5, '.': 15, 'Listeners': 14, 'resource': 13, '{': 12, 'Listener': 4, 'Events': 8, 'Resource': 3, '': 6, 'void': 1, 'public': 0}
{'}\n': 150, ';': 29, ')': 7, 'result': 73, ',': 85, 'expected': 66, '(': 6, 'Equals': 143, 'assert': 142, 'STR': 69, '_': 68, '+': 88, 'XML': 84, 'MANIFEST_': 83, 'ANDROID_': 82, 'FN_': 81, '': 9, 'xml': 78, 'Project': 76, 'lint': 75, '=': 67, 'String': 65, 'LIBRARY': 61, 'IN_': 60, 'ACTIVITY_': 59, 'LAUNCHER_': 58, 'ISSUE_': 23, '.': 14, 'Detector': 20, 'Activity': 5, 'Launcher': 18, 'add': 15, 'Enabled': 13, 'm': 12, 'LAUNCHER': 27, 'MISSING_': 42, 'ONE_': 26, 'THAN_': 25, 'MORE_': 24, '{': 11, 'Exception': 10, 'throws': 8, 'Main': 4, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 150, ';': 27, '}': 90, ')': 52, '(': 4, 'byte': 132, ']': 38, '[': 35, '{': 78, 'NUM': 26, '_': 25, 'STR': 88, 'i': 57, '++': 76, 'length': 70, '.': 44, 'str': 68, '<': 63, '=': 41, 'int': 56, 'for': 54, '': 5}
{'}\n': 19, ';': 18, ')': 7, 'STR': 16, '_': 15, '(': 6, 'Property': 13, 'get': 12, '.': 11, 'properties': 10, 'return': 9, '{': 8, 'Vendor': 5, 'build': 3, 'String': 2, '': 1, 'public': 0}
{'}\n': 340, ';': 31, ')': 16, 'root': 337, '}': 111, 'break': 324, 'x': 44, ',': 9, '(': 3, 'Insertion': 317, 'balance': 316, '=': 29, 'right': 83, '.': 74, 'xp': 260, 'else': 112, 'left': 79, 'NUM': 186, '_': 104, '<=': 271, 'dir': 158, 'if': 87, 'parent': 96, '{': 58, 'null': 30, '==': 90, 'p': 150, ':': 279, '?': 132, '>': 12, 'V': 11, '': 4, 'K': 8, '<': 6, 'Node': 5, 'Tree': 19, 'pk': 164, 'k': 116, 'Order': 243, 'Break': 242, 'tie': 241, 'kc': 134, 'Comparables': 226, 'compare': 225, '||': 221, 'For': 213, 'Class': 130, 'comparable': 211, '&&': 207, 'h': 123, 'ph': 160, '-': 184, 'hash': 127, 'key': 120, 'int': 122, 'for': 32, 'BOOL': 105, 'red': 102, 'next': 48, '!=': 51}
{'}\n': 241, '}': 166, 'new': 236, ')': 29, '(': 6, 'Node': 57, '.': 86, '{': 124, 'if': 172, 'else': 167, ';': 32, '': 7, 'get': 104, '=': 96, 'Tree': 56, 'Mutable': 55, 'Default': 54, 'void': 1}
{'}\n': 77, ';': 36, ')': 14, 'intent': 18, '(': 13, 'Activity': 32, 'start': 71, 'CLEAR_': 48, 'ACTIVITY_': 47, 'FLAG_': 46, '': 16, '.': 27, 'Intent': 17, 'Flags': 40, 'set': 39, 'class': 34, ',': 29, 'this': 28, 'new': 20, '=': 19, 'void': 1, 'private': 0}
{'}\n': 43, ';': 32, '(': 6, '.': 34, ')': 16, 'Position': 8, '': 2, 'new': 22, '=': 21, 'public': 0}
{'}\n': 29, ';': 28, ')': 10, '(': 6, '.': 23, 'toolbar': 14, 'if': 12, '{': 11, '': 7, 'Bar': 5}
{'}\n': 207, ';': 29, ')': 15, '(': 7, 'String': 3, 'to': 202, '.': 74, 'sb': 21, 'return': 199, '}': 192, 'STR': 170, '_': 54, 'NUM': 55, 'append': 100, '{': 16, 'i': 45, '=': 22, 'int': 44, 'for': 42, '': 2, 'new': 23, 'public': 0}
{'}\n': 527, ';': 44, '_': 41, '.': 95, ')': 43, '(': 131, 'get': 366, 'NUM': 271, '==': 243, 'null': 161, '!=': 160, 'if': 156, '': 63, 'Audio': 64, 'STR': 42, '+': 40}
{'}\n': 162, ';': 36, 'NUM': 43, '_': 42, '+=': 122, '{': 72, ')': 71, ']': 10, 'j': 100, '[': 9, '(': 56, 'if': 73, '++': 70, '<': 64, '=': 23, 'int': 57, 'for': 55, 'length': 34, '.': 33, '': 24, ',': 12, 'double': 2, 'static': 1, 'public': 0}
{'}\n': 126, ';': 35, 'total': 37, 'return': 123, '}': 120, ')': 20, '(': 6, 'Value': 97, 'double': 2, '.': 25, 'n': 92, '+=': 112, '{': 21, 'null': 26, '!=': 107, 'if': 82, ',': 11, 'row': 99, 'get': 48, 'data': 10, '=': 38, 'Number': 91, '': 7, 'Count': 44, '<': 63, ']': 17, 'v': 57, '[': 16, 'valid': 18, 'int': 12, '++': 70, 'length': 67, 'NUM': 40, '_': 32, 'for': 54, 'STR': 33, 'Permitted': 28, 'Not': 27, 'Checks': 24, 'Param': 23, 'D': 9, 'Values2': 8, 'Total': 5, 'calculate': 3, 'static': 1, 'public': 0}
{'}\n': 86, ';': 85, ')': 14, '(': 4, '.': 20, 'File': 6, 'f': 7, 'exists': 21, '{': 15, '': 5, 'boolean': 1, 'public': 0}
{'}\n': 24, ';': 23, ')': 11, '(': 4, 'iterator': 19, '.': 18, 'bcme': 10, 'And': 14, 'find': 13, '{': 12, 'Event': 9, 'Membership': 8, 'Context': 7, 'Bean': 6, '': 5, 'children': 2, 'void': 1, 'public': 0}
{'}\n': 108, ';': 19, ')': 8, 'count': 15, '(': 4, 'rail': 102, 'String': 2, 'to': 99, '.': 25, 'Integer': 97, '': 1, 'return': 95, '}': 90, 'break': 88, '{': 13, 'Syllable': 40, 'first': 39, 'Shared': 81, 'equals': 80, 'p': 58, 'if': 76, 'get': 26, '=': 16, 'null': 64, '!=': 63, 'ss': 22, 'Item': 6, 'for': 54, 'item': 7, 'find': 48, 'PATH': 46, 'SYLLABLE_': 45, 'SYLLABLE': 34, 'Relation': 31, 'As': 28, 'NUM': 18, '_': 17, 'int': 14, 'Exception': 12, 'Process': 11, 'throws': 9, 'process': 3, 'public': 0}
{'}\n': 192, '}': 190, ';': 66, ')': 45, 'instances': 156, ',': 15, 'first': 165, '.': 85, 'Pair': 129, 'id': 138, '(': 6, 'put': 180, 'allocation': 30, 'second': 175, 'remove': 2, 'get': 58, '=': 57, '>': 13, 'Id': 27, 'Instance': 26, '': 7, '<': 10, 'List': 9, 'component': 81, 'containers': 14, 'Integer': 20, '{': 46, '++': 125, 'j': 112, 'Remove': 96, 'To': 42, 'Instances': 3, 'num': 93, 'NUM': 115, '_': 114, 'int': 92, 'for': 67, 'Down': 44, 'Scale': 43, 'components': 41, '-': 98, 'Name': 88, 'Component': 87, 'Requirement': 53, 'ram': 55, 'String': 36, 'Requirements': 56, ':': 74, 'Ram': 52, 'RAMInstances': 59, 'Array': 8, 'Map': 17, 'Container': 12, 'Containers': 5, 'From': 4, 'void': 1, 'private': 0}
{'}\n': 278, ';': 277, ')': 43, ',': 21, '_': 98, '': 6, '(': 5, '.': 121, 'Type': 76, 'Line': 46, '{': 44, 'Relation': 23, 'Handler': 10, 'Draw': 7, 'draw': 2, 'void': 1}
{'}\n': 72, ';': 45, ')': 5, '(': 4, '.': 58, '': 54, 'Addr': 32, 'loco': 31, 'Loco': 10, '{': 6, 'void': 1}
{'IOException': 10, '': 9, 'throws': 8, ')': 7, '(': 6, 'start': 4, 'public': 0}
{'}\n': 94, ';': 32, '}': 89, 'flag': 58, '_': 78, ')': 31, '&': 69, '(': 26, 'if': 65, ':': 59, '': 1, 'flags': 40, ',': 28, 'int': 17, 'final': 16}
{'}\n': 588, ';': 586, ')': 509, '(': 261, '.': 577, 'Cont': 576, 'Hand': 575, 'm': 574, '{': 573, 'SAXException': 523, '': 268, 'name': 348, 'void': 9}
{')': 19, 'String': 9, '': 6, '(': 5}
{'}\n': 26, ';': 25, ')': 9, 'millis': 8, '(': 5, 'Time': 18, '.': 16, '': 1, 'time': 12, '{': 10, 'String': 2, 'public': 0}
{'}\n': 154, ';': 54, 'output': 152, 'return': 151, '}': 55, ')': 14, 'NUM': 32, '_': 31, '.': 26, '(': 10, '=': 60, ']': 4, '[': 3, '{': 15, 'length': 27, '<': 83, 'int': 76, 'for': 74, 'input': 13, 'byte': 2, 'new': 40, '+': 48, 'STR': 47, 'Exception': 44, '': 11, 'throw': 39, 'if': 16, 'String': 12, 'static': 1, 'public': 0}
{'}\n': 101, ';': 35, '(': 5, '.': 29, ')': 11, '': 6, '{': 12, '=': 26, 'Jobs': 28, 'm': 27, 'job': 9, 'Status': 8, 'Job': 4, 'Tracking': 3}
{'}\n': 23, ';': 22, ')': 6, '(': 5, 'variance': 14, '.': 11, '{': 7, 'double': 1, 'public': 0}
{'}\n': 92, ';': 19, 'buf': 11, 'return': 84, ')': 6, 'STR': 46, '_': 45, '(': 5, 'append': 22, '.': 21, 'Builder': 10, 'String': 2, '': 1, 'new': 13, '=': 12, '{': 7}
{'}\n': 32, ';': 20, ')': 9, '(': 5, 'Version': 3, '=': 14, '{': 10, 'public': 0}
{'}\n': 42, ';': 41, ')': 17, '(': 27, '.': 33, 'new': 15, 'Values': 26, '{': 22, 'Exception': 21, 'Upgrade': 20, '': 1, 'throws': 18, 'Attr': 16, 'Impl': 7, 'Schema': 6, 'Attribute': 5}
{'}\n': 220, ';': 218, ')': 51, 'STR': 176, '_': 175, '(': 45, '.': 156, 'Name': 155, 'canonical': 154, 'return': 147, '{': 55, 'is': 36, 'boolean': 15, 'final': 14, 'public': 0}
{'}\n': 87, '}': 75, '': 5, ';': 30, ')': 29, 'proxy': 10, '{': 37, '(': 4, 'if': 31, 'Client': 6, 'null': 35, '!=': 34, ',': 12, 'ID': 9, 'Membership': 8, 'Proxy': 7, 'void': 1, 'public': 0}
{'}\n': 32, ';': 31, 'STR': 19, '_': 18, '(': 6, '.': 14, '': 1, ',': 20, 'replace': 15, 'resource': 9, '{': 11, ')': 10, 'String': 2}
{'}\n': 47, ';': 46, ')': 23, '.': 26, ',': 34, '(': 6, 'Container': 5, '': 7, 'new': 29, 'add': 27, 'containers': 14, '{': 24, 'int': 20, '>': 13, '<': 10, 'List': 9, 'Array': 8, 'static': 1, 'public': 0}
{'}\n': 37, ';': 25, ')': 11, 'scheme': 16, '(': 7, 'equals': 32, '.': 31, 'SCHEME': 30, 'RESOURCE_': 29, 'LOCAL_': 28, '': 8, 'return': 26, 'uri': 10, 'Null': 21, 'Or': 20, 'Scheme': 19, 'get': 18, '=': 17, 'String': 15, 'final': 13, '{': 12, 'Uri': 6, 'Resource': 5, 'Local': 4, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 146, '}': 127, ';': 51, ')': 12, 'Path': 11, 'file': 10, '(': 46, '.': 42, '{': 13, '==': 55, 'path': 16, '=': 24, 'String': 9, '': 8}
{'}\n': 143, '}': 68, ';': 67, ')': 40, 'STR': 50, '_': 49, '+': 51, 'service': 125, '(': 4, 'Exception': 120, '': 5, '{': 30, '.': 35, 'if': 31, 'else': 69, 'new': 80, 'NUM': 76, '!=': 74, 'String': 6, ',': 9, 'void': 1}
{'}\n': 199, ';': 40, '=': 73, '': 11, ')': 39, '(': 10, '.': 58, 'm_target': 57, ',': 16, 'private': 0}
{'}\n': 103, ';': 27, 'null': 101, 'return': 66, '}': 69, ')': 21, 'e': 78, '(': 7, 'log': 93, '.': 35, 'Check': 91, '': 5, '{': 22, 'EXCEPTION': 87, 'Cfg': 84, 'if': 81, 'Exception': 77, 'Algorithm': 76, 'Such': 75, 'No': 74, 'final': 8, 'catch': 70, 'digest': 26, '=': 31, ']': 4, '[': 3, 'byte': 2, 'length': 20, ',': 13, 'offset': 16, 'message': 12, 'update': 45, 'STR': 40, '_': 39, 'Instance': 37, 'get': 36, 'Digest': 25, 'Message': 24, 'try': 28, 'int': 15, 'static': 1, 'public': 0}
{'}\n': 145, ';': 50, '(': 6, '.': 60, '+': 123, 'STR': 122, '_': 121, '': 7, '{': 66, ')': 49, 'Path': 21, '}': 90, 'get': 82, 'is': 61, 'input': 56, 'if': 54, ',': 36}
{'}\n': 85, '}': 84, ';': 29, ')': 11, '(': 6, '.': 25, 'Container': 43, 'DN': 44, ',': 15, 'token': 70, 'Impl': 66, '': 7, 'new': 62, '=': 22, 'next': 52, 'iter': 21, 'String': 41, '{': 18, 'Next': 35, 'has': 34, 'while': 30, 'iterator': 26, 'Iterator': 20, 'SSOException': 17, 'AMException': 14, 'throws': 12, 'Set': 8, 'Containers': 5, 'Sub': 3, 'public': 0}
{'}\n': 76, ';': 23, ')': 10, ',': 67, '(': 9, 'size': 61, '.': 17, 'NO': 59, 'MESSAGE_': 58, '': 12, 'Equals': 55, 'assert': 54, 'NUM': 50, '_': 20, 'get': 47, 'MBOXES': 45, 'Mailbox': 8, 'In': 7, 'Mapper': 35, 'message': 34, '=': 33, 'STR': 21, 'info': 18, 'LOG': 16, '{': 14, 'Exception': 13, 'throws': 11, 'test': 2, 'void': 1, 'private': 0}
{'}\n': 36, ';': 35, ')': 9, '_': 32, 'message': 8, '(': 5, '.': 20, 'Messages': 19, 'null': 15, '{': 10, '': 6}
{'}\n': 54, ';': 38, ')': 37, 'entry': 28, '(': 3, '.': 40, 'Hash': 32, '': 4, '=': 29, '>': 27, ',': 23, '<': 20, 'key': 6, 'public': 0}
{'}\n': 185, '}': 106, ';': 46, ')': 14, '(': 4, 'Info': 50, 'Request': 12, 'clear': 178, '.': 51, 'Solr': 10, '': 1, 'close': 169, 'req': 13, '{': 18, 'finally': 165, 'String': 2, 'to': 159, 'sw': 110, 'return': 156, 'rsp': 37, ',': 8, 'write': 141, 'Writer': 109, 'response': 125, 'Response': 36, 'Query': 11, 'get': 26, 'core': 24, '=': 25, 'NUM': 118, '_': 117, 'new': 39, 'Exception': 17, 'throw': 98, 'null': 95, '!=': 94, 'if': 86, 'handler': 7, 'Handler': 76, 'execute': 70, 'set': 52, 'Core': 23, 'try': 19, 'throws': 15, 'query': 3, 'public': 0}
{'}\n': 99, ';': 89, '.': 35, ')': 18, '(': 8, 'Link': 6, '{': 19, 'link': 16, '': 14, 'Links': 3}
{'}\n': 60, ';': 17, 'result': 11, 'return': 57, ')': 7, 'STR': 25, '_': 24, ',': 26, '(': 6, 'replace': 22, '.': 21, '=': 12, 'String': 2, '': 1, '{': 8, 'public': 0}
{'}\n': 56, ';': 54, ')': 9, '(': 5, 'element': 8, '': 1, 'Element': 4, '{': 17}
{'}\n': 71, ';': 17, ')': 9, ',': 67, '(': 5, '=': 14, '}': 36, 'Amount': 13, '{': 24, 'if': 18, '_': 15, '': 2}
{'}\n': 76, ';': 22, ')': 9, 'num': 39, '(': 4, 'Instances': 45, 'Num': 44, 'set': 69, '.': 16, 'eclass': 8, 'idx': 12, 'remove': 62, 'Classes': 15, 'entry': 14, 'NUM': 50, '_': 49, '==': 55, 'if': 52, '-': 48, 'get': 33, '=': 13, 'int': 11, 'Of': 18, 'index': 17, '{': 10, 'Class': 7, 'Entry': 6, '': 5, 'Instance': 3, 'delete': 2, 'void': 1, 'private': 0}
{'}\n': 20, ';': 19, ')': 8, 'log': 14, '(': 4, 'warning': 12, '{': 9, 'message': 7, 'String': 6, '': 5, 'public': 0}
{'}\n': 97, ';': 28, 'buf': 20, 'return': 89, '}': 88, ')': 12, 'nread': 42, ',': 74, 'NUM': 38, '_': 37, 'b': 32, '(': 7, '{': 16, '>=': 60, 'read': 4, '.': 54, 'is': 11, '=': 21, 'while': 48, '-': 44, 'int': 41, ']': 31, '[': 30, 'byte': 29, 'new': 22, '': 2, 'IOException': 15, 'throws': 13, 'Stream': 10, 'Input': 9, 'As': 5, 'static': 1, 'public': 0}
{'}\n': 36, ';': 25, ')': 12, 'preset': 11, ',': 8, 'data': 31, '(': 5, 'fill': 29, '.': 28, 'Arrays': 27, '': 1, 'size': 7, '{': 13, 'int': 6, 'Vector': 4, 'Array': 2, 'public': 0}
{'}\n': 41, ';': 30, ')': 14, 'l': 13, '(': 8, '.': 24, 'List_': 34, 'Listeners': 33, 'ts': 32, '}': 31, 'TSListener': 26, 'service_': 18, '{': 15, 'null': 20, '!=': 19, 'if': 16, 'Plugin': 7, 'Service': 6, 'Transaction': 5, '': 9, 'void': 3, 'synchronized': 2, 'static': 1, 'public': 0}
{'}\n': 185, '}': 168, ';': 22, '=': 27, ']': 8, '[': 7, '--': 165, 'j': 46, '{': 16, ')': 15, '&&': 97, 'NUM': 29, '_': 28, '>': 93, '(': 4, 'while': 90, 'i': 26, '++': 42, 'length': 36, '.': 35, '<': 32, 'for': 23, 'temp': 18}
{'}\n': 295, ';': 257, ')': 40, '(': 19, 'add': 267, '.': 76, ',': 223, '_': 224, '': 32, 'Session': 17, 'new': 124, '{': 101, 'void': 1, 'public': 0}
{'}\n': 50, '}': 49, ';': 48, ')': 10, 'Obj': 9, 'some': 8, 'Bean': 25, 'Map': 24, '': 6, '(': 5, 'set': 36, '{': 11, 'instanceof': 16, 'if': 12, 'Object': 7, 'Init': 4, 'And': 3, 'find': 2, 'void': 1, 'public': 0}
{'}\n': 28, ';': 15, ')': 6, '(': 5, '.': 9, '_': 19, 'Layers': 4, '{': 7, 'void': 1, 'public': 0}
{'}\n': 49, ';': 48, ')': 10, '(': 4, 'Object': 3, 'Write': 18, 'default': 17, '.': 16, 'oos': 9, '{': 14, 'IOException': 13, '': 5, 'throws': 11, 'Stream': 8, 'Output': 7, 'write': 2, 'void': 1, 'private': 0}
{'}\n': 124, ';': 35, ')': 7, '(': 3, 'To': 111, 'compare': 110, '.': 40, 'return': 54, '_': 55, 'null': 77, '==': 76, 'if': 9, 'Amt': 43, 'Net': 67, 'get': 66, '=': 26, 'Decimal': 60, 'Big': 59, '': 4, 'Valid': 42, 'is': 41, '!': 38, 'Qty': 17, 'Line': 16, 'QResponse': 15, 'MRf': 14, 'instanceof': 12, '{': 8, 'Object': 5, 'public': 0}
{'}\n': 189, '}': 182, ';': 40, ')': 39, 'Name': 26, 'field': 20, '+': 158, 'STR': 160, '_': 159, '(': 4, 'get': 49, '.': 63, 'Exception': 141, '': 5, 'new': 137, 'throw': 136, '{': 135, 'if': 117, 'Type': 53, 'Field': 50, '=': 48, 'String': 24, ',': 13, '>': 10, '<': 7, 'Class': 6}
{'}\n': 179, ',': 20, 'host2': 24, 'host1': 19, '(': 44, '{': 31, ')': 30, 'BOOL': 139, '_': 138, ';': 49, '': 12, 'String': 13}
{'}\n': 23, ';': 22, ')': 10, 'listener': 9, '(': 5, 'remove': 2, '.': 15, 'Listeners': 14, 'membership': 13, '{': 11, 'Listener': 4, 'Membership': 3, '': 6, 'public': 0}
{'}\n': 190, ';': 189, ')': 44, 'NUM': 164, '_': 163, '-': 162, ',': 13, 'Report': 39, 'delivery': 38, 'read': 35, 'date': 32, 'address': 20, '(': 8, '{': 45, 'boolean': 34, 'Long': 31, '': 2, 'subject': 28, 'String': 19, 'body': 24, 'uri': 16, 'Uri': 3, 'resolver': 12, 'Resolver': 11, 'Content': 10, 'To': 6, 'Message': 5, 'add': 4, 'static': 1, 'public': 0}
{'}\n': 105, ';': 13, ')': 4, 'NUM': 56, '_': 55, '(': 3, 'Program': 8, 'Use': 7, 'gl': 6, 'Bind': 15, ',': 54, 'D': 78, 'TEXTURE_2': 77, 'GL_': 31, '': 30, 'Texture': 28, 'TRIANGLES': 53, 'Arrays': 49, 'Draw': 48, 'quad': 10, '{': 5, 'present': 2, 'void': 1, 'private': 0}
{'}\n': 44, ';': 24, 'result': 13, 'return': 41, ')': 9, 'NUM': 38, '_': 37, ',': 36, 'YEAR': 35, 'OF_': 34, 'DAY_': 33, '': 2, '.': 20, 'Calendar': 3, '(': 5, 'add': 27, 'clone': 21, 'self': 8, '=': 14, '{': 10, 'static': 1, 'public': 0}
{'}\n': 272, ';': 107, ')': 64, ',': 26, 'Name': 54, 'Id': 39, '(': 6, '}': 235, '': 16, '{': 184, '.': 87, 'note': 38, 'null': 113, 'if': 108, 'STR': 92, '_': 91, 'String': 37, 'void': 1}
{'}\n': 100, ';': 97, ')': 36, '(': 9, 'remove': 7, 'indexes': 33, '.': 62, '': 3, '{': 37, 'Integer': 22, ',': 17, 'list': 16, '>': 5, 'T': 4, '<': 2, 'List': 11, 'All': 8, 'void': 6, 'static': 1, 'public': 0}
{'}\n': 156, ';': 31, ')': 16, '(': 4, '': 1, 'new': 72, 'add': 137, 'Renderer': 124, 'Node': 104, 'Icon': 128, 'Cell': 123, 'set': 81, 'database': 25, 'CRoot': 103, 'BOOL': 95, '_': 28, 'Visible': 92, 'Root': 91, 'Tree': 3, 'STR': 29, ',': 9, 'Null': 23, 'Not': 22, 'check': 21, '.': 20, 'Preconditions': 19, '{': 17, 'final': 5, 'public': 0}
{'}\n': 18, ';': 17, 'type': 8, 'return': 7, '{': 6, ')': 5, '(': 4, 'is': 2, 'boolean': 1, 'public': 0}
{'}\n': 95, '}': 94, ';': 92, ')': 39, 'channel': 45, '(': 17, '.': 57, 'Requested': 56, 'Already': 55, 'mods': 54, '{': 50, 'String': 28, '': 27, 'Mods': 4, 'void': 1}
{'}\n': 860, ';': 234, ')': 149, '+': 276, 'STR': 275, '_': 274, '(': 32, 'fine': 807, '.': 252, 'log': 805, 'Level': 254, 'is': 253, 'Mgt': 251, 'CLog': 250, '': 25, 'if': 247, ',': 73, 'get': 189, '=': 188, 'else': 487, '}': 336, 'Period': 364, 'ZERO': 392, '{': 259, 'Current_': 363, 'A_': 102, 'Decimal': 125, 'Big': 124, 'Acct': 42, 'MAsset': 41, 'public': 0}
{'}\n': 82, ';': 42, 'BOOL': 75, '_': 74, 'return': 73, '}': 77, ')': 10, '(': 6, 'next': 68, '.': 47, ',': 65, 'value': 9, 'Equal': 62, 'compare': 61, 'if': 54, '{': 11, 'Next': 49, 'has': 48, 'while': 44, 'Object': 8, '': 1, 'contains': 5, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 96, '}': 78, ';': 46, 'e': 83, 'throw': 92, ')': 16, '(': 5, 'rollback': 88, '.': 24, 'connection': 23, '{': 20, 'SQLException': 19, '': 6, 'catch': 79, 'commit': 74, 'Update': 68, 'execute': 67, 'File': 4, 'Id': 59, 'get': 58, 'file': 9, ',': 55, 'NUM': 54, '_': 29, 'Int': 51, 'set': 25, 'BOOL': 30, 'Commit': 27, 'Auto': 26, 'try': 21, 'throws': 17, 'JDBCSequential': 7, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 46, ';': 45, ')': 37, 'data': 31, '(': 15, 'Stream': 12, 'Input': 11, '': 7, 'public': 0}
{'}\n': 59, ';': 57, ')': 43, 'Code': 39, 'exit': 34, '(': 27, '.': 47, 'System': 46, '': 45, '{': 44, 'void': 2, 'static': 1}
{'}\n': 57, '}': 56, ';': 30, ')': 8, 'selection': 28, ',': 52, 'Selection': 17, 'old': 16, '(': 3, 'Changed': 48, 'fire': 46, '{': 9, 'rv': 32, 'if': 41, 'sensor': 7, '.': 35, '=': 18, 'boolean': 31, '>': 15, 'Sensor': 6, '': 5, '<': 12, 'Set': 11, 'Hash': 21, 'new': 19, 'final': 4, 'void': 1, 'public': 0}
{'}\n': 158, ';': 38, ')': 21, 'Info': 14, 'p': 15, '}': 134, 'way': 8, '(': 4, '.': 89, 'nodes': 30, 'if': 39, 'Nodes': 34, 'Way': 3, 'get': 32, '=': 31, '>': 29, 'Node': 28, 'Map': 6, '': 5, '<': 25, 'List': 24, 'View': 13, 'Entity': 12, 'Default': 11, 'void': 1}
{'}\n': 327, ';': 160, 'return': 311, ')': 75, 'Ref': 128, 'new': 82, '(': 68, '.': 165, '': 69, 'put': 166, '=': 141, '{': 76, 'Object': 70, 'Reference': 9}
{'}\n': 44, ';': 21, ')': 8, 'picked': 11, '(': 7, '=': 14, 'null': 19, 'boolean': 1}
{'}\n': 21, ';': 20, ')': 8, 'STR': 18, '_': 17, '(': 7, 'Exception': 15, 'Operation': 14, 'Unsupported': 13, '': 12, 'new': 11, 'throw': 10, '{': 9, 'Code': 6, 'hash': 5, 'int': 4, 'public': 3}
{'}\n': 150, ';': 149, 'Pattern': 30, ',': 103, '(': 67, '': 25, 'new': 118, '{': 116, ')': 115, 'public': 0}
{'}\n': 539, ';': 48, 'STR': 47, '_': 37, 'return': 535, ')': 20, 'Number': 7, 'cc': 51, '+': 485, 'Card': 6, 'credit': 11, '(': 8, 'fine': 481, '.': 99, 's_log': 479, '}': 409, '{': 21, 'if': 22, '': 2, '=': 54, 'int': 291, 'Length': 86, 'String': 3, '||': 29, 'null': 28, '==': 27, 'Credit': 5, 'validate': 4, 'static': 1, 'public': 0}
{'}\n': 53, '}': 43, ';': 32, ')': 14, '(': 4, 'close': 48, '.': 47, '{': 18, 'finally': 44, 'Dir': 13, ',': 9, 'File': 6, 'zip': 29, 'Zip': 20, '': 5, 'new': 24, '=': 23, 'IOException': 17, 'throws': 15, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 39, ';': 38, 'file': 6, '.': 20, 'this': 9, '{': 8, ')': 7, 'String': 5, '': 1, '(': 3, 'Config': 2, 'public': 0}
{'}\n': 54, ';': 53, 'text': 22, '=': 37, '.': 35, 'this': 34, ')': 32, '': 6, '(': 13, 'Component': 8, 'public': 0}
{'}\n': 94, ';': 43, ')': 6, 'STR': 16, '_': 15, '(': 5, 'Bytes': 79, 'get': 78, '.': 20, 'request': 13, 'write': 74, 'Stream': 72, 'Output': 71, 'm': 18, 'Of': 62, 'index': 61, ',': 51, 'NUM': 57, 'substring': 54, 'TAG': 50, '': 8, 'i': 47, 'Log': 45, 'Headers': 40, 'add': 39, '+': 17, 'path': 34, 'Parameters': 19, 'port': 29, 'host': 21, '=': 14, 'String': 12, '{': 10, 'IOException': 9, 'throws': 7, 'Teardown': 4, 'Request': 3, 'send': 2, 'void': 1, 'private': 0}
{'}\n': 12, ';': 11, 'filled': 9, '.': 8, '{': 5, ')': 4, '(': 3, 'int': 1, 'public': 0}
{'}\n': 41, ';': 40, ')': 10, '.': 22, 'o': 9, '': 1, '(': 6, 'equals': 5, 'return': 20, '{': 11, 'instanceof': 15, 'if': 12, 'Object': 8, 'boolean': 4, 'public': 3, 'Override': 2, '@': 0}
{'}\n': 37, '}': 36, ';': 27, ')': 6, '(': 5, '.': 17, 'Monitor': 30, 'Wifi': 3, 'm': 10, 'STR': 25, '_': 24, ',': 23, 'TAG': 22, 'LOG_': 21, '': 15, 'v': 18, 'Log': 16, '{': 7, 'State': 4}
{'}\n': 64, ';': 63, '(': 29, '.': 46, 's': 45, ')': 14, ':': 33, '': 7, 'for': 28, '{': 15, 'String': 8}
{'}\n': 33, ';': 31, ')': 12, 'listener': 11, '(': 6, '.': 26, 'Listeners': 18, 'Change': 4, 'diagram': 16, '{': 13, 'null': 20, 'if': 14, 'Listener': 5, 'Diagram': 3, 'mx': 7, 'void': 1, 'public': 0}
{'}\n': 97, '}': 96, ';': 95, ')': 16, '(': 9, '.': 40, '': 35, '{': 17, 'Connectivity': 6}
{'}\n': 38, ';': 37, 'str': 10, ')': 11, 'NUM': 21, '_': 20, '(': 7, 'substring': 30, '.': 16, '==': 23, 'At': 18, 'char': 17, '{': 12, 'String': 3, '': 2, 'public': 0}
{'}\n': 45, ';': 44, 'p': 6, ')': 7, '_': 13, '(': 4, '.': 18, 'if': 9, '{': 8, '': 1, 'public': 0}
{'}\n': 35, '}': 34, ';': 33, ')': 5, 'STR': 31, '_': 30, '(': 4, 'finer': 28, '.': 10, 'log': 9, '{': 6, 'FINER': 22, '': 14, 'Level': 19, 'Logger': 16, 'Platform': 15, 'Loggable': 12, 'is': 11, 'if': 7}
{'}\n': 105, ';': 71, ')': 10, '(': 6, 'show': 101, '.': 73, 'stage': 9, 'NUM': 87, '_': 77, 'Height': 93, 'set': 74, 'Width': 84, 'STR': 78, 'Title': 75, '': 7, 'new': 41, '{': 14, 'Exception': 13, 'throws': 11, 'Stage': 8, 'start': 5, 'void': 4, 'public': 3}
{'}\n': 197, ';': 196, ')': 162, '(': 160, '{': 163, 'Legend': 86, 'void': 4, 'public': 3}
{'}\n': 255, ';': 111, ')': 82, 'Range': 51, '(': 38, 'add': 243, '.': 181, '}': 112, 'new': 53, 'if': 84, '{': 83, '': 47, 'void': 1, 'public': 0}
{'}\n': 24, ';': 23, 'NUM': 22, '_': 16, '-': 20, '>': 19, ')': 7, 'STR': 17, '(': 6, 'Of': 14, 'index': 13, '.': 12, 'Name': 11, 'os': 10, 'return': 9, '{': 8, 'is': 3, 'boolean': 2, 'static': 1, 'public': 0}
{'}\n': 46, ';': 34, ')': 14, '(': 5, 'Components': 42, 'init': 41, 'crl': 13, '=': 38, '.': 36, 'this': 35, ',': 9, 'CRL': 12, 'X509': 11, '': 1, 'parent': 8, 'DView': 2, 'public': 0}
{'}\n': 42, ';': 28, ')': 11, 'STR': 36, '_': 35, ',': 16, '(': 6, 'All': 33, 'replace': 32, '.': 31, 'value': 10, 'return': 29, 'SUPPLIER': 26, 'MSG_': 25, 'STRING_': 19, 'NULL_': 18, '': 2, 'PREDICATE': 20, 'validate': 13, '{': 12, 'String': 3, 'final': 7, 'static': 1, 'public': 0}
{'}\n': 28, ';': 18, ')': 9, '(': 5, 'All': 24, 'notify': 23, '++': 21, 'obj': 8, 'Element': 14, 'add': 13, '.': 12, 'fifo': 11, '{': 10, 'Object': 7, '': 6, 'void': 2, 'synchronized': 1, 'public': 0}
{'}\n': 37, ';': 35, ')': 28, '(': 25, 'dispose': 2, '.': 31, 'super': 30, '{': 29, 'void': 1, 'public': 0}
{'}\n': 82, ';': 21, 'length': 61, '/': 79, 'det': 34, 'return': 77, ')': 9, 'dy': 23, '*': 37, '+': 71, 'dx': 12, '(': 3, 'sqrt': 66, '.': 15, 'Math': 64, '': 4, '=': 13, 'double': 1, 'v_y': 27, 'point_a': 18, '-': 17, 'p_point': 8, 'v_x': 16, 'point_b': 14, '{': 10, 'Float': 7, 'Point': 6, 'Pla': 5, 'public': 0}
{'}\n': 376, '}': 88, ';': 33, ')': 21, 'Relation': 13, 'word': 14, ',': 10, 'String': 7, 'number': 8, '(': 5, 'Number': 363, 'expand': 3, '{': 22, 'else': 89, 'Dot': 263, 'after': 318, 'Digits': 346, 'NUM': 46, '_': 45, '>': 284, 'length': 30, '.': 29, 'if': 37, '+': 225, 'position': 35, 'substring': 72, '=': 26, '': 6, 'STR': 50, 'Word': 12, 'add': 56, 'before': 262, 'Real': 4, '-': 159, '!=': 158, 'Of': 152, 'index': 151, '||': 162, 'Length': 25, 'string': 24, '==': 48, 'At': 43, 'char': 42, 'int': 23, 'void': 2, 'static': 1, 'public': 0}
{'}\n': 38, ';': 23, 'return': 35, ')': 10, '(': 6, '.': 26, '': 8, ']': 4, 'L': 9, '[': 3, 'double': 2, 'new': 17, '=': 16, '{': 11, 'int': 7, 'static': 1, 'public': 0}
{'}\n': 112, ';': 20, ')': 8, '(': 7, 'assert': 98, 'null': 94, ',': 93, 'STR': 30, '_': 29, 'Project': 89, 'Default': 88, 'create': 87, 'set': 71, '.': 70, 'Element': 13, 'deployable': 12, 'Deployable': 11, '': 10, 'new': 15, '=': 14, '{': 9, 'test': 2, 'void': 1, 'public': 0}
{'}\n': 7, '{': 6, ')': 5, '(': 4, 'Logger': 3, '': 1}
{'}\n': 65, ';': 64, ')': 37, 'r': 36, '(': 8, 'child': 59, '.': 58, 'p': 25, ',': 15, 'parser': 14, 'Handler': 6, 'Command': 5, 'Sub': 4, 'Delete': 3, '': 2, 'new': 44, 'return': 43, '{': 42, 'Exception': 41, 'Argument': 12, 'throws': 38, '>': 24, '?': 21, '<': 20, 'Definition': 30, 'Relation': 29, 'Path': 19, 'Object': 18, 'Managed': 17, 'Parser': 13, 'create': 7, 'static': 1, 'public': 0}
{'}\n': 70, '}': 68, ';': 21, '=': 11, ']': 10, 'i': 25, '[': 9, ')': 5, '(': 4, '{': 6, 'NUM': 28, '_': 27, '++': 38, 'length': 35, '.': 16, '<': 31, 'int': 24, 'for': 22, 'new': 12}
{'}\n': 134, ';': 24, ')': 11, '(': 5, 'String': 2, 'to': 3, '.': 31, 'buf': 16, 'return': 126, 'STR': 123, '_': 40, '+': 121, 'matrix': 10, 'shape': 117, ',': 116, 'NUM': 49, 'insert': 112, 'Shape': 28, 'print': 32, 'if': 63, 'Print': 27, 'old': 26, '=': 17, 'this': 30, '}': 95, 'slice': 46, 'Slice': 88, 'view': 87, 'append': 72, 'Separator': 75, '!=': 66, '{': 12, '++': 60, 'slices': 55, '<': 52, 'int': 45, 'for': 43, 'BOOL': 41, 'boolean': 25, 'Buffer': 15, '': 1, 'new': 18, 'D': 9, 'Matrix3': 8, 'public': 0}
{'}\n': 52, '}': 26, '{': 6, ')': 5, 'e': 31, 'Exception': 47, '': 29, '(': 4, 'catch': 27, ';': 25, '.': 21, 'try': 17, 'close': 22, 'void': 2}
{'}\n': 63, ';': 38, ')': 17, 'map': 28, '(': 36, 'Map': 7, 'unmodifiable': 56, '.': 55, 'Collections': 54, '': 6, 'return': 48, '=': 29, '>': 14, 'String': 10, ',': 11, '<': 8, '{': 18}
{'}\n': 211, ';': 47, ')': 15, 'Loader': 50, 'default': 51, ',': 19, 'codebase': 70, '(': 8, 'Class': 2, 'load': 103, '.': 102, 'RMIClass': 100, '': 1, 'return': 98, '}': 95, 'annotation': 81, 'String': 69, '=': 29, '{': 25, 'instanceof': 82, '&&': 80, 'Only': 79, 'Codebase': 78, 'use': 77, '!': 76, 'if': 74, 'null': 59, 'Defined': 63, 'User': 62, 'latest': 61, ':': 60, '?': 4, 'Resolve': 56, 'Default': 55, 'skip': 54, 'Exception': 24, 'Found': 23, 'Not': 22, 'IOException': 18, 'throws': 16, 'resolve': 6, '>': 5, '<': 3, 'protected': 0}
{'}\n': 65, ';': 64, ')': 35, '.': 47, 'point': 30, ',': 56, '(': 13, 'contains': 48, 'entity': 42, 'return': 37, '': 5}
{'}\n': 75, ';': 54, 'length': 16, '+=': 72, '_length': 21, ')': 17, ',': 11, '_buffer': 64, 'offset': 13, 'buffer': 10, '(': 3, 'arraycopy': 58, '.': 57, 'System': 56, '': 55, '+': 22, 'Capacity': 28, 'ensure': 27, '_capacity': 25, 'if': 19, '{': 18, 'int': 12, ']': 9, '[': 8, 'byte': 7, 'void': 1, 'public': 0}
{'}\n': 14, ';': 13, 'Alias': 5, '{': 8, ')': 7}
{'}\n': 209, ';': 93, ')': 25, 'STR': 205, '_': 204, '(': 5, '.': 158, 'Name': 24, 'File': 4, '': 21, '=': 50, 'base': 51, '{': 26}
{'}\n': 203, '}': 134, ';': 37, ')': 22, '(': 7, 'String': 9, 'to': 196, '.': 49, 'e': 180, '+': 58, 'STR': 57, '_': 56, 'File': 25, 'in': 26, 'fail': 125, '{': 23, 'IOException': 179, '': 8, 'catch': 176, 'filename': 14, ',': 11, 'TAG': 54, 'LOG_': 53, 'i': 50, 'Log': 48, 'close': 147, 'Stream': 41, 'null': 45, '!=': 120, 'if': 111, 'read': 116, '++': 107, '<': 104, '=': 28, 'for': 95, 'Input': 40, 'new': 29, 'Data': 39, 'try': 67, 'path': 10, 'Validate': 3, 'do': 2, 'void': 1, 'protected': 0}
{'}\n': 79, ';': 28, ')': 9, 'stream': 76, '(': 3, '.': 24, 'STR': 69, '_': 68, 'TAG_': 59, '': 4, 'new': 63, '=': 22, 'ret': 42, '{': 13, 'Exception': 12, 'throws': 10, 'Stream': 7}
{'}\n': 38, ';': 37, ')': 13, 'BOOL': 35, '_': 31, ',': 9, 'value': 12, 'mask': 8, '(': 5, 'Index': 25, 'Cursor': 24, 'Get': 23, 'Or': 22, 'Mask': 4, 'get': 20, 'String': 7, '': 1, 'return': 15, '{': 14, 'apply': 3, 'public': 0}
{'}\n': 24, ';': 23, ')': 5, '(': 4, 'Millis': 14, 'Time': 13, 'current': 12, '.': 11, 'System': 10, '': 9, '=': 8, 'duration': 7, '{': 6}
{'}\n': 383, ';': 55, '_': 90, 'return': 347, '}': 352, 'STR': 307, '(': 40, 'error': 364, '.': 61, 'Debug': 362, '': 75, '{': 11, ')': 10, 'f': 358, 'Exception': 357, 'Format': 356, 'catch': 353, 'read': 204, 'File': 21, 'bin': 20, '=': 215, 'new': 216, 'NUM': 135, 'Bytes': 132, 'try': 12}
{'}\n': 83, ';': 19, 'Image': 3, '}': 78, ')': 7, '(': 6, '.': 11, '{': 8, '': 1, '=': 24, 'buffered': 49, 'null': 45, 'Buffered': 2}
{'}\n': 400, ';': 102, 'NUM': 95, '_': 94, '}': 171, ')': 61, '.': 129, 'Widget': 48, 'scout': 55, '(': 75, '': 6, '{': 135, 'X': 256, 'if': 107, 'Scout': 33, 'int': 16}
